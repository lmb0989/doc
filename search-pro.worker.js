const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":662,\"nextId\":662,\"documentIds\":{\"0\":\"1\",\"1\":\"1#_1-arraybuffer-对象\",\"2\":\"1#_2-typedarray-视图\",\"3\":\"1#_3-dataview-视图\",\"4\":\"1#概述\",\"5\":\"1#arraybuffer-prototype-bytelength\",\"6\":\"1#arraybuffer-prototype-slice\",\"7\":\"1#arraybuffer-isview\",\"8\":\"1#概述-1\",\"9\":\"1#构造函数\",\"10\":\"1#数组方法\",\"11\":\"1#字节序\",\"12\":\"1#bytes-per-element-属性\",\"13\":\"1#arraybuffer-与字符串的互相转换\",\"14\":\"1#溢出\",\"15\":\"1#typedarray-prototype-buffer\",\"16\":\"1#typedarray-prototype-bytelength-typedarray-prototype-byteoffset\",\"17\":\"1#typedarray-prototype-length\",\"18\":\"1#typedarray-prototype-set\",\"19\":\"1#typedarray-prototype-subarray\",\"20\":\"1#typedarray-prototype-slice\",\"21\":\"1#typedarray-of\",\"22\":\"1#typedarray-from\",\"23\":\"1#dataview-的读取\",\"24\":\"1#dataview-的写入\",\"25\":\"1#ajax\",\"26\":\"1#canvas\",\"27\":\"1#websocket\",\"28\":\"1#fetch-api\",\"29\":\"1#file-api\",\"30\":\"1#_1-atomics-store-atomics-load\",\"31\":\"1#_2-atomics-exchange\",\"32\":\"1#_3-atomics-wait-atomics-wake\",\"33\":\"1#_4-运算方法\",\"34\":\"1#_5-其他方法\",\"35\":\"2\",\"36\":\"2#javascript-性能优化-监控内存\",\"37\":\"3\",\"38\":\"3#静态方法\",\"39\":\"3#_1-promise-resolve-value\",\"40\":\"3#_2-promise-reject-reason-91011\",\"41\":\"3#_3-promise-all-iterable-121314\",\"42\":\"3#_4-promise-race-iterable-151617\",\"43\":\"3#_5-promise-allsettled-iterable-5-13\",\"44\":\"3#_6-promise-any-iterable-5-13\",\"45\":\"3#_7-promise-try-提案阶段-6\",\"46\":\"3#总结对比\",\"47\":\"3#版本说明\",\"48\":\"4\",\"49\":\"4#彻底搞懂js中的prototype、-proto-与constructor-图解\",\"50\":\"4#_1-前言\",\"51\":\"4#_2-proto-属性\",\"52\":\"4#_3-prototype属性\",\"53\":\"4#_4-constructor属性\",\"54\":\"4#_5-总结\",\"55\":\"5\",\"56\":\"5#js判断两个时间戳是否为同一天\",\"57\":\"6\",\"58\":\"6#如何提高github的搜索效率\",\"59\":\"7\",\"60\":\"7#如何提高github-克隆的速度\",\"61\":\"8\",\"62\":\"8#增加自定义操作\",\"63\":\"9\",\"64\":\"9#匹配规则\",\"65\":\"9#常用匹配示例\",\"66\":\"11\",\"67\":\"11#git-各仓库图\",\"68\":\"11#配置用户信息\",\"69\":\"11#ssh-key\",\"70\":\"11#本地搭建\",\"71\":\"11#远程克隆\",\"72\":\"11#git-remote-关联远程仓库\",\"73\":\"11#git-add-提交到暂存区\",\"74\":\"11#git-commit-提交到本地仓库\",\"75\":\"11#git-push-提交到远程仓库\",\"76\":\"11#git-pull-拉取远程仓库并合并\",\"77\":\"11#git-checkout-切换分支\",\"78\":\"11#还原所有的修改\",\"79\":\"11#git-restore-取消缓存\",\"80\":\"11#git-reset-回滚代码\",\"81\":\"11#git-revert-取消某次-commit-内容\",\"82\":\"11#git-stash-缓存代码\",\"83\":\"11#git-cherry-pick-合并指定-commit\",\"84\":\"11#版本历史\",\"85\":\"11#git-diff-对比差异\",\"86\":\"11#git-fetch-获取更新\",\"87\":\"11#分支\",\"88\":\"11#其他\",\"89\":\"11#总结\",\"90\":\"12\",\"91\":\"12#查看配置\",\"92\":\"12#git相关的配置文件\",\"93\":\"12#配置用户名和邮箱\",\"94\":\"12#配置ssh\",\"95\":\"13\",\"96\":\"14\",\"97\":\"14#文件-目录\",\"98\":\"14#多屏显示控制方式\",\"99\":\"14#查看进程\",\"100\":\"16\",\"101\":\"16#url模块\",\"102\":\"17\",\"103\":\"18\",\"104\":\"19\",\"105\":\"19#partial\",\"106\":\"19#required\",\"107\":\"19#readonly\",\"108\":\"19#pick\",\"109\":\"19#record\",\"110\":\"19#exclude\",\"111\":\"19#extract\",\"112\":\"19#omit\",\"113\":\"19#nonnullable\",\"114\":\"19#parameters\",\"115\":\"19#constructorparameters\",\"116\":\"19#returntype\",\"117\":\"19#instancetype\",\"118\":\"19#uppercase\",\"119\":\"19#lowercase\",\"120\":\"19#capitalize\",\"121\":\"19#uncapitalize\",\"122\":\"20\",\"123\":\"21\",\"124\":\"22\",\"125\":\"22#安装\",\"126\":\"22#初始化\",\"127\":\"22#搜索模块\",\"128\":\"22#查找模块\",\"129\":\"22#安装模块\",\"130\":\"22#使用数据源为dt安装\",\"131\":\"22#显示所有引用\",\"132\":\"23\",\"133\":\"23#安装\",\"134\":\"23#命令\",\"135\":\"23#配置tsconfig-json\",\"136\":\"23#生成tsconfig-json文件\",\"137\":\"23#配置详解\",\"138\":\"23#编译\",\"139\":\"23#配置自动编译ts文件\",\"140\":\"24\",\"141\":\"25\",\"142\":\"27\",\"143\":\"27#对称加密\",\"144\":\"27#des\",\"145\":\"27#_3des\",\"146\":\"27#aes\",\"147\":\"27#非对称加密\",\"148\":\"27#rsa\",\"149\":\"27#dsa\",\"150\":\"27#ecc\",\"151\":\"27#散列算法\",\"152\":\"27#md5\",\"153\":\"27#sha\",\"154\":\"27#总结\",\"155\":\"28\",\"156\":\"28#postman使用详解\",\"157\":\"28#一、postman背景介绍\",\"158\":\"28#二、postman的操作环境\",\"159\":\"28#三、postman下载安装\",\"160\":\"28#四、postman的基础功能\",\"161\":\"28#五、接口请求流程\",\"162\":\"28#六、管理用例—collections\",\"163\":\"28#七、身份验证authentication\",\"164\":\"30\",\"165\":\"31\",\"166\":\"33\",\"167\":\"33#介绍\",\"168\":\"33#安装\",\"169\":\"33#创建gulpfile-js\",\"170\":\"33#示例\",\"171\":\"33#插件\",\"172\":\"35\",\"173\":\"35#限定符\",\"174\":\"35#元字符\",\"175\":\"37\",\"176\":\"37#_1-游戏玩法\",\"177\":\"38\",\"178\":\"38#什么是tcp粘包-怎么解决这个问题\",\"179\":\"40\",\"180\":\"41\",\"181\":\"42\",\"182\":\"42#安装\",\"183\":\"43\",\"184\":\"43#简介\",\"185\":\"43#使用方法\",\"186\":\"43#启动项目\",\"187\":\"43#服务器状态查看\",\"188\":\"43#关闭项目\",\"189\":\"43#动态添加服务器\",\"190\":\"43#安装管理控制台\",\"191\":\"43#production环境背景知识\",\"192\":\"44\",\"193\":\"44#初始化\",\"194\":\"44#客户端连接\",\"195\":\"44#客户端请求\",\"196\":\"44#绑定-解绑用户\",\"197\":\"44#客户端断开\",\"198\":\"44#serial\",\"199\":\"44#timeout\",\"200\":\"44#time\",\"201\":\"44#toobusy\",\"202\":\"45\",\"203\":\"45#前言\",\"204\":\"45#修改配置以启动带有调试模式的服务器\",\"205\":\"45#一、打开文件\",\"206\":\"45#二、修改并保存\",\"207\":\"45#配置ide的调试器\",\"208\":\"45#一、打开edit-configurations-对话框\",\"209\":\"45#二、新增一条node-js-remote-debug\",\"210\":\"45#附-运行配置\",\"211\":\"45#准备调试\",\"212\":\"45#一、分别启动web、chat服务器\",\"213\":\"45#二、连接调试器\",\"214\":\"45#三、设置断点\",\"215\":\"45#实践\",\"216\":\"45#可用的聊天应用\",\"217\":\"45#常识\",\"218\":\"45#发现问题\",\"219\":\"45#解决问题\",\"220\":\"45#写在后面\",\"221\":\"46\",\"222\":\"46#package格式\",\"223\":\"46#握手\",\"224\":\"46#心跳\",\"225\":\"46#数据\",\"226\":\"46#服务器主动断开\",\"227\":\"46#标志位flag\",\"228\":\"46#消息类型\",\"229\":\"46#route压缩标志位\",\"230\":\"47\",\"231\":\"48\",\"232\":\"48#命令介绍\",\"233\":\"48#命令使用说明\",\"234\":\"49\",\"235\":\"50\",\"236\":\"50#_1-获取-pomelo-运行的环境\",\"237\":\"50#_2-获取项目的根目录\",\"238\":\"50#_3-监听所有-server-启动完成后事件\",\"239\":\"50#_4-获取客户端-ip-和端口\",\"240\":\"51\",\"241\":\"51#gate服务器\",\"242\":\"51#connector服务器\",\"243\":\"51#应用逻辑服务器\",\"244\":\"51#master服务器\",\"245\":\"51#rpc调用\",\"246\":\"51#route-router\",\"247\":\"51#session-frontendsession-backendsession-sessionservice-backendsessionservice\",\"248\":\"51#channel\",\"249\":\"51#request-response-notify-push\",\"250\":\"51#filter\",\"251\":\"51#handler\",\"252\":\"51#error-handler\",\"253\":\"51#component\",\"254\":\"51#admin-client-monitor-master\",\"255\":\"51#admin-module\",\"256\":\"51#plugin\",\"257\":\"52\",\"258\":\"52#实例一\",\"259\":\"52#实例二\",\"260\":\"52#实例三\",\"261\":\"52#配置内容\",\"262\":\"53\",\"263\":\"54\",\"264\":\"54#_1、配置adminserver-json-添加servertype\",\"265\":\"54#_2、创建app-servers-servertype-目录-pinus会去自动读取此目录下的handler、remote、cron等目录-处理相应功能。\",\"266\":\"54#_3、servers-json中添加指定的servertype配置\",\"267\":\"55\",\"268\":\"55#实例一\",\"269\":\"55#实例二\",\"270\":\"55#实例三\",\"271\":\"55#初始内容实例\",\"272\":\"56\",\"273\":\"57\",\"274\":\"57#master组件的启动\",\"275\":\"57#monitor组件的启动\",\"276\":\"57#client的连接注册\",\"277\":\"57#周期触发\",\"278\":\"57#主动请求\",\"279\":\"57#绑定连接-断开事件\",\"280\":\"57#新增服务器\",\"281\":\"57#停止服务器\",\"282\":\"57#服务器重连\",\"283\":\"58\",\"284\":\"58#组件生命周期\",\"285\":\"58#组件加载\",\"286\":\"59\",\"287\":\"59#特征\",\"288\":\"59#fnm常用命令\",\"289\":\"59#不同项目自动切换不同的node版本\",\"290\":\"59#环境变量配置\",\"291\":\"59#powershell\",\"292\":\"59#cmd\",\"293\":\"59#git-bash\",\"294\":\"59#webstorm找不到node路径的解决办法\",\"295\":\"60\",\"296\":\"60#下载\",\"297\":\"60#nvm常用命令\",\"298\":\"60#其他命令\",\"299\":\"61\",\"300\":\"61#安装\",\"301\":\"61#用法\",\"302\":\"61#压缩多个文件到一个文件\",\"303\":\"62\",\"304\":\"62#介绍\",\"305\":\"62#安装\",\"306\":\"62#命令\",\"307\":\"62#配置\",\"308\":\"62#示例\",\"309\":\"62#官方推荐的三种配置\",\"310\":\"62#_1-性能将比没有混淆的情况下慢50-100\",\"311\":\"62#_2-性能将比没有混淆的情况下降低30-35\",\"312\":\"62#_3-性能会比没有混淆的情况稍微慢一些\",\"313\":\"62#更多详解请参考\",\"314\":\"65\",\"315\":\"65#安装\",\"316\":\"66\",\"317\":\"66#介绍\",\"318\":\"66#安装\",\"319\":\"66#示例\",\"320\":\"66#参考\",\"321\":\"67\",\"322\":\"67#介绍\",\"323\":\"67#安装\",\"324\":\"67#参考\",\"325\":\"69\",\"326\":\"70\",\"327\":\"70#安装\",\"328\":\"72\",\"329\":\"72#npm\",\"330\":\"72#_1-安装nrm\",\"331\":\"72#_2-使用\",\"332\":\"72#_3-切换\",\"333\":\"72#_4-增加\",\"334\":\"72#_5-删除\",\"335\":\"72#_6-测试速度\",\"336\":\"73\",\"337\":\"73#简介\",\"338\":\"73#安装\",\"339\":\"73#同类工具\",\"340\":\"74\",\"341\":\"74#调试typescript项目\",\"342\":\"74#调试javascript项目\",\"343\":\"74#在-chrome-中连接-devtools\",\"344\":\"74#可选-使用-vscode-集成-替代方案\",\"345\":\"74#常见问题\",\"346\":\"75\",\"347\":\"75#_2-extendscript-toolkit\",\"348\":\"75#_3-padda\",\"349\":\"76\",\"350\":\"76#项目结构\",\"351\":\"76#创建项目\",\"352\":\"76#软件安装文件夹\",\"353\":\"76#系统级的插件存放文件夹\",\"354\":\"76#用户级别的插件存放文件夹\",\"355\":\"76#插件查找顺序\",\"356\":\"76#添加插件配置文件\",\"357\":\"76#浏览器代码\",\"358\":\"76#extendscript-代码\",\"359\":\"76#配置-cep-debug-模式\",\"360\":\"76#mac-环境配置-cep-debug-模式\",\"361\":\"76#windows-环境配置-cep-debug-模式\",\"362\":\"76#总结\",\"363\":\"77\",\"364\":\"77#浏览器环境代码-debug\",\"365\":\"77#配置-debug-文件\",\"366\":\"77#使用-chrome-远程调试\",\"367\":\"77#踩坑记录\",\"368\":\"77#extendscript-代码-debug\",\"369\":\"77#debug-级别\",\"370\":\"77#配置\",\"371\":\"77#局限性\",\"372\":\"77#不支持-sourcemap\",\"373\":\"77#调试-cep-插件调用的-jsx\",\"374\":\"77#总结\",\"375\":\"78\",\"376\":\"78#extendscript语言\",\"377\":\"78#脚本dom编程\",\"378\":\"78#_1-图层操作\",\"379\":\"78#_2-属性操作\",\"380\":\"78#_3-单位\",\"381\":\"78#内置对象\",\"382\":\"78#_1-对象\",\"383\":\"78#_2-文件引用\",\"384\":\"78#_3-文件系统\",\"385\":\"78#_4-xml解析\",\"386\":\"78#_5-其它\",\"387\":\"78#总结\",\"388\":\"79\",\"389\":\"79#前言\",\"390\":\"79#背景介绍\",\"391\":\"79#scriptlistener\",\"392\":\"79#action-manager语法结构\",\"393\":\"79#_1-typeid-charid-stringid\",\"394\":\"79#_2-actiondescriptor\",\"395\":\"79#_3-dom-vs-actionmanager\",\"396\":\"79#总结\",\"397\":\"80\",\"398\":\"80#_1-actiondescriptor数据获取\",\"399\":\"80#_2-如何选定目标对象\",\"400\":\"80#_3-photoshop对象树\",\"401\":\"80#_1-getterdemo-jsx\",\"402\":\"80#_2-descriptor-info-jsx\",\"403\":\"80#_3-padda\",\"404\":\"80#_4-官方代码\",\"405\":\"80#总结\",\"406\":\"81\",\"407\":\"81#actiondescriptor逆向操作\",\"408\":\"81#_1-简单例子\",\"409\":\"81#_2-复杂的例子\",\"410\":\"81#_3-其它命令\",\"411\":\"81#总结\",\"412\":\"82\",\"413\":\"83\",\"414\":\"83#常用语法\",\"415\":\"83#目录\",\"416\":\"83#标题\",\"417\":\"83#字体\",\"418\":\"83#链接\",\"419\":\"83#锚点链接\",\"420\":\"83#图片\",\"421\":\"83#表格\",\"422\":\"83#引用\",\"423\":\"83#分割线\",\"424\":\"83#非常用语法\",\"425\":\"83#无序列表\",\"426\":\"83#有序列表\",\"427\":\"83#符号\",\"428\":\"84\",\"429\":\"84#快捷键\",\"430\":\"84#代码高亮\",\"431\":\"84#表格\",\"432\":\"85\",\"433\":\"85#gitbook命令\",\"434\":\"85#安装-gitbook\",\"435\":\"85#查看版本\",\"436\":\"85#初始化\",\"437\":\"85#编译\",\"438\":\"85#启动服务\",\"439\":\"85#导出\",\"440\":\"85#文件结构\",\"441\":\"85#summary-md\",\"442\":\"85#book-json\",\"443\":\"85#忽略文件\",\"444\":\"85#封面\",\"445\":\"87\",\"446\":\"87#插件安装命令\",\"447\":\"87#配置\",\"448\":\"87#相关插件介绍\",\"449\":\"87#_1-导航目录折叠\",\"450\":\"87#_2-代码复制-行号\",\"451\":\"87#_3-高级搜索-支持中文\",\"452\":\"87#_4-侧边栏宽度可调节\",\"453\":\"87#_5-分享\",\"454\":\"87#_6-页面添加页脚、版权信息\",\"455\":\"87#_7-页内漂浮目录\",\"456\":\"87#引用\",\"457\":\"88\",\"458\":\"88#插件推荐\",\"459\":\"91\",\"460\":\"91#版本信息\",\"461\":\"91#升级-gradle\",\"462\":\"92\",\"463\":\"93\",\"464\":\"94\",\"465\":\"94#转换-or-重写\",\"466\":\"94#渲染优化\",\"467\":\"94#合批\",\"468\":\"94#动态合图\",\"469\":\"94#采用同一个材质资源\",\"470\":\"94#优化-shader-的输入数据\",\"471\":\"94#层级规划\",\"472\":\"94#ui-渲染优化\",\"473\":\"94#自定义引擎\",\"474\":\"94#增强-tiledmap\",\"475\":\"94#将道路转为-tile\",\"476\":\"94#资源压缩\",\"477\":\"94#图片缩放\",\"478\":\"94#图片减色\",\"479\":\"94#场景剔除\",\"480\":\"94#寻路\",\"481\":\"94#再谈性能\",\"482\":\"94#模糊特效\",\"483\":\"94#rendertexture-池\",\"484\":\"94#点击检测\",\"485\":\"94#数组排序\",\"486\":\"94#其他优化\",\"487\":\"94#「阅后即焚」\",\"488\":\"94#构建优化\",\"489\":\"94#结语\",\"490\":\"95\",\"491\":\"95#说明\",\"492\":\"96\",\"493\":\"96#creator的深层解读\",\"494\":\"98\",\"495\":\"98#背景\",\"496\":\"98#探索\",\"497\":\"98#一探究竟\",\"498\":\"98#动手分析\",\"499\":\"98#如何计算\",\"500\":\"98#解决问题\",\"501\":\"98#胶囊信息报错和获取不到\",\"502\":\"98#吐槽\",\"503\":\"98#代码库\",\"504\":\"98#备注\",\"505\":\"99\",\"506\":\"99#_1-纪念碑谷\",\"507\":\"99#_2-纪念碑谷2\",\"508\":\"99#_3-未上锁的房间1\",\"509\":\"99#_4-未上锁的房间2\",\"510\":\"99#_5-未上锁的房间3\",\"511\":\"99#_6-机械迷城\",\"512\":\"99#_7-地狱边境\",\"513\":\"99#_8-王国保卫战\",\"514\":\"99#_9-王国保卫战-前线\",\"515\":\"99#_10-王国保卫战-起源\",\"516\":\"99#_11-王国保卫战-复仇\",\"517\":\"99#_12-纸境\",\"518\":\"99#_13-cytus\",\"519\":\"99#_14-cytus2\",\"520\":\"99#_15-致命框架1\",\"521\":\"99#_16-致命框架2\",\"522\":\"99#_17-瘟疫公司\",\"523\":\"99#_18-逃离方块、锈湖系列\",\"524\":\"99#_19-生命线系列\",\"525\":\"99#_20-古树旋律\",\"526\":\"99#_21-爷爷的城市\",\"527\":\"99#_22-这是我的战争\",\"528\":\"99#_23-勇敢的心-伟大战争\",\"529\":\"99#_24-植物精灵\",\"530\":\"99#_25-去月球\",\"531\":\"99#_26-破碎大陆1、2\",\"532\":\"99#_27-迷失岛1、2\",\"533\":\"99#_28-饥荒\",\"534\":\"99#_29-聚爆\",\"535\":\"99#_30-辐射-避难所\",\"536\":\"99#_31-神之折纸1、2\",\"537\":\"99#_32-战斗之心1、2\",\"538\":\"99#_33-投影寻真-shadowmatic\",\"539\":\"99#_34-永不言弃1、2、3\",\"540\":\"99#_35-信任的进化-合作无私的基因\",\"541\":\"99#_36-劳拉go-lara-croft-go\",\"542\":\"99#_37-晶体管\",\"543\":\"99#_38-回声探路\",\"544\":\"99#_39-二重奏\",\"545\":\"99#_40-蠢蠢的死法1、2、3\",\"546\":\"99#_41-沉默年代\",\"547\":\"99#_42-超级兄弟-剑与巫术\",\"548\":\"99#_43-崩溃大陆\",\"549\":\"99#_44-直到晨曦来临\",\"550\":\"99#_45-元气骑士\",\"551\":\"99#_46-永不孤单\",\"552\":\"99#_47-里奥的财富\",\"553\":\"99#_48-进化之地1、2\",\"554\":\"99#_49-阿尔托的冒险\",\"555\":\"99#_50-星噬\",\"556\":\"99#_51-月圆之夜\",\"557\":\"99#_52-修剪艺术\",\"558\":\"99#_53-我在7年后等着你\",\"559\":\"99#_54-我的世界\",\"560\":\"99#_55-涂鸦上帝、恶魔、农场\",\"561\":\"99#_56-天鹅绝唱\",\"562\":\"99#_57-漂泊\",\"563\":\"99#_58-模拟山羊\",\"564\":\"99#_59-迷失自我\",\"565\":\"99#_60-海之号角\",\"566\":\"99#_61-疯狂动物园—极速跑酷\",\"567\":\"99#_62-笨拙的忍者\",\"568\":\"99#_63-1010\",\"569\":\"99#_64-踪迹-谋杀之谜\",\"570\":\"99#_65-勇敢的约翰\",\"571\":\"99#_66-异形工厂\",\"572\":\"99#_67-虚拟入侵\",\"573\":\"99#_68-喜欢和你在一起\",\"574\":\"99#_69-王权\",\"575\":\"99#_70-跳舞的线\",\"576\":\"99#_71-双子\",\"577\":\"99#_72-手指画线\",\"578\":\"99#_73-魔女之泉1、2、3\",\"579\":\"99#_74-迷你地铁\",\"580\":\"99#_75-流言侦探\",\"581\":\"99#_76-棱镜\",\"582\":\"99#_77-家园7-贵族\",\"583\":\"99#_78-极速变色龙\",\"584\":\"99#_79-混沌之戒1、2、3\",\"585\":\"99#_80-回忆之旅\",\"586\":\"99#_81-画中世界\",\"587\":\"99#_82-花语月\",\"588\":\"99#_83-黑暗旅行\",\"589\":\"99#_84-飞跃印刷史\",\"590\":\"99#_85-伯特伦•费德历险记ep1、ep2\",\"591\":\"99#_86-波克艾克大冒险\",\"592\":\"99#_87-缤纷彩带\",\"593\":\"99#_88-被错过的天堂\",\"594\":\"99#_89-暗影格斗2、3\",\"595\":\"99#_90-icey\",\"596\":\"99#_91-急速冲击\",\"597\":\"99#_92-老爸曾是小偷\",\"598\":\"99#_93-一起玩陶艺\",\"599\":\"99#_94-众生游\",\"600\":\"99#_95-伪装游戏\",\"601\":\"99#_96-深海水族馆\",\"602\":\"99#_97-旅行青蛙\",\"603\":\"99#_98-浅塘\",\"604\":\"99#_99-漫漫旅途\",\"605\":\"99#_100-拒绝上班\",\"606\":\"99#_101-小3传奇\",\"607\":\"99#_102-喵斯快跑\",\"608\":\"99#_103-无限循环系列\",\"609\":\"101\",\"610\":\"101#客户端sdk主要接口\",\"611\":\"101#客户端sdk使用流程\",\"612\":\"101#帧同步\",\"613\":\"101#随机数\",\"614\":\"101#引用\",\"615\":\"102\",\"616\":\"102#creator-android-集成-bugly-捕获上报脚本及原生代码错误信息\",\"617\":\"103\",\"618\":\"103#cocoscreator-shader模板\",\"619\":\"103#结构\",\"620\":\"103#shader顶点数据来源\",\"621\":\"103#glsl顶点shader\",\"622\":\"103#glsl着色shader\",\"623\":\"103#glsl-数据定义\",\"624\":\"104\",\"625\":\"105\",\"626\":\"106\",\"627\":\"107\",\"628\":\"108\",\"629\":\"108#定制-javascript-引擎\",\"630\":\"108#首先您需要从-github-上-fork-或者克隆-javascript-引擎的原始版本-地址见上文\",\"631\":\"108#修改-js-引擎路径\",\"632\":\"108#安装编译依赖\",\"633\":\"108#进行修改然后编译\",\"634\":\"108#定制-cocos2d-x-引擎\",\"635\":\"108#获取-cocos2d-x-引擎\",\"636\":\"108#初始化\",\"637\":\"108#修改引擎\",\"638\":\"108#编译模拟器\",\"639\":\"108#定制jsb-adapter\",\"640\":\"108#定制mini-game-adapters\",\"641\":\"108#定制runtime-adapters\",\"642\":\"109\",\"643\":\"110\",\"644\":\"111\",\"645\":\"112\",\"646\":\"113\",\"647\":\"114\",\"648\":\"115\",\"649\":\"116\",\"650\":\"117\",\"651\":\"118\",\"652\":\"119\",\"653\":\"120\",\"654\":\"121\",\"655\":\"122\",\"656\":\"123\",\"657\":\"124\",\"658\":\"125\",\"659\":\"126\",\"660\":\"127\",\"661\":\"128\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,12],\"1\":[1,8],\"2\":[1,16],\"3\":[1,67],\"4\":[1,87],\"5\":[3,24],\"6\":[4,44],\"7\":[3,21],\"8\":[1,89],\"9\":[1,177],\"10\":[1,100],\"11\":[1,153],\"12\":[4,26],\"13\":[2,79],\"14\":[1,120],\"15\":[3,22],\"16\":[4,25],\"17\":[3,17],\"18\":[4,31],\"19\":[4,27],\"20\":[4,31],\"21\":[3,25],\"22\":[3,134],\"23\":[2,63],\"24\":[2,71],\"25\":[1,61],\"26\":[1,72],\"27\":[1,48],\"28\":[2,14],\"29\":[2,298],\"30\":[1,111],\"31\":[1,55],\"32\":[1,133],\"33\":[1,27],\"34\":[1,42],\"35\":[1],\"36\":[4,7],\"37\":[1],\"38\":[1],\"39\":[1,29],\"40\":[1,23],\"41\":[1,31],\"42\":[1,28],\"43\":[1,32],\"44\":[1,30],\"45\":[1,23],\"46\":[1,26],\"47\":[1,15],\"48\":[1],\"49\":[5],\"50\":[2,80],\"51\":[3,52],\"52\":[2,26],\"53\":[2,43],\"54\":[2,87],\"55\":[1],\"56\":[1,13],\"57\":[1],\"58\":[1,37],\"59\":[1],\"60\":[2,4],\"61\":[1],\"62\":[1,19],\"63\":[1],\"64\":[1,26],\"65\":[1,60],\"66\":[1],\"67\":[2,2],\"68\":[1,23],\"69\":[2,24],\"70\":[1,12],\"71\":[1,12],\"72\":[3,18],\"73\":[3,12],\"74\":[3,46],\"75\":[3,15],\"76\":[3,26],\"77\":[3,27],\"78\":[1,7],\"79\":[3,15],\"80\":[3,30],\"81\":[5,16],\"82\":[3,36],\"83\":[5,32],\"84\":[1,27],\"85\":[3,22],\"86\":[3,11],\"87\":[1,31],\"88\":[1,17],\"89\":[1,3],\"90\":[1],\"91\":[1,8],\"92\":[1,11],\"93\":[1,12],\"94\":[1,8],\"95\":[1,53],\"96\":[1],\"97\":[2,38],\"98\":[1,6],\"99\":[1,8],\"100\":[1],\"101\":[1,14],\"102\":[1,75],\"103\":[1,69],\"104\":[1],\"105\":[1,12],\"106\":[1,12],\"107\":[1,13],\"108\":[1,16],\"109\":[1,13],\"110\":[1,12],\"111\":[1,13],\"112\":[1,13],\"113\":[1,13],\"114\":[1,26],\"115\":[1,17],\"116\":[1,17],\"117\":[1,17],\"118\":[1,14],\"119\":[1,14],\"120\":[1,14],\"121\":[1,14],\"122\":[1,13],\"123\":[1,3],\"124\":[3,32],\"125\":[1,4],\"126\":[1,2],\"127\":[1,3],\"128\":[1,4],\"129\":[1,4],\"130\":[1,46],\"131\":[1,11],\"132\":[1],\"133\":[1,4],\"134\":[1,3],\"135\":[2],\"136\":[2,2],\"137\":[1,82],\"138\":[1,9],\"139\":[1,12],\"140\":[1,7],\"141\":[1,2],\"142\":[1],\"143\":[1],\"144\":[1,17],\"145\":[1,3],\"146\":[1,15],\"147\":[1],\"148\":[1,5],\"149\":[1,5],\"150\":[1,1],\"151\":[1,15],\"152\":[1,3],\"153\":[1,1],\"154\":[1,4],\"155\":[1],\"156\":[1],\"157\":[2,9],\"158\":[2,17],\"159\":[2,75],\"160\":[2,1],\"161\":[2,64],\"162\":[3,35],\"163\":[2,32],\"164\":[1,3],\"165\":[1,9],\"166\":[1],\"167\":[1,17],\"168\":[1,10],\"169\":[2,17],\"170\":[2,40],\"171\":[1,37],\"172\":[1],\"173\":[1,8],\"174\":[1,2],\"175\":[1],\"176\":[2],\"177\":[1],\"178\":[1],\"179\":[1,2],\"180\":[1,40],\"181\":[1],\"182\":[1,9],\"183\":[1],\"184\":[1,2],\"185\":[1,15],\"186\":[1,16],\"187\":[1,19],\"188\":[1,29],\"189\":[1,16],\"190\":[1,37],\"191\":[1,7],\"192\":[1,53],\"193\":[1,10],\"194\":[1,15],\"195\":[1,60],\"196\":[2,15],\"197\":[1,122],\"198\":[1,14],\"199\":[1,14],\"200\":[1,7],\"201\":[1,22],\"202\":[1,16],\"203\":[1,32],\"204\":[1],\"205\":[2,9],\"206\":[2,33],\"207\":[1],\"208\":[3,7],\"209\":[2,37],\"210\":[2,11],\"211\":[1],\"212\":[3,17],\"213\":[2,13],\"214\":[2,13],\"215\":[1,33],\"216\":[1],\"217\":[1,28],\"218\":[1,50],\"219\":[1,11],\"220\":[1,35],\"221\":[2,48],\"222\":[1,28],\"223\":[1,69],\"224\":[1,14],\"225\":[1,4],\"226\":[1,42],\"227\":[1,24],\"228\":[1,11],\"229\":[1,30],\"230\":[1,201],\"231\":[1],\"232\":[1,27],\"233\":[1,195],\"234\":[1,186],\"235\":[1],\"236\":[4,40],\"237\":[2,8],\"238\":[4,24],\"239\":[4,7],\"240\":[1,6],\"241\":[1,10],\"242\":[1,14],\"243\":[1,9],\"244\":[1,5],\"245\":[1,15],\"246\":[2,40],\"247\":[5,86],\"248\":[1,12],\"249\":[4,12],\"250\":[1,17],\"251\":[1,20],\"252\":[2,28],\"253\":[1,11],\"254\":[4,28],\"255\":[2,31],\"256\":[1,14],\"257\":[2,69],\"258\":[1,22],\"259\":[1,14],\"260\":[1,17],\"261\":[1,300],\"262\":[1,333],\"263\":[1],\"264\":[4,5],\"265\":[10],\"266\":[3,17],\"267\":[1,83],\"268\":[1,8],\"269\":[1,6],\"270\":[1,7],\"271\":[1,135],\"272\":[1,239],\"273\":[1,116],\"274\":[1,40],\"275\":[1,17],\"276\":[1,17],\"277\":[1,13],\"278\":[1,44],\"279\":[2,20],\"280\":[1,26],\"281\":[1,16],\"282\":[1,118],\"283\":[1],\"284\":[1,3],\"285\":[1,51],\"286\":[1],\"287\":[1,16],\"288\":[1,56],\"289\":[1,11],\"290\":[1,10],\"291\":[1,32],\"292\":[1,68],\"293\":[2,43],\"294\":[1,13],\"295\":[1,9],\"296\":[1,8],\"297\":[1,25],\"298\":[1,43],\"299\":[1,5],\"300\":[1,5],\"301\":[1,10],\"302\":[1,8],\"303\":[2],\"304\":[1,14],\"305\":[1,5],\"306\":[1,7],\"307\":[1,50],\"308\":[1,47],\"309\":[1],\"310\":[4,24],\"311\":[4,26],\"312\":[2,21],\"313\":[1,7],\"314\":[1],\"315\":[1,4],\"316\":[3],\"317\":[1,2],\"318\":[1,5],\"319\":[1,25],\"320\":[1,8],\"321\":[1],\"322\":[1,1],\"323\":[1],\"324\":[1,6],\"325\":[1,1],\"326\":[1],\"327\":[1,4],\"328\":[1],\"329\":[1,8],\"330\":[2,7],\"331\":[2,26],\"332\":[2,5],\"333\":[2,17],\"334\":[2,5],\"335\":[2,5],\"336\":[1],\"337\":[1,2],\"338\":[1,8],\"339\":[1,2],\"340\":[1],\"341\":[1,36],\"342\":[1,11],\"343\":[1,49],\"344\":[1,35],\"345\":[1,23],\"346\":[1,94],\"347\":[3,14],\"348\":[2,44],\"349\":[1,14],\"350\":[1,39],\"351\":[1,9],\"352\":[1,23],\"353\":[1,30],\"354\":[1,17],\"355\":[1,27],\"356\":[1,283],\"357\":[1,176],\"358\":[2,85],\"359\":[4,21],\"360\":[5,103],\"361\":[5,41],\"362\":[1,39],\"363\":[1],\"364\":[2,15],\"365\":[3,106],\"366\":[3,42],\"367\":[1,47],\"368\":[3,32],\"369\":[2,25],\"370\":[1,101],\"371\":[1],\"372\":[2,59],\"373\":[4,34],\"374\":[1,36],\"375\":[1],\"376\":[1,86],\"377\":[1,49],\"378\":[2,120],\"379\":[2,33],\"380\":[2,56],\"381\":[1,2],\"382\":[2,153],\"383\":[2,15],\"384\":[2,20],\"385\":[2,32],\"386\":[2,7],\"387\":[1,46],\"388\":[1],\"389\":[1,118],\"390\":[1,52],\"391\":[1,44],\"392\":[2,160],\"393\":[4,114],\"394\":[2,163],\"395\":[4,96],\"396\":[1,48],\"397\":[1,45],\"398\":[2,262],\"399\":[2,167],\"400\":[2,124],\"401\":[3,53],\"402\":[4,58],\"403\":[2,12],\"404\":[2,30],\"405\":[1,31],\"406\":[1,44],\"407\":[1,37],\"408\":[2,98],\"409\":[2,114],\"410\":[2,50],\"411\":[1,39],\"412\":[1,15],\"413\":[1],\"414\":[1],\"415\":[1,2],\"416\":[1,7],\"417\":[1,5],\"418\":[1,19],\"419\":[1,2],\"420\":[1,22],\"421\":[1,3],\"422\":[1,3],\"423\":[1,1],\"424\":[1],\"425\":[1,5],\"426\":[1,3],\"427\":[1,1],\"428\":[1],\"429\":[1],\"430\":[1,21],\"431\":[1,8],\"432\":[1],\"433\":[1],\"434\":[2,5],\"435\":[1,2],\"436\":[1,11],\"437\":[1,2],\"438\":[1,7],\"439\":[1,7],\"440\":[1],\"441\":[1,22],\"442\":[2,111],\"443\":[1,13],\"444\":[1,19],\"445\":[1],\"446\":[1,2],\"447\":[1,10],\"448\":[1],\"449\":[2,4],\"450\":[3,3],\"451\":[4,9],\"452\":[2,3],\"453\":[2,24],\"454\":[3,50],\"455\":[2,4],\"456\":[1,14],\"457\":[1],\"458\":[1,4],\"459\":[1],\"460\":[1,9],\"461\":[1,130],\"462\":[1,6],\"463\":[1],\"464\":[1,27],\"465\":[3,38],\"466\":[1,10],\"467\":[1,54],\"468\":[1,19],\"469\":[1,44],\"470\":[3,24],\"471\":[1,30],\"472\":[2,26],\"473\":[1,7],\"474\":[2,56],\"475\":[2,19],\"476\":[1,10],\"477\":[1,32],\"478\":[1,41],\"479\":[1,36],\"480\":[1,31],\"481\":[1],\"482\":[1,49],\"483\":[2,16],\"484\":[1,28],\"485\":[1,24],\"486\":[1],\"487\":[2,37],\"488\":[1,57],\"489\":[1,10],\"490\":[1],\"491\":[1,67],\"492\":[1],\"493\":[2,7],\"494\":[3,3],\"495\":[1,13],\"496\":[1,13],\"497\":[1,15],\"498\":[1,18],\"499\":[1,17],\"500\":[1,28],\"501\":[1,64],\"502\":[1,9],\"503\":[1,7],\"504\":[1,21],\"505\":[1,17],\"506\":[2,19],\"507\":[2,21],\"508\":[2,12],\"509\":[2,21],\"510\":[2,12],\"511\":[2,16],\"512\":[2,18],\"513\":[2,14],\"514\":[3,9],\"515\":[3,12],\"516\":[3,12],\"517\":[2,15],\"518\":[2,20],\"519\":[2,15],\"520\":[2,12],\"521\":[2,9],\"522\":[2,14],\"523\":[3,34],\"524\":[2,30],\"525\":[2,16],\"526\":[2,13],\"527\":[2,19],\"528\":[3,12],\"529\":[2,18],\"530\":[2,20],\"531\":[3,16],\"532\":[3,16],\"533\":[2,18],\"534\":[2,11],\"535\":[3,14],\"536\":[3,21],\"537\":[3,10],\"538\":[3,8],\"539\":[4,21],\"540\":[3,7],\"541\":[5,11],\"542\":[2,12],\"543\":[2,11],\"544\":[2,12],\"545\":[4,12],\"546\":[2,12],\"547\":[3,15],\"548\":[2,13],\"549\":[2,11],\"550\":[2,13],\"551\":[2,11],\"552\":[2,11],\"553\":[3,17],\"554\":[2,14],\"555\":[2,11],\"556\":[2,11],\"557\":[2,10],\"558\":[2,14],\"559\":[2,19],\"560\":[4,11],\"561\":[2,17],\"562\":[2,12],\"563\":[2,15],\"564\":[2,15],\"565\":[2,14],\"566\":[3,15],\"567\":[2,15],\"568\":[3,10],\"569\":[3,10],\"570\":[2,18],\"571\":[2,10],\"572\":[2,12],\"573\":[2,14],\"574\":[2,15],\"575\":[2,13],\"576\":[2,18],\"577\":[2,17],\"578\":[4,19],\"579\":[2,11],\"580\":[2,13],\"581\":[2,16],\"582\":[3,21],\"583\":[2,12],\"584\":[4,17],\"585\":[2,13],\"586\":[2,10],\"587\":[2,9],\"588\":[2,14],\"589\":[2,11],\"590\":[4,10],\"591\":[2,10],\"592\":[2,15],\"593\":[2,14],\"594\":[3,21],\"595\":[2,16],\"596\":[2,14],\"597\":[2,14],\"598\":[2,14],\"599\":[2,11],\"600\":[2,12],\"601\":[2,10],\"602\":[2,18],\"603\":[2,9],\"604\":[2,17],\"605\":[2,18],\"606\":[2,19],\"607\":[2,7],\"608\":[2,18],\"609\":[1],\"610\":[1,2],\"611\":[1,5],\"612\":[1,97],\"613\":[1,12],\"614\":[1,5],\"615\":[1],\"616\":[6,9],\"617\":[1],\"618\":[2],\"619\":[1,7],\"620\":[1,6],\"621\":[1,11],\"622\":[1],\"623\":[2,12],\"624\":[1],\"625\":[1,51],\"626\":[1,21],\"627\":[1,8],\"628\":[1,65],\"629\":[3,13],\"630\":[8,5],\"631\":[3,11],\"632\":[1,15],\"633\":[1,24],\"634\":[4,9],\"635\":[4,9],\"636\":[1,101],\"637\":[1,15],\"638\":[1,29],\"639\":[2,34],\"640\":[3,13],\"641\":[2,7],\"642\":[1,3],\"643\":[2],\"644\":[1],\"645\":[1],\"646\":[1],\"647\":[1],\"648\":[1],\"649\":[1],\"650\":[1],\"651\":[1],\"652\":[1],\"653\":[1],\"654\":[1],\"655\":[1],\"656\":[1],\"657\":[1],\"658\":[1],\"659\":[1],\"660\":[3],\"661\":[1]},\"averageFieldLength\":[1.625377643504531,31.600859398523802],\"storedFields\":{\"0\":{\"h\":\"ArrayBuffer\",\"t\":[\"ArrayBuffer 对象、TypedArray 视图和 DataView 视图是 JavaScript 操作二进制数据的一个接口。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。\",\"二进制数组由三类对象组成。\"]},\"1\":{\"h\":\"：\",\"t\":[\"代表内存之中的一段二进制数据，可以通过“视图”进行操作。“视图”部署了数组接口，这意味着，可以用数组的方法操作内存。\"]},\"2\":{\"h\":\"：\",\"t\":[\"共包括 9 种类型的视图，比如 Uint8Array（无符号 8 位整数）数组视图, Int16Array（16 位整数）数组视图, Float32Array（32 位浮点数）数组视图等等。\"]},\"3\":{\"h\":\"：\",\"t\":[\"可以自定义复合格式的视图，比如第一个字节是 Uint8（无符号 8 位整数）、第二、三个字节是 Int16（16 位整数）、第四个字节开始是 Float32（32 位浮点数）等等，此外还可以自定义字节序。\",\"简单说，ArrayBuffer 对象代表原始的二进制数据，TypedArray 视图用来读写简单类型的二进制数据，DataView 视图用来读写复杂类型的二进制数据。\",\"TypedArray 视图支持的数据类型一共有 9 种（DataView 视图支持除 Uint8C 以外的其他 8 种）。\",\"数据类型\",\"字节长度\",\"含义\",\"对应的 C 语言类型\",\"Int8\",\"1\",\"8 位带符号整数\",\"signed char\",\"Uint8\",\"1\",\"8 位不带符号整数\",\"unsigned char\",\"Uint8C\",\"1\",\"8 位不带符号整数（自动过滤溢出）\",\"unsigned char\",\"Int16\",\"2\",\"16 位带符号整数\",\"short\",\"Uint16\",\"2\",\"16 位不带符号整数\",\"unsigned short\",\"Int32\",\"4\",\"32 位带符号整数\",\"int\",\"Uint32\",\"4\",\"32 位不带符号的整数\",\"unsigned int\",\"Float32\",\"4\",\"32 位浮点数\",\"float\",\"Float64\",\"8\",\"64 位浮点数\",\"double\",\"注意，二进制数组并不是真正的数组，而是类似数组的对象。\",\"很多浏览器操作的 API，用到了二进制数组操作二进制数据，下面是其中的几个。\",\"File API\",\"XMLHttpRequest\",\"Fetch API\",\"Canvas\",\"WebSockets\"]},\"4\":{\"h\":\"概述\",\"t\":[\"ArrayBuffer 对象代表储存二进制数据的一段内存，它不能直接读写，只能通过视图（TypedArray 视图和 DataView 视图)来读写，视图的作用是以指定格式解读二进制数据。\",\"ArrayBuffer 也是一个构造函数，可以分配一段可以存放数据的连续内存区域。\",\"const buf = new ArrayBuffer(32);\",\"上面代码生成了一段 32 字节的内存区域，每个字节的值默认都是 0。可以看到，ArrayBuffer 构造函数的参数是所需要的内存大小（单位字节）。\",\"为了读写这段内容，需要为它指定视图。DataView 视图的创建，需要提供 ArrayBuffer 对象实例作为参数。\",\"const buf = new ArrayBuffer(32); const dataView = new DataView(buf); dataView.getUint8(0) // 0, 参数表示读取的起始位置\",\"上面代码对一段 32 字节的内存，建立 DataView 视图，然后以不带符号的 8 位整数格式，从头读取 8 位二进制数据，结果得到 0，因为原始内存的 ArrayBuffer 对象，默认所有位都是 0。\",\"另一种 TypedArray 视图，与 DataView 视图的一个区别是，它不是一个构造函数，而是一组构造函数，代表不同的数据格式。\",\"const buffer = new ArrayBuffer(12); const x1 = new Int32Array(buffer); x1[0] = 1; const x2 = new Uint8Array(buffer); x2[0] = 2; console.log(x1[0]); //2\",\"上面代码对同一段内存，分别建立两种视图：32 位带符号整数（Int32Array 构造函数）和 8 位不带符号整数（Uint8Array 构造函数）。由于两个视图对应的是同一段内存，一个视图修改底层内存，会影响到另一个视图。\",\"TypedArray 视图的构造函数，除了接受 ArrayBuffer 实例作为参数，还可以接受普通数组作为参数，直接分配内存生成底层的 ArrayBuffer 实例，并同时完成对这段内存的赋值。\",\"const typedArray = new Uint8Array([0,1,2]); console.log(typedArray.length);//3 typedArray[0] = 5; console.log(typedArray);//Uint8Array [ 5, 1, 2 ]\",\"上面代码使用 TypedArray 视图的 Uint8Array 构造函数，新建一个不带符号的 8 位整数视图。可以看到，Uint8Array 直接使用普通数组作为参数，对底层内存的赋值同时完成。\"]},\"5\":{\"h\":\"ArrayBuffer.prototype.byteLength\",\"t\":[\"ArrayBuffer 实例的 byteLength 属性，返回所分配的内存区域的字节长度。\",\"const buff = new ArrayBuffer(32); console.log(buff.byteLength);//32\",\"如果要分配的内存区域很大，有可能分配失败（因为没有那么多的连续空余内存），所以有必要检查是否分配成功。\",\"if (buffer.byteLength === n) { // 成功 } else { // 失败 }\"]},\"6\":{\"h\":\"ArrayBuffer.prototype.slice()\",\"t\":[\"ArrayBuffer 实例有一个 slice 方法，允许将内存区域的一部分，拷贝生成一个新的 ArrayBuffer 对象。\",\"const buff = new ArrayBuffer(32); console.log(buff.byteLength);//32 const newBuffer = buff.slice(0, 3);\",\"上面代码拷贝 buffer 对象的前 3 个字节（从 0 开始，到第 3 个字节前面结束），生成一个新的 ArrayBuffer 对象。\",\"slice 方法其实包含两步，第一步是先分配一段新内存，第二步是将原来那个 ArrayBuffer 对象拷贝过去。\",\"slice 方法接受两个参数，第一个参数表示拷贝开始的字节序号（含该字节），第二个参数表示拷贝截止的字节序号（不含该字节）。如果省略第二个参数，则默认到原 ArrayBuffer 对象的结尾。\",\"除了 slice 方法，ArrayBuffer 对象不提供任何直接读写内存的方法，只允许在其上方建立视图，然后通过视图读写。\"]},\"7\":{\"h\":\"ArrayBuffer.isView()\",\"t\":[\"ArrayBuffer 有一个静态方法 isView，返回一个布尔值，表示参数是否为 ArrayBuffer 的视图实例。这个方法大致相当于判断参数，是否为 TypedArray 实例或 DataView 实例。\",\"const buffer = new ArrayBuffer(8); ArrayBuffer.isView(buffer) // false const v = new Int32Array(buffer); ArrayBuffer.isView(v) // true\"]},\"8\":{\"h\":\"概述\",\"t\":[\"ArrayBuffer 对象作为内存区域，可以存放多种类型的数据。同一段内存，不同数据有不同的解读方式，这就叫做“视图”（view）。\",\"ArrayBuffer 有两种视图，一种是 TypedArray 视图，另一种是 DataView 视图。前者的数组成员都是同一个数据类型，后者的数组成员可以是不同的数据类型。\",\"目前，TypedArray 视图一共包括 9 种类型，每一种视图都是一种构造函数。\",\"Int8Array：8 位有符号整数，长度 1 个字节。\",\"Uint8Array：8 位无符号整数，长度 1 个字节。\",\"Uint8ClampedArray：8 位无符号整数，长度 1 个字节，溢出处理不同。\",\"Int16Array：16 位有符号整数，长度 2 个字节。\",\"Uint16Array：16 位无符号整数，长度 2 个字节。\",\"Int32Array：32 位有符号整数，长度 4 个字节。\",\"Uint32Array：32 位无符号整数，长度 4 个字节。\",\"Float32Array：32 位浮点数，长度 4 个字节。\",\"Float64Array：64 位浮点数，长度 8 个字节。\",\"这 9 个构造函数生成的数组，统称为 TypedArray 视图。\",\"它们很像普通数组，都有 length 属性，都能用方括号运算符（[]）获取单个元素，所有数组的方法，在它们上面都能使用。\",\"普通数组与 TypedArray 数组的差异主要在以下方面。\",\"TypedArray 数组的所有成员，都是同一种类型。\",\"TypedArray 数组的成员是连续的，不会有空位。\",\"TypedArray 数组成员的默认值为 0。比如，new Array(10) 返回一个普通数组，里面没有任何成员，只是 10 个空位；new Uint8Array(10) 返回一个 TypedArray 数组，里面 10 个成员都是 0。\",\"TypedArray 数组只是一层视图，本身不储存数据，它的数据都储存在底层的 ArrayBuffer 对象之中，要获取底层对象必须使用 buffer 属性。\",\"前三条像 Java 的 int 类型数组，同种类型，连续无空位，默认为 0，第四条是说视图是一种操作的封装。\"]},\"9\":{\"h\":\"构造函数\",\"t\":[\"TypedArray 数组提供 9 种构造函数，用来生成相应类型的数组实例。\",\"构造函数有多种用法。\",\"（1）TypedArray(buffer, byteOffset = 0, length?)\",\"同一个 ArrayBuffer 对象之上，可以根据不同的数据类型，建立多个视图。\",\"// 创建一个8字节的ArrayBuffer const b = new ArrayBuffer(8); // 创建一个指向b的Int32视图，开始于字节0，直到缓冲区的末尾 const v1 = new Int32Array(b); // 创建一个指向b的Uint8视图，开始于字节2，直到缓冲区的末尾 const v2 = new Uint8Array(b, 2); // 创建一个指向b的Int16视图，开始于字节2，长度为2 const v3 = new Int16Array(b, 2, 2);\",\"上面代码在一段长度为 8 个字节的内存（b）之上，生成了三个视图：v1、v2 和 v3。三个视图表示对同一段内存数据的不同操作方式。\",\"视图的构造函数可以接受三个参数：\",\"第一个参数（必需）：视图对应的底层 ArrayBuffer 对象。\",\"第二个参数（可选）：视图开始的字节序号，默认从 0 开始。\",\"第三个参数（可选）：视图包含的数据个数，默认直到本段内存区域结束。\",\"因此，v1、v2 和 v3 是重叠的：\",\"v1[0] 是一个 32 位整数，指向字节 0 ～字节 3（32 位整数每个成员占 4 字节，8 字节内存生成了 2 个成员）；\",\"v2[0] 是一个 8 位无符号整数（每个成员占 1 字节，8 字节内存生成了 8 个成员，这里即第 2 个成员），指向字节 2；\",\"v3[0] 是一个 16 位整数（每个成员占 2 字节，8 字节内存生成 4 个成员，从第 2 个字节开始存 2 字节，这里是第 2 个成员），指向字节 2 ～字节 3。\",\"所以，只要任何一个视图对内存有所修改，就会在另外两个视图上反应出来。\",\"注意，byteOffset 必须与所要建立的数据类型一致，否则会报错。\",\"const buffer = new ArrayBuffer(8); const i16 = new Int16Array(buffer, 1); // Uncaught RangeError: start offset of Int16Array should be a multiple of 2\",\"上面代码中，新生成一个 8 个字节的 ArrayBuffer 对象，然后在这个对象的第一个字节，建立带符号的 16 位整数视图，结果报错。因为，带符号的 16 位整数需要两个字节，所以 byteOffset 参数必须能够被 2 整除。（也就是说 TypedArray 视图数组操作的对象不能小于本身最小长度？）\",\"如果想从任意字节开始解读 ArrayBuffer 对象，必须使用 DataView 视图，因为 TypedArray 视图只提供 9 种固定的解读格式。\",\"（2）TypedArray(length)\",\"视图还可以不通过 ArrayBuffer 对象，直接分配内存而生成。\",\"const f64a = new Float64Array(8);//8个0 f64a[0] = 10; f64a[1] = 20; f64a[2] = f64a[0] + f64a[1];//10，20，30，0，0，0，0，0，\",\"上面代码生成一个 8 个成员的 Float64Array 数组（共 64 字节），然后依次对每个成员赋值。这时，视图构造函数的参数就是成员的个数。可以看到，视图数组的赋值操作与普通数组的操作毫无两样。\",\"注意：ArrayBuffer 构造函数的参数是所需要的内存大小（单位字节）。TypedArray 构造函数的参数是指包含数组成员的个数（单位位，每个成员 8 字节）。\",\"（3）TypedArray(typedArray)\",\"TypedArray 数组的构造函数，可以接受另一个 TypedArray 实例作为参数。\",\"const typedArray = new Int8Array(new Uint8Array(4)); //0，0，0，0\",\"上面代码中，Int8Array 构造函数接受一个 Uint8Array 实例作为参数。\",\"注意，此时生成的新数组，只是复制了参数数组的值，对应的底层内存是不一样的。新数组会开辟一段新的内存储存数据，不会在原数组的内存之上建立视图。\",\"const x = new Int8Array([1, 1]); const y = new Int8Array(x); x[0] // 1 y[0] // 1 x[0] = 2; y[0] // 1\",\"上面代码中，数组 y 是以数组 x 为模板而生成的，当 x 变动的时候，y 并没有变动。\",\"如果想基于同一段内存，构造不同的视图，可以采用下面的写法。\",\"const x = new Int8Array([1, 1]); const y = new Int8Array(x.buffer); x[0] // 1 y[0] // 1 x[0] = 2; y[0] // 2\",\"（4）TypedArray(arrayLikeObject)\",\"构造函数的参数也可以是一个普通数组，然后直接生成 TypedArray 实例。\",\"const typedArray = new Uint8Array([1, 2, 3, 4]);\",\"注意，这时 TypedArray 视图会重新开辟内存，不会在原数组的内存上建立视图。\",\"上面代码从一个普通的数组，生成一个 8 位无符号整数的 TypedArray 实例。该数组有 4 个成员，每一个都是 8 位无符号整数。\",\"TypedArray 数组也可以转换回普通数组。\",\"const normalArray = [...typedArray]; // or const normalArray = Array.from(typedArray); // or const normalArray = Array.prototype.slice.call(typedArray);\"]},\"10\":{\"h\":\"数组方法\",\"t\":[\"普通数组的操作方法和属性，对 TypedArray 数组完全适用。\",\"TypedArray.prototype.copyWithin(target, start[, end = this.length])\",\"TypedArray.prototype.entries()\",\"TypedArray.prototype.every(callbackfn, thisArg?)\",\"TypedArray.prototype.fill(value, start=0, end=this.length)\",\"TypedArray.prototype.filter(callbackfn, thisArg?)\",\"TypedArray.prototype.find(predicate, thisArg?)\",\"TypedArray.prototype.findIndex(predicate, thisArg?)\",\"TypedArray.prototype.forEach(callbackfn, thisArg?)\",\"TypedArray.prototype.indexOf(searchElement, fromIndex=0)\",\"TypedArray.prototype.join(separator)\",\"TypedArray.prototype.keys()\",\"TypedArray.prototype.lastIndexOf(searchElement, fromIndex?)\",\"TypedArray.prototype.map(callbackfn, thisArg?)\",\"TypedArray.prototype.reduce(callbackfn, initialValue?)\",\"TypedArray.prototype.reduceRight(callbackfn, initialValue?)\",\"TypedArray.prototype.reverse()\",\"TypedArray.prototype.slice(start=0, end=this.length)\",\"TypedArray.prototype.some(callbackfn, thisArg?)\",\"TypedArray.prototype.sort(comparefn)\",\"TypedArray.prototype.toLocaleString(reserved1?, reserved2?)\",\"TypedArray.prototype.toString()\",\"TypedArray.prototype.values()\",\"上面所有方法的用法，请参阅数组方法的介绍，这里不再重复了。\",\"注意，TypedArray 数组没有 concat 方法。如果想要合并多个 TypedArray 数组，可以用下面这个函数。\",\" 1 function concatenate(resultConstructor, ...arrays) { 2 let totalLength = 0; 3 for (let arr of arrays) { 4 totalLength += arr.length; 5 } 6 let result = new resultConstructor(totalLength); 7 let offset = 0; 8 for (let arr of arrays) { 9 result.set(arr, offset); 10 offset += arr.length; 11 } 12 return result; 13 } 14 15 concatenate(Uint8Array, Uint8Array.of(1, 2), Uint8Array.of(3, 4)) 16 // Uint8Array [1, 2, 3, 4]\",\"另外，TypedArray 数组与普通数组一样，部署了 Iterator 接口，所以可以被遍历。\",\"let ui8 = Uint8Array.of(0, 1, 2); for (let byte of ui8) { console.log(byte); } // 0 // 1 // 2\"]},\"11\":{\"h\":\"字节序\",\"t\":[\"字节序指的是数值在内存中的表示方式。\",\"const buffer = new ArrayBuffer(16); const int32View = new Int32Array(buffer); for (let i = 0; i < int32View.length; i++) { int32View[i] = i * 2; }\",\"上面代码生成一个 16 字节的 ArrayBuffer 对象，然后在它的基础上，建立了一个 32 位整数的视图。由于每个 32 位整数占据 4 个字节，所以一共可以写入 4 个整数，依次为 0，2，4，6。\",\"如果在这段数据上接着建立一个 16 位整数的视图，则可以读出完全不一样的结果。\",\"const int16View = new Int16Array(buffer); for (let i = 0; i < int16View.length; i++) { console.log(\\\"Entry \\\" + i + \\\": \\\" + int16View[i]); } // Entry 0: 0 // Entry 1: 0 // Entry 2: 2 // Entry 3: 0 // Entry 4: 4 // Entry 5: 0 // Entry 6: 6 // Entry 7: 0\",\"由于每个 16 位整数占据 2 个字节，所以整个 ArrayBuffer 对象现在分成 8 段。然后，由于 x86 体系的计算机都采用小端字节序（little endian），相对重要的字节排在后面的内存地址，相对不重要字节排在前面的内存地址，所以就得到了上面的结果。\",\"比如，一个占据四个字节的 16 进制数 0x12345678，决定其大小的最重要的字节是“12”，最不重要的是“78”。小端字节序将最不重要的字节排在前面，储存顺序就是 78563412；大端字节序则完全相反，将最重要的字节排在前面，储存顺序就是 12345678。目前，所有个人电脑几乎都是小端字节序，所以 TypedArray 数组内部也采用小端字节序读写数据，或者更准确的说，按照本机操作系统设定的字节序读写数据。\",\"这并不意味大端字节序不重要，事实上，很多网络设备和特定的操作系统采用的是大端字节序。这就带来一个严重的问题：如果一段数据是大端字节序，TypedArray 数组将无法正确解析，因为它只能处理小端字节序！为了解决这个问题，JavaScript 引入 DataView 对象，可以设定字节序，下文会详细介绍。\",\"下面是另一个例子。\",\"// 假定某段buffer包含如下字节 [0x02, 0x01, 0x03, 0x07] const buffer = new ArrayBuffer(4); const v1 = new Uint8Array(buffer); v1[0] = 2; v1[1] = 1; v1[2] = 3; v1[3] = 7; const uInt16View = new Uint16Array(buffer); // 计算机采用小端字节序 // 所以头两个字节等于258 if (uInt16View[0] === 258) { console.log('OK'); // \\\"OK\\\" } // 赋值运算 uInt16View[0] = 255; // 字节变为[0xFF, 0x00, 0x03, 0x07] uInt16View[0] = 0xff05; // 字节变为[0x05, 0xFF, 0x03, 0x07] uInt16View[1] = 0x0210; // 字节变为[0x05, 0xFF, 0x10, 0x02]\",\"下面的函数可以用来判断，当前视图是小端字节序，还是大端字节序。\",\" 1 const BIG_ENDIAN = Symbol('BIG_ENDIAN'); 2 const LITTLE_ENDIAN = Symbol('LITTLE_ENDIAN'); 3 4 function getPlatformEndianness() { 5 let arr32 = Uint32Array.of(0x12345678); 6 let arr8 = new Uint8Array(arr32.buffer); 7 switch ((arr8[0]*0x1000000) + (arr8[1]*0x10000) + (arr8[2]*0x100) + (arr8[3])) { 8 case 0x12345678: 9 return BIG_ENDIAN; 10 case 0x78563412: 11 return LITTLE_ENDIAN; 12 default: 13 throw new Error('Unknown endianness'); 14 } 15 }\",\"总之，与普通数组相比，TypedArray 数组的最大优点就是可以直接操作内存，不需要数据类型转换，所以速度快得多。\"]},\"12\":{\"h\":\"BYTES_PER_ELEMENT 属性\",\"t\":[\"每一种视图的构造函数，都有一个 BYTES_PER_ELEMENT 属性，表示这种数据类型占据的字节数。\",\"Int8Array.BYTES_PER_ELEMENT // 1 Uint8Array.BYTES_PER_ELEMENT // 1 Uint8ClampedArray.BYTES_PER_ELEMENT // 1 Int16Array.BYTES_PER_ELEMENT // 2 Uint16Array.BYTES_PER_ELEMENT // 2 Int32Array.BYTES_PER_ELEMENT // 4 Uint32Array.BYTES_PER_ELEMENT // 4 Float32Array.BYTES_PER_ELEMENT // 4 Float64Array.BYTES_PER_ELEMENT // 8\",\"这个属性在 TypedArray 实例上也能获取，即有 TypedArray.prototype.BYTES_PER_ELEMENT。\"]},\"13\":{\"h\":\"ArrayBuffer 与字符串的互相转换\",\"t\":[\"ArrayBuffer 转为字符串，或者字符串转为 ArrayBuffer，有一个前提，即字符串的编码方法是确定的。假定字符串采用 UTF-16 编码（JavaScript 的内部编码方式），可以自己编写转换函数。\",\" 1 // ArrayBuffer 转为字符串，参数为 ArrayBuffer 对象 2 function ab2str(buf) { 3 // 注意，如果是大型二进制数组，为了避免溢出， 4 // 必须一个一个字符地转 5 if (buf && buf.byteLength < 1024) { 6 return String.fromCharCode.apply(null, new Uint16Array(buf)); 7 } 8 9 const bufView = new Uint16Array(buf); 10 const len = bufView.length; 11 const bstr = new Array(len); 12 for (let i = 0; i < len; i++) { 13 bstr[i] = String.fromCharCode.call(null, bufView[i]); 14 } 15 return bstr.join(''); 16 } 17 18 // 字符串转为 ArrayBuffer 对象，参数为字符串 19 function str2ab(str) { 20 const buf = new ArrayBuffer(str.length * 2); // 每个字符占用2个字节 21 const bufView = new Uint16Array(buf); 22 for (let i = 0, strLen = str.length; i < strLen; i++) { 23 bufView[i] = str.charCodeAt(i); 24 } 25 return buf; 26 }\"]},\"14\":{\"h\":\"溢出\",\"t\":[\"不同的视图类型，所能容纳的数值范围是确定的。超出这个范围，就会出现溢出。比如，8 位视图只能容纳一个 8 位的二进制值，如果放入一个 9 位的值，就会溢出。\",\"TypedArray 数组的溢出处理规则，简单来说，就是抛弃溢出的位，然后按照视图类型进行解释。\",\"const uint8 = new Uint8Array(1); uint8[0] = 256; uint8[0] // 0 uint8[0] = -1; uint8[0] // 255\",\"上面代码中，uint8 是一个 8 位视图，而 256 的二进制形式是一个 9 位的值 100000000，这时就会发生溢出。根据规则，只会保留后 8 位，即 00000000。uint8 视图的解释规则是无符号的 8 位整数，所以 00000000 就是 0。\",\"负数在计算机内部采用“2 的补码”表示，也就是说，将对应的正数值进行否运算，然后加 1。比如，-1 对应的正值是 1，进行否运算以后，得到 11111110，再加上 1 就是补码形式 11111111。uint8 按照无符号的 8 位整数解释 11111111，返回结果就是 255。\",\"一个简单转换规则，可以这样表示。\",\"正向溢出（overflow）：当输入值大于当前数据类型的最大值，结果等于当前数据类型的最小值加上余值，再减去 1。\",\"负向溢出（underflow）：当输入值小于当前数据类型的最小值，结果等于当前数据类型的最大值减去余值的绝对值，再加上 1。\",\"上面的“余值”就是模运算的结果，即 JavaScript 里面的 % 运算符的结果。\",\"12 % 4 // 0 12 % 5 // 2\",\"上面代码中，12 除以 4 是没有余值的，而除以 5 会得到余值 2。\",\"请看下面的例子。\",\"const int8 = new Int8Array(1); int8[0] = 128; int8[0] // -128 int8[0] = -129; int8[0] // 127\",\"上面例子中，int8 是一个带符号的 8 位整数视图，它的最大值是 127，最小值是-128。输入值为 128 时，相当于正向溢出 1，根据“最小值加上余值（128 除以 127 的余值是 1），再减去 1”的规则，就会返回 -128；输入值为 -129 时，相当于负向溢出 1，根据“最大值减去余值的绝对值（-129 除以-128 的余值的绝对值是 1），再加上 1”的规则，就会返回 127。\",\"Uint8ClampedArray 视图的溢出规则，与上面的规则不同。它规定，凡是发生正向溢出，该值一律等于当前数据类型的最大值，即 255；如果发生负向溢出，该值一律等于当前数据类型的最小值，即 0。\",\"onst uint8c = new Uint8ClampedArray(1); uint8c[0] = 256; uint8c[0] // 255 uint8c[0] = -1; uint8c[0] // 0\",\"上面例子中，uint8C 是一个 Uint8ClampedArray 视图，正向溢出时都返回 255，负向溢出都返回 0。\"]},\"15\":{\"h\":\"TypedArray.prototype.buffer\",\"t\":[\"TypedArray 实例的 buffer 属性，返回整段内存区域对应的 ArrayBuffer 对象。该属性为只读属性。\",\"const a = new Float32Array(64); const b = new Uint8Array(a.buffer);\",\"上面代码的 a 视图对象和 b 视图对象，对应同一个 ArrayBuffer 对象，即同一段内存。\"]},\"16\":{\"h\":\"TypedArray.prototype.byteLength，TypedArray.prototype.byteOffset\",\"t\":[\"byteLength 属性返回 TypedArray 数组占据的内存长度，单位为字节。byteOffset 属性返回 TypedArray 数组从底层 ArrayBuffer 对象的哪个字节开始。这两个属性都是只读属性。\",\"const b = new ArrayBuffer(8); const v1 = new Int32Array(b); const v2 = new Uint8Array(b, 2); const v3 = new Int16Array(b, 2, 2); v1.byteLength // 8 v2.byteLength // 6 v3.byteLength // 4 v1.byteOffset // 0 v2.byteOffset // 2 v3.byteOffset // 2\"]},\"17\":{\"h\":\"TypedArray.prototype.length\",\"t\":[\"length 属性表示 TypedArray 数组含有多少个成员。注意将 byteLength 属性和 length 属性区分，前者是字节长度，后者是成员长度。\",\"const a = new Int16Array(8); a.length // 8 a.byteLength // 16\"]},\"18\":{\"h\":\"TypedArray.prototype.set()\",\"t\":[\"TypedArray 数组的 set 方法用于复制数组（普通数组或 TypedArray 数组），也就是将一段内容完全复制到另一段内存。\",\"const a = new Uint8Array(8); const b = new Uint8Array(8); b.set(a);\",\"上面代码复制 a 数组的内容到 b 数组，它是整段内存的复制，比一个个拷贝成员的那种复制快得多。\",\"set 方法还可以接受第二个参数，表示从 b 对象的哪一个成员开始复制 a 对象。\",\"const a = new Uint16Array(8); const b = new Uint16Array(10); b.set(a, 2)\",\"上面代码的 b 数组比 a 数组多两个成员，所以从 b[2] 开始复制。\"]},\"19\":{\"h\":\"TypedArray.prototype.subarray()\",\"t\":[\"subarray 方法是对于 TypedArray 数组的一部分，再建立一个新的视图。\",\"const a = new Uint16Array(8); const b = a.subarray(2,3); a.byteLength // 16 b.byteLength // 2\",\"subarray 方法的第一个参数是起始的成员序号，第二个参数是结束的成员序号（不含该成员），如果省略则包含剩余的全部成员。所以，上面代码的 a.subarray(2,3)，意味着 b 只包含 a[2] 一个成员，字节长度为 2。\"]},\"20\":{\"h\":\"TypedArray.prototype.slice()\",\"t\":[\"TypeArray 实例的 slice 方法，可以返回一个指定位置的新的 TypedArray 实例。\",\"let ui8 = Uint8Array.of(0, 1, 2); ui8.slice(-1) // Uint8Array [ 2 ]\",\"上面代码中，ui8 是 8 位无符号整数数组视图的一个实例。它的 slice 方法可以从当前视图之中，返回一个新的视图实例。\",\"slice 方法的参数，表示原数组的具体位置，开始生成新数组。负值表示逆向的位置，即-1 为倒数第一个位置，-2 表示倒数第二个位置，以此类推。\"]},\"21\":{\"h\":\"TypedArray.of()\",\"t\":[\"TypedArray 数组的所有构造函数，都有一个静态方法 of，用于将参数转为一个 TypedArray 实例。\",\"Float32Array.of(0.151, -8, 3.7) // Float32Array [ 0.151, -8, 3.7 ]\",\"下面三种方法都会生成同样一个 TypedArray 数组。\",\"// 方法一 let tarr = new Uint8Array([1,2,3]); // 方法二 let tarr = Uint8Array.of(1,2,3); // 方法三 let tarr = new Uint8Array(3); tarr[0] = 1; tarr[1] = 2; tarr[2] = 3;\"]},\"22\":{\"h\":\"TypedArray.from()\",\"t\":[\"静态方法 from 接受一个可遍历的数据结构（比如数组）作为参数，返回一个基于这个结构的 TypedArray 实例。\",\"Uint16Array.from([0, 1, 2]) // Uint16Array [ 0, 1, 2 ]\",\"这个方法还可以将一种 TypedArray 实例，转为另一种。\",\"const ui16 = Uint16Array.from(Uint8Array.of(0, 1, 2)); ui16 instanceof Uint16Array // true\",\"from 方法还可以接受一个函数，作为第二个参数，用来对每个元素进行遍历，功能类似 map 方法。\",\"Int8Array.of(127, 126, 125).map(x => 2 * x) // Int8Array [ -2, -4, -6 ] Int16Array.from(Int8Array.of(127, 126, 125), x => 2 * x) // Int16Array [ 254, 252, 250 ]\",\"上面的例子中，from 方法没有发生溢出，这说明遍历不是针对原来的 8 位整数数组。也就是说，from 会将第一个参数指定的 TypedArray 数组，拷贝到另一段内存之中，处理之后再将结果转成指定的数组格式。\",\"由于视图的构造函数可以指定起始位置和长度，所以在同一段内存之中，可以依次存放不同类型的数据，这叫做“复合视图”。\",\"const buffer = new ArrayBuffer(24); const idView = new Uint32Array(buffer, 0, 1); const usernameView = new Uint8Array(buffer, 4, 16); const amountDueView = new Float32Array(buffer, 20, 1);\",\"new ArrayBuffer()构造函数分配一段指定字节的内存空间，new TypeArray()用来生成对应类型的数据实例存到内存空间中。\",\"上面代码将一个 24 字节长度的 ArrayBuffer 对象，分成三个部分：\",\"字节 0 到字节 3：1 个 32 位无符号整数\",\"字节 4 到字节 19：16 个 8 位整数\",\"字节 20 到字节 23：1 个 32 位浮点数\",\"这种数据结构可以用如下的 C 语言描述：\",\"struct someStruct { unsigned long id; char username[16]; float amountDue; };\",\"如果一段数据包括多种类型（比如服务器传来的 HTTP 数据），这时除了建立 ArrayBuffer 对象的复合视图以外，还可以通过 DataView 视图进行操作。\",\"DataView 视图提供更多操作选项，而且支持设定字节序。\",\"本来，在设计目的上，ArrayBuffer 对象的各种 TypedArray 视图，是用来向网卡、声卡之类的本机设备传送数据，所以使用本机的字节序就可以了；\",\"而 DataView 视图的设计目的，是用来处理网络设备传来的数据，所以大端字节序或小端字节序是可以自行设定的。\",\"DataView 视图本身也是构造函数，接受一个 ArrayBuffer 对象作为参数，生成视图。\",\"DataView(ArrayBuffer buffer [, 字节起始位置 [, 长度]]);\",\"例子\",\"const buffer = new ArrayBuffer(24); const dv = new DataView(buffer);\",\"DataView 实例有以下属性，含义与 TypedArray 实例的同名方法相同。\",\"DataView.prototype.buffer：返回对应的 ArrayBuffer 对象\",\"DataView.prototype.byteLength：返回占据的内存字节长度\",\"DataView.prototype.byteOffset：返回当前视图从对应的 ArrayBuffer 对象的哪个字节开始\"]},\"23\":{\"h\":\"DataView 的读取\",\"t\":[\"DataView 实例提供 8 个方法读取内存。\",\"getInt8：读取 1 个字节，返回一个 8 位整数。\",\"getUint8：读取 1 个字节，返回一个无符号的 8 位整数。\",\"getInt16：读取 2 个字节，返回一个 16 位整数。\",\"getUint16：读取 2 个字节，返回一个无符号的 16 位整数。\",\"getInt32：读取 4 个字节，返回一个 32 位整数。\",\"getUint32：读取 4 个字节，返回一个无符号的 32 位整数。\",\"getFloat32：读取 4 个字节，返回一个 32 位浮点数。\",\"getFloat64：读取 8 个字节，返回一个 64 位浮点数。\",\"这一系列 get 方法的参数都是一个字节序号（不能是负数，否则会报错），表示从哪个字节开始读取。\",\"// 从第一个字节开始读取8位无符号整数 const v1 = dv.getUint8(0); // 从第2个字节开始读取16位有符号整数,占2个字节 const v2 = dv.getInt16(1); // 从第4个字节开始读取16位有符号整数,2个字节 const v3 = dv.getInt16(3);\",\"上面代码读取了 ArrayBuffer 对象的前 5 个字节，其中有一个 8 位整数和两个十六位整数。\",\"如果一次读取两个或两个以上字节，就必须明确数据的存储方式，到底是小端字节序还是大端字节序。\",\"默认情况下，DataView 的 get 方法使用大端字节序解读数据，如果需要使用小端字节序解读，必须在 get 方法的第二个参数指定 true。\",\"// 小端字节序 const v1 = dv.getUint16(1, true); // 大端字节序 const v2 = dv.getUint16(3, false); // 大端字节序 const v3 = dv.getUint16(3);\"]},\"24\":{\"h\":\"DataView 的写入\",\"t\":[\"DataView 视图提供 8 个方法写入内存。\",\"setInt8：写入 1 个字节的 8 位整数。\",\"setUint8：写入 1 个字节的 8 位无符号整数。\",\"setInt16：写入 2 个字节的 16 位整数。\",\"setUint16：写入 2 个字节的 16 位无符号整数。\",\"setInt32：写入 4 个字节的 32 位整数。\",\"setUint32：写入 4 个字节的 32 位无符号整数。\",\"setFloat32：写入 4 个字节的 32 位浮点数。\",\"setFloat64：写入 8 个字节的 64 位浮点数。\",\"这一系列 set 方法，接受两个参数，\",\"第一个参数是字节序号，表示从哪个字节开始写入，第二个参数为写入的数据。\",\"对于那些写入两个或两个以上字节的方法，需要指定第三个参数，false 或者 undefined 表示使用大端字节序写入，true 表示使用小端字节序写入。即默认大端字节序写入。\",\"// 在第1个字节，以大端字节序写入值为25的32位整数 dv.setInt32(0, 25, false); // 在第5个字节，以大端字节序写入值为25的32位整数 dv.setInt32(4, 25); // 在第9个字节，以小端字节序写入值为2.5的32位浮点数 dv.setFloat32(8, 2.5, true);\",\"如果不确定正在使用的计算机的字节序，可以采用下面的判断方式。\",\"const littleEndian = (function() { const buffer = new ArrayBuffer(2); new DataView(buffer).setInt16(0, 256, true); return new Int16Array(buffer)[0] === 256; })();\",\"如果返回 true，就是小端字节序；如果返回 false，就是大端字节序。\",\"大量的 Web API 用到了 ArrayBuffer 对象和它的视图对象。\"]},\"25\":{\"h\":\"AJAX\",\"t\":[\"传统上，服务器通过 AJAX 操作只能返回文本数据，即 responseType 属性默认为 text。XMLHttpRequest 第二版 XHR2 允许服务器返回二进制数据，这时分成两种情况。如果明确知道返回的二进制数据类型，可以把返回类型（responseType）设为 arraybuffer；如果不知道，就设为 blob。\",\"let xhr = new XMLHttpRequest(); xhr.open('GET', someUrl); xhr.responseType = 'arraybuffer'; xhr.onload = function () { let arrayBuffer = xhr.response; // ··· }; xhr.send();\",\"如果知道传回来的是 32 位整数，可以像下面这样处理。\",\"xhr.onreadystatechange = function () { if (req.readyState === 4 ) { const arrayResponse = xhr.response; const dataView = new DataView(arrayResponse); const ints = new Uint32Array(dataView.byteLength / 4); xhrDiv.style.backgroundColor = \\\"#00FF00\\\"; xhrDiv.innerText = \\\"Array is \\\" + ints.length + \\\"uints long\\\"; } }\"]},\"26\":{\"h\":\"Canvas\",\"t\":[\"网页 Canvas 元素输出的二进制像素数据，就是 TypedArray 数组。\",\"const canvas = document.getElementById('myCanvas'); const ctx = canvas.getContext('2d'); const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); const uint8ClampedArray = imageData.data;\",\"需要注意的是，上面代码的 uint8ClampedArray 虽然是一个 TypedArray 数组，但是它的视图类型是一种针对 Canvas 元素的专有类型 Uint8ClampedArray。这个视图类型的特点，就是专门针对颜色，把每个字节解读为无符号的 8 位整数，即只能取值 0 ～ 255，而且发生运算的时候自动过滤高位溢出。这为图像处理带来了巨大的方便。\",\"举例来说，如果把像素的颜色值设为 Uint8Array 类型，那么乘以一个 gamma 值的时候，就必须这样计算：\",\"u8[i] = Math.min(255, Math.max(0, u8[i] * gamma));\",\"因为 Uint8Array 类型对于大于 255 的运算结果（比如 0xFF+1），会自动变为 0x00，所以图像处理必须要像上面这样算。这样做很麻烦，而且影响性能。如果将颜色值设为 Uint8ClampedArray 类型，计算就简化许多。\",\"pixels[i] *= gamma;\",\"Uint8ClampedArray 类型确保将小于 0 的值设为 0，将大于 255 的值设为 255。注意，IE 10 不支持该类型。\"]},\"27\":{\"h\":\"WebSocket\",\"t\":[\"WebSocket 可以通过 ArrayBuffer，发送或接收二进制数据。\",\" 1 let socket = new WebSocket('ws://127.0.0.1:8081'); 2 socket.binaryType = 'arraybuffer'; 3 4 // Wait until socket is open 5 socket.addEventListener('open', function (event) { 6 // Send binary data 7 const typedArray = new Uint8Array(4); 8 socket.send(typedArray.buffer); 9 }); 10 11 // Receive binary data 12 socket.addEventListener('message', function (event) { 13 const arrayBuffer = event.data; 14 // ··· 15 });\"]},\"28\":{\"h\":\"Fetch API\",\"t\":[\"Fetch API 取回的数据，就是 ArrayBuffer 对象。\",\"fetch(url) .then(function(response){ return response.arrayBuffer() }) .then(function(arrayBuffer){ // ... });\"]},\"29\":{\"h\":\"File API\",\"t\":[\"如果知道一个文件的二进制数据类型，也可以将这个文件读取为 ArrayBuffer 对象。\",\"const fileInput = document.getElementById('fileInput'); const file = fileInput.files[0]; const reader = new FileReader(); reader.readAsArrayBuffer(file); reader.onload = function () { const arrayBuffer = reader.result; // ··· };\",\"下面以处理 bmp 文件为例。假定 file 变量是一个指向 bmp 文件的文件对象，首先读取文件。\",\"const fileInput = document.getElementById('fileInput'); const file = fileInput.files[0]; const reader = new FileReader(); reader.readAsArrayBuffer(file); reader.onload = function () { const arrayBuffer = reader.result; // ··· };\",\"下面以处理 bmp 文件为例。假定 file 变量是一个指向 bmp 文件的文件对象，首先读取文件。\",\"const reader = new FileReader(); reader.addEventListener(\\\"load\\\", processimage, false); reader.readAsArrayBuffer(file);\",\"然后，定义处理图像的回调函数：先在二进制数据之上建立一个 DataView 视图，再建立一个 bitmap 对象，用于存放处理后的数据，最后将图像展示在 Canvas 元素之中。\",\"function processimage(e) { const buffer = e.target.result; const datav = new DataView(buffer); const bitmap = {}; // 具体的处理步骤 }\",\"具体处理图像数据时，先处理 bmp 的文件头。具体每个文件头的格式和定义，请参阅有关资料。\",\"bitmap.fileheader = {}; bitmap.fileheader.bfType = datav.getUint16(0, true); bitmap.fileheader.bfSize = datav.getUint32(2, true); bitmap.fileheader.bfReserved1 = datav.getUint16(6, true); bitmap.fileheader.bfReserved2 = datav.getUint16(8, true); bitmap.fileheader.bfOffBits = datav.getUint32(10, true);\",\"接着处理图像元信息部分。\",\"bitmap.infoheader = {}; bitmap.infoheader.biSize = datav.getUint32(14, true); bitmap.infoheader.biWidth = datav.getUint32(18, true); bitmap.infoheader.biHeight = datav.getUint32(22, true); bitmap.infoheader.biPlanes = datav.getUint16(26, true); bitmap.infoheader.biBitCount = datav.getUint16(28, true); bitmap.infoheader.biCompression = datav.getUint32(30, true); bitmap.infoheader.biSizeImage = datav.getUint32(34, true); bitmap.infoheader.biXPelsPerMeter = datav.getUint32(38, true); bitmap.infoheader.biYPelsPerMeter = datav.getUint32(42, true); bitmap.infoheader.biClrUsed = datav.getUint32(46, true); bitmap.infoheader.biClrImportant = datav.getUint32(50, true);\",\"最后处理图像本身的像素信息。\",\"const start = bitmap.fileheader.bfOffBits; bitmap.pixels = new Uint8Array(buffer, start);\",\"至此，图像文件的数据全部处理完成。下一步，可以根据需要，进行图像变形，或者转换格式，或者展示在 Canvas 网页元素之中。\",\"JavaScript 是单线程的，Web worker 引入了多线程：主线程用来与用户互动，Worker 线程用来承担计算任务。每个线程的数据都是隔离的，通过 postMessage() 通信。下面是一个例子。\",\"// 主线程 const w = new Worker('myworker.js');\",\"上面代码中，主线程新建了一个 Worker 线程。该线程与主线程之间会有一个通信渠道，主线程通过 w.postMessage 向 Worker 线程发消息，同时通过 message 事件监听 Worker 线程的回应。\",\"// 主线程 w.postMessage('hi'); w.onmessage = function (ev) { console.log(ev.data); }\",\"上面代码中，主线程先发一个消息 hi，然后在监听到 Worker 线程的回应后，就将其打印出来。\",\"Worker 线程也是通过监听 message 事件，来获取主线程发来的消息，并作出反应。\",\"// Worker 线程 onmessage = function (ev) { console.log(ev.data); postMessage('ho'); }\",\"线程之间的数据交换可以是各种格式，不仅仅是字符串，也可以是二进制数据。这种交换采用的是复制机制，即一个进程将需要分享的数据复制一份，通过 postMessage 方法交给另一个进程。如果数据量比较大，这种通信的效率显然比较低。很容易想到，这时可以留出一块内存区域，由主线程与 Worker 线程共享，两方都可以读写，那么就会大大提高效率，协作起来也会比较简单（不像 postMessage 那么麻烦）。\",\"然后线程安全问题也就随之而来。\",\"ES2017 引入 SharedArrayBuffer，允许 Worker 线程与主线程共享同一块内存。SharedArrayBuffer 的 API 与 ArrayBuffer 一模一样，唯一的区别是后者无法共享数据。\",\"// 主线程 // 新建 1KB 共享内存 const sharedBuffer = new SharedArrayBuffer(1024); // 主线程将共享内存的地址发送出去 w.postMessage(sharedBuffer); // 在共享内存上建立视图，供写入数据 const sharedArray = new Int32Array(sharedBuffer);\",\"上面代码中，postMessage 方法的参数是 SharedArrayBuffer 对象。\",\"Worker 线程从事件的 data 属性上面取到数据。\",\"// Worker 线程 onmessage = function (ev) { // 主线程共享的数据，就是 1KB 的共享内存 const sharedBuffer = ev.data; // 在共享内存上建立视图，方便读写 const sharedArray = new Int32Array(sharedBuffer); // ... };\",\"共享内存也可以在 Worker 线程创建，发给主线程。\",\"SharedArrayBuffer 与 ArrayBuffer 一样，本身是无法读写的，必须在上面建立视图，然后通过视图读写。\",\"// 分配 10 万个 32 位整数占据的内存空间 const sab = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 100000); // 建立 32 位整数视图 const ia = new Int32Array(sab); // ia.length == 100000 // 新建一个质数生成器 const primes = new PrimeGenerator(); // 将 10 万个质数，写入这段内存空间 for ( let i=0 ; i < ia.length ; i++ ) ia[i] = primes.next(); // 向 Worker 线程发送这段共享内存 w.postMessage(ia);\",\"Worker 线程收到数据后的处理如下。\",\"// Worker 线程 let ia; onmessage = function (ev) { ia = ev.data; console.log(ia.length); // 100000 console.log(ia[37]); // 输出 163，因为这是第38个质数 };\",\"多线程共享内存，最大的问题就是如何防止两个线程同时修改某个地址，或者说，当一个线程修改共享内存以后，必须有一个机制让其他线程同步。SharedArrayBuffer API 提供 Atomics 对象，保证所有共享内存的操作都是“原子性”的，并且可以在所有线程内同步。\",\"什么叫“原子性操作”呢？现代编程语言中，一条普通的命令被编译器处理以后，会变成多条机器指令。如果是单线程运行，这是没有问题的；多线程环境并且共享内存时，就会出问题，因为这一组机器指令的运行期间，可能会插入其他线程的指令，从而导致运行结果出错。请看下面的例子。\",\"// 主线程 ia[42] = 314159; // 原先的值 191 ia[37] = 123456; // 原先的值 163 // Worker 线程 console.log(ia[37]); console.log(ia[42]); // 可能的结果 // 123456 // 191\",\"上面代码中，主线程的原始顺序是先对 42 号位置赋值，再对 37 号位置赋值。但是，编译器和 CPU 为了优化，可能会改变这两个操作的执行顺序（因为它们之间互不依赖），先对 37 号位置赋值，再对 42 号位置赋值。而执行到一半的时候，Worker 线程可能就会来读取数据，导致打印出 123456 和 191。\",\"下面是另一个例子。\",\"// 主线程 const sab = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * 100000); const ia = new Int32Array(sab); for (let i = 0; i < ia.length; i++) { ia[i] = primes.next(); // 将质数放入 ia } // worker 线程 ia[112]++; // 错误 Atomics.add(ia, 112, 1); // 正确\",\"上面代码中，Worker 线程直接改写共享内存 ia[112]++ 是不正确的。因为这行语句会被编译成多条机器指令，这些指令之间无法保证不会插入其他进程的指令。请设想如果两个线程同时 ia[112]++，很可能它们得到的结果都是不正确的。\",\"Atomics 对象就是为了解决这个问题而提出，它可以保证一个操作所对应的多条机器指令，一定是作为一个整体运行的，中间不会被打断。也就是说，它所涉及的操作都可以看作是原子性的单操作，这可以避免线程竞争，提高多线程共享内存时的操作安全。所以，ia[112]++ 要改写成 Atomics.add(ia, 112, 1)。\",\"Atomics 对象提供多种方法。\"]},\"30\":{\"h\":\"\",\"t\":[\"store() 方法用来向共享内存写入数据，load() 方法用来从共享内存读出数据。比起直接的读写操作，它们的好处是保证了读写操作的原子性。\",\"此外，它们还用来解决一个问题：多个线程使用共享内存的某个位置作为开关（flag），一旦该位置的值变了，就执行特定操作。这时，必须保证该位置的赋值操作，一定是在它前面的所有可能会改写内存的操作结束后执行；而该位置的取值操作，一定是在它后面所有可能会读取该位置的操作开始之前执行。store 方法和 load 方法就能做到这一点，编译器不会为了优化，而打乱机器指令的执行顺序。\",\"Atomics.load(array, index) Atomics.store(array, index, value)\",\"store 方法接受三个参数：SharedBuffer 的视图、位置索引和值，返回 sharedArray[index] 的值。\",\"load 方法只接受两个参数：SharedBuffer 的视图和位置索引，也是返回 sharedArray[index] 的值。\",\"// 主线程 main.js ia[42] = 314159; // 原先的值 191 Atomics.store(ia, 37, 123456); // 原先的值是 163 // Worker 线程 worker.js while (Atomics.load(ia, 37) == 163); console.log(ia[37]); // 123456 console.log(ia[42]); // 314159\",\"上面代码中，主线程的 Atomics.store 向 42 号位置的赋值，一定是早于 37 位置的赋值。只要 37 号位置等于 163，Worker 线程就不会终止循环，而对 37 号位置和 42 号位置的取值，一定是在 Atomics.load 操作之后。\",\"下面是另一个例子。\",\"// 主线程 const worker = new Worker('worker.js'); const length = 10; const size = Int32Array.BYTES_PER_ELEMENT * length; // 新建一段共享内存 const sharedBuffer = new SharedArrayBuffer(size); const sharedArray = new Int32Array(sharedBuffer); for (let i = 0; i < 10; i++) { // 向共享内存写入 10 个整数 Atomics.store(sharedArray, i, 0); } worker.postMessage(sharedBuffer);\",\"上面代码中，主线程用 Atomics.store() 方法写入数据。下面是 Worker 线程用 Atomics.load() 方法读取数据。\",\"// worker.js self.addEventListener('message', (event) => { const sharedArray = new Int32Array(event.data); for (let i = 0; i < 10; i++) { const arrayValue = Atomics.load(sharedArray, i); console.log(`The item at array index ${i} is ${arrayValue}`); } }, false);\"]},\"31\":{\"h\":\"\",\"t\":[\"Worker 线程如果要写入数据，可以使用上面的 Atomics.store() 方法，也可以使用 Atomics.exchange() 方法。它们的区别是，Atomics.store() 返回写入的值，而 Atomics.exchange() 返回被替换的值。\",\"// Worker 线程 self.addEventListener('message', (event) => { const sharedArray = new Int32Array(event.data); for (let i = 0; i < 10; i++) { if (i % 2 === 0) { const storedValue = Atomics.store(sharedArray, i, 1); console.log(`The item at array index ${i} is now ${storedValue}`); } else { const exchangedValue = Atomics.exchange(sharedArray, i, 2); console.log(`The item at array index ${i} was ${exchangedValue}, now 2`); } } }, false);\",\"上面代码将共享内存的偶数位置的值改成 1，奇数位置的值改成 2。\"]},\"32\":{\"h\":\"\",\"t\":[\"使用 while 循环等待主线程的通知，不是很高效，如果用在主线程，就会造成卡顿，Atomics 对象提供了 wait() 和 wake() 两个方法用于等待通知。这两个方法相当于锁内存，即在一个线程进行操作时，让其他线程休眠（建立锁），等到操作结束，再唤醒那些休眠的线程（解除锁）。\",\"// Worker 线程 self.addEventListener('message', (event) => { const sharedArray = new Int32Array(event.data); const arrayIndex = 0; const expectedStoredValue = 50; Atomics.wait(sharedArray, arrayIndex, expectedStoredValue); console.log(Atomics.load(sharedArray, arrayIndex)); }, false);\",\"上面代码中，Atomics.wait() 方法等同于告诉 Worker 线程，只要满足给定条件（sharedArray 的 0 号位置等于 50），就在这一行 Worker 线程进入休眠。\",\"主线程一旦更改了指定位置的值，就可以唤醒 Worker 线程。\",\"// 主线程 const newArrayValue = 100; Atomics.store(sharedArray, 0, newArrayValue); const arrayIndex = 0; const queuePos = 1; Atomics.wake(sharedArray, arrayIndex, queuePos);\",\"它的四个参数含义如下。\",\"sharedArray：共享内存的视图数组。\",\"index：视图数据的位置（从 0 开始）。\",\"value：该位置的预期值。一旦实际值等于预期值，就进入休眠。\",\"timeout：整数，表示过了这个时间以后，就自动唤醒，单位毫秒。该参数可选，默认值是 Infinity，即无限期的休眠，只有通过 Atomics.wake() 方法才能唤醒。\",\"Atomics.wait() 的返回值是一个字符串，共有三种可能的值。如果 sharedArray[index] 不等于 value，就返回字符串 not-equal，否则就进入休眠。如果 Atomics.wake() 方法唤醒，就返回字符串 ok；如果因为超时唤醒，就返回字符串 timed-out。\",\"Atomics.wake() 方法的使用格式如下。\",\"Atomics.wake(sharedArray, index, count)\",\"它的三个参数含义如下。\",\"sharedArray：共享内存的视图数组。\",\"index：视图数据的位置（从 0 开始）。\",\"count：需要唤醒的 Worker 线程的数量，默认为 Infinity。\",\"Atomics.wake() 方法一旦唤醒休眠的 Worker 线程，就会让它继续往下运行。\",\"请看一个例子。\",\"// 主线程 console.log(ia[37]); // 163 Atomics.store(ia, 37, 123456); Atomics.wake(ia, 37, 1); // Worker 线程 Atomics.wait(ia, 37, 163); console.log(ia[37]); // 123456\",\"上面代码中，视图数组 ia 的第 37 号位置，原来的值是 163。Worker 线程使用 Atomics.wait() 方法，指定只要 ia[37] 等于 163，就进入休眠状态。\",\"主线程使用 Atomics.store() 方法，将 123456 写入 ia[37]，然后使用 Atomics.wake() 方法唤醒 Worker 线程。\",\"另外，基于 wait 和 wake 这两个方法的锁内存实现，可以看 Lars T Hansen 的 js-lock-and-condition 这个库。\",\"注意，浏览器的主线程不宜设置休眠，这会导致用户失去响应。而且，主线程实际上会拒绝进入休眠。\"]},\"33\":{\"h\":\"\",\"t\":[\"共享内存上面的某些运算是不能被打断的，即不能在运算过程中，让其他线程改写内存上面的值。Atomics 对象提供了一些运算方法，防止数据被改写。\",\"Atomics.add(sharedArray, index, value)\",\"Atomics.add 用于将 value 加到 sharedArray[index]，返回 sharedArray[index] 旧的值。\",\"Atomics.sub(sharedArray, index, value)\",\"Atomics.sub 用于将 value 从 sharedArray[index] 减去，返回 sharedArray[index] 旧的值。\",\"Atomics.and(sharedArray, index, value)\",\"Atomics.and 用于将 value 与 sharedArray[index] 进行位运算 and，放入 sharedArray[index]，并返回旧的值。\",\"Atomics.or(sharedArray, index, value)\",\"Atomics.or 用于将 value 与 sharedArray[index] 进行位运算 or，放入 sharedArray[index]，并返回旧的值。\",\"Atomics.xor(sharedArray, index, value)\",\"Atomic.xor 用于将 vaule 与 sharedArray[index] 进行位运算 xor，放入 sharedArray[index]，并返回旧的值。\"]},\"34\":{\"h\":\"\",\"t\":[\"Atomics 对象还有以下方法。\",\"Atomics.compareExchange(sharedArray, index, oldval, newval)：如果 sharedArray[index] 等于 oldval，就写入 newval，返回 oldval。\",\"Atomics.isLockFree(size)：返回一个布尔值，表示 Atomics 对象是否可以处理某个 size 的内存锁定。如果返回 false，应用程序就需要自己来实现锁定。\",\"Atomics.compareExchange 的一个用途是，从 SharedArrayBuffer 读取一个值，然后对该值进行某个操作，操作结束以后，检查一下 SharedArrayBuffer 里面原来那个值是否发生变化（即被其他线程改写过）。如果没有改写过，就将它写回原来的位置，否则读取新的值，再重头进行一次操作。\",\"参考：\",\"https://www.cnblogs.com/jixiaohua/p/10714662.html\"]},\"35\":{\"h\":\"\"},\"36\":{\"h\":\"JavaScript | 性能优化-监控内存\",\"t\":[\"https://mp.weixin.qq.com/s/FTLOlYKIkRiXRYbCkK4KhA\"]},\"37\":{\"h\":\"\"},\"38\":{\"h\":\"静态方法\"},\"39\":{\"h\":\"\",\"t\":[\"功能：将值包装为已解决的 Promise 对象。 ​​场景​​：\",\"参数为非 Promise 对象时，直接返回状态为 fulfilled 的 Promise。\",\"参数为 Promise 对象时，直接返回该对象（无额外包装）。\",\"参数为 thenable 对象（含 then 方法的对象）时，将其转换为 Promise 并执行 then 方法。\",\"示例\",\"Promise.resolve('Success').then(val => console.log(val)); // 输出: Success\"]},\"40\":{\"h\":\"\",\"t\":[\"功能：返回一个立即拒绝的 Promise 对象。 ​​特点​​：\",\"无论参数类型如何，始终返回状态为 rejected 的 Promise。\",\"错误原因可以是任意值（推荐使用 Error 对象以保留调用栈）。\",\"示例：\",\"Promise.reject(new Error('Fail')).catch(err => console.error(err)); // 输出: Error: Fail\"]},\"41\":{\"h\":\"\",\"t\":[\"功能：并行执行多个 Promise，全部成功时返回结果数组；任一失败则立即拒绝。 ​​核心逻辑​​：\",\"输入为 Promise 数组，非 Promise 值会被自动转换为 fulfilled 状态的 Promise。\",\"结果顺序与输入顺序一致。\",\"示例：\",\"const p1 = Promise.resolve(1); const p2 = new Promise(resolve => setTimeout(resolve, 100, 'two')); Promise.all([p1, p2]).then(console.log); // 输出: [1, 'two']\"]},\"42\":{\"h\":\"\",\"t\":[\"功能：返回第一个完成（无论成功或失败）的 Promise 结果。 ​​适用场景​​：\",\"设置超时机制（如请求超时则返回错误）。\",\"竞速处理多个异步任务，仅需最快结果。\",\"示例：\",\"const slow = new Promise(resolve => setTimeout(resolve, 500, 'slow')); const fast = new Promise(resolve => setTimeout(resolve, 100, 'fast')); Promise.race([slow, fast]).then(console.log); // 输出: 'fast'\"]},\"43\":{\"h\":\"\",\"t\":[\"功能：等待所有 Promise 完成（无论成功或失败），返回包含每个结果的数组。 ​​输出结构​​：\",\"每个结果对象包含 status（fulfilled 或 rejected）和对应的 value 或 reason。\",\"示例：\",\"const resolved = Promise.resolve(1); const rejected = Promise.reject('Error'); Promise.allSettled([resolved, rejected]) .then(results => results.forEach(console.log)); // 输出: {status: 'fulfilled', value: 1}, {status: 'rejected', reason: 'Error'}\"]},\"44\":{\"h\":\"\",\"t\":[\"功能：返回第一个成功的 Promise，若全部失败则抛出聚合错误。 ​​与 race 的区别​​：\",\"any 仅关注首个成功的 Promise，而 race 关注首个完成的（可能成功或失败）。\",\"示例：\",\"const p1 = Promise.reject('Error'); const p2 = new Promise(resolve => setTimeout(resolve, 100, 'Success')); Promise.any([p1, p2]).then(console.log); // 输出: 'Success'\"]},\"45\":{\"h\":\"\",\"t\":[\"功能：同步捕获函数中的异常并转换为 Promise 链中的错误。 ​​用途​​：\",\"统一同步/异步代码的错误处理，避免 try/catch 与 .catch() 混用。\",\"示例（假设已支持）：\",\"Promise.try(() => JSON.parse(invalidJson)) .catch(err => console.error('解析失败:', err));\"]},\"46\":{\"h\":\"\",\"t\":[\"方法\",\"输入要求\",\"成功条件\",\"失败条件\",\"输出结构\",\"Promise.all\",\"所有成功\",\"任一失败则整体失败\",\"返回首个失败原因\",\"结果数组\",\"Promise.allSettled\",\"全部完成（无论成败）\",\"无\",\"无\",\"状态对象数组\",\"Promise.race\",\"首个完成（无论成败）\",\"首个成功的 Promise\",\"首个失败的 Promise\",\"首个完成的结果或错误\",\"Promise.any\",\"至少一个成功\",\"全部失败则整体失败\",\"返回聚合错误数组\",\"首个成功值或错误集合\"]},\"47\":{\"h\":\"\",\"t\":[\"ES6 原生支持：resolve、reject、all、race\",\"ES2020 新增：allSettled\",\"ES2021 新增：any\",\"提案阶段：try（尚未标准化）\"]},\"48\":{\"h\":\"\"},\"49\":{\"h\":\"彻底搞懂JS中的prototype、__proto__与constructor（图解）\"},\"50\":{\"h\":\"1. 前言\",\"t\":[\"作为一名前端工程师，必须搞懂JS中的prototype、_ _ proto _ _ 与constructor属性，相信很多初学者对这些属性存在许多困惑，容易把它们混淆，本文旨在帮助大家理清它们之间的关系并彻底搞懂它们。这里说明一点，_ _ proto _ _ 属性的两边是各由两个下划线构成（这里为了方便大家看清，在两下划线之间加入了一个空格：_ _ proto _ _ ，读作“dunder proto”，“double underscore proto”的缩写），实际上，该属性在ES标准定义中的名字应该是[[Prototype]]，具体实现是由浏览器代理自己实现，谷歌浏览器的实现就是将[[Prototype]]命名为_ _ proto _ _ ，大家清楚这个标准定义与具体实现的区别即可（名字有所差异，功能是一样的），可以通过该方式检测引擎是否支持这个属性：\",\"Object.getPrototypeOf({__proto__: null}) === null\",\"本文基于谷歌浏览器（版本 72.0.3626.121）的实验结果所得\",\"现在正式开始！\",\"让我们从如下一个简单的例子展开讨论，并配以相关的图帮助理解：\",\"function Foo() {...}; let f1 = new Foo();\",\"以上代码表示创建一个构造函数Foo()，并用new关键字实例化该构造函数得到一个实例化对象f1。这里稍微补充一下new操作符将函数作为构造器进行调用时的过程：\",\"函数被调用，然后新创建一个对象，并且成了函数的上下文（也就是此时函数内部的this是指向该新创建的对象，这意味着我们可以在构造器函数内部通过this参数初始化值），最后返回该新对象的引用\",\"详细请看：详解JavaScript中的new操作符。虽然是简简单单的两行代码，然而它们背后的关系却是错综复杂的，如下图所示：\",\"img\",\"看到这图别怕，让我们一步步剖析，彻底搞懂它们！\",\"图的说明：右下角为图例，红色箭头表示_ _ proto_ _ 属性指向、绿色箭头表示prototype属性的指向、棕色实线箭头表示本身具有的constructor属性的指向，棕色虚线箭头表示继承而来的constructor属性的指向；蓝色方块表示对象，浅绿色方块表示函数（这里为了更好看清，Foo()仅代表是函数，并不是指执行函数Foo后得到的结果，图中的其他函数同理）。图的中间部分即为它们之间的联系，图的最左边即为例子代码。\"]},\"51\":{\"h\":\"2. __ proto__ 属性\",\"t\":[\"首先，我们需要牢记两点：\",\"_ _ proto_ _ 和constructor属性是对象所独有的；\",\"prototype属性是函数所独有的。\",\"但是由于JS中函数也是一种对象，所以函数也拥有__proto__和constructor属性，这点是致使我们产生困惑的很大原因之一。上图有点复杂，我们把它按照属性分别拆开，然后进行分析：\",\"img\",\"第一，这里我们仅留下 _ _ proto_ _ 属性，它是对象所独有的，可以看到_ _ proto_ _ 属性都是由一个对象指向一个对象，即指向它们的原型对象（也可以理解为父对象），那么这个属性的作用是什么呢？它的作用就是当访问一个对象的属性时，如果该对象内部不存在这个属性，那么就会去它的_ _ proto_ _ 属性所指向的那个对象（可以理解为父对象）里找，如果父对象也不存在这个属性，则继续往父对象的_ _ proto_ _ 属性所指向的那个对象（可以理解为爷爷对象）里找，如果还没找到，则继续往上找…直到原型链顶端null（可以理解为原始人。。。），再往上找就相当于在null上取值，会报错（可以理解为，再往上就已经不是“人”的范畴了，找不到了，到此结束，null为原型链的终点），由以上这种通过_ _ proto_ _ 属性来连接对象直到null的一条链即为我们所谓的原型链。\",\"其实我们平时调用的字符串方法、数组方法、对象方法、函数方法等都是靠_ _ proto_ _ 继承而来的。\"]},\"52\":{\"h\":\"3. prototype属性\",\"t\":[\"第二，接下来我们看 prototype 属性：\",\"img\",\"prototype属性，别忘了一点，就是我们前面提到要牢记的两点中的第二点，它是函数所独有的，它是从一个函数指向一个对象。它的含义是函数的原型对象，也就是这个函数（其实所有函数都可以作为构造函数）所创建的实例的原型对象，由此可知：f1._ _ proto_ _ === Foo.prototype，它们两个完全一样。那prototype属性的作用又是什么呢？它的作用就是包含可以由特定类型的所有实例共享的属性和方法，也就是让该函数所实例化的对象们都可以找到公用的属性和方法。任何函数在创建的时候，其实会默认同时创建该函数的prototype对象。\"]},\"53\":{\"h\":\"4. constructor属性\",\"t\":[\"最后，我们来看一下 constructor 属性：\",\"img\",\"constructor属性也是对象才拥有的，它是从一个对象指向一个函数，含义就是指向该对象的构造函数，每个对象都有构造函数（本身拥有或继承而来，继承而来的要结合_ _ proto_ _ 属性查看会更清楚点，如下图所示），从上图中可以看出Function这个对象比较特殊，它的构造函数就是它自己（因为Function可以看成是一个函数，也可以是一个对象），所有函数和对象最终都是由Function构造函数得来，所以constructor属性的终点就是Function这个函数。\",\"img\",\"感谢网友的指出，这里解释一下上段中“每个对象都有构造函数”这句话。这里的意思是每个对象都可以找到其对应的constructor，因为创建对象的前提是需要有constructor，而这个constructor可能是对象自己本身显式定义的或者通过_ _ proto_ _ 在原型链中找到的。而单从constructor这个属性来讲，只有prototype对象才有。每个函数在创建的时候，JS会同时创建一个该函数对应的prototype对象，而函数创建的对象._ _ proto_ _ === 该函数.prototype，该函数.prototype.constructor===该函数本身，故通过函数创建的对象即使自己没有constructor属性，它也能通过_ _ proto_ _ 找到对应的constructor，所以任何对象最终都可以找到其构造函数（null如果当成对象的话，将null除外）。如下：\",\"img\"]},\"54\":{\"h\":\"5. 总结\",\"t\":[\"总结一下：\",\"我们需要牢记两点： ①_ _ proto_ _ 和constructor属性是对象所独有的； ② prototype属性是函数所独有的，因为函数也是一种对象，所以函数也拥有_ _ proto_ _ 和constructor属性。\",\"_ _ proto_ _ 属性的作用就是当访问一个对象的属性时，如果该对象内部不存在这个属性，那么就会去它的_ _ proto_ _ 属性所指向的那个对象（父对象）里找，一直找，直到__proto__属性的终点null，再往上找就相当于在null上取值，会报错。通过_ _ proto_ _ 属性将对象连接起来的这条链路即我们所谓的原型链。\",\"prototype属性的作用就是让该函数所实例化的对象们都可以找到公用的属性和方法，即f1._ _ proto_ _ === Foo.prototype。\",\"constructor属性的含义就是指向该对象的构造函数，所有函数（此时看成对象了）最终的构造函数都指向Function。\",\"本文就此结束了，希望对那些对JS中的prototype、_ _ proto_ _ 与constructor属性有困惑的同学有所帮助。\",\"最后，感谢这两篇博文，本文中的部分内容参考自这两篇博文：\",\"一张图理解prototype、proto和constructor的三角关系\",\"prototype和__proto__的关系是什么？\",\"小彩蛋：实现继承（相对完美、优雅）\",\"function inherit(Child, Parent) { // 继承原型上的属性 Child.prototype = Object.create(Parent.prototype) // 修复 constructor Child.prototype.constructor = Child // 存储超类 Child.super = Parent // 静态属性继承 if (Object.setPrototypeOf) { // setPrototypeOf es6 Object.setPrototypeOf(Child, Parent) } else if (Child.__proto__) { // __proto__ es6 引入，但是部分浏览器早已支持 Child.__proto__ = Parent } else { // 兼容 IE10 等陈旧浏览器 // 将 Parent 上的静态属性和方法拷贝一份到 Child 上，不会覆盖 Child 上的方法 for (var k in Parent) { if (Parent.hasOwnProperty(k) && !(k in Child)) { Child[k] = Parent[k] } } } }\",\"原文地址\",\"https://blog.csdn.net/cc18868876837/article/details/81211729\"]},\"55\":{\"h\":\"\"},\"56\":{\"h\":\"JS判断两个时间戳是否为同一天\",\"t\":[\"const is_same_day = function(t) { return new Date(t).toDateString() === new Date().toDateString(); }\"]},\"57\":{\"h\":\"\"},\"58\":{\"h\":\"如何提高github的搜索效率\",\"t\":[\"in:name xx1 xx2 搜素项目名\",\"in:readme xx1 xx2 搜素项目readme\",\"in:description xx1 xx2 搜素项目描述\",\"stars:>5000 star数超过5000\",\"pushed:>2020-01-01 最后一次提交时间大于2020-01-01\",\"language:java 编程语言\",\"forks:>10000 fork数超过10000\",\"size:>=5000 按仓库大小搜索（大于5000k）\",\"user:xxx 按作者名搜索\",\"注：搜素的方式可以组合\",\"更多高级搜索\",\"https://github.com/search/advanced\"]},\"59\":{\"h\":\"\"},\"60\":{\"h\":\"如何提高GitHub 克隆的速度\",\"t\":[\"image-20210615155535040\",\"image-20210615155635061\",\"image-20210615155654671\"]},\"61\":{\"h\":\"\"},\"62\":{\"h\":\"增加自定义操作\",\"t\":[\"撤销所有变化\",\"找一个目录，新建一个bat文件，内容:\",\"cd %1 && git checkout . && git clean -df\",\"sourceTree中打开编辑 - 选项 - 自定义操作 - 添加\",\"菜单标题：撤销所有变化\",\"运行的脚本：将刚刚新建的bat文件路径填入\",\"参数：$REPO\"]},\"63\":{\"h\":\"\"},\"64\":{\"h\":\"匹配规则\",\"t\":[\"空格不匹配任意文件，可作为分隔符，可用反斜杠转义\",\"# 开头的模式标识注释，可以使用反斜杠进行转义\",\"! 开头的模式标识否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用 ! 也不会再次被包含。可以使用反斜杠进行转义\",\"/ 结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件\",\"/ 开始的模式匹配项目跟目录\",\"如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容，如果该模式不在 .gitignore 文件中，则相对于项目根目录\",\"**匹配多级目录，可在开始，中间，结束\",\"?通用匹配单个字符\",\"[]通用匹配单个字符列表\"]},\"65\":{\"h\":\"常用匹配示例\",\"t\":[\"bin/: 忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件\",\"/bin: 忽略根目录下的bin文件\",\"/*.c: 忽略 cat.c，不忽略 build/cat.c\",\"debug/*.obj: 忽略 debug/io.obj，不忽略 debug/common/io.obj 和 tools/debug/io.obj\",\"**/foo: 忽略/foo, a/foo, a/b/foo等\",\"a/**/b: 忽略a/b, a/x/b, a/x/y/b等\",\"!/bin/run.sh: 不忽略 bin 目录下的 run.sh 文件\",\"*.log: 忽略所有 .log 文件\",\"config.php: 忽略当前路径的 config.php 文件\",\"/fd1/*:说明：忽略根目录下的 /fd1/ 目录的全部内容；\",\"在项目目录下建立\\\".gitignore\\\"文件，此文件有如下规则\",\"# 匹配示例 # #注释 logs/ # 忽略当前路径下的logs目录，包含logs下的所有子目录和文件 /logs.txt # 忽略根目录下的logs.txt文件 *.class # 忽略所有后缀为.class的文件 !/classes/a.class # 不忽略classes目录下的a.class文件 tmp/*.txt # 只忽略tmp目录下的.txt文件 **/foo # 可以忽略/foo, a/foo, a/b/foo等\",\"各语言忽略文件参考\",\"https://github.com/github/gitignore\"]},\"66\":{\"h\":\"\"},\"67\":{\"h\":\"Git 各仓库图\",\"t\":[\"image-20201115220419827\"]},\"68\":{\"h\":\"配置用户信息\",\"t\":[\"perl 代码解读复制代码# 配置用户名 git config --global user.name \\\"yourname\\\" # 配置用户邮箱 git config --global user.email \\\"youremail@xxx.com\\\" # 查看当前的配置信息 git config --global --list # 通过 alias 配置简写 ## 例如使用 git co 代替 git checkout git config --global alias.co checkout\"]},\"69\":{\"h\":\"ssh key\",\"t\":[\"向远端仓库提交代码时，需要在远端仓库添加本地生成的 ssh key。\",\"生成本地 ssh key，若已有直接到第 2 步:\",\"ssh-keygen -t rsa -C \\\"youremail@xxx.com\\\"\",\"查看本地 ssh key:\",\"cat ~/.ssh/id_rsa.pub\",\"将 ssh key 粘贴到远端仓库：\",\"image.png\"]},\"70\":{\"h\":\"本地搭建\",\"t\":[\"git init 初始化 git remote add origin git@115.159.38.240:lmb0989/test.git\"]},\"71\":{\"h\":\"远程克隆\",\"t\":[\"# 克隆远端仓库到本地 git clone <git url> # 克隆远端仓库到本地，并同时切换到指定分支 branch1 git clone <git url> -b branch1 # 克隆远端仓库到本地并指定本地仓库的文件夹名称为 my-project git clone <git url> my-project\"]},\"72\":{\"h\":\"git remote: 关联远程仓库\",\"t\":[\"git remote 用于将本地仓库与远程仓库关联\",\"# 查看远程仓库 git remote -v # 关联本地 git init 到远程仓库 git remote add origin <git url> # 新增其他上游仓库 git remote add <git url> # 移除与远程仓库的管理 git remote remove <git url> # 修改推送源 git remote set-url origin <git url>\"]},\"73\":{\"h\":\"git add: 提交到暂存区\",\"t\":[\"# 将所有修改的文件都提交到暂存区 git add . # 将修改的文件中的指定的文件 a.js 和 b.js 提交到暂存区 git add ./a.js ./b.js # 将 js 文件夹下修改的内容提交到暂存区 git add ./js\"]},\"74\":{\"h\":\"git commit: 提交到本地仓库\",\"t\":[\"# 将工作区内容提交到本地仓库，并添加提交信息 your commit message git commit -m \\\"your commit message\\\" # 将工作区内容提交到本地仓库，并对上一次 commit 记录进行覆盖 ## 例如先执行 git commit -m \\\"commit1\\\" 提交了文件a，commit_sha为hash1；再执行 git commit -m \\\"commit2\\\" --amend 提交文件b，commit_sha为hash2。最终显示的是a，b文件的 commit 信息都是 \\\"commit2\\\"，commit_sha都是hash2 git commit -m \\\"new message\\\" --amend # 将工作区内容提交到本地仓库，并跳过 commit 信息填写 ## 例如先执行 git commit -m \\\"commit1\\\" 提交了文件a，commit_sha为hash1；再执行 git commit --amend --no-edit 提交文件b，commit_sha为hash2。最终显示的是a，b文件的 commit 信息都是 \\\"commit1\\\"，commit_sha都是hash1 git commit --amend --no-edit # 跳过校验直接提交，很多项目配置 git hooks 验证代码是否符合 eslint、husky 等规则，校验不通过无法提交 ## 通过 --no-verify 可以跳过校验（为了保证代码质量不建议此操作QwQ） git commit --no-verify -m \\\"commit message\\\" # 一次性从工作区提交到本地仓库，相当于 git add . + git commit -m git commit -am\"]},\"75\":{\"h\":\"git push: 提交到远程仓库\",\"t\":[\"# 将当前本地分支 branch1 内容推送到远程分支 origin/branch1 git push # 若当前本地分支 branch1，没有对应的远程分支 origin/branch1，需要为推送当前分支并建立与远程上游的跟踪 git push --set-upstream origin branch1 # 强制提交 ## 例如用在代码回滚后内容 git push -f\"]},\"76\":{\"h\":\"git pull: 拉取远程仓库并合并\",\"t\":[\"git pull 会拉取远程仓库并合并到本地仓库，相当于执行 git fetch + git merge\",\"# 若拉取并合并的远程分支和当前本地分支名称一致 ## 例如当前本地分支为 branch1，要拉取并合并 origin/branch1，则直接执行： git pull # 若拉取并合并的远程分支和当前本地分支名称不一致 git pull <远程主机名> <分支名> ## 例如当前本地分支为 branch2，要拉取并合并 origin/branch1，则执行： git pull git@github.com:zh-lx/git-practice.git branch1 # 使用 rebase 模式进行合并 git pull --rebase\"]},\"77\":{\"h\":\"git checkout: 切换分支\",\"t\":[\"# 切换到已有的本地分支 branch1 git checkout branch1 # 切换到远程分支 branch1 git checkout origin/branch1 # 基于当前本地分支创建一个新分支 branch2，并切换至 branch2 git checkout -b branch2 # 基于远程分支 branch1 创建一个新分支 branch2，并切换至 branch2 git checkout origin/branch1 -b branch2 ## 当前创建的 branch2 关联的上游分支是 origin/branch1，所以 push 时需要如下命令关联到远程 branch2 git push --set-upstream origin branch2 # 撤销工作区 file 内容的修改。危险操作，谨慎使用 git checkout -- <file> # 撤销工作区所有内容的修改。危险操作，谨慎使用 git checkout .\"]},\"78\":{\"h\":\"还原所有的修改\",\"t\":[\"# 修改的文件被还原，新添加的文件也会被删除 git checkout . && git clean -df\"]},\"79\":{\"h\":\"git restore: 取消缓存\",\"t\":[\"git restore 用于将改动从暂存区退回工作区\",\"# 将 a.js 文件取消缓存（取消 add 操作，不改变文件内容） git reset --staged a.js # 将所有文件取消缓存 git reset --staged .\"]},\"80\":{\"h\":\"git reset: 回滚代码\",\"t\":[\"git reset 用于撤销各种 commit 操作，回滚代码\",\"# 将某个版本的 commit 从本地仓库退回到工作区（取消 commit 和 add 操作，不改变文件内容） ## 默认不加 -- 参数时时 mixed git reset --mixed <commit_sha> # 将某个版本的 commit 从本地仓库退回到缓存区（取消 commit 操作，不取消 add，不改变文件内容） git reset --soft <commit_sha> # 取消某次 commit 的记录（取消 commit 和 add，且改变文件内容） git reset --hard <commit_sha> ## 以上三种操作退回了 commit，都是退回本地仓库的 commit，没有改变远程仓库的 commit。通常再次修改后配合如下命令覆盖远程仓库的 commit： git push -f\"]},\"81\":{\"h\":\"git revert: 取消某次 commit 内容\",\"t\":[\"git revert 相比于 git reset，会取消某次 commit 更改的内容，但是不会取消掉 commit 记录，而是进行一次新的 commit 去覆盖要取消的那次 commit\",\"# 取消某次 commit 内容，但是保留 commit 记录 git revert <commit-sha>\"]},\"82\":{\"h\":\"git stash：缓存代码\",\"t\":[\"git stash 用于将当前的代码缓存起来，而不必提交，便于下次取出\",\"# 把本地的改动缓存起来 git stash # 缓存代码时添加备注，便于查找。强烈推荐 git stash save \\\"message\\\" # 查看缓存记录 ## eg: stash@{0}: On feat-1.1: 活动功能 git stash list # 取出上一次缓存的代码，并删除这次缓存 git stash pop # 取出 index 为2缓存代码，并删除这次缓存，index 为对应 git stash list 所列出来的 git stash pop stash@{2} # 取出上一次缓存的代码，但不删除这次缓存 stash apply # 取出 index 为2缓存代码，但不删除缓存 git stash apply stash@{2} # 清除某次的缓存 git stash drop stash@{n} # 清除所有缓存 git stash clear\"]},\"83\":{\"h\":\"git cherry-pick: 合并指定 commit\",\"t\":[\"git cherry-pick 可以选择某次 commit 的内容合并到当前分支\",\"# 将 commit-sha1 的变动合并至当前分支 git cherry-pick commit-sha1 # 将多次 commit 变动合并至当前分支 git cherry-pick commit-sha1 commit-sha2 # 将 commit-sha1 到 commit-sha5 中间所有变动合并至当前分支，中间使用.. git cherry-pick commit-sha1..commit-sha5 # pick 时解决冲突后继续 pick git cherry-pick --continue： # 多次 pick 时跳过本次 commit 的 pick 进入下一个 commit 的 pick git cherry-pick --skip # 完全放弃 pick，恢复 pick 之前的状态 git cherry-pick --abort # 未冲突的 commit 自动变更，冲突的不要，退出这次 pick git cherry-pick --quit\"]},\"84\":{\"h\":\"版本历史\",\"t\":[\"git status [filename] # 查看指定文件状态 git status # 查看所有文件状态 # 查看版本 git log # 最完整的版本历史信息 git log --pretty=online # 简洁的显示方式 git log --oneline # 更加简洁的显示方式 git reflog # 带版本索引hash值的简洁显示方式 # 前进和回退 # 先执行git reflog显示出版本索引hash值 git reset --sort 版本索引hash值/HEAD # 只修改版本库中的HEAD指向 git reset --mixed 版本索引hash值/HEAD # 修改版本库和缓存区的HEAD指向 git reset --hard 版本索引hash值/HEAD # 同时修改版本库、缓存区和工作区的HEAD指向\"]},\"85\":{\"h\":\"git diff: 对比差异\",\"t\":[\"# 当工作区有变动，暂存区无变动，对比工作区和本地仓库间的代码差异 # 当工作区有变动和暂存区都有变动，对比工作区和暂存区的代码差异 git diff # 显示暂存区和本地仓库间的代码差异 git diff --cached # or git diff --staged # 显示两个分支之间代码差异 git diff <分支名1> <分支名2> git diff [filename] # 将工作区的文件和缓存区进行比较 git diff [版本索引hash值/HEAD] [filename] # 将工作区的文件和版本库进行比较（不加[filename]将比较多个文件）\"]},\"86\":{\"h\":\"git fetch: 获取更新\",\"t\":[\"git fetch 用于本地仓库获取远程仓库的更新，不会 merge 到工作区\",\"# 获取远程仓库特定分支的更新 git fetch <远程主机名> <分支名> # 获取远程仓库所有分支的更新 git fetch --all\"]},\"87\":{\"h\":\"分支\",\"t\":[\"image-20201121174027323\",\"#查看分支列表 git branch -v # 列出本地所有分支 git branch -r # 列出所有远程的分支 # 新建分支 git branch [branch-name] # 新建一个分支（但依然停留在当前分支） git checkout [branch-name] # 切换到对应分支 git checkout -b [branch] # 上面两个命令的整合：新建一个分支，并切换到该分支 # 合并分支 # 先切回要和合并的分支线上 git checkout [branch-name] git merge [branch-name] # 合并指定分支到当前分支 # 删除分支 git branch -d [branch-name] git push origin --delete [branch-name] # 删除远程分支 git branch -dr [remote/branch]\"]},\"88\":{\"h\":\"其他\",\"t\":[\"解决 git 拉取代码需要输入密码问题\",\"执行 git config --global credential.helper store，在~/.gitconfig 目录下会多出一个文件，这里会记录你的密码和帐号\",\"再执行 git pull 输入一次正确的帐号密码之后就不用再输入了。\"]},\"89\":{\"h\":\"总结\",\"t\":[\"未命名文件 (6).png\"]},\"90\":{\"h\":\"\"},\"91\":{\"h\":\"查看配置\",\"t\":[\"git config -l 查看项目中的配置 git config --system -l 查看系统配置 git config --global -l 查看用户全局配置\"]},\"92\":{\"h\":\"Git相关的配置文件\",\"t\":[\"/git安装路径/etc/gitconfig Git安装目录下的gitConfig --system系统级 C:\\\\User\\\\Administrator\\\\.gitconfig 只适用于当前登录用户的配置 --global全局\"]},\"93\":{\"h\":\"配置用户名和邮箱\",\"t\":[\"git config --global user.name \\\"username\\\" git config --global user.email xxx@xx.com 不加--global则为项目配置\"]},\"94\":{\"h\":\"配置SSH\",\"t\":[\"#进入C:\\\\User\\\\用户名\\\\.ssh 目录 #生成公钥 ssh-keygen\"]},\"95\":{\"h\":\"\",\"t\":[\"#!/bin/bash -l # 显式加载 nvm export NVM_DIR=\\\"/Users/qingker/.nvm\\\" [ -s \\\"$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"$NVM_DIR/nvm.sh\\\" # 验证环境 echo \\\"当前 Node 版本: $(node -v)\\\" echo \\\"nvm 可用版本: $(nvm ls)\\\" echo \\\"全局包列表: $(npm ls -g --depth 0)\\\" # 强制使用指定版本 nvm use v16.17.1 --silent # 执行脚本 export FORCE_COLOR=1 cd /Users/qingker/Workspace/ProjecBuilder/src/Project/Sword2_CN/Client/ echo \\\"开始构建\\\" npx ts-node Build.ts vivo echo \\\"构建结束\\\"\"]},\"96\":{\"h\":\"\"},\"97\":{\"h\":\"文件&目录\",\"t\":[\"pwd: # 显示当前路径 ls: # 列出当前目录所有文件 ll: # 类似于ls，列出文件的同时，显示文件详细信息 touch: # 新建文件 mkdir: # 新建目录 rm: # 删除文件 rm -r: # 删除文件夹 mv： # 移动文件夹（） reset: # 重新初始化终端 clear: # 清屏 histroy: # 查看命令历史 #： # 注释 tar cvzf output.tar.gz file1 file2 file3.... # 打压缩包 sz file # 下载文件 rz # 上传文件\"]},\"98\":{\"h\":\"多屏显示控制方式\",\"t\":[\"空格 # 向下翻页 b # 向上翻页 q # 退出\"]},\"99\":{\"h\":\"查看进程\",\"t\":[\"ps -ef | grep python lsof -i:xxx\"]},\"100\":{\"h\":\"\"},\"101\":{\"h\":\"URL模块\",\"t\":[\"const url = require(\\\"url\\\"); let api = \\\"http://www.xx.com?name=zhangsan&age=20\\\"; url.parse(api)\"]},\"102\":{\"h\":\"npm常用命令\",\"t\":[\"添加用户：\",\"npm adduser\",\"添加镜像：\",\"npm config set registry https://registry.npm.taobao.org\",\"恢复镜像：\",\"npm config delete registry 或 npm config edit（手动删除）\",\"安装：\",\"a. 命令：\",\"npm -g install 包名 # 全局安装 npm install # 根据package.json文件安装 npm install 包名 # 本地安装，在npm运行目录下安装 npm install 包名@1.x # 安装指定版本\",\"b. package.json文件：\",\"{ \\\"name\\\": \\\"orderlee\\\", \\\"dependencies\\\": { \\\"ejs\\\": \\\"^0.0.2\\\", // ^表示第一位版本号不变，后面两位取最新的 \\\"ejs\\\": \\\"~0.0.2\\\", // ~表示前两位不变，最后一个取最新的 \\\"ejs\\\": \\\"*0.0.2\\\" // *表示全部取最新 } }\",\"卸载：\",\"npm uninstall 包名\",\"更新：\",\"npm -g update 包名 # 全局更新 npm update 包名 # 本地更新\",\"查看已安装的模块：\",\"npm ls\",\"生成符号链接：\",\"# 1、在本地安装好的模块中，运行（添加本地模块到全局链接）： npm link # 2、在要使用的本地目录中，运行（从全局中获取链接）： npm link 模块名\",\"执行脚本：\",\"npm run # 在package.json的scripts中定义的脚本命令\",\"登录：\",\"npm login\",\"发布包：\",\"npm init npm publish\",\"撤销发布：\",\"npm -f unpublish dollarphpajax@*\"]},\"103\":{\"h\":\"\",\"t\":[\"Miniconda 命令：\",\"创建虚拟环境：\",\"bashCopy code conda create -n myenv python=3.8\",\"这个命令用于创建一个名为 myenv 的新虚拟环境，并安装 Python 3.8 版本。\",\"激活虚拟环境：\",\"bashCopy code conda activate myenv\",\"这个命令用于激活名为 myenv 的虚拟环境，进入该环境后，所有的 Python 和包命令都将在该环境中执行。\",\"停用虚拟环境：\",\"bashCopy code conda deactivate\",\"这个命令用于停用当前的虚拟环境。\",\"列出所有虚拟环境：\",\"bashCopy code conda env list\",\"这个命令用于列出所有已创建的虚拟环境。\",\"安装包：\",\"bashCopy code conda install package_name\",\"这个命令用于安装指定的 Python 包，可以指定包名，也可以指定版本号。\",\"升级包：\",\"bashCopy code conda update package_name\",\"这个命令用于升级指定的 Python 包到最新版本。\",\"删除包：\",\"bashCopy code conda remove package_name\",\"这个命令用于删除指定的 Python 包。\",\"搜索包：\",\"bashCopy code conda search search_term\",\"这个命令用于搜索符合搜索条件的 Python 包。\",\"列出已安装的包：\",\"bashCopy code conda list\",\"这个命令用于列出当前虚拟环境中已安装的所有包。\",\"导出环境：\",\"bashCopy code conda env export > environment.yaml\",\"这个命令用于导出当前虚拟环境的环境配置到一个 YAML 文件中。\",\"这些是一些常用的 Anaconda 或 Miniconda 命令，它们使你可以轻松地管理 Python 环境和包。你可以使用 conda --help 命令来查看所有可用的命令和选项。\"]},\"104\":{\"h\":\"\"},\"105\":{\"h\":\"Partial\",\"t\":[\"所有属性设置为可选\",\"interface User { name: string; age: number; email: string; } // { name?: string; age?: number; email?: string; } type Result = Partial<User>\"]},\"106\":{\"h\":\"Required\",\"t\":[\"所有属性设置为必选\",\"interface User { name?: string; age?: number; email?: string; } // { name: string; age: number; email: string; } type Result = Required<User>\"]},\"107\":{\"h\":\"Readonly\",\"t\":[\"所有属性设置为只读\",\"interface User { name: string; age: number; email: string; } // { readonly name: string; readonly age: number; readonly email: string; } type Result = Readonly<User>\"]},\"108\":{\"h\":\"Pick\",\"t\":[\"用于从给定类型中选择指定的属性\",\"interface User { name: string; age: number; email: string; address: string; } // { name: string; age: number; } type Result = Pick<User, \\\"name\\\" | \\\"age\\\">;\"]},\"109\":{\"h\":\"Record\",\"t\":[\"返回一个具有指定属性类型的对象类型\",\"type Fruit = \\\"apple\\\" | \\\"banana\\\" | \\\"orange\\\"; // { apple: number; banana: number; orange: number; } type fruitPrices = Record<Fruit, number>;\"]},\"110\":{\"h\":\"Exclude\",\"t\":[\"用于从一个联合类型中排除指定的类型\",\"type Fruit = \\\"apple\\\" | \\\"banana\\\" | \\\"orange\\\"; // \\\"banana\\\" | \\\"orange\\\" type fruitExclude = Exclude<Fruit, \\\"apple\\\">;\"]},\"111\":{\"h\":\"Extract\",\"t\":[\"用于从一个联合类型中提取指定的类型\",\"type Animal = \\\"dog\\\" | \\\"cat\\\" | \\\"bird\\\" | \\\"monkey\\\"; // \\\"cat\\\" | \\\"bird\\\" type ExtractBird = Extract<Animal, \\\"cat\\\" | \\\"bird\\\">;\"]},\"112\":{\"h\":\"Omit\",\"t\":[\"用于从一个对象类型中排除指定的属性\",\"type Person = { name: string; age: number; gender: string; }; // { name: string; gender: string; } type OmitAge = Omit<Person, \\\"age\\\">;\"]},\"113\":{\"h\":\"NonNullable\",\"t\":[\"从一个类型中排除 null 和 undefined\",\"type NullableString = string | null | undefined | boolean; // string | boolean type NonNullableString = NonNullable<NullableString>;\"]},\"114\":{\"h\":\"Parameters\",\"t\":[\"它用于获取函数的参数类型\",\"它接受一个函数作为参数，并返回一个元组类型，其中包含了函数的每个参数类型\",\"function greet(name: string, age: number): void { console.log(`Hello, ${name}! You are ${age} years old.`); } // [string, number] type GreetParams = Parameters<typeof greet>;\"]},\"115\":{\"h\":\"ConstructorParameters\",\"t\":[\"用于获取构造函数的参数类型\",\"返回一个元组类型，该元组类型包含了构造函数的参数类型\",\"class Person { constructor(name: string, age: number) { // constructor implementation } } // [string, number] type PersonConstructorParams = ConstructorParameters<typeof Person>;\"]},\"116\":{\"h\":\"ReturnType\",\"t\":[\"用于获取函数的返回值类型\",\"它接受一个函数类型作为参数，并返回该函数的返回值类型\",\"function add(a: number, b: number): {a: string, b: number} { return {a: a.toString(), b}; } // { a: string; b: number; } type AddResult = ReturnType<typeof add>;\"]},\"117\":{\"h\":\"InstanceType\",\"t\":[\"用于获取构造函数的实例类型。\",\"接受一个构造函数类型作为参数，并返回该构造函数类型的实例类型\",\"class Person { name: string; age: number; constructor(name: string, age: number) { this.name = name; this.age = age; } } // Person type PersonInstance = InstanceType<typeof Person>;\"]},\"118\":{\"h\":\"Uppercase\",\"t\":[\"用于将字符串类型的字母转换为大写\",\"type Fruit = \\\"apple\\\" | \\\"banana\\\" | \\\"orange\\\"; // \\\"APPLE\\\" | \\\"BANANA\\\" | \\\"ORANGE\\\" type FruitUppercase = Uppercase<Fruit>;\"]},\"119\":{\"h\":\"Lowercase\",\"t\":[\"用于将字符串类型的字母转换为小写\",\"type Fruit = \\\"APPLE\\\" | \\\"BANANA\\\" | \\\"ORANGE\\\"; // \\\"apple\\\" | \\\"banana\\\" | \\\"orange\\\" type FruitLowercase = Lowercase<Fruit>;\"]},\"120\":{\"h\":\"Capitalize\",\"t\":[\"用于将字符串的首字符转换为大写\",\"type Fruit = \\\"apple\\\" | \\\"banana\\\" | \\\"orange\\\"; // \\\"Apple\\\" | \\\"Banana\\\" | \\\"Orange\\\" type FruitCapitalize = Capitalize<Fruit>;\"]},\"121\":{\"h\":\"Uncapitalize\",\"t\":[\"用于将字符串的首字符转换为小写\",\"type A = \\\"ClientStart\\\" | \\\"MoreBtn\\\" | \\\"SkillBtn\\\"; // \\\"clientStart\\\" | \\\"moreBtn\\\" | \\\"skillBtn\\\" type B = Uncapitalize<A>;\"]},\"122\":{\"h\":\"\",\"t\":[\"1：安装ts: npm install -g typescript\",\"2：安装直接运行所需依赖包： npm install -g ts-node\",\"3：在设置中安装安装插件后重启\",\"img\",\"img\"]},\"123\":{\"h\":\"\",\"t\":[\"image-20210301120506715\",\"image-20210301120545729\"]},\"124\":{\"h\":\"1.使用@type\",\"t\":[\"在 Typescript 2.0 之后，TypeScript 将会默认的查看 ./node_modules/@types 文件夹，自动从这里来获取模块的类型定义，当然了，你需要独立安装这个类型定义。比如：\",\"npm install --save @types/core-js npm install --save-dev @types/node\",\"对于内建模块，安装一个@types/node模块可以整体解决模块的声明文件问题。那么，对于浩如烟海的第三方模块，该怎么办呢？官方和社区中也提供了查找和安装的渠道：\",\"typings\",\"DefinitelyTyped\",\"TypeSearch\",\"已弃用\"]},\"125\":{\"h\":\"安装\",\"t\":[\"cnpm i typings -g\"]},\"126\":{\"h\":\"初始化\",\"t\":[\"typings init\"]},\"127\":{\"h\":\"搜索模块\",\"t\":[\"typings search module\"]},\"128\":{\"h\":\"查找模块\",\"t\":[\"typings search --name module\"]},\"129\":{\"h\":\"安装模块\",\"t\":[\"typings install module --save\"]},\"130\":{\"h\":\"使用数据源为dt安装\",\"t\":[\"typings install dt~module --global --save 其他数据源安装 typings install env~module --global --save typings install npm~module --save\",\"数据源\",\"npm - dependencies from NPM github - dependencies directly from GitHub (E.g. Duo, JSPM) bower - dependencies from Bower common - \\\"standard\\\" libraries without a known \\\"source\\\" shared - shared library functionality lib - shared environment functionality (mirror of shared) (--global) env - environments (E.g. atom, electron) (--global) global - global (window.<var>) libraries (--global) dt - typings from DefinitelyTyped (usually --global)\"]},\"131\":{\"h\":\"显示所有引用\",\"t\":[\"cat typings/index.d.ts\",\"http://microsoft.github.io/TypeSearch/)\"]},\"132\":{\"h\":\"\"},\"133\":{\"h\":\"安装\",\"t\":[\"npm install -g typescript\"]},\"134\":{\"h\":\"命令\",\"t\":[\"查看版本 tsc -v\"]},\"135\":{\"h\":\"配置tsconfig.json\"},\"136\":{\"h\":\"生成tsconfig.json文件\",\"t\":[\"tsc --init\"]},\"137\":{\"h\":\"配置详解\",\"t\":[\"{ \\\"compilerOptions\\\": { \\\"allowUnreachableCode\\\": true, // 不报告执行不到的代码错误。 \\\"allowUnusedLabels\\\": false, // 不报告未使用的标签错误 \\\"alwaysStrict\\\": false, // 以严格模式解析并为每个源文件生成 \\\"use strict\\\"语句 \\\"baseUrl\\\": \\\".\\\", // 工作根目录 \\\"experimentalDecorators\\\": true, // 启用实验性的ES装饰器 \\\"jsx\\\": \\\"react\\\", // 在 .tsx文件里支持JSX \\\"sourceMap\\\": true, // 是否生成map文件 \\\"module\\\": \\\"commonjs\\\", // 指定生成哪个模块系统代码 \\\"noImplicitAny\\\": false, // 是否默认禁用 any \\\"removeComments\\\": true, // 是否移除注释 \\\"types\\\": [ //指定引入的类型声明文件，默认是自动引入所有声明文件，一旦指定该选项，则会禁用自动引入，改为只引入指定的类型声明文件，如果指定空数组[]则不引用任何文件 \\\"node\\\", // 引入 node 的类型声明 ], \\\"paths\\\": { // 指定模块的路径，和baseUrl有关联，和webpack中resolve.alias配置一样 \\\"src\\\": [ //指定后可以在文件之直接 import * from 'src'; \\\"./src\\\" ], }, \\\"target\\\": \\\"ESNext\\\", // 编译的目标是什么版本的 \\\"outDir\\\": \\\"./dist\\\", // 输出目录 \\\"declaration\\\": true, // 是否自动创建类型声明文件 \\\"declarationDir\\\": \\\"./lib\\\", // 类型声明文件的输出目录 \\\"allowJs\\\": true, // 允许编译javascript文件。 \\\"lib\\\": [ // 编译过程中需要引入的库文件的列表 \\\"es5\\\", \\\"es2015\\\", \\\"es2016\\\", \\\"es2017\\\", \\\"es2018\\\", \\\"dom\\\" ] }, // 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件） \\\"include\\\": [ \\\"src/**/*\\\" ], // 指定一个排除列表（include的反向操作） \\\"exclude\\\": [ \\\"demo.ts\\\" ], // 指定哪些文件使用该配置（属于手动一个个指定文件） \\\"files\\\": [ \\\"demo.ts\\\" ] }\"]},\"138\":{\"h\":\"编译\",\"t\":[\"tsc //编译(一次性编译) tsc xxx.ts tsc -watch //编译并监视(每次保存待编译文件都会自动更新编译文件)\"]},\"139\":{\"h\":\"配置自动编译ts文件\",\"t\":[\"VSCode配置\",\"点击终端 -> 运行任务\",\"配置VSCode自动编译ts文件1\",\"点击typescript\",\"配置VSCode自动编译ts文件2\",\"点击监视\",\"配置VSCode自动编译ts文件3\",\"webstorm配置\",\"image-20201108200919194\"]},\"140\":{\"h\":\"\",\"t\":[\"如何给WPS的切换工作表设置快捷键\",\"选项 -> 自定义功能区 -> 自定义键盘 -> 搜索sheet -> 选择ShowSheetDialog\"]},\"141\":{\"h\":\"\",\"t\":[\"image-20250430154850256\"]},\"142\":{\"h\":\"几种常见的加密技术介绍\"},\"143\":{\"h\":\"对称加密\"},\"144\":{\"h\":\"DES\",\"t\":[\"数据加密标准，速度较快，适用于加密大量数据的场合\",\"以64位为分组对数据加密，它的密钥长度是56位，加密解密用同一算法。DES加密算法是对密钥进行保密，而公开算法，包括加密和解密算法。这样，只有掌握了和发送方相同密钥的人才能解读由DES加密算法]加密的密文数据。因此，破译DES加密算法实际上就是搜索密钥的编码。对于56位长度的密钥来说，如果用穷举法来进行搜索的话，其运算次数为256\"]},\"145\":{\"h\":\"3DES\",\"t\":[\"基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高\"]},\"146\":{\"h\":\"AES\",\"t\":[\"高级加密标准，是下一代的加密算法标准，速度快，安全级别高\",\"该加密算法采用对称分组密码体制，密钥长度的最少支持为128、192、256，分组长度128位，算法应易于各种硬件和软件实现。这种加密算法是美国联邦政府采用的区块加密标准，这个标准用来替代原先的DES，已经被多方分析且广为全世界所使用。\",\"AES与3DES的比较\",\"AES与3DES对比\"]},\"147\":{\"h\":\"非对称加密\"},\"148\":{\"h\":\"RSA\",\"t\":[\"由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的\"]},\"149\":{\"h\":\"DSA\",\"t\":[\"数字签名算法，是一种标准的 DSS（数字签名标准）\"]},\"150\":{\"h\":\"ECC\",\"t\":[\"椭圆曲线密码编码学\"]},\"151\":{\"h\":\"散列算法\",\"t\":[\"散列是信息的提炼，通常其长度要比信息小得多，且为一个固定长度。加密性强的散列一定是不可逆的，这就意味着通过散列结果，无法推出任何部分的原始信息。任何输入信息的变化，哪怕仅一位，都将导致散列结果的明显变化，这称之为雪崩效应。散列还应该是防冲突的，即找不出具有相同散列结果的两条信息。具有这些特性的散列结果就可以用于验证信息是否被修改。 单向散列函数一般用于产生消息摘要，密钥加密等\"]},\"152\":{\"h\":\"MD5\",\"t\":[\"是RSA数据安全公司开发的一种单向散列算法，非可逆，相同的明文产生相同的密文\"]},\"153\":{\"h\":\"SHA\",\"t\":[\"可以对任意长度的数据运算生成一个160位的数值\"]},\"154\":{\"h\":\"总结\",\"t\":[\"如果是 RSA建议采用1024位的数字，ECC建议采用160位，AES采用128为即可\"]},\"155\":{\"h\":\"\"},\"156\":{\"h\":\"Postman使用详解\"},\"157\":{\"h\":\"一、Postman背景介绍\",\"t\":[\"用户在开发或者调试网络程序或者是网页B/S模式的程序的时候是需要一些方法来跟踪网页请求的，用户可以使用一些网络的监视工具比如著名的Firebug等网页调试工具。今天给大家介绍的这款网页调试工具不仅可以调试简单的css、html、脚本等简单的网页基本信息，它还可以发送几乎所有类型的HTTP请求！Postman在发送网络HTTP请求方面可以说是Chrome插件类产品中的代表产品之一。\"]},\"158\":{\"h\":\"二、Postman的操作环境\",\"t\":[\"postman适用于不同的操作系统，Postman Mac、Windows X32、Windows X64、Linux系统，还支持postman 浏览器扩展程序、postman chrome应用程序等。\",\"Postman使用参考文档：\",\"1.官方英文文档 2.chrome插件整理的 postman中文使用教程\"]},\"159\":{\"h\":\"三、Postman下载安装\",\"t\":[\"1> 、postman下载地址：\",\"1.Postman for MAC\",\"2.Postman for windows X64\",\"3.Postman for windows X86\",\"4.Postman for linux X64\",\"5.Postman for Linux X86\",\"2>. Postman官网下载地址：\",\"https://www.getpostman.com/apps\",\"3.Postman安装\",\"postman的安装方法分好几种，按照我们上文介绍的那样，我们分为三种安装模式介绍：\",\"1、chrome浏览器postman 插件安装\",\"postman谷歌浏览器的安装插件，所以说它的使用前提是你的电脑上得安装谷歌浏览器才行，在安装了谷歌浏览器后还需要在谷歌网上应用店中下载所需要的Postman插件，该插件的下载方式如下：\",\"在这里插入图片描述\",\"不能访问google 应用上商店的朋友 可以 参考这里， 或者下载客户端版本\",\"2.Postman电脑客户端安装 1\",\"1).macOS安装 一旦你下载的应用程序，你可以拖动文件到“应用程序”文件夹。 双击Postman打开应用程序。\",\"2).Windows安装 下载安装文件 运行安装程序 3). Linux安装 我没有试过，但是找了一些参考资料( 有兴趣的朋友可以自行实验) ubuntu安装postman: https://blog.csdn.net/qianmosolo/article/details/79353632 Ubuntu16.04上安装Postman应用程序: https://blog.bluematador.com/posts/postman-how-to-install-on-ubuntu-1604/?utm_source=hootsuite&utm_medium=twitter&utm_campaign=\"]},\"160\":{\"h\":\"四、Postman的基础功能\",\"t\":[\"这里写图片描述\"]},\"161\":{\"h\":\"五、接口请求流程\",\"t\":[\"1. GET 请求 GET请求：点击Params，输入参数及value，可输入多个，即时显示在URL链接上， 所以，GET请求的请求头与请求参数如在接口文档中无特别声明时，可以不填。 123\",\" 响应 示例： 这里会有请求的响应状态码，响应时间，以及响应大小 响应体示例： 响应的格式可以有多种，我这里由于请求的是 百度，so, 响应的是 html , 一般情况下，我们自定义接口的话是 json格式的响应体\",\"这里写图片描述\",\"2. POST请求 POST请求一：表单提交 12\",\"下图示例中设置了请求方法，请求URL，请求参数，但是没有设置请求头 在我的使用过程中，请求头是根据请求参数的形式自动生成的 请求头中的Content-Type与请求参数的格式之间是有关联关系，比如：\",\"这里写图片描述\",\"POST请求二：json提交 下图中，当我们选择JSON(application/json) 是会自动帮我们设置 headers 为 application/json 在这里就不截图 举例了，朋友们可以自行去查看 POST请求三：xml提交 POST请求四：二进制文件提交\",\"其它请求方式如PUT,DELETE 大致流程和GET,POST 差不多，这里就不一一举例说明了\"]},\"162\":{\"h\":\"六、管理用例—Collections\",\"t\":[\"在POST基础功能那里有一张图片大致说了一下Collections 的作用， 这里我们再详细说明一下 1\",\"Collections集合：也就是将多个接口请求可以放在一起，并管理起来。什么样的接口请求可以放在同一个collection里？\",\"在这里告诉大家可以这样：一个工程一个Collection，这样方便查找及统一处理数据。\",\"第一步, 创建Collections 点击上图中的带+号的图标，输入Name:”abc”，Description:”示例demo”，点击Create按钮即创建成功一个Collections. 第二步，在Collections里添加请求\",\"在右侧准备好接口请求的所有数据，并验证后，点击save按钮。\",\"保存好之后就可以在这里看到啦，之后要再次调用时可以点击这里，方便快捷有木有\",\"这里写图片描述\",\"collections 管理精细化， 这里我们针对不同的请求方式做分组 添加子文件夹\",\"这里写图片描述\",\"这是我们精细化划分之后的结果， 是不是看着有条理多了？\"]},\"163\":{\"h\":\"七、身份验证Authentication\",\"t\":[\"1、Basic Auth\",\"是基础的验证，所以会比较简单 会直接把用户名、密码的信息放在请求的 Header 中\",\"2、Digest Auth\",\"要比Basic Auth复杂的多。使用当前填写的值生成authorization header。所以在生成header之前要确保设置的正确性。如果当前的header已经存在，postman会移除之前的header。\",\"3、OAuth 1.0\",\"postman的OAuth helper让你签署支持OAuth\",\"1.0基于身份验证的请求。OAuth不用获取access token,你需要去API提供者获取的。OAuth 1.0可以在header或者查询参数中设置value。\",\"4、OAuth 2.0\",\"postman支持获得OAuth 2.0 token并添加到requests中。\"]},\"164\":{\"h\":\"\",\"t\":[\"image-20250419193055943\",\"image-20250419193034142\"]},\"165\":{\"h\":\"\",\"t\":[\"Windows版本 \",\"winget\",\"scoop\",\"choco\",\"cargo\",\"MacOS/Linux \",\"brew\",\"cargo\",\"​\"]},\"166\":{\"h\":\"\"},\"167\":{\"h\":\"介绍\",\"t\":[\"与grunt功能类似的项目构建工具，也是基于NodeJS的自动任务运行器\",\"能自动化完成JavaScript/coffee/less/html/image/css等文件的合并、压缩、检查、监听文件变化、浏览器自动刷新、测试等任务\",\"gulp更高效（异步多任务），更易于使用，插件高质量\"]},\"168\":{\"h\":\"安装\",\"t\":[\"局部安装 npm install gulp --save -dev 全局安装 npm install gulp -g\",\"查看版本\",\"gulp -v\"]},\"169\":{\"h\":\"创建gulpfile.js\",\"t\":[\"const gulp = require(\\\"gulp\\\") // 创建任务 gulp.task(\\\"taskName\\\", () => {}) // 找到源文件路径 gulp.src() // 找到目的文件路径（如何文件不存在，则自动创建 gulp.dest() // 管道 pipe()\"]},\"170\":{\"h\":\"示例：\",\"t\":[\"// 整理HTML文件 gulp.task(\\\"copy-html\\\", () => { return gulp.src(\\\"index.html\\\").pipe(gulp.dest(\\\"dist/index.html\\\")) }) // 执行命令 // gulp copy-html\",\"// 复制图片 gulp.task(\\\"copy-image\\\", () => { // return gulp.src(\\\"img/*.jpg\\\").pipe(gulp.dest(\\\"dist/images\\\")) // return gulp.src(\\\"img/*.{jpg,png}\\\").pipe(gulp.dest(\\\"dist/images\\\")) return gulp.src(\\\"img/*.png\\\").pipe(gulp.dest(\\\"dist/images\\\")) // 复制仅img目录下所有png图片 return gulp.src(\\\"img/**/*.png\\\").pipe(gulp.dest(\\\"dist/images\\\")) // 递归复制img目录下所有png图片 return gulp.src(\\\"img/*/*\\\").pipe(gulp.dest(\\\"dist/images\\\")) // 复制所有文件 })\",\"// 拷贝多个文件到一个目录中 gulp.task(\\\"data\\\", () => { // !表示剔除某个文件 return gulp.src([\\\"dirName/*.txt\\\", \\\"dirName/*.png\\\", \\\"!dirName/xx.png\\\"].pipe(gulp.dest(\\\"dist/dirName\\\")) })\",\"// 一次性执行多个任务 gulp.task(\\\"build\\\", [\\\"copy-html\\\", \\\"data\\\"], () => { console.log(\\\"任务执行完毕\\\"); })\",\"监听\",\"gulp.task(\\\"watch\\\", () => { // 第一个参数 是文件监听的路径 // 第二个参数 是要去执行的任务 gulp.watch(\\\"index.html\\\", [\\\"copy-html\\\"]); gulp.watch(\\\"img/*/*\\\", [\\\"copy-image\\\"]); }) // 执行命令 // gulp watch\"]},\"171\":{\"h\":\"插件\",\"t\":[\"gulp-connect\",\"// 启动一个服务器 const connect = require(\\\"gulp-connect\\\"); gulp.task(\\\"server\\\", () => { connect.server({ root: \\\"rootName\\\", // 设置根目录 port: 8888, livereload: true // 启动实时刷新 }) }) gulp.task(\\\"data\\\", () => { // !表示剔除某个文件 return gulp.src([\\\"dirName/*.txt\\\", \\\"dirName/*.png\\\", \\\"!dirName/xx.png\\\"] .pipe(gulp.dest(\\\"dist/dirName\\\")) .pipe(connect.reload()) })\",\"gulp-concat： 合并文件（js/css)\",\"gulp-uglify： 压缩js文件\",\"gulp-rename：文件重命名\"]},\"172\":{\"h\":\"\"},\"173\":{\"h\":\"限定符\",\"t\":[\"?： 表示 ? 前一个字符可以出现 0 / 1 次\",\"*： 表示 * 前一个字符可以出现 0 / 多 次\",\"+： 表示 + 前一个字符可以出现 1 / 多 次\"]},\"174\":{\"h\":\"元字符\",\"t\":[\"image-20211118193833224\"]},\"175\":{\"h\":\"\"},\"176\":{\"h\":\"1.游戏玩法\"},\"177\":{\"h\":\"TCP粘包\"},\"178\":{\"h\":\"\"},\"179\":{\"h\":\"\",\"t\":[\"image-20201124163445654\"]},\"180\":{\"h\":\"\",\"t\":[\"AnsiColor\",\"任务配置中：Build Steps>执行shell，增加export FORCE_COLOR=1\",\"Build Authorization Token Root Plugin 免token构建\",\"有参数的构建链接\",\"http://jenkins-url/buildByToken/buildWithParameters?job=任务名称&token=xxx&参数名=参数值\",\"无参数的构建链接\",\"http://jenkins-url/buildByToken/build?job=任务名称&token=xxx\",\"Build Name and Description Setter\",\"Extended Choice Parameter\",\"Localization: Chinese (Simplified)\",\"Rebuilder\",\"Sectioned View\",\"Role-based Authorization Strategy 权限管理\"]},\"181\":{\"h\":\"\"},\"182\":{\"h\":\"安装\",\"t\":[\"npm i -g @nestjs/cli next new project-name\"]},\"183\":{\"h\":\"\"},\"184\":{\"h\":\"简介\",\"t\":[\"pinus是网易推出的一个基于Node.js的分布式水平扩展游戏服务器轻量级强大框架\"]},\"185\":{\"h\":\"使用方法\",\"t\":[\"# 初始化 mkdir dirName cd dirName pinus init. # 安装依赖包 sh npm-install.sh # linux 环境 npm-install.bat # windows 环境\"]},\"186\":{\"h\":\"启动项目\",\"t\":[\"# 启动game-server服务器 pinus start [development | production] [--daemon] # 开发环境则选择development参数（默认值，可不填），如果是产品环境则必须选择production参数 # 项目默认是前台运行，若想后台运行项目，请选择参数\\\"--daemon\\\"\"]},\"187\":{\"h\":\"服务器状态查看\",\"t\":[\"pinus list # 服务器状态可以查看6种状态信息： # * serverId：服务器的serverId，同config配置表中的id。 # * serverType：服务器的serverType，同config配置表中的type。 # * pid：服务器对应的进程pid。 # * headUsed：该服务器已经使用的堆大小（单位：兆）。 # * uptime：该服务器启动时长（单位：分钟）。\"]},\"188\":{\"h\":\"关闭项目\",\"t\":[\"方式1：\",\"pinus stop [serverId] # 优雅地关闭各个服务器\",\"具有以下特点：\",\"前端服务器首先断开连接，阻止新玩家进入游戏，用户体验好。\",\"各服务器按顺序关闭自身的功能，保证游戏逻辑正常。\",\"玩家状态等信息及时写入数据库，保证数据的完整性。\",\"pinus stop id 会关闭特定服务器，该命令需在项目根目录下进行。由于关闭特定服务器会导致服务器状态信息等丢失，所以建议首先做好该服务器状态信息的维护和备份等工作。\",\"方式2：\",\"pinus kill [--force]\",\"该方式直接kill掉项目进程，比较粗暴，安全性低，开发环境下可以使用，产品环境慎用。如果还有残留进程杀不干净可使用--force参数。\"]},\"189\":{\"h\":\"动态添加服务器\",\"t\":[\"pinus add host=[host] port=[port] id=[id] serverType=[serverType]\",\"添加的参数必须包括服务器ip地址(host),服务器端口号(port)，服务器标识(id)，服务器类型(serverType)。\",\"目前只支持后端服务器的动态添加\",\"该命令需在项目的根目录下使用\"]},\"190\":{\"h\":\"安装管理控制台\",\"t\":[\"git clone https://github.com/node-pinus/pinus-admin-web.git\",\"cd pinus-admin-web\",\"npm install -d\",\"node app\",\"如果你的linux系统未安装sysstat， 先执行以下命令\",\"apt-get install sysstat\",\"浏览器中访问： http://localhost:7001， 就可以打开管理控制台界面。 如果端口有冲突，请在config/admin.json修改端口，访问的浏览器必须支持websocket，推荐使用chrome。系统默认是将监控禁掉了，如果需要开启可以在game-server/app.js配置app.enable('systemMonitor')，具体可以参考lordofpinus源码。\"]},\"191\":{\"h\":\"production环境背景知识\",\"t\":[\"production环境下，如果游戏服务器各进程运行在多服务器上，则各服务器需支持ssh agent forward， 并且项目在所有服务器里的目录是一致的。\"]},\"192\":{\"h\":\"Pinus中的请求处理链\",\"t\":[\"在这部分，主要介绍pinus是如何与客户端通信以及前端服务器是如何处理用户请求的。处理客户端的请求和响应是pinus的核心之一，它涉及到了很多组件，包括session组件，server组件，connection组件，connector组件，proxy组件，remote组件等。在本部分，我们仅仅介绍与前端服务器相关的组件，以及他们的作用，对于rpc以及后端服务器以来的backendSession以及channel，这里不做深入介绍，将在其他部分进行介绍。\",\"对于前端服务器来说，session组件是sessionService的包装组件，用来维护用户的session信息；connection组件是connectionService的包装组件，是用来做连接统计的；connector组件会开启监听接口，承受客户端的连接，这里对connector组件底层使用的具体的connector不做太多关注，只关心其抽象行为。\",\"对于server组件来说，会维护服务器的Handler和HandlerFilter，当用户的请求到达前端服务器时，如果前端服务器定义了相应的Handler，那么前端服务器会使用filter-handler链对其进行处理，然后将处理后的结果返回；如果对请求路由检查发现请求是发向到后端服务器的，那么前端服务器会根据用户配置的router（也可能是默认的），计算出要发往的后端服务器id，然后发起rpc调用，后端服务器在接收到rpc调用时，从其中取出请求路由以及请求参数，发起filter-handler链对请求进行处理，完成调用，并将响应发给前端服务器，前端服务器再将响应发送到客户端，整个处理流程如下如所示:\",\"request-flow\",\"下面的类图粗略地展示了这些类之间的关系:\",\"pinus\",\"下面通过类时序图的方式，选取典型的用例行为，来介绍框架的控制流程:\",\"server\"]},\"193\":{\"h\":\"初始化\",\"t\":[\"在CoConnector的afterStart回调中，会开启socket的监听，端口使用服务器配置中的clientPort，然后就可以接受用户的连接了，并绑定了connctor的connection事件。\",\"在CoServer的start回调里，会扫描当前服务器应该加载的Handler和HandlerFilter，并完成Handler和Filter的加载。此时已经做好了接收客户端连接的准备。\"]},\"194\":{\"h\":\"客户端连接\",\"t\":[\"当客户端连接到前端服务器时，会触发connector的监听事件，在事件的处理中，会通过CoConnection增加连接信息，用来做统计。会对连接返回的用来数据通信的socket绑定message，close，error，disconnect等事件，然后创建session，session由CoSession包装的SessionService维护。每一个session都会维护与其相关的socket。此时，客户端已经完成了与服务器端的连接。\"]},\"195\":{\"h\":\"客户端请求\",\"t\":[\"当客户端连接完成后，客户端就会发起请求，请求会触发socket的message事件，在此事件处理中，首先会对message事件所携带的包进行解包,然后将请求交给CoServer处理。如果请求的是前端服务器的Handler，那么CoServer的doHandle中将会发起其filter-handler链，完成请求的处理，最常见的这种请求就是用户登录请求。如果请求的路由不是前端服务器的，那么CoServer的doFoward将会发起sys rpc给相应的后端rpc。当发起sys rpc调用时，由于同类型的后端服务器一般都有很多，故需要做一个路由选择。这个路由选择策略用户可以配置，通过app.route调用，如果用户不配置的话，pinus会使用一个默认的路由配置。后端服务器接受到请求后，会执行其CoServer的doHandle，跟前端服务器一样，会使用filter-handler链，对用户的请求进行处理，然后将响应返回给前端服务器，并由前端服务器将响应发送到客户端。\",\"前端服务器会调用connector的send函数将响应或者推送的消息发送给客户端，send调用不会直接将要发送的消息通过socket直接发送给客户端，而是将发送任务调度给CoPushScheduler，CoPushScheduler可以实现具体的发送策略。pinus中提供了两种方式的pushScheduler，direct会立即将用户的响应发送给用户，buffer则会缓冲发送任务，并按时冲刷，pinus默认使用的是direct的方式，如果想使用buffer的方式，可以通过如下的调用启用:\",\" app.set('pushSchedulerConfig', {scheduler: pinus.pushSchedulers.buffer, flushInterval: 20});\",\"这里，flushInterval是定时冲刷的周期，我们也可以自己定制实现相应的scheduler，并配置到应用程序中。\",\"当服务器的请求处理逻辑需要给客户端推送消息时，会通过用户的uid或者session id从SessionService里获得到对应的Session，session中会维护与客户端用来数据通信的socket，然后将要推送的数据通过session维护的socket连接发送到客户端。\"]},\"196\":{\"h\":\"绑定/解绑用户\",\"t\":[\"一般来说，当session连接完成后，都会有用户登录的请求，从而完成session与具体用户的绑定。一般在CoServer的处理中，当会将相应的用户绑定到session上，此时会调用CoSession包装的SessionService的操作bind完成对应的用户绑定操作。此外，还会调用CoConnection的addLoginedUser来增加用户，维护统计信息。\",\"对于用户注销的请求，一般在CoServer的处理中，会完成session与uid的解绑，此时会调用CoSession包装的SessionService的操作unbind完成对应用户的解绑操作。此外，还会调用CoConnection的removeLoginedUser来减少登录用户，维护统计信息。\"]},\"197\":{\"h\":\"客户端断开\",\"t\":[\"当客户端断开连接时，connector监听的socket上会激发disconnect事件，在具体的事件处理中，会从SessionService中删除掉对应的Session，释放掉session维护的连接，还会调用ConnectionService上decreaseConnectionCount，维护统计信息。\",\"上面选取了客户端与服务器交互的几个典型行为，说明了整个客户端请求中的控制流程。这里仅仅涉及到了前端服务器，对于后端服务器的具体处理，这里仅仅提到了会发起rpc调用，而没有具体地深入介绍。\",\"在pinus中，HandlerFilter分为beforeFilter和afterFilter，对于beforeFilter来说,其方法签名为\",\"before(msg, session, next); \",\"其中msg是请求，session表示当前请求的session，在前端服务器的话是FrontendSession，在后端服务器的话是BackendSession，next是用来组成请求链的，是用来指定下一步调用的。如果在具体的filter上没有错误的话，那么就直接调用next(), 否则，则调用next(err, resp),向后面传递具体的处理错误以及响应。在filter的具体实现中，在逻辑处理完后，必须调用next，否则将打断整个处理链。如果有任意一个beforeFilter的next调用中传递了err的话，此处理链将会立即被中断，直接会转入错误处理。在next传递err的时候，可以携带一个resp参数，作为对客户端错误的响应，即next(err, resp)。\",\"具体Handler的签名一般为：\",\"<handler_Name>(msg, session, next); \",\"msg是经过beforeFilter链处理过的msg，session是经过beforeFilter链处理后的session，next是下一步处理。如果需要给客户端响应的话，没有错误的话，使用next(null, resp),否则可以使用next(err, resp),向后面传递错误信息。这里，resp是给客户端的响应，一般来说客户端的响应都是在Handler的具体逻辑中生成。在具体Handler的实现中，也必须调用next。其next语义与前面的beforeFilter中的next语义一致。\",\"对于afterFilter来说，其方法签名为:\",\"after(err, msg, session, resp, next); \",\"afterFilter是做一些清理操作的，在执行afterFilter链的时候，具体的响应已经发送给了客户端，也就是说在afterFilter如果对resp做更改的话，将对客户端响应没有任何影响。同样，这里的next参数，也是指定了下一步的处理,其签名是next(err),不过与上面beforeFilter和Handler不同的是，由于在afterFilter中常做的是一些清理操作，而且此时具体的响应resp已经发送到了客户端，所以afterFilter中，处理链对err将不再敏感，无论是否有err，整个afterFilter链都会执行完毕。\",\"ErrorHandler，是当在处理请求时产生异常时进行的处理，具体的签名为:\",\"<errorHandler_Name>(err, msg, resp, session, cb); \",\"在beforeFilter或者Handler中，如果处理产生错误，那么将会转向错误处理，ErrorHandler就是用来进行错误处理的，具体的参数意义跟上面的一样，其中resp是由前面产生错误的next(err, resp)调用传递来的，cb的签名为cb(err, resp),cb会将resp发送给客户端。因此在ErrorHandler里面，是需要调用cb(err, resp), 否则，客户端将得不到服务器端的响应。在errorHandler中可以根据传入的resp以及err信息，重新生成要发送给客户端的resp。通过如下方式设置全局的ErrorHandler，\",\"var errorHandler = require('<path'); app.set('errorHandler', errorHandler); \",\"如果用户没有配置全局的errorHandler的话，默认的errorHandler会向客户端返回由beforeFilters或者Handler产生的resp。整个请求处理链的大致流程如下：\",\"handle-flow\",\"pinus内建了常见的一些filter，用户可以通过如下的方式启用:\",\"app.filter(pinus.filters.<filterName>(<args>)); \",\"下面介绍一下这几个fitler:\"]},\"198\":{\"h\":\"serial\",\"t\":[\"这个filter是用来对用户请求做串行化的，可以使得用户的请求只有在第一个请求被处理完后，才会处理第二个请求。serial中使用了一个taskManager，当用户请求到来时，在beforeFilter中，将用户的请求放到taskManager中，taskManager中维护着一个task队列。在对应的afterFilter中，如果taskManager还有未处理的请求，将会处理其请求，即在一个请求的afterFilter里启动在taskManager中还没处理的下一个请求，这样就实现了请求的序列化。\"]},\"199\":{\"h\":\"timeout\",\"t\":[\"这个filter是用来对服务端处理超时进行警告的，在beforeFilter中会启动一个定时器，在afterFilter中清除。如果在其定时器时间内，afterFilter被调用，定时器将会被清除，因此不会出现超时警告。如果定时器超时时，afterFilter还没有执行到，则会引发超时警告,并记录日志。默认的处理超时是3秒，可以在加载timeout的时候作为参数传入。\"]},\"200\":{\"h\":\"time\",\"t\":[\"这个filter使用来记录服务器处理时间的，在beforeFilter中会记录一下当前的时间戳，在afterFilter中再次获取当前的时间戳，然后两个时间戳相减，得到整个处理时间，然后记录日志。\"]},\"201\":{\"h\":\"toobusy\",\"t\":[\"这个filter中，一旦检测到node.js中事件循环的请求等待队列过长，超过一个阀值时，就会触发toobusy。一旦触发了toobusy，那么toobusy的filter中将终止此请求处理链，并在next调用中，传递错误参数。\",\"在本部分，介绍了前端服务器与客户端的通信的相关内容，讲述了相关的类关系，以及典型用例行为的控制流程。对于请求响应链中的before filter，handler，after fitler，error handler等做了较为详细的分析，最后简单分析了一下pinus内建提供的一些filter。\"]},\"202\":{\"h\":\"\",\"t\":[\"使用得心应手的IDE来开发应用程序，可以使我们的工作事半功倍。而调试则更可以让我们准确的定位BUG，发现问题。 本文讲述如何使用 WebStorm 这个怪兽级JavaScript IDE来调试 Chat of Pinus。 如果你更喜欢 Eclipse 等其他IDE，希望本文也可以有一些帮助。\"]},\"203\":{\"h\":\"前言\",\"t\":[\"首先我们需要知道，NodeJS应用程序可以在运行命令中加入--debug=5858参数，可以使得NodeJS程序监听本地5858端口，并开启调试模式。\",\"其次，Pinus的运行原理是：pinus start时，启动了master服务器，然后其先读取配置文件，再启动由game-server/config/servers.json文件中经过配置的各个服务器进程。其中，你看到的id、host、port等等都是子服务器的启动参数，这些参数都会放到启动命令行中app.js的后面。\",\"再次，Pinus的设计人员最初已经考虑到了直接在node后app.js前添加参数的简便方法：在服务器配置文件中，配置条目中插入\\\"args\\\": \\\" 你想要的参数 \\\"后，便可以你指定的参数运行node。\"]},\"204\":{\"h\":\"修改配置以启动带有调试模式的服务器\"},\"205\":{\"h\":\"一、打开文件\",\"t\":[\"打开game-server/config/servers.json。为了便于便于开发，我们将服务器数目缩减至每功能1个运行实例。这样你就会看到：\",\"精简过的默认服务器配置\"]},\"206\":{\"h\":\"二、修改并保存\",\"t\":[\"我们对gate服务器的负载分配原理产生了兴趣，想要调试它。这时，我们只需要在{\\\"id\\\": \\\"gate-server-1\\\", ...的行末，花括号}前，插入下面代码, \\\"args\\\": \\\" --debug=32312 \\\"。使gate服务器的配置组变成这样：\",\"gate服务器调试配置\",\"当再次启动服务器时，master服务器会读取新的配置，并以这个配置运行gate-server-1服务器。\",\"而该服务器的进程，会监听32312端口，以便调试器连接。将端口设置的偏高是为了减少端口冲突的可能性。开发过程中，如果启动后发现有报ADDRINUSE（端口已被占用）的错误，请使用pinus kill --force杀光Pinus程序，并调整此处的端口值。\"]},\"207\":{\"h\":\"配置IDE的调试器\"},\"208\":{\"h\":\"一、打开 对话框\",\"t\":[\"可以从运行、调试按钮前面的小三角进入，或者从工具栏中选择Run - Edit Configurations...。\",\"打开Edit Configurations对话框\"]},\"209\":{\"h\":\"二、新增一条\",\"t\":[\"增加 Node.js Remote Debug 配置\",\"gate study 调试器配置\",\"Name栏名字可以随意起，但最好选择明确易懂的。然后选中Single instance only，这样只会启动一个调试器。而不会有很多相同的调试器都连到后面指定的调试端口。\",\"下面的Host写本地127.0.0.1，Debug Port填入刚刚上面指定的端口号，我这里用32312，与前面配置文件中的完全一致。Local directory指定当前的game-server/app.js目录所在目录。[补充：在webstorm 8 里面 没有 local directory 选项了，不设置页可以调试]\"]},\"210\":{\"h\":\"附：运行配置\",\"t\":[\"当然你可能已经注意到了，这里的Configurations不仅包含调试，还包括运行配置。运行配置方法跟一般的NodeJS程序配置方法相同。NodeJS新人可以参考图片中配置。注意被框的内容。\",\"game-server 及 web-server 运行配置举例\"]},\"211\":{\"h\":\"准备调试\"},\"212\":{\"h\":\"一、分别启动Web、Chat服务器\",\"t\":[\"如果你有做过运行Chat和Web服务器的配置，现在就可以从运行、调试按钮前面的配置下拉菜单中，分别选择Chat以及Web后，点击[►]运行按钮。运行后，可以从IDE下方的控制台输出中查看日志输出，可以检查一下这两个服务器的启动是否成功。如果出现红字，多半表示启动失败。你可以根据提示的报错信息Google或者 提交Issue ，以查找解决方案。\",\"运行、调试配置选择\"]},\"213\":{\"h\":\"二、连接调试器\",\"t\":[\"再从配置下拉菜单中选择刚刚的调试配置gate study，之后点击[☼]调试按钮。检查窗口下方的Debugger，可以看到有提示说Connected to 127.0.0.1:32312。\",\"调试器已连接\"]},\"214\":{\"h\":\"三、设置断点\",\"t\":[\"由于我们想调试gate服务器中，与connector分配相关的代码，所以在IDE中，打开app/servers/gate/handler/gateHandler.js。定位到 第30行 ，在此处下一个断点。\",\"gateHandler.js 中的断点\"]},\"215\":{\"h\":\"实践\",\"t\":[\"浏览器中打开 http://127.0.0.1:3001/index.html 会看到 Chat of Pinus标题的登录页面。填入两栏表单后，点击【JOIN】按钮。\",\"Chat Of Pinus 登录页\",\"此时，页面将不会做出任何反应，是因为服务器端的代码被断点拦下了。而IDE会因为调试器而被激活：\",\"开始调试\",\"下方窗口中，除了常规调试用到的StepOver、StepInto、StepOut等必须功能外，有很多好用的工具，比如即时表达式求值、切换异常发生时自动中断……这里就不深入探讨了。\"]},\"216\":{\"h\":\"可用的聊天应用\"},\"217\":{\"h\":\"常识\",\"t\":[\"Web服务器启动成功后我们可以看到它提示说可以访问http://127.0.0.1:3001/index.html了。但我们都知道127.0.0.1是本机IP地址，如果真正要跟其他人“聊天”的话，这样是不行的。因为别人不一定能打开127.0.0.1:3001，即便打开了，也无法跟你在一起聊天。\",\"所以将这里的127.0.0.1换成你自己电脑的可被网络上其他成员访问到的地址，我这里的地址是192.168.1.61。OK，我可以在浏览器里打开http://192.168.1.61:3001/index.html，因为本机调试没有任何问题，所以我也信心满满的将这个地址告诉了与我同一网络的同事。\"]},\"218\":{\"h\":\"发现问题\",\"t\":[\"这时出现了一个问题，我自己可以登录到聊天界面，而其他任何人都无法登录。\",\"根据其他人的浏览器Console输出，可以看到他们都连接一下192.168.1.61:3014端口后，又去连接127.0.0.1:3050，所以他们才无法登录的。\",\"而3014端口刚好是gate服务器，问题就出在这里，还是继续调试一下吧。\",\"在经过一番断点切换后，可以发现gateHandler.queryEntry最后跑到了 第39行 的 next函数上。\",\"var res = dispatcher.dispatch(uid, connectors); next(null, { code: 200, host: res.host, port: res.clientPort }); \",\"可以看到，返回内容的 host 使用了res.host，res又来自connectors，connectors来自配置文件。\",\"而game-server/config/servers.json下connector服务器的 配置条目 ，可以清楚的看见\\\"host\\\":\\\"127.0.0.1\\\"。\"]},\"219\":{\"h\":\"解决问题\",\"t\":[\"源头找到了，立刻将这里的127.0.0.1全部替换成我本机192.168.1.61。并且重启Chat服务器。\",\"同时再刷新访问的时候，便可以登录进来了。\"]},\"220\":{\"h\":\"写在后面\",\"t\":[\"细心的人或许发现，调试器连接的IP地址，是127.0.0.1，但你或许在想，既然是叫\\\"Remote Deubgger\\\"，应该可以连接除127.0.0.1以外的IP吧？ 我也是这么想的。但是，在不借助其他工具的情况下，不能办到。\",\"就是说，不借助一个代理工具，是没办法连接到除了127.0.0.1地址的调试端口的。\",\"你可以借助NodeJS官方 Wiki 文章结尾（Ctrl-F后，搜索\\\"You probably noticed\\\"）的方法及代码，来完成一个代理工具。以便调试部署在远端服务器上运行的代码。\",\"同时这篇文章也是 Eclipse 的调试指导文章。\"]},\"221\":{\"h\":\"pinus package\",\"t\":[\"pinus核心提供了两种connector，sioconnector和hybridconnector。其中sioconnector基于socket.io，使用json作为其通信格式，hybridconnector则用于tcp/websocket的通信，它底层使用的是二进制协议。虽然在sioconnector中，socket.io的实现很好，对于超时、握手等都做了处理，并且使用json作为通信格式，方便了协议的定制和修改，但同时也带来了较多的通讯冗余数据。hybridconnector则是使用了二进制版本通讯协议，同时提供了route字典压缩和protobuf压缩，提高带宽利用率，以满足诸如移动环境的需求，同时上层接口仍保持json格式的接口，对以前版本之前的代码不产生任何影响，保留兼容性。在本部分，主要介绍hybridconector实现的具体的通信协议。\",\"pinus的二进制协议包含两层编码：package和message。message层主要实现route压缩和protobuf压缩，message层的编码结果将传递给package层。package层主要实现pinus应用基于二进制协议的握手过程，心跳和数据传输编码，package层的编码结果可以通过tcp，websocket等协议以二进制数据的形式进行传输。message层编码可选，也可替换成其他二进制编码格式，都不影响package层编码和发送。\",\"Pinus协议层的结构如下图所示：\",\"PinusProtocol\",\"package协议主要用来封装在面向连接的二进制流的通讯协议（如：tcp）上的pinus数据包。package分为控制包和数据包两种类型。前者用来实现pinus应用层面的控制流程，包括客户端和服务器的握手，心跳和服务器主动断开连接的通知等控制信息。后者则是用来在客户端和服务器之间传输应用数据。\"]},\"222\":{\"h\":\"package格式\",\"t\":[\"package分为header和body两部分。header描述package包的类型和包的长度，body则是需要传输的数据内容。具体格式如下：\",\"pinus package\",\"type - package类型，1个byte，取值如下。 \",\"0x01: 客户端到服务器的握手请求以及服务器到客户端的握手响应\",\"0x02: 客户端到服务器的握手ack\",\"0x03: 心跳包\",\"0x04: 数据包\",\"0x05: 服务器主动断开连接通知\",\"length - body内容长度，3个byte的大端整数，因此最大的包长度为2^24个byte。\",\"body - 二进制的传输内容。\",\"各个package类型的具体描述和控制流程如下。\"]},\"223\":{\"h\":\"握手\",\"t\":[\"握手流程主要提供一个机会，让客户端和服务器在连接建立后，进行一些初始化的数据交换。交换的数据分为系统和用户两部分。系统部分为pinus框架所需信息，用户部分则是用户可以在具体应用中自定义的内容。\",\"握手的内容为utf-8编码的json字符串（不压缩），通过body字段传输。\",\"握手请求：\",\"{ \\\"sys\\\": { \\\"version\\\": \\\"1.1.1\\\", \\\"type\\\": \\\"js-websocket\\\" }, \\\"user\\\": { // any customized request data } }\",\"sys.version - 客户端的版本号。每个客户端SDK的每一个版本都有一个固定的版本号。在握手阶段客户端将该版本号上传给服务器，服务器可以由此来判断当前客户端是否合适与服务器通讯。\",\"sys.type - 客户端的类型。可以通过客户端类型和版本号一起来确定客户端是否合适。\",\"握手响应：\",\"{ \\\"code\\\": 200, // response code \\\"sys\\\": { \\\"heartbeat\\\": 3, // heartbeat interval in second \\\"dict\\\": {}, // route dictionary \\\"protos\\\": {} // protobuf definition data }, \\\"user\\\": { // any customized response data } }\",\"code - 握手响应的状态码。目前的取值：200代表成功，500为处理用户自定义握手流程时失败，501为客户端版本号不符合要求。\",\"sys.heartbeat - 可选，心跳时间间隔，单位为秒，没指定表示不需要心跳。\",\"dict - 可选，route字段压缩的映射表，没指定表示没有字典压缩。\",\"protos - 可选，protobuf压缩的数据定义，没有表示没有protobuf压缩。\",\"user - 可选，用户自定义的握手数据，没有表示没有用户自定义的握手数据。\",\"握手的流程如下：\",\"handshake\",\"当底层连接建立后，客户端向服务器发起握手请求，并附带必要的数据。服务器检验握手数据后，返回握手响应。如果握手成功，客户端向服务器发送一个握手ack，握手阶段至此成功结束。\"]},\"224\":{\"h\":\"心跳\",\"t\":[\"心跳包的length字段为0，body为空。\",\"心跳的流程如下：\",\"heartbeat\",\"服务器可以配置心跳时间间隔。当握手结束后，客户端发起第一个心跳。服务器和客户端收到心跳包后，延迟心跳间隔的时间后再向对方发送一个心跳包。\",\"心跳超时时间为2倍的心跳间隔时间。服务器检测到心跳超时并不会主动断开客户端的连接。客户端检测到心跳超时，可以根据策略选择是否要主动断开连接。\"]},\"225\":{\"h\":\"数据\",\"t\":[\"数据包用来在客户端和服务器之间传输数据所用。数据包的body是由上层传下来的任意二进制数据，package层不会对body内容做任何处理。\"]},\"226\":{\"h\":\"服务器主动断开\",\"t\":[\"当服务器主动断开客户端连接时（如：踢掉某个在线玩家），会先向客户端发送一个控制消息，然后再断开连接。客户端可以通过这个消息来判断是否是服务器主动断开连接的。\",\"message协议的主要作用是封装消息头，包括route和消息类型两部分，不同的消息类型有着不同的消息头，在消息头里面可能要打入message id(即requestId)和route信息。由于可能会有route压缩，而且对于服务端push的消息，message id为空，对于客户端请求的响应，route为空，因此message的头格式比较复杂。\",\"消息头分为三部分，flag，message id，route。如下图所示：\",\"Message Head\",\"从上图可以看出，pinus消息头是可变的，会根据具体的消息类型和内容而改变。其中：\",\"flag位是必须的，占用一个byte，它决定了后面的消息类型和内容的格式;\",\"message id和route则是可选的。其中message id采用varints 128变长编码方式，根据值的大小，长度在0～5byte之间。route则根据消息类型以及内容的大小，长度在0～255byte之间。\"]},\"227\":{\"h\":\"标志位flag\",\"t\":[\"flag占用message头的第一个byte，其内容如下\",\"flag\",\"现在只用到了其中的4个bit，这四个bit包括两部分，占用3个bit的message type字段和占用1个bit的route标识，其中：\",\"message type用来标识消息类型,范围为0～7，现在消息共有四类，request，notify，response，push，值的范围是0～3。不同的消息类型有着不同的消息内容，下面会有详细分析。\",\"最后一位的route表示route是否压缩，影响route字段的长度。 这两部分之间相互独立，互不影响。\"]},\"228\":{\"h\":\"消息类型\",\"t\":[\"不同类型的消息，对应不同消息头，消息类型通过flag字段的第2-4位来确定，其对应关系以及相应的消息头如下图：\",\"Message Head Content\",\"上面的 - 表示不影响消息类型的bit位。\"]},\"229\":{\"h\":\"route压缩标志位\",\"t\":[\"route主要分为压缩和未压缩两种，由flag的最后一位（route压缩标志位）指定，当flag中的route标志为0时，表示未压缩的route，为1则表示是压缩route。route通过系统生成和用户自定义的字典进行压缩，具体内容见pinus压缩协议。route字段的编码会依赖flag的这一位，其格式如下图:\",\"Message Type\",\"上图是不同的flag标志对应的route字段的内容：\",\"flag的最后一位为1时，后面跟的是一个uInt16表示的route字典编号，需要通过查询字典来获取route;\",\"flag最后一位为0是，后面route则由一个uInt8的byte，用来表示route的字节长度。之后是通过utf8编码后的route字符串，其长度就是前面一位byte的uInt8的值，因此route的长度最大支持256B。\",\"在本部分，介绍了pinus提供的hybridconnector的线上协议，包括package层和message层。当用户使用hybridconnector的时候，可以根据这里提供的协议信息，在客户端可以依据此协议完成与服务端的通信。\"]},\"230\":{\"h\":\"注意事项\",\"t\":[\"在这部分，我们继续讨论与用户请求相关的内容。后端服务器中是用来处理用户请求的具体逻辑的地方，当前端服务器接收到来自客户端的请求时，通过分析请求的路由，并做简单的校验表明路由是合法的，那么前端服务器就会根据路由策略配置，选择某一后端服务器，发起rpc调用。后端服务器的所有调用请求均来自前端服务器的rpc调用。\",\"当后端服务器发起filter-handler链对前端服务器分派过来的请求进行处理时，如果仅仅需要给用户端响应，那么仅仅通过rpc的回调返回具体的响应即可。但是，很多情况下，具体的请求处理逻辑需要给其他用户推送消息。比如，在一个聊天应用中，当有一个用户发起聊天请求时，其聊天的所有内容都需要推送给同一房间的其他用户。当然，消息推送逻辑并不仅仅在后端服务器中使用，前端服务器也可能会有类似的场景。\",\"CoBackendSession组件和CoChannel组件一般是用在后端服务器中的，它们一起来完成给特定的用户推送消息。我们知道，BackendSession可以看作前端原始session在后端服务器的一个代理，CoBackendSession包装的BackendSessionService就是用来创建并管理后端的BackendSession，并可以通过相应的bind以及push调用，可以给前端原始的session绑定uid，以及设置一些属性。\",\"CoChannel包装的ChannelService中维护了Channel的信息，每一个Channel可以看作是一系列绑定用户的uid集合，通过Channel的相应调用即可向客户端推送消息。以下是对后端服务器来说，相应的类关系图:\",\"server2\",\"后端服务器的所有请求都是从前端服务器的rpc请求中获得的，也就是说后端服务器的CoServer组件的请求是MsgRemote派发的。\",\"当前端服务器发出rpc请求时，会携带用来创建BackendSession的信息。在后端服务器中，会创建对应的session信息，这个session就是backendSession，对backendSession所做的任何更改不会影响原始的前端服务器中的session。当遇到用户的登录请求时，可能需要给原始的session绑定uid，并且设定一些自定义属性。以聊天为例，后端服务器处理登录请求时，就需要给session绑定uid，并且给其设置属性room_id等。这些可以通过使用BackendSession的bind以及push操作。在后端服务器求处理链上的所有session参数，其类型均是BackendSession，对其的直接修改不会直接反映到原始的前端服务器的session上。\",\"有时候，需要对用户进行分组，以便更好地推送消息。还以聊天为例，一个聊天室的成员应分为一组，当有人说话时，直接将消息推送到这一组即可。pinus中的Channel就是应用这种场景的，每一个Channel中维护一个uid列表，当调用Channel的pushMessge方法时，会给所有的在这个Channel中的用户推送消息。\",\"ChannelService还提供了pushMessageByUids方法，使得推送消息的时候，不用通过Channel，直接传入一个用户列表即可，这样使得消息推送更加灵活。同时，ChannelService还提供了broadcast方法，可以针对某一类型的前端服务器，给其所维护的所有已经绑定uid的session广播消息。\",\"以上的对BackendSession以及Channel操作，无论是给session绑定id，还是通过Channel发送消息,还是通过ChannelService进行广播，实际上都涉及到与客户端的通信，由于后端服务器是无法与客户端进行通信的，这些操作实际上都是对前端服务器的rpc调用。因为在前端服务器发起rpc调用给后端服务器派发请求的时候，已经携带了前端服务器id等信息，在BackendSession中会维护此session所在的前端服务器的id，因此，此时后端服务器向前端服务器发起rpc调用时，不再需要路由计算，直接使用相应的frontendId即可。\",\"以下是一些典型用例行为的时序图：\",\"server2\",\"上面的图中展示了后端服务器中的调用流程，从MsgRemote获得请求，然后分派给CoServer，Server会发起Filter-Handler链对用户请求进行处理，在Filter-Handler链中的session参数，均为BackendSession。当调用了session的bind，push，kick等操作时，CoBackendSession会向对应的前端服务器发起rpc调用，这个rpc调用由SessionRemote提供服务，完成对应session的bind，push，unbind,kick等操作。\",\"如果在Handler-Filter链中处理时需要给用户推送或者广播消息，就可以使用Channel了。可以通过Channel的pushMessage给一个Channel推送消息，也可以使用ChannelService的pushMessageByUids。这些操作实际上也是对前端服务器的rpc调用,为这些操作提供rpc服务的是ChannelRemote。\",\"BackendSession是前端服务器中的session在后端服务器中的代理，当后端服务器需要给前端的原始session绑定uid或者设置自定义属性时，需要使用调用bind和push，解绑uid绑定使用unbind。如果仅仅调用了BackendSession的set/get，而没有调用push的话，那么对BackendSession的属性的修改，只在后端服务器的处理链中后面部分有效，而不对其他任何地方的Session产生影响。比如，内建的Filter timeout，在before filter中，开启一个定时器，并把定时器id作为一个属性set到BackendSession中，这个定时器id属性将会在处理请求链的后面部分可以被访问，因此，在after filter中，就通过取得定时器id进行了定时器的清理工作。这种对BackendSession修改仅仅在后端服务器里有效，不会对前端的原始session造成任何影响。\",\"对于前端服务器维护的Session信息，可以认为，一个客户端连接就对应一个Session，Session可以看作与客户端连接一一对应。当用户登录的时候，会使用uid绑定对应的session，也可以理解为这个用户通过哪个session进行了登录。在sessionService里有选项singleSession，如果设置为true的话，那就表示一个uid只允许一个session登录，当有新的session建立登录的时候，以前的登录会被踢掉。否则，是允许一个uid绑定多个session的，也就是说一个uid允许维持多个连接。这在实际中是很有意义的，比如，用户的客户端可能有多个设备，那么这样的话，多个设备就可以同时在线。\",\"关于Channel，Channel中维护着一组uid，每一个uid会对应多个session，每个session由sessionid以及serverid来指定其前端的连接信息，一个uid可以加入多个Channel中。Channel是后端服务器本地的，也就是说两个后端服务器A和B不会共享Channel信息，当出现跨服务器访问Channel的时候，会出现Channel找不到的错误。当确实需要进行共享Channel信息时，可以考虑使用pinus提供的global-channel插件，那里使用了redis来维护Channel信息，而不再把Channel信息放在服务器本地，后端服务器通过redis即可查询Channel中的uid信息，然后就可以发起调用了。\",\"对客户端请求的处理是pinus较为复杂的部分，它由pinus的多个组件共同完成，前端服务器上的CoConnector会加载connector并开启请求监听，当有客户端连接的时候，其对应的连接事件会触发，从而会新的连接创建并维护session，这些操作由CoSession完成。当用户请求具体的服务的时候，前端服务器的CoServer会完成相应的服务器路由，后端服务器的Remote接收到请求后完成请求派发，后端服务器的CoServer会启动Filter-Handler链对请求进行处理，当处理过程中需要给session设置自定义属性以及绑定uid时，可以通过CoBackendSession来完成，当需要给客户端推送消息的时候，可以使用CoChannel提供的功能。当用户的请求通过了Filter-Handler链处理后，对应的响应会通过rpc调用的回调，再次返回到前端服务器的rpc发起者CoServer，然后CoConnector会将后端的响应或者后端推送的消息调度给CoPushScheduler，由CoPushScheduler实现具体的消息发布调度。当可以发布消息的时候，CoPushScheduler会通过CoSession获得到客户端连接的socket，然后通过socket将消息发送出去,完成整个消息处理流程。如果是用户的notify，将不会发送响应。\"]},\"231\":{\"h\":\"\"},\"232\":{\"h\":\"命令介绍\",\"t\":[\"目前pinus支持如下命令及选项:\",\"init: 创建一个新项目，该项目中包含创建pinus应用的基本文件及pinus应用的简单示例。\",\"start: 启动应用及服务器。\",\"list: 列出当前应用开启的所有服务器的信息，包括服务器Id、服务器类型、pid、堆使用情况、启动时长。\",\"stop: 关闭应用及服务器或者停止指定的服务器。\",\"kill: 强制关闭应用及服务器。\",\"add: 运行时动态添加服务器。\",\"masterha: 当启用masterha高可用的时候，用来启动master服务器的slave节点。\",\"--version：列出当前使用pinus的版本信息。\",\"--help：列出所有pinus支持的命令及使用说明。\"]},\"233\":{\"h\":\"命令使用说明\",\"t\":[\"init\",\"根据给出的路径或文件名创建新项目，支持相对路径和绝对路径。默认情况下为当前路径，项目名称为当前文件夹名称,命令如下：\",\"pinus init [dirname] \",\"在创建新项目时，需要选择新项目使用的与客户端通信时使用的connector,1 代表 Websocket(native socket), 2 代表socket.io。当当前目录下有同名文件夹存在时，会提示是否覆盖，还是取消创建。\",\"start\",\"该命令用来启动Pinus应用，命令格式如下:\",\"pinus start [-e,--env <env>] [-d,--directory <code directory>] [-D,--daemon] \",\"其中，-e 用来选择启动时使用的env，如production，development，stress-test等; -d 用来指定项目目录； -D 用来开启daemon模式启动，如果开启了daemon，那么进程将转入后台运行, 所有的日志将不再打印到console上，只能通过对应的日志文件查看日志。在0.7及以前的版本中，对于env的使用，没有使用-e选项，而是直接作为一个参数来使用的，这里需要注意一下。\",\"用户可以在<project_dir>/game-server/config/servers.json中为不同的服务器中添加不同参数，这些参数是node和v8支持的参数，是用来指定和影响node及v8的行为的。例如，当我们想对某一个服务器开启调试的时候，就可以在服务器配置中，增加args配置项，并在args中配置开启调试的端口等，示例如下:\",\"{\\\"connector\\\":[{\\\"id\\\":\\\"connector-server-1\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4050, \\\"clientPort\\\":3050, \\\"args\\\":\\\"--debug=[port]\\\"}]}\",\"list\",\"当应用启动后，该命令列出所有服务器信息。由于当执行此操作时，pinus是作为监控管理框架的一个客户端的，在连接注册到master上的时候，需要进行身份验证。默认生成的项目中，有一个默认的用户名admin，口令也为admin，因此在不指定用户名和口令的时候，默认使用的用户名和口令均为admin，下面的stop命令和kill命令均需要使用用户名和口令验证，默认值与此处相同。应用的管理用户可以通过修改config/adminUser.json文件进行配置,具体的配置格式可以参考pinus init生成的项目中的相关配置。\",\"执行本命令时，还需要指定master服务器的ip和port, 这样可以是的pinus list可以在任意地方执行。pinus stop/kill/add等也同样需要指定master服务器的ip和port，默认使用127.0.0.1:3005作为master服务器的地址。\",\"命令格式如下:\",\" pinus list [-u,--username <username>] [-p,--password <password>] [-h,--host <master-host>] [-P,--port <master-port>] \",\"stop\",\"stop用来停止当前应用，优雅地关闭应用。和kill命令不同，这种关闭首先会切断客户端与服务器的连接，然后逐一关闭所有服务器。如果指定了服务器serverId的话，则会关闭特定的服务器，而不是关闭所有的服务器。与list命令一样，需要权限验证，默认的用户名和密码均为admin,也需要指定master服务器的位置, 跟pinus list一样，默认使用127.0.0.1:3005。\",\"命令格式如下:\",\" pinus stop [-u,--username <username>] [-p,--password <password>] [-h,--host <master-host>] [-P,--port <master-port>] [<serverIds>...] \",\"kill\",\"该命令强制关闭应用。在本地进行应用开发过程中，如果遇到kill之后还有服务器进程没有关闭的情况，可以增加--force选项，强制关闭所有服务器进程。该操作相当地暴力，可能产生数据丢失等不好的影响，可以在开发调试时使用，不推荐在线上使用该命令。该命令同样也需要进行身份验证以及指定master服务器的位置，具体方式同list和stop。\",\"该命令需在项目的根目录或game-server下使用，命令格式如下:\",\" pinus kill [-u,--username <username>] [-p,--password <password>] [-h,--host <master-host>] [-P,--port <master-port>] [-f,--force] \",\"add\",\"该命令用来运行时动态增加服务器，与pinus list等命令类似，pinus add也需要身份验证以及指定master服务器的地址。具体命令格式如下:\",\" pinus add [-u,--username <username>] [-p,--password <password>] [-h,--host <master-host>] [-P,--port <master-port>] [<server-args>...] \",\"args参数是用来指定新增服务器的参数的，包括服务器类型，服务器id等， 支持一次增加一台或多台同类型的服务器，例子如下：\",\" pinus add host=127.0.0.1 port=8000++ clientPort=9000++ frontend=true clusterCount=3 serverType=connector pinus add host=127.0.0.1 port=8000 clientPort=9000 frontend=true serverType=connector id=added-connector-server \",\"masterha\",\"当启用了master服务器的高可用后，该命令用来启动master服务器的slave节点，需要在game-server/config目录下配置masterha.json。其他的命令行参数类似于pinus start，格式如下：\",\"pinus masterha [-d,--direcotry <code directory>] \",\"其他\",\"查看当前Pinus的版本时，可以使用如下命令:\",\"pinus --version \",\"查看pinus命令行工具的帮助时，可以使用如下命令:\",\"pinus --help pinus add --help pinus start --help \",\"注:\",\"一般来说在开发环境中，master服务器的地址会一直是127.0.0.1:3005,使用的管理用户的username和password直接使用默认的admin即可，这样的话，开发调试时，在执行具体的pinus命令的时候，maser服务器的地址信息以及管理用户信息都可以省略。\"]},\"234\":{\"h\":\"配置修改\",\"t\":[\"当我们的应用只有很少人用的时候，往往只需要一台服务器就可以支撑。但是随着用户的增加，一台服务器可能就无法承受同一时刻巨大的访问量，这需要我们对服务器进行伸缩扩充。\",\"多服务器版本的聊天应用在分支tutorial-multi-server上，你需要执行如下命令来切换到多服务器分支上：\",\"$ git checkout tutorial-multi-server \",\"在pinus中，对服务器的扩充非常简单，只需要修改一下配置文件，多添几台服务器配置就行了，对于我们的聊天例子来说，如下下面所示，在config/servers.json中的配置：\",\"{ \\\"development\\\":{ \\\"connector\\\":[ {\\\"id\\\":\\\"connector-server-1\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4050, \\\"clientPort\\\": 3050, \\\"frontend\\\": true}, {\\\"id\\\":\\\"connector-server-2\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4051, \\\"clientPort\\\": 3051, \\\"frontend\\\": true}, {\\\"id\\\":\\\"connector-server-3\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4052, \\\"clientPort\\\": 3052, \\\"frontend\\\": true} ], \\\"chat\\\":[ {\\\"id\\\":\\\"chat-server-1\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6050}, {\\\"id\\\":\\\"chat-server-2\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6051}, {\\\"id\\\":\\\"chat-server-3\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6052} ], \\\"gate\\\":[ {\\\"id\\\": \\\"gate-server-1\\\", \\\"host\\\": \\\"127.0.0.1\\\", \\\"clientPort\\\": 3014, \\\"frontend\\\": true} ] }, \\\"production\\\":{ \\\"connector\\\":[ {\\\"id\\\":\\\"connector-server-1\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4050, \\\"clientPort\\\": 3050, \\\"frontend\\\": true}, {\\\"id\\\":\\\"connector-server-2\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4051, \\\"clientPort\\\": 3051, \\\"frontend\\\": true}, {\\\"id\\\":\\\"connector-server-3\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":4052, \\\"clientPort\\\": 3052, \\\"frontend\\\": true} ], \\\"chat\\\":[ {\\\"id\\\":\\\"chat-server-1\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6050}, {\\\"id\\\":\\\"chat-server-2\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6051}, {\\\"id\\\":\\\"chat-server-3\\\", \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":6052} ], \\\"gate\\\":[ {\\\"id\\\": \\\"gate-server-1\\\", \\\"host\\\": \\\"127.0.0.1\\\", \\\"clientPort\\\": 3014, \\\"frontend\\\": true} ] } }\",\"如果添加了新的服务器类型, 需要在adminServer.json 添加一个新的配置.\",\"与前面的每个服务器类型仅有一台服务器的例子相比，这里我们的connector和chat都具有多台服务器。因此需要考虑对用户请求的服务器分配问题。\",\"对于gate服务器来说，在前面的例子中，由于只有一个connector服务器，所以直接返回仅有的一个服务器就行了，而这里有多台服务器，所以需要从中选择一个服务器的信息进行返回，这里我们增加了一个工具函数dispatch,它完成具体的分配运算，他使用用户的uid的crc32的校验码与connector服务器的个数取余，从而得到一个connector服务器，大致代码如下:\",\"// util/dispatcher.js module.exports.dispatch = function(key, list) { var index = Math.abs(crc.crc32(key)) % list.length; return list[index]; }; // gateHandler.js handler.queryEntry = function(msg, session, next) { // ... // get all connectors var connectors = this.app.getServersByType('connector'); // ... var res = dispatcher.dispatch(uid, connectors); // select a connector from all the connectors // do something with res };\",\"当客户端请求到来时，因为有多台chat服务器，需要选择由哪台chat服务器来服务，也就是前端服务器把这个客户端请求路由到哪个后端服务器上。配置路由使用application的route调用，这里我们也使用了前面提到的工具函数dispatch，使用同样的服务器分配策略，示例如下：\",\"// app.js // route definition for chat server var chatRoute = function(session, msg, app, cb) { var chatServers = app.getServersByType('chat'); if(!chatServers || chatServers.length === 0) { cb(new Error('can not find chat servers.')); return; } var res = dispatcher.dispatch(session.get('rid'), chatServers); cb(null, res.id); }; app.configure('production|development', function() { app.route('chat', chatRoute); });\",\"其中chatRoute就是路由函数，他接受四个参数，返回一个其选择的后端服务器id，四个参数中，第一个是专门用作路由计算的参数，前端服务器路由请求给后端服务器发rpc调用时，会使用session作为计算路由的参数，但是当用户自定定义rpc的时候，用户完全可以自己定义这个参数的含义，当然也可以使用session。第二个参数msg描述了当前rpc调用的所有信息，包括调用的服务器类型，服务器名字，具体的调用方法等信息。第三个参数是一个上下文变量，一般情况下会由app来充当，第四个是一个获得到后端服务器id后的回调函数。\",\"通过修改服务器的配置文件，并增加具体的路由选择配置，就可以很轻易地实现服务器的扩充。 对于我们这个应用来说，如果我们还想继续扩充我们的服务器，那么只需在servers.json里面继续增加服务器的配置就行了。\",\"如果我们一开始实现时就考虑以后的扩充，实现所有的路由选择函数的话，那么以后当需要扩充服务器的时候，只需要在servers.json里面增加相应的配置就行了。\",\"关于客户端请求的路由，你可能会问，为什么我们在单服务器的那个例子里，没有给chat定义router。那是因为如果我们不定义router的话，pinus会使用一个默认的router完成路由，因为只有一台chat服务器，那么pinus总会把所有的对其的请求路由给这个服务器，所以，我们在前一个例子中，就省略掉了chat的路由配置。\",\"实际应用中，我们一般都要自己实现router,而不使用pinus默认的。使用多台服务器要考虑负载平衡，同时要尽量使得服务器的服务是无状态的。我们chat的例子中，定义的router就是使用了用户的rid的crc校验码作为键值对当前的所有chat服务器个数做了一个简单的hash运算，以使得所有的chat服务器的负载尽可能平衡。\",\"在这部分，我们实现了对服务器的扩充，它是如此的简单，只需要修改相应的服务器配置即可。下面我们将尝试使用pinus的filter机制继续完善我们的聊天应用。\"]},\"235\":{\"h\":\"\"},\"236\":{\"h\":\"1.获取 pomelo 运行的环境\",\"t\":[\"源码中设置运行环境的位置 lib/util/appUtil.js\",\"// 193 行 var setupEnv = function(app, args) { app.set(Constants.RESERVED.ENV, args.env || process.env.NODE_ENV || Constants.RESERVED.ENV_DEV, true); };\",\"其中 Constants.RESERVED.ENV 的值为 env，Constants.RESERVED.ENV_DEV 的值为 development。 使用 pomelo start 方式启动时如果没有传入 --env 参数，则会先检查 process.env.NODE_ENV 环境变量是否设置，如果没有则默认为 development。如果是通过 pomelo start --env production方式启动则是 production。\",\"获取运行环境的方法为：\",\"app.get('env')\"]},\"237\":{\"h\":\"2.获取项目的根目录\",\"t\":[\"app.get('base') // 或 app.getBase()\",\"即 app.js 所在的目录\"]},\"238\":{\"h\":\"3.监听所有 server 启动完成后事件\",\"t\":[\"如果需要在所有服务器启动完成后，再执行某些操作，可以通过监听 start_all 事件来实现。\",\"// app.js app.event.on('start_all', () => { console.log(`所有服务启动完成了`) })\",\"app.event 其它事件\",\"bind_session\",\"close_session\",\"add_servers\",\"remove_servers\",\"replace_servers\",\"add_crons\",\"remove_crons\",\"start_all\",\"start_server\"]},\"239\":{\"h\":\"4.获取客户端 ip 和端口\",\"t\":[\"const ip = session.__session__.__socket__.remoteAddress.ip const port = session.__session__.__socket__.remoteAddress.port\"]},\"240\":{\"h\":\"常见术语\",\"t\":[\"使用pinus框架的话，有pinus自己的术语，这里先对术语做一些简单的解释，给读者一个直观的概念，不至于看到相应术语时产生迷惑。\"]},\"241\":{\"h\":\"gate服务器\",\"t\":[\"一个应用的gate服务器，一般不参与rpc调用，也就是说其配置项里可以没有port字段，仅仅有clientPort字段，它的作用是做前端的负载均衡。客户端往往首先向gate服务器发出请求，gate会给客户端分配具体的connector服务器。具体的分配策略一般是根据客户端的某一个key做hash得到connector的id，这样就可以实现各个connector服务器的负载均衡。\"]},\"242\":{\"h\":\"connector服务器\",\"t\":[\"connector服务器接收客户端的连接请求，创建与客户端的连接，维护客户端的session信息。同时，接收客户端对后端服务器的请求，按照用户配置的路由策略，将请求路由给具体的后端服务器。当后端服务器处理完请求或者需要给客户端推送消息的时候，connector服务器同样会扮演一个中间角色，完成对客户端的消息发送。connector服务器会同时拥有clientPort和port，其中clientPort用来监听客户端的连接，port端口用来给后端提供服务。\"]},\"243\":{\"h\":\"应用逻辑服务器\",\"t\":[\"gate服务器和connector服务器又都被称作前端服务器，应用逻辑服务器是后端服务器，它完成实际的应用逻辑，提供服务给客户端，当然客户端的请求是通过前端服务器路由过来的。后端服务器之间也会通过rpc调用而有相互之间的交互。由于后端服务器不会跟客户端直接有连接，因此后端服务器只需监听它提供服务的端口即可。\"]},\"244\":{\"h\":\"master服务器\",\"t\":[\"master服务器加载配置文件，通过读取配置文件，启动所配置的服务器集群，并对所有服务器进行管理。\"]},\"245\":{\"h\":\"rpc调用\",\"t\":[\"pinus中使用rpc调用进行进程间通信，在pinus中rpc调用分为两大类，使用namespace进行区分，namespace为sys的为系统rpc调用，它对用户来说是透明的，目前pinus中系统rpc调用有：\",\"后端服务器向前端服务器请求session信息\",\"后端服务器通过channel推送消息时对前端服务器发起的rpc调用\",\"前端服务器将用户请求路由给后端服务器时也是sys rpc调用\",\"除了系统rpc调用外，其余的由用户自定义的rpc调用属于user namespace的rpc调用，需要用户自己完成rpc服务端remote的handle代码，并由rpc客户端显式地发起调用\"]},\"246\":{\"h\":\"route,router\",\"t\":[\"route用来标识一个具体服务或者客户端接受服务端推送消息的位置，对服务端来说，其形式一般是< ServerType >、< HandlerName >、< MethodName >，例如\\\"chat.chatHandler.send\\\", chat就是服务器类型，chatHandler是chat服务器中定义的一个Handler，send则为这个Handler中的一个handle方法。对客户端来说，其路由一般形式为onXXX，当服务端推送消息时，客户端会有相应的回调。 一般来说具体的同类型应用服务器都会有多个，当客户端请求到达后，前端服务器会将用户客户端请求派发到后端服务器，这种派发需要一个路由函数router，可以粗略地认为router就是根据用户的session以及其请求内容，做一些运算后，将其映射到一个具体的应用服务器id。可以通过application的route调用给某一类型的服务器配置其router。如果不配置的话，pinus框架会使用一个默认的router。pinus默认的路由函数是使用session里面的uid字段，计算uid字段的crc32校验码，然后用这个校验码作为key，跟同类应用服务器数目取余，得到要路由到的服务器编号。注意这里有一个陷阱，就是如果session没有绑定uid的话，此时uid字段为undefined，可能会造成所有的请求都路由到同一台服务器。所以在实际开发中还是需要自己来配置router。\"]},\"247\":{\"h\":\"Session, FrontendSession, BackendSession， SessionService， BackendSessionService\",\"t\":[\"在pinus框架中，有这三个session的概念，同时又有两个service： SessionService和BackendSessionService，也是最令人迷惑的地方，这里尝试给出一些说明，让你的理解更清晰一些： Session指的是一个客户端连接的抽象，它的大致字段如下：\",\"{ id : <session id> // readonly frontendId : <frontend server id> // readonly uid : <bound uid> // readonly settings : <key-value map> // read and write __socket__ : <raw_socket> __state__ : <session state> // ... }\",\"id是这个session的id，是全局唯一的，一般使用自增的方式来生成;\",\"frontendId是维护这个session的前端服务器的id；\",\"uid是这个session所绑定的用户id;\",\"__socket__是底层原生socket的引用;\",\"__state__用来指明当前session的生命周期状态。\",\"settings维护一个key-value map，用来描述session的一些自定义属性，比如聊天应用中的房间号就可以看作是session的一个自定义属性。\",\"从上面的分析看，一个session一旦建立，那么id， frontendId，__socket__, __state__, uid都是确定的，都应该是只可读不可写的。而settings也不应该被随意的修改。 因此，在前端服务器中，引入了FrontendSession, 可以把它看作是一个内部session在前端服务器中的傀儡，FrontendSession的字段大致如下:\",\"{ id : <session id> // readonly frontendId : <frontend server id> // readonly uid : <bound uid> // readonly settings : <key-value map> // read and write }\",\"其作用：\",\"通过FrontendSession可以对settings字段进行设置值，然后通过调用FrontendSession的push方法，将设置的settings的值同步到原始session中;\",\"通过FrontendSession的bind调用，还可以给session绑定uid;\",\"当然也可以通过FrontendSession访问session的只读字段，不过对FrontendSession中与session中相同的只读字段的修改并不会反映到原始的session中。\",\"SessionService维护所有的原始的session信息,包括不可访问的字段，绑定的uid以及用户自定义的字段。\",\"下面再说BackendSession，与FrontendSession类似，BackendSession是用于后端服务器的，可以看作是原始session的代理，其数据字段跟FrontendSession基本一致。\",\"BackendSession是由BackendSessionService创建并维护的，在后端服务器接收到请求后，由BackendSessionService根据前端服务器rpc的参数，进行创建。对BackendSessionService的每一次方法调用实际上都会生成一个远程调用，比如通过一个sid获取其BackendSession。同样，对于BackendSession中字段的修改也不会反映到原始的session中，不过与FrontendSession一样，BackendSession也有push，bind，unbind调用，它们的作用与FrontendSession的一样，都是用来修改原始session中的settings字段或者绑定/解绑uid的，不同的是BackendSession的这些调用实际上都是名字空间为sys的远程调用。\"]},\"248\":{\"h\":\"Channel\",\"t\":[\"channel可以看作是一个玩家id的容器，主要用于需要广播推送消息的场景。可以把某个玩家加入到一个Channel中，当对这个Channel推送消息的时候，所有加入到这个Channel的玩家都会收到推送过来的消息。一个玩家的id可能会被加入到多个Channel中，这样玩家就会收到其加入的Channel推送过来的消息。需要注意的是Channel都是服务器本地的，应用服务器A和B并不会共享Channel，也就是说在服务器A上创建的Channel，只能由服务器A才能给它推送消息。\"]},\"249\":{\"h\":\"request, response, notify, push\",\"t\":[\"pinus中有四种消息类型的消息，分别是request，response，notify和push，客户端发起request到服务器端，服务器端处理后会给其返回响应response;notify是客户端发给服务端的通知，也就是不需要服务端给予回复的请求;push是服务端主动给客户端推送消息的类型。在后面的叙述中，将会使用这些术语而不再作解释。\"]},\"250\":{\"h\":\"filter\",\"t\":[\"filter分为before和after两类，每类filter都可以注册多个，形成一个filter链，所有的客户端请求都会经过filter链进行一些处理。before filter会对请求做一些前置处理，如：检查当前玩家是否已登录，打印统计日志等。after filter是进行请求后置处理的地方，如：释放请求上下文的资源，记录请求总耗时等。after filter中不应该再出现修改响应内容的代码，因为在进入after filter前响应就已经被发送给客户端。\"]},\"251\":{\"h\":\"handler\",\"t\":[\"handler是实现具体业务逻辑的地方，在请求处理流程中，它位于before filter和after filter之间，handler的接口声明如下：\",\"handler.methodName = function(msg, session, next) { // ... }\",\"参数含义与before filter类似。handler处理完毕后，如有需要返回给客户端的响应，可以将返回结果封装成js对象，通过next传递给后面流程。\"]},\"252\":{\"h\":\"error handler\",\"t\":[\"error handler是一个处理全局异常的地方，可以在error handler中对处理流程中发生的异常进行集中处理，如：统计错误信息，组织异常响应结果等。error handler函数是可选的，如果需要可以通过\",\"app.set('errorHandler', handleFunc);\",\"来向pinus框架进行注册，函数声明如下：\",\"errorHandler = function(err, msg, resp, session, next) { // ... }\",\"其中，err是前面流程中发生的异常；resp是前面流程传递过来，需要返回给客户端的响应信息。其他参数与前面的handler一样。\"]},\"253\":{\"h\":\"component\",\"t\":[\"pinus 框架是由一些松散耦合的component组成的，每个component完成一些功能。整个pinus框架可以看作是一个component容器，完成component的加载以及生命周期管理。pinus的核心功能都是由component完成的，每个component往往有start，afterStart，stop等调用，用来完成生命周期管理。\"]},\"254\":{\"h\":\"admin client, monitor, master\",\"t\":[\"在对pinus服务器进行管理的时候，有三个概念admin client， monitor， master。\",\"monitor运行在各个应用服务器中，它会向master注册自己，向master上报其服务器的信息，当服务器群有变化时，接收master推送来的变化消息，更新其服务器上下文。\",\"master运行在应用服务器中，它会收集整个服务器群的信息，有变化时会将变化推送到各个monitor；同时，master还接受admin client的请求，按照client发出的命令，执行对应的操作，如查询整个服务器群的状态，增加一个服务器等。\",\"client独立运行自己的进程，它会发起到master的连接，然后通过对master发出请求或者命令，来管理整个服务器群。目前工具pomleo-cli就是这样的一个客户端。\"]},\"255\":{\"h\":\"admin module\",\"t\":[\"在pinus中，module特指服务器监控管理模块，与component类似，不过在module中实现的是监控逻辑，比如收集进程状态等。用户在使用时，可以通过application的registerAdmin注册管理模块，实现用户自己定制的监控管理功能。每一个module中都会定义下面四种回调函数，不过都是可选的：\",\"masterHandler(agent, msg, cb) 当有应用服务器给master发监控数据时，这个回调函数会由master进程进行回调，完成应用服务器的消息处理;\",\"monitorHandler(agent, msg, cb) 当有master请求应用服务器的一些监控信息时，由应用服务器进行回调，完成对master请求的处理;\",\"clientHandler(agent, msg, cb）当由管理客户端向master请求服务器群信息时，由master进程进行回调处理客户端的请求。\",\"start(cb) 当admin module，注册加载完成后，这个回调会被执行，在这里可以做一些初始化工作。\"]},\"256\":{\"h\":\"plugin\",\"t\":[\"plugin是pinus 0.6加入的全新的扩展机制，一个plugin由多个component以及一些事件响应处理器组成。它提供了一种很灵活的机制来扩展pinus。不仅可以提供component的功能，还可以对整个框架的全局事件作出响应处理。\",\"上面简要地介绍了pinus中的一些术语，因为在下面的例子中，会涉及到这些术语，不至于当出现这些术语时一头雾水。下面我们就正式进入我们的例子，获取源码并安装我们的例子应用。\"]},\"257\":{\"h\":\"app.js文件\",\"t\":[\"在这部分，我们来介绍如何配置框架。我们知道在pinus中，可以配置各个组件的选项，加载配置文件，开启pinus的特性等等。这一切配置都是在game-server/app.js中进行的。实际上，在pinus的应用中有两个app.js,一个在game-server目录下，一个在web-server目录下。其中game-server下的app.js是整个游戏服务器的入口和配置点，而web-server下的app.js则是web服务器入口。在这里，我们仅仅介绍如何在game-server/app.js中配置框架以及pinus框架使用的服务器配置文件的格式。\",\"app.js是运行pinus项目的入口，在app.js中，首先会创建一个app的实例，这个app作为整个框架的配置上下文来使用,用户可以通过这个上下文，设置一些全局变量，加载配置信息等等操作。app.js中的一般代码如下：\",\"var pinus = require('pinus'); var app = pinus.createApp(); // some configuration app.configure(<env>, <serverType>, function() { }); app.configure(....); app.set(...); app.route(...); // ... // start app app.start();\",\"首先会创建一个app实例，然后是一些通过app这个上下文对框架的一些配置以及一些初始化操作，最后启动应用。这里我们将主要关注对框架的配置部分。\",\"服务器的配置主要由configure()方法完成，完整的app.configure配置参数如下：\",\"app.configure([env], [serverType], [function]);\",\"前两个参数是可选的， 以下是参数说明：\",\"env: 运行环境， 可设成development, production或development|production\",\"serverType: 服务器类型，设置了这个参数只会对当前参数类型服务器做初始化，不设置则对所有服务器执行初始化function\",\"function: 具体的初始化操作， 内部可以写任何对框架的配置操作逻辑。\",\"以下是一些配置实例：\"]},\"258\":{\"h\":\"实例一\",\"t\":[\"app.configure(function(){ // do some configuration });\",\"这种配置将对所有模式(development/production)下的所有服务器生效，它等价于在app.js中，不调用configure，直接执行相关的配置，代码示例如下：\",\"app.configure(function() { doSomeConfiguration(); }); // <==> doSomeConfiguration(); // equivalent to above `app.configure`\"]},\"259\":{\"h\":\"实例二\",\"t\":[\"app.configure('development', function(){ // do some configuration just for development env only. });\",\"这种配置则只针对development模式下所有服务器生效，同样在这里可以填入任何配置。\"]},\"260\":{\"h\":\"实例三\",\"t\":[\"app.configure('development', 'chat', function(){ // do some configuration just for development env and chat server only. });\",\"这种配置则针对development模式下的chat服务器生效，这里同样可以填入任何配置。\"]},\"261\":{\"h\":\"配置内容\",\"t\":[\"在configure中用户可以根据应用的不同需求在不同的服务器中进行相关配置，例如在全局设置mysql参数：\",\"app.configure('development|production', function(){ app.loadConfig('mysql', app.getBase() + '/config/mysql.json'); });\",\"另外也可以选择在具体的服务器中进行应用的配置，例如可以做一些初始化操作：\",\"var initArea = function(){ //area init }; app.configure('development|production', 'area', function(){ initArea(); });\",\"而更多地，可以在configure中，针对不同的服务器，不同的环境，对框架进行不同的配置。这些配置包括设置一个上下文变量供应用使用，开启一些功能选项，配置加载一个自定义的component，针对不同的服务器，配置filter等等配置操作，如下所示:\",\"app.configure('development|production', 'chat', function() { app.route('chat', routeUtil.chat); }); app.enable('systemMonitor'); app.configure('development|production','gate', function() { app.set('connectorConfig', { connector: pinus.connectors.hybridconnector, heartbeat: 3 }); }); // configure connector for gate server\",\"下面就对这些框架配置作些介绍。\",\"上下文对象app提供了设置和获取应用变量的方法，其签名为：\",\"app.set(name, value, [isAttach]); app.get(name);\",\"如上，对于set来说，有三个参数，分别是变量名，变量的值以及一个可选的参数isAttach。如果isAttach设置为true的话，那么表示将变量attach到app对象上，作为app的一个属性，以后对此变量的访问，可以直接通过app.name进行访问，这个参数默认为false。\",\"对于get调用，就是一个很简单的通过变量名获取变量值。\",\"示例代码如下:\",\"app.set('server',server); var server = app.get('server'); app.set('service', service, true); var service = app.service;\",\"在pinus中框架中，可以通过app.set给pinus的组件配置相应的选项，也可以通过app.get获得到pinus框架加载的服务，如backendSessionService，channelService等等，示例代码如下:\",\"app.set('connectorConfig', { // ... }); // set opts for connector component var backendSessionService = app.get('backendSessionService'); // get backendSessionService instance\",\"如果用户需要自己设置一些自己的自定义变量，也可以通过app这个上下文实现获取和设置。\",\"应用的功能选项配置可以通过enable和disable来打开和关闭。另外，用户可以通过enabled和disabled对相应的状态进行判断，如果该状态存在则返回true,反之返回false。例如要打开或者关闭应用的rpc debug log并查看其状态是否存在, 示例代码如下：\",\"app.enable('rpcDebugLog'); app.enabled('rpcDebugLog'); // return true app.disable('rpcDebugLog'); app.disabled('rpcDebugLog'); //return true\",\"在pinus框架中，当需要做更详细的监控管理的时候，可以打开systemMonitor选项，打开systemMonitor选项会使得默认加载额外的admin-module，示例代码如下：\",\"app.enable('systemMonitor'); // enable system monitor\",\"同样，用户可以设置自己应用的一些功能选项，并通过enable，disable，enabled，disabled来进行开启关闭以及检查。\",\"用户可以通过loadConfig加载配置文件，加载后文件中的参数将直接挂载到app对象上。例如需要加载mysql.json文件，示例代码如下：\",\"{ \\\"development\\\": { \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":\\\"3306\\\", \\\"database\\\":\\\"pinus\\\" } }\",\"然后，加载完成后，就可以直接通过app对象，访问具体的配置参数，示例代码如下：\",\"app.loadConfig('mysql', path.resolve('./config/mysql.json')); var host = app.get('mysql').host; //返回 127.0.0.1\",\"当然，用户可以使用loadConfig的调用加载任何json格式的配置文件，用于其他的目的，并能通过app进行访问。需要注意的是所有的json配置文件中都要指定具体的模式，也就是development或者production。\",\"pinus的功能由其component提供，pinus会默认根据服务器的类型加载不同的内建组件，另外用户可以根据应用需求自定义组件。组件的加载主要是使用load方法，示例代码如下：\",\"app.load(HelloWorldComponent, [opts]); //opts is optional\",\"pinus还可以加载自定义的插件，一个插件由多个component和一组对应用的事件进行响应的事件处理组成，加载插件使用app.use, 示例代码如下：\",\"// app.use(<plugin>, <plugin options>); var statusPlugin = require('pinus-status-plugin'); app.use(statusPlugin, { status:{ host: '127.0.0.1', port: 6379 } });\",\"router主要负责请求路由信息的维护，路由计算，路由结果缓存等工作，并能根据需要切换路由策略，更新路由信息等。用户可以自定义不同服务器的不同路由规则，然后进行配置即可。以下示例为chat服务器配置路由规则：\",\"//routeUtil.js app.route('chat', routeUtil.chat);\",\"在routerUtil中可以具体的定义不同服务器的路由规则，例如：\",\"routeUtil.chat = function(session, msg, app, callback) { var chatServers = app.getServersByType('chat'); if (!chatServers) { callback(new Error('can not find chat servers.')); return; } var server = dispatcher.dispatch(session.rid, chatServers); callback(null, server.id); };\",\"在路由函数中，通过最后的回调函数中返回服务器的id即可，这里使用dispatcher对session.rid进行hash处理从而完成服务器选择。用户可以根据自己的实际需求进行配置相应的router。\",\"当一个客户端请求到达服务器后，经过filter链和handler处理，最后生成响应返回给客户端。handler是业务逻辑实现的地方，filter则是执行业务前进行预处理和业务处理后清理的地方。为了开发者方便，系统内建提供了一些filter，例如：serialFilter,timeFilter，timeOutFilter，另外用户可以根据应用的需要自定义filter。配置filter的调用示例如下：\",\"app.filter(pinus.filters.serial()); // use builtin filter: serial filter app.filter(FooFilter); // use FooFilter as a before & after filter app.before(beforeFilter); // use beforeFilter as a before filter app.after(afterFilter); // use afterFilter as an after filter\",\"用户可以自定义自己的filter，然后通过app.filter调用，将其配置进框架。如果仅仅是before filter，那么就调用app.before，如果是after filter，就调用app.after，如果既定义了before filter又定义了after filter，那么就可以使用app.filter调用了。\",\"pinus 提供了监控管理框架，可以给其配置不同的admin module，具体的配置使用调用app.registerAdmin，示例代码如下：\",\" app.registerAdmin(require('../modules/watchdog'), {app: app, master: true});\",\"用户也可以自定义自己的module，然后通过registerAdmin调用，加载到框架。\",\"pinus的配置文件都在game-server/config目录下，其中有两个很重要的服务器配置文件servers.json和master.json。 所有的配置文件中，都分为development和production两种配置模式，以对应具体的是开发调试环境还是具体的产品环境，其配置字段如下:\",\"master.json中:\",\"id: master 服务器的服务器id，是一个字符串;\",\"host: master 服务器的host，可以是一个ip或域名;\",\"port: master服务器开的端口，默认是3005;\",\"args: 可选的，在这里配置的参数选项，是用来给node/v8使用的，如你可以配置\\\"args\\\": \\\"--debug=5858\\\",这样的话，就可以开启调试。\",\"servers.json中:\",\"id: 应用服务器的服务器id，是一个字符串;\",\"host: 应用服务器的host，可以是一个ip或域名;\",\"port: 接受rpc请求时使用的端口号，对于后端服务器来说必须的，对于前端服务器来说，如果仅仅像gate服务器那样，并不维护具体的客户端连接，仅仅给客户端返回可以连接的前端服务器的地址信息的话，port则是可以省略的。一般来说，port不应该省略;\",\"frontend: 是一个boolean值，对于前端服务器，配置为true，如果省略的话，则默认为false。后端服务器不配置;\",\"clientPort: 这是前端服务器接受客户端连接启用的端口，对于后端服务器来说，不需要配置，对于前端服务器，则是必需的。\",\"max-connections: 可选的，用来说明前端服务器最多承受的连接数，如果超过了这个连接数，则后来的连接将会被connector拒绝;\",\"args: 可选的，同master中的语义一样。\",\"在这部分，介绍了在app.js如何配置整个框架并在最后给出了服务器配置文件的格式。通过application的configure等调用，可以给不同的服务器完成不同的配置，比如，配置router，配置filter，为特定类型的服务器加载自定义的component等等。同样，在这里，也可以做一些初始化的加载操作，比如，当应用需要数据库时，可以加载mysql的配置文件，并将配置信息设置到app上下文中，这样在应用中，就可以通过app直接获取到对应的配置信息。\"]},\"262\":{\"h\":\"Application的初始化\",\"t\":[\"使用pinus开发应用时，我们一直关注的是给框架填入相应的回调，给app配置一些上下文。而没有太多关心整个框架的驱动力量。 在我们启动应用的时候，我们会在game-server目录下执行pinus start，然后就能看到很多log信息，这样就启动了很多服务器。但是我们并没有太多关心框架是如何做到这一点的，在这部分，将试图向你讲述pinus框架是如何驱动的。\",\"首先看下图:\",\"ps_tree\",\"这张图是以chat为例，当chat应用启动后，使用命令\",\"pstree -au \",\"得到的进程树的一部分，我们从图上可以清楚地看出，pinus start调用进程会创建子进程，子进程执行的是node app.js env=development,然后这个子进程又会创建很多子进程，这些子进程执行的跟原进程同样的文件，只是多了更多的参数，它们后面会有一些诸如id，serverType，port等这样的参数。\",\"好了，现在我们可以做一些简单的解释了，pinus start的进程直接创建的那个子进程，实际上就是我们的master服务器进程，而由master服务器创建的那些子进程，他们执行的是类似于\",\"`node <BasePath>/app.js env=development id=chat-server-1 ...` \",\"这样命令的则是由master服务器创建的子进程，这些子进程也就是我们的应用服务器。当然，这里的进程都在一台主机上，所以会有父子关系，也就是说master进程是其他应用服务器的父进程。如果各个进程分布在不同的物理主机上的话，pinus默认会使用ssh的方式远程启动相应的服务器，那样的话，master进程与应用程序进程就不会再有父子关系了。 下面我们从pinus.createApp调用开始，来梳理pinus的启动过程。 首先我们使用pinus start，此时命令行工具pinus会检测start后面有没有其他参数，比如是否需要daemon的形式启动，后面的参数是否指定了env等，在这里，我们仅仅使用了pinus start，后面没有跟任何其他参数，此时命令行工具将会为其添加一个默认的env参数，即 env=develpment，然后就启动了node.js进程，如下：\",\"`node <BasePath>/app.js env=development` \",\"此时pinus start就以没有过多参数的方式启动了app.js。\",\"接下来我们来分析app.js的执行:\",\"init_app\",\"如上面的时序图所示：\",\"pinus调用createApp()\",\"pinus的createApp调用中会调用app的init方法，完成对app的初始化\",\"app会使用appUtil提供的defaultConfiguration来完成自己的初始化配置\",\"appUtil的defaultConfiguration会调用app的一些初始化方法，这些方法包括setEnv，loadMaster，loadServers，parseArgs，configLogger。这里setEnv操作会将当前的env设定为development， loadMaster调用会加载master服务器的配置信息，loadServers会加载所有的应用服务器的配置信息。parseArgs是一个很关键的操作，由于我们在启动参数中仅仅指定了env，其他的参数并没有指定，此时pinus认为目前启动的不是应用服务器，而是master服务器。这样，当前的进程将使用master的配置信息，并将其自己的serverId，serverType等参数，均设置为master服务器所有的。实际上，对于应用服务器来说，如我们在上面进程树图中看到的那样，如果启动的是应用服务器的话，其node app.js后面将会带有很多参数，包括id，serverType，port，clientPort等参数，这些参数在parseArgs这一步将会被处理，从而确定当前服务器的id，当前服务器的类型以及其他所必须的配置信息。\",\"在执行完上面的操作之后，app进入到INITED状态，同时pinus的createApp返回。\",\"在pinus的createApp()返回后，我们在app.js里，往往会对app进行一些配置，比如调用app.set设置一个上下文变量的值，app.route调用配置个路由等。\",\"当执行完上面的用户编辑的代码后，将会进入到的是 app.start()调用, 当app.start调用时，首先会加载默认的组件，对于master服务器来说，其加载的默认组件为master组件和monitor组件。下面主要分析master组件在启动中的作用，分析一下master组件的启动过程：\",\"init_app\",\"如上面的时序图所示:\",\"首先app.start()首先会加载默认组件，由于没有指定服务器类型，此时会默认为master类型，拿到master的配置信息，加载Master组件，由于Master组件是以工厂函数的方式导出的，故会创建Master组件，Master组件的创建过程会创建MasterConsole，MasterConsole会创建MasterAgent，MasterAgent会创建监听Socket,用来监听应用服务器的监控和管理请求的。\",\"在加载完所有的组件包括Master组件后，会启动所有的组件，对于Master服务器来说，会启动Master组件和Monitor组件，也就是调用相应组件的start方法，这里先讨论Master组件。Master组件会注册默认的Module，这是通过Application的registerAdmin实现的，这里多说一句，如果用户自定义了Module，可以在app.start调用之前调用registerAdmin，将自定义的Module挂到app上。\",\"在将所有默认的Module都挂到app上后，Master组件会启动MasterConsoleService。在启动MasterConsoleService时，MasterConsoleService会从app处拿到所有挂到其上面的Module，然后将Module注册到自己的Module仓库中，这一步实际上就是Module放到一个以ModuleId做键的Map中，以使得后来有请求时，可以直接进行查询回调。\",\"然后，开启MasterAgent的监听，这个时候，Master组件就已经可以接受监控管理请求了。\",\"在开启监听后，下一步就是enable所有的Module, 主要就是根据Module的参数type和interval，来确定Module的回调触发方式，是周期性的由Master来拉，还是周期性的由Monitor来推，还是不是周期性的触发，使用其他的事件触发方式。如果使用了周期性的触发的话，将会对周期性的事件进行调度，调度是由pinus-schedule提供的。\",\"下一步，将启动所有的Module，如果有Module定义了start方法的话，将在这步被回调，pinus核心中的Module console就提供了start方法。到这一步为止，Master组件已经开启了请求监听，挂载好了每一个Module相应的回调函数，并且对需要周期执行的监控任务已经完成了调度。\",\"是时候启动所有的应用服务器了。当Master组件完成了所有的其自身的Module的初始化和开启任务后，Master会委托Starter来完成整个服务器群的启动。需要注意：由于每一个服务器一旦启动，就会向Master报告其状态，所以Master组件必须在启动应用服务器之前就准备好对来自服务器的监控数据作出回应，因此，这也是为什么Master组件在完成很多其自身的操作后，才去启动应用服务器。\",\"我们知道，在app初始化的时候，master服务器已经加载了所有服务器的配置信息，每一个服务器要启动的地址，服务器的类型，服务器应该监听的端口等信息。Starter在启动这些服务器的时候将会分析服务器是在本地启动还是远程启动，如果在本地启动的话，将会起一个子进程，如果在远程启动的话，会使用ssh的方式远程启动相应的进程。这个时候的启动命令行，将会附带更多的参数，对于chat例子中来说，其chat-server启动命令行大概如下面的样子:\",\"node <BasePath>/app.js env=development id=chat-server-1 host=127.0.0.1 port=6050 serverType=chat\",\"此后，应用服务器将会被启动。\",\"在调用了Master组件的start方法后，由于Master方法没有定义afterStart方法，故此时Master组件的启动过程已经完毕，Master组件将会监听来自其他服务器的Monitor发出的请求或者给其他的Monitor推送通知，当然这些操作都是在对应的Module定义的回调中进行的。\",\"对于应用服务器来说，与master服务器一样，会执行app.js,也会创建app，加载一些配置信息，setEnv等。应用服务器与Master服务器在App init阶段唯一的不同就是，Master服务器的启动命令行中，没有具体服务器参数，使得pinus会把其当作Master服务器启动，而应用服务器的启动命令行，则包含了全部的应用服务器参数，因此pinus会按照他们具体的配置信息为其默认加载不同的组件，对于master服务器来会加载Master组件，对于应用服务器来说，则会根据应用服务器的配置不同，默认加载相应的组件。\",\"在创建完app，并完成初始化后，app.js中的对app进行配置的代码会执行，这里包括app.route调用，app.set调用等等。\",\"在执行完用户的配置代码后，app.js进入到Application.start调用，在这里pinus框架会针对每一种服务器将默认加载不同的组件。 对于pinus来说，所有服务器的执行都可以看作是对其组件进行生命周期管理的过程。每一个pinus的组件都会定义start，afterStart，stop方法，用来框架进行生命周期管理时候回调。下面展示了其调用顺序:\",\"app\",\"pinus框架总是先顺序地调用所有组件的start方法后，才去顺序的调用每个组件的afterStart方法。设置afterStart方法的原因是，可能有组件互相依赖的时候，某些组件的某些启动过程依赖于另外某个组件的启动过程时，可以将有依赖的部分放到afterStart方法里面，这样可以使得在有依赖的部分执行时，其所依赖的组件已经完成初始化。或者还有一些需要等待全局就绪的工作也可以放到这里来做。\",\"不同的组件在启动时会开启不同的功能，关于应用服务器加载的组件的具体启动过程，由于涉及到其提供的功能细节，将在后面介绍，这里关注的不是组件的细节功能，而是整个应用程序的驱动方式。\",\"当所有组件的afterStart方法都调用完毕后，应用服务器启动完成。此时，由于其加载的组件开启了监听接口，应用服务器将接受外来的请求，然后进入相应的回调。\",\"当我们调用了pinus start启动了master服务器，master服务器又启动了所有的应用服务器后，所有的服务器都进入到自己的事件循环中，接受外来的请求事件或者是自身的定时器事件执行相应的回调方法。\",\"当我们想关闭服务器时候，我们可以很暴力地使用Ctrl+C直接结束掉所有的进程，也可以优雅地通过命令行工具执行pinus stop进行关闭。实际上，命令行工具是作为pinus管理框架中的client角色的，它使用的Module是pinus内建的console，通过console Module给master服务器发出关闭服务器请求，master会给每一个服务器发出停止通告。每个应用服务器接收到stop通告后，回调函数里面会调用app.stop, app.stop则会如上面图中那样，按照加载的逆序分别调用每一个组件的stop回调方法。当所有的组件的stop调用完后，服务器完成关闭。master在发出停止通告后，自己稍作等待也调用app.stop,stop掉自己加载的组件完成关闭。\",\"我们在这里阐述了pinus应用从启动到关闭的整个流程，pinus应用的整个流程实际就是对其所加载的组件的生命周期的管理过程，pinus的核心功能都由其组件提供。每一个组件在导出的时候，往往导出的都是一个工厂函数，通过工厂函数，app在加载的时候才会创建相应的组件。app在整个pinus应用中，并不执行逻辑业务，它仅仅被当作一个全程驱动的入口以及一个上下文环境。对整个应用其关键性的调用为app的start调用和app.stop调用，其中app.start启动服务器，app.stop关闭服务器。app.start一般都是在app.js中由用户来调用，而app.stop一般都是系统的某个组件接受到停止服务器请求时进行的异步回调。关于具体加载的一些组件的功能，将在相关部分进行详述。\"]},\"263\":{\"h\":\"\"},\"264\":{\"h\":\"1、配置adminServer.json，添加serverType\",\"t\":[\"[{ \\\"type\\\": \\\"connector\\\", \\\"token\\\": \\\"agarxhqb98rpajloaxn34ga8xrunpagkjwlaw3ruxnpaagl29w4rxn\\\" }]\"]},\"265\":{\"h\":\"2、创建app/servers/{serverType}目录，pinus会去自动读取此目录下的handler、remote、cron等目录，处理相应功能。\"},\"266\":{\"h\":\"3、servers.json中添加指定的serverType配置\",\"t\":[\"{ \\\"development\\\": { \\\"connector\\\": [{ \\\"id\\\": \\\"connector-server-1\\\", \\\"host\\\": \\\"127.0.0.1\\\", \\\"port\\\": 3150, \\\"clientHost\\\": \\\"127.0.0.1\\\", \\\"clientPort\\\": 3010, \\\"frontend\\\": true }] }, \\\"production\\\": { \\\"connector\\\": [{ \\\"id\\\": \\\"connector-server-1\\\", \\\"host\\\": \\\"127.0.0.1\\\", \\\"port\\\": 3150, \\\"clientHost\\\": \\\"127.0.0.1\\\", \\\"clientPort\\\": 3010, \\\"frontend\\\": true }] } }\"]},\"267\":{\"h\":\"应用入口设置\",\"t\":[\"在使用pinus框架创建的项目中有两个app.js，它们分别在game-server目录和web-server目录下，分别对应游戏服务器与web服务器，并且它们都是运行各自服务器的入口。以下内容主要是针对game-server中的app.js的配置说明。\",\"app.js是运行pinus项目的入口，在使用pinus命令行创建一个新项目时，会根据项目的相关信息生成默认的app.js文件。其主要内容如下：\",\"var pinus = require('pinus'); var app = pinus.createApp(); app.set('name', 'nameofproject'); app.start();\",\"首先根据pinus创建一个应用；然后会设置应用的名称、最后启动服务，这些配置都是创建一个项目必要条件；最后配置完成后就可以启动项目。\",\"应用的变量可以通过set和get方法进行存取，例如要存取server对象，具体代码如下：\",\"app.set('server',server); var server = app.get('server');\",\"应用的功能选项可以通过enable和disable来打开和关闭；另外，用户可以通过enabled和disabled对相应的状态进行判断，如果该状态存在则返回true,反之返回false。例如要打开或者关闭应用的filter并查看其状态是否存在, 具体代码如下：\",\"app.enable('filter'); app.enabled('filter'); //返回true app.disable('filter'); app.disabled('filter'); //返回true\",\"用户可以通过loadConfig加载配置文件，加载后文件中的参数将直接挂载到application对象上。例如需要加载mysql.json文件，具体代码如下：\",\"{ \\\"development\\\": { \\\"host\\\":\\\"127.0.0.1\\\", \\\"port\\\":\\\"3306\\\", \\\"database\\\":\\\"pinus\\\" } }\",\"app.loadConfig('mysql.json'); var host = app.mysql.host; //返回 127.0.0.1\",\"服务器的配置主要由configure()方法完成，完整的app.configure配置参数如下：\",\"app.configure([env], [serverType], [function]);\",\"前两个参数是可选的， 以下是参数说明：\",\"env: 运行环境， 可设成development, production或development|production\",\"serverType: 服务器类型，设置了这个参数只会对当前参数类型服务器做初始化，不设置则对所有服务器执行初始化function\",\"function: 具体的初始化操作， 内部可以写任何js方法\",\"以下是一些配置实例：\"]},\"268\":{\"h\":\"实例一\",\"t\":[\"app.configure(function(){ });\",\"这种配置将对所有的模式（development/production）下的所有服务器生效。\"]},\"269\":{\"h\":\"实例二\",\"t\":[\"app.configure('development', function(){ });\",\"这种配置则只针对development模式下所有服务器生效。\"]},\"270\":{\"h\":\"实例三\",\"t\":[\"app.configure('development', 'chat', function(){ });\",\"这种配置则针对development模式下的chat服务器生效。\"]},\"271\":{\"h\":\"初始内容实例\",\"t\":[\"在configure中用户可以根据应用的不同需求在不同的服务器中进行相关配置，例如在全局设置mysql参数：\",\"app.configure('development|production', function(){ app.loadConfig('mysql', app.getBase() + '/config/mysql.json');});\",\"另外也可以选择在具体的服务器中进行应用的配置，例如：\",\"var initArea = function(){ //area init }; app.configure('development|production', 'area', function(){ initArea(); });\",\"component是pinus的组件，它是具有生命周期的应用组件，通常在框架初始化时载入。 pinus自带的component如下：master、monitor、filter、proxy、handler、remote、server、sync和connection，其主要功能如下：\",\"master： master组件主要负责启动master服务器。\",\"monitor： monitor组件主要负责启动各个服务器的monitor服务，该服务负责收集服务器的信息并定期向master进行消息推送，保持master与各个服务器的心跳连接。\",\"proxy： proxy组件主要负责生成服务器rpc客户端，由于系统中存在多个服务器进程，不同服务器进程之间相互通信需要通过rpc调用（master服务器除外）。\",\"handler：handler组件主要负责加载前端服务器中的handler目录下的文件。\",\"filter: filter组件主要负责加载服务器请求的filter服务，包括rpc调用前的filter及rpc调用后的filter。\",\"remote： remote组件主要负责加载后端服务器的服务并生成服务器rpc服务端。\",\"server：server组件主要负责启动所有服务器的用户请求处理服务。\",\"connector: connector组件主要负责启动前端服务器的session服务和接收用户请求。\",\"sync： sync组件主要负责启动数据同步模块并对外提供数据同步功能。\",\"connection: connection组件主要负责启动用户连接信息的统计服务。\",\"pinus会默认根据服务器的类型加载不同的组件，另外用户可以根据应用需求自定义组件。组件的加载主要是使用load方法，例如：\",\"app.load(pinus.proxy, [options]); //options参数可选\",\"router主要负责路由信息的维护，路由计算，路由结果缓存等工作，并能根据需要切换路由策略，更新路由信息等。用户可以自定义不同服务器的不同路由规则，然后在app.js中进行配置即可。例如为chat服务器配置路由规则：\",\"//routeUtil.js app.route('chat', routeUtil.chat);\",\"在routerUtil中可以具体的定义不同服务器的路由规则，例如：\",\"routeUtil.chat = function(session, msg, app, callback) { var chatServers = app.getServersByType('chat'); if (!chatServers) { callback(new Error('can not find chat servers.')); return; } var server = dispatcher.dispatch(session.rid, chatServers); callback(null, server.id); };\",\"在回调函数中返回服务器的id即可，这里使用dispatcher对session.rid进行hash处理从而完成服务器选择。\",\"当一个客户端请求到达服务器后，经过filter链和handler处理，最后生成响应返回给客户端。handler是业务逻辑实现的地方，filter则是执行业务前进行预处理的地方。为了开发者方便，系统提供了默认的一些filter，例如：serialFilter,timeFilter，timeOutFilter，另外用户可以根据应用的需要自定义filter。filter默认提供的配置类型如下：\",\"serial： 主要负责保证所有从客户端到服务端的请求能够按顺序地处理。\",\"app.filter(pinus.filters.serial());\",\"time： 主要负责记录请求的相应时间。\",\"app.filter(pinus.filters.time());\",\"timeOut: 主要负责监控请求响应时间，如果超时就给出警告。\",\"app.filter(pinus.filters.timeout());\",\"var pinus = require('pinus'); var routeUtil = require('./app/util/routeUtil'); /** * Init app for client. */ var app = pinus.createApp(); app.set('name', 'chatofpinus'); app.defaultConfiguration(); // app configure app.configure('production|development', function() { // route configures app.route('chat', routeUtil.chat); app.route('connector', routeUtil.connector); // remote configures app.set('remoteConfig', { cacheMsg: true, interval: 30 }); // filter configures app.filter(pinus.filters.timeout()); // mysql configures app.loadConfig('mysql', app.get('dirname') + '/config/mysql.json'); }); // start app app.start();\"]},\"272\":{\"h\":\"chat中使用\",\"t\":[\"一个pinus的应用，一般是由一个服务器群来支持，对于这些应用服务器的管理以及监控就显得尤为重要。比如监控这些应用服务器的进程状态，系统状态，杀死某个服务器等等。\",\"对服务器的监控和管理有三个主体：master，monitor，client。服务器的管理和监控由master服务器加载的master component和普通的应用服务器加载的monitor component，还有服务器管理客户端共同完成，下面的叙述中将不加区分地使用monitor与应用服务器，master与master服务器。\",\"master负责收集所有服务器的信息，下发对服务器的操作指令。monitor负责上报服务器状态，并对master的命令作出反应。client是第三方监视的客户端，它注册到master上，通过给master发请求获得服务器群信息，或者给master发指令，管理操作应用服务器群。pinus中内建实现并使用了console和watchdog这两个admin module，它们是pinus核心的一部分,这里不再详述。\",\"由于对于具体的应用来说，需要监控和管理的信息也是各不相同的，因此，pinus并没有实现固定的监控模块，而是提供了一个可插拔的监控框架机制，用户只需要定义一个监控模块所需要的回调方法，并完成相应的配置即可。\",\"一组相关的供不同主体调用的回调函数构成一个admin module，一个admin module中一般包括四个回调方法，monitorHandler，masterHandler，clientHandler, start。其中monitorHandler是monitor收到master的请求或者通知时由monitor回调，masterHandler是master收到monitor的请求或者通知时回调，clientHandler是master收到client的请求或通知时回调的, start是当admin module加载完成后，用来执行一些初始化监控时调用。\",\"为了演示admin module的用法，我们将给聊天应用增加一个监控模块，我们让monitor每隔5秒钟向master上报一下自己的当前时间。当然，上报时间没有太多的实际意义，不过为了保持示例的简单化，选择上报时间还是可取的。实际使用中，可以上报任何信息，使用方式都是与上报时间的方式是一样的，这里使用上报时间仅仅是为了使得示例尽可能简单，更容易抓住如何使用admin module。\",\"下面我们将给我们的聊天应用增加一个监控管理模块，具体的代码在分支tutorial-admin-module上，使用如下命令切换分支：\",\"$ git checkout tutorial-admin-module \",\"首先，我们在app目录下建立文件modules/timeReport.js, 在其中定义monitorHandler，masterHandler和clientHandler，代码如下：\",\"module.exports = function(opts) { return new Module(opts); } var moduleId = \\\"timeReport\\\"; module.exports.moduleId = moduleId; var Module = function(opts) { this.app = opts.app; this.type = opts.type || 'pull'; this.interval = opts.interval || 5; } Module.prototype.monitorHandler = function(agent, msg, cb) { console.log(this.app.getServerId() + ' ' + msg); var serverId = agent.id; var time = new Date().toString(); agent.notify(moduleId, {serverId: serverId, time: time}); }; Module.prototype.masterHandler = function(agent, msg) { if (!msg) { var testMsg = 'testMsg'; agent.notifyAll(moduleId, testMsg); return; } console.log(msg); var timeData = agent.get(moduleId); if (!timeData) { timeData = {}; agent.set(moduleId, timeData); } timeData[msg.serverId] = msg.time; }; Module.prototype.clientHandler = function(agent, msg, cb) { cb(null, agent.get(moduleId)); }\",\"这里我们没有定义start回调，因为我们这里用不到。在定义完上面的admin module后，需要将其注册到我们的应用中，使用Application.registerAdmin调用，在app.js中增加如下代码：\",\"var timeReport = require('./app/modules/timeReport'); app.registerAdmin(timeReport, {app: app});\",\"这里registerAdmin可以接收两个或三个参数，如果是三个参数的话，第一个必须是字符串来指定moduleId。如果是两个参数的话，moduleId将使用第一个参数，也就是module的工厂函数的moduleId属性。这里由于我们给timeReport定义了moduleId属性，因此我们就省略掉了第一个moduleId参数了。最后一个参数是配置选项，可以配置监控数据获取是pull还是push方式，以及获取周期。在我们这个例子中，由于注册时没有传入任何关于type和interval的配置，将使用默认值，也就是使用拉模式，每隔5秒获取一次数据。\",\"在导出一个module的时候，一般需要指定一个moduleId，在这里，我们指定的moduleId是timeReport。当然我们如果这里不指定moduleId的话，在调用Application.registerAdmin的时候再指定moduleId也是可以的。\",\"一个module有两个属性很重要，type和interval，type指出的是数据所采用的方式，有两种pull和push。pull方式是让master定时给monitor发请求，monitor给其上报信息。push的方式则是monitor定时上报自己的信息。interval就是这个信息上报的时间周期了。我们例子中使用的是方式通过opts传入，如果opts中没有配置的话，默认使用pull方式，上报周期为5秒，而实际上，我们就是使用了这样的两个参数值，即使用pull方式，让master主动拉数据，每5秒拉一次。\",\"还有一个要注意的地方是masterHandler的实现，可能会让人感到迷惑。实际上，由于使用pull的方式，masterHandler会在两种情况下被回调，一种是每隔5秒产生的一次拉数据事件，一种是monitor向master上报信息。这两种情况，可以通过参数msg区分。\",\"如果是定时器产生的周期性的拉数据事件导致的回调，此时msg参数是undefined，因此此时只是简单的调用notifyAll，参数moduleId使用来区分到底是哪个监控模块；testMsg参数在这里仅仅用来示例如何传参,在monitorHandler中也仅仅把其打印到console上而已，实际应用中，可以用其传递更有意义的参数；\",\"如果是monitor在收到master的通知后，上报自己的时间信息的话，此时msg将会是一个对象，这个时候，master将这个时间值打印到console，并缓存其值，当然这个值没什么意义，仅仅是为了示例。因此这段代码通过对msg的判断区分了这两种情况。\",\"实际应用中，也经常使用判断msg来区分两种情况的方式。考虑另一种情况，假如使用的不是pull方式，而是push方式的话，那么monitor将会遇到两种情况，与master类似，一种是定时器的周期事件，一种是master给其发了通知或请求，此时也可以通过判断msg进行两种情况的区分，只不过此时将会在monitorHandler中进行判断了。关于这种使用push方式并在monitorHandler中通过判断msg的值进行区分两种情况的实现方式，读者可以自行尝试。\",\"monitorHandler的实现中，当收到master的通知后，取出了master传来的参数，这里的参数就是testMsg，实际应用中可以使用更复杂的更有实际意义的参数。然后通过对参数进行分析，执行相应的逻辑。这里的逻辑很简单，就是获取自己当前的时间，然后通知给master。\",\"clientHandler是当有第三方监控客户端给master发请求时，由master进行回调的。为了保持简单，我们这里不再对client做过多的介绍,在开发指南部分会有详细的介绍。\",\"在这部分里，我们使用了pinus提供的监控管理框架完成了monitor向master上报其本地时间的功能。实际上，通过定制自己的admin module可以实现上报任何我们需要的上报的数据。比如，在实际应用中，connector服务器可以向master报告登录到其服务器上的用户信息，monitor可以向master上报其进程相关的信息等等。在pinus-admin中还实现了另外几个admin module，这些admin module可以通过对Application调用app.enable('systemMonitor')完成开启，这里不再详述，可以直接阅读相关代码。到此为止，我们基本上就介绍完了pinus的所有基本功能。\"]},\"273\":{\"h\":\"pinus管理框架\",\"t\":[\"在前面的介绍中，我们知道pinus支持动态地增加以及删除某一个服务器，于是我们会问当增加一个应用服务器的时候，已经启动的应用服务器是怎么知道新增加了一个服务器的；当停止某个服务器时，其他服务器又是怎样获知这些消息，并使得以后的rpc或者消息不路由到已经停止的服务器的。还有，如果查看整个服务器群的信息，或者整个服务器群的运行状态。诸如此类的问题，pinus提供了一个管理框架，通过对这个框架进行扩展，用户将可以自己定制一些需要监控的信息，下面将对此进行介绍。\",\"pinus的管理框架中，将对应的主体分为三种角色，分别为master，monitor，client。其中master可以认为对应于master服务器的Master组件，monitor可以认为是所有服务器都加载的Monitor组件。而client，可以认为是第三方的管理工具，pinus提供的命令行工具，pinus-cli以及admin-console-web都扮演了client角色。\",\"一般情况下，监控管理模型大致可以分为两类：\",\"master向monitor发出请求某些监控信息，monitor向master上报其信息，master获得到信息后进行缓存。第三方的client会连接到master上，请求整个服务器群的监控信息，master将缓存的监控信息返回给client。\",\"client连接到master上后，给master发送一条命令，比如请求关服务器命令，master获得这个命令后，也就是关闭服务器命令后，master会向monitor广播此关闭命令，每一个monitor收到关闭命令后，关闭自身。\",\"下面展示了监控框架相关的类图,这个是从前面的整个框架的类图中取出来的，与管理框架相关的类:\",\"pinus框架类图\",\"在上面类图中，Master组件，Monitor组件，AdminClient分别扮演我们上面提到的master，monitor和client角色，下面的叙述中将对这些术语不加区分的混用。\",\"对于Master端，MasterConsoleService会管理所有已注册的Module，生成以ModuleId为主键的Module的map。MasterAgent监听端口，承受来自monitor和client的连接与注册，接受monitor和client的request/notify，向monitor发送request/notify，需要注意的是，master不会向client发出request/notify,只会针对client的request进行response。\",\"对于Monitor端，MonitorConsoleService会管理所有已注册的Module，维护Module的map。所有的服务器通过配置文件都能获知到master服务器的监听地址和端口，MonitorAgent会主动发起连接到master,并维护对应的连接，然后通过此连接与master端通信。\",\"对于client端，要求使用一个用户名和口令主动发起到master的连接及注册，验证通过后，AdminClient会维护到master的连接，然后就可以向master发送request/notify了。\",\"所有与通信相关的类，都为维护自己的socket信息，对于Master来说，不仅仅有连接的socket，还有监听的socket。在整个管理框架中，通信层使用的socket.io。\",\"每一个Module会定义四个回调monitorHandler，masterHandler，clientHandler，start，对于不同用途的Module，可能会省略掉一些用不着的回调函数定义，也就是说这四个回调都是可选的。每一个回调函数的签名为XXXHandler(agent, msg, cb),第一个参数指出调用的Agent，可以是MonitorAgent或者MasterAgent，第二个参数是request/notify中的请求体，第三个是回调函数，如果是请求的话，最后结果通过回调第三个参数返回结果，否则的话，忽略第三个参数。\",\"下面我们用一个类时序图，来说明整个框架的控制流程:\",\"pinus框架类图\",\"实际上，控制流程是多个，这里为了省事，将所有流程都画到一个图中了，对于后面的一些行为实际上是可以没有先后顺序的，希望读者能够甄辨。\"]},\"274\":{\"h\":\"master组件的启动\",\"t\":[\"master服务器总是率先启动，Master组件在其start调用的最后才会调用Starter.start,Starter.start才会启动所有的应用服务器，因此Master组件总是最先start。在Master组件的start调用中，会完成以下几步:\",\"加载注册Module到MasterConsoleService，Module的导出方式有两种，可以导出工厂函数，也可以导出对象，如果导出工厂函数的话，其签名应该是 FacFunc(opts, ConsoleServicee),其中opts是用户调用app.registerAdmin的时候传入的，ConsoleService则是具体的加载注册Module的MasterConsoleService。\",\"在加载注册完所有的Module后，会开启MasterAgent对端口的监听，此时，master就已经可以接收来自monitor和client的request和notify了。\",\"开启监听后，MasterConsoleService会enable所有的module，这步操作主要是看看有没有module配置了周期性地拉取monitor信息，也就是module的配置中有type选项和interval选项，且type的值为'pull'，interval指定了周期，则认为其配置了周期性监控操作，此时会完成周期性事件的调度，使得master可以周期性地获取监控信息。\",\"最后如果有Module定义了start回调，将会在这里调用，一般在start回调里会做一些初始化信息。 经历了这些步骤后，master完成启动。\"]},\"275\":{\"h\":\"monitor组件的启动\",\"t\":[\"由于应用服务器是在Master组件启动后期才创建，因此monitor总是后于master启动。monitor的启动过程与master类似，唯一不同的就是，monitor会发起到master的连接，而不是监听接口。monitor中同样也会使用与master完全相同的方式，加载注册Module，如果有Module配置了周期性地推送监控数据到master的话，即其配置type的值为'push',这里也会调度对应的事件，使得能够周期地推送数据。最后如果有Module定义了start的话，则会回调start。Monitor的启动过程与master基本一致。\"]},\"276\":{\"h\":\"client的连接注册\",\"t\":[\"client会连接注册到master上，因此，client需要在master开始监听端口后，才能成功连接上，在连接到master上后，基于安全的缘故，master需要使用用户名和密码对其进行验证，具体的客户端验证的配置文件为config/adminUser.json，例子程序里有相应的配置示例。如果master提供的用户名和密码，通过了验证，那么客户端就在master上注册成功，就可以给master发request/notify了。\"]},\"277\":{\"h\":\"周期触发\",\"t\":[\"对于配置了type和interval的Module，它们被认为是需要周期性进行回调的，在前面的enable module阶段，已经对其进行了调度。如果配置的type为'pull',那么每隔interval秒，在master端，其对应的masterHandler将会被回调，回调的时候，不会传入参数。\"]},\"278\":{\"h\":\"主动请求\",\"t\":[\"当有monitor向master发出request/notify的时候，请求参数会指出相应的ModuleId以及回调调用的参数，在master端，对应的Module的masterHandler将会被回调，此时回调会使用monitor请求中携带的参数。因此，通过对masterHandler请求的参数进行判断就可以区分到底是周期性任务还是monitor请求。\",\"对于monitor端，与master类似，当某个Module配置了type为'push'的时候，其对应的monitorHandler将会被回调，当master给monitor发送request/notify的时候，其对应的monitorHandler也同样会被回调。与master一样，可以通过调用是否有参数进行区分是周期性的任务还是接收到了master的消息。当然，即使是master的消息，也可能没有携带任何参数，这种情况只能由用户自己处理了，一般来说，为了便于区分，不要发送不带参数的request/notify。\",\"client在连接到master上后，client可以向master发送request/notify，请求信息中带有ModuleId和对应的回调参数。master接受后，对应Module的clientHandler将会被回调。这里要注意的是master不会主动向client发送request/notify,只会对client的消息进行响应。\",\"以上的用例行为基本上描述了pinus的管理框架的执行流，下面会对pinus内建的两个module做一些分析。\",\"我们知道对于服务器配置的静态信息可以从配置文件中直接读取，但是由于服务器可以在运行时增加和停止，而整个服务器群的其他服务器也需要获知具体的服务器的动态信息，就需要一种机制来实现这一切。\",\"pinus是通过内建的Module watchdog实现这一切的,下面继续通过选取典型的用例场景，使用非正式的时序图来说明其流程:\",\"pinus框架类图\"]},\"279\":{\"h\":\"绑定连接/断开事件\",\"t\":[\"在加载watchdog这个module时，在master端，除了会监听端口外，还做了一件很重要的工作，就是将底层socket的事件由MasterAgent捕捉后，重新抛出，由MasterConsoleService捕捉后进行处理，这些事件为：\",\"register事件，即一旦有MonitorAgent发起到MasterAgent的连接时触发，MasterConsoleService会在这个事件的处理中，发起广播通知增加的服务器信息。\",\"disconnect事件，即一旦有MonitorAgent断开连接时触发，MasterConsoleService会在这个事件处理中，发起广播通知有服务器离开的消息。\",\"reconnect事件，是当有应用服务器重连时触发，MasterConsoleService会在这个事件处理中，发起广播通知有服务器重连的消息。\"]},\"280\":{\"h\":\"新增服务器\",\"t\":[\"用例行为4展示了在monitor端，加载watchdog这个module的时候，会在start阶段，执行watchdog的start，在这里，monitor会向master发起一个订阅请求，也就是说此时monitor请求订阅所有的服务器变化信息，当MasterAgent接收到请求时，masterHandler会回调，通过检查参数，获知是一个subscribe操作，masterHandler的回调中会返回所有目前已经启动的服务器的信息给这个新启动的服务器，并将其加入到监听者列表，以后每次再有服务器变动的时候，也会将具体的服务器变动消息发送给此服务器。\",\"用例行为3展示了，当新增一个服务器的时候的交互行为，有monitor发起到master的注册请求，从而激发了master端的register事件处理，其行为为通过MasterAgent广播新增服务器的notify到所有已经订阅注册的服务器，这些服务器收到notify后，其monitorHandler被回调，在monitorHandler中会调用app.addServers方法，这样所有的服务器群都会获知新增的服务器。\"]},\"281\":{\"h\":\"停止服务器\",\"t\":[\"用例行为5展示了当有应用服务器断开的情况，当有服务器断开的时候，会激发MonitorAgent的disconnect事件，在这个事件处理中，MasterConsoleService会发起广播notify到所有的服务器，其他的服务器收到此notify后，monitorHandler会被回调，在回调中，通过判断参数，获知是有服务器停止工作，调用app.removeServer删除相应的服务器。同时，在master端，watchdog的监听者列表里也会将这个服务器的信息删除。\"]},\"282\":{\"h\":\"服务器重连\",\"t\":[\"用例行为6展示了当有应用服务器断开重连的情况，具体行为跟前面的服务器加入和离开类似，读者可以结合源码自行分析。\",\"watchdog是pinus内部很核心的一个module，用来完成服务器状态信息交换。因此在这个module中仅仅涉及到master，monitor角色，没有client角色,因此省略了与client有关的clientHandler回调函数的定义。其事件是由底层socket连接来激发的，而不是周期性地由定时器激发,所以在module的定义中并没有指定其type和interval配置。\",\"这里在简单分析一下console组件，console组件主要为pinus命令行工具服务，\",\"pinus框架类图\",\"图中所示的用例为一般情况下，用户通过一个命令来管理整个服务器群的方式。我们以命令行工具的list命令为例子来说明：\",\"用户执行pomleo list [options],此时，命令行工具会创建一个AdminClient，然后向master发出注册请求，后面的参数用来指定master的位置，端口号以及向master注册所使用的用户名和口令，master用此来进行校验身份，给予不同的权限。其具体的参数以及参数默认值，在pinus命令行工具里面会有详细的介绍。\",\"当AdminClient向Master注册成功后，给其发送请求，参数部分指定了moduleId和具体要做的操作，在我们这个例子中，moduleId就是console，具体的操作为list命令。\",\"在master端，收到请求后，其console module的clientHandler被回调，在回调中，通过判断其操作是list，于是向所有与其连接的monitor请求服务器信息。\",\"在monitor端，收到master发出的请求后，其console module的monitorHandler被回调，在回调中会获得自己的服务器信息，包括pid，heapused等信息响应给master。\",\"master在收集完所有monitor的响应后，将获得到的服务器信息数据响应给AdminClient，也就是会由命令行工具收到，并显示出来。\",\"大部分的客户端执行命令流程都是如上面所示，一般情况下，如果配置了周期性地由master去拉取或者由monitor主动推送消息的话，那么当客户端发出请求时，master就可以直接返回其缓存的东西，而不需要一旦客户端发起请求，就向所有的服务器轮询，我们在前面的教程里实现的timeReport module就是使用了周期拉取，当客户端请求时，直接返回缓存的方式。\",\"在console这个module中，由于没有monitor给master发request/notify，所以console的masterHandler回调可以省略，同样console还省略了start回调，因为这里没有什么需要在正常的请求响应之前要执行的东西。\",\"需要注意： 在命令行工具中，add命令现在已经过时了，也就说console module中关于处理add方法的部分现在已经过时，当需要add服务器的时候，推荐使用pinus-cli，那是一个更强大的交互式命令行工具，pinus-cli使用的module定义在pinus-admin中，包括watchServer等。读者可以按照前面的分析方式，自行分析pinus-cli以及pinus-admin中定义的module。在pinus应用中，通过app.enable('systemMonitor')，将会使得应用默认注册pinus-admin中定义的module，否则，仅仅有console和watchdog会被默认注册。还有一个基于web的监控工具pinus-admin-web,它提供了通过web页面来看服务器管理监控信息的方式，它也是一个监控管理的客户端。\",\"在客户端连接到master上的时候，需要对客户端进行身份验证，验证使用用户名和口令，用户的权限分为三个等级，他们分别对应不同的权限。用户的配置信息在adminUser.json中，其中level 1的权限可以执行任何操作，其他level的权限的控制权限受到限制。关于权限控制以及用户信息的配置，可以参考pinus-cli的相关文档。\",\"本部分详细介绍地介绍了pinus的监控管理框架的工作流程，分析了pinus核心的两个module Watchdog和console的工作原理。结合前面教程中关于module的例子，用户可以很容易地完成自己特殊需要的module的定制。\"]},\"283\":{\"h\":\"\"},\"284\":{\"h\":\"组件生命周期\",\"t\":[\"start, after start, stop\"]},\"285\":{\"h\":\"组件加载\",\"t\":[\"在加载组件时，系统会根据application对象中服务器的信息，针对不同的服务器加载不同的组件，从而使得不同服务器进程对外提供不同个服务。对于master服务器，主要加载的组件是master组件。Master组件主要负责根据根据servers.json文件中的配置信息和启动参数去启动其他服务器。对于其它服务器默认加载proxy、channel、sync、backendSession和server组件，特定的服务器还需要加载特定的组件，例如前端服务器会加载统计客户端连接数量的connection组件。具体组件的说明如下：\",\"master： master组件主要负责启动master服务器。\",\"monitor： monitor组件主要负责启动各个服务器的monitor服务，该服务负责收集服务器的信息并定期向master进行消息推送，保持master与各个服务器的心跳连接。\",\"proxy： proxy组件主要负责生成服务器rpc客户端，由于系统中存在多个服务器进程，不同服务器进程之间相互通信需要通过rpc调用（master服务器除外）。\",\"remote： remote组件主要负责加载后端服务器的服务并生成服务器rpc服务端。\",\"server：server组件主要负责启动所有服务器的用户请求处理服务。\",\"connector: connector组件主要负责启动前端服务器的session服务和接收用户请求。\",\"sync： sync组件主要负责启动数据同步模块并对外提供数据同步功能。\",\"connection: connection组件主要负责启动用户连接信息的统计服务。\",\"channel: channel组件主要负责启动channelService服务，该服务主要提供channel相关的功能包括创建channel，通过channel进行消息推送等。\",\"session: session组件主要负责启动sessionService服务，该服务主要用来对前端服务器的用户session进行统一管理。\",\"backendSession: backendSession组件主要负责启动backendSession服务，该服务主要负责维护服务器本地session并与前端服务器进行交互。\",\"dictionary: dictionary组件主要负责生成handler的字典。\",\"protobuf: protobuf组件主要负责解析服务端和客户端的proto buffer的定义，从而对客户端和服务端的通信内容进行压缩。\"]},\"286\":{\"h\":\"\"},\"287\":{\"h\":\"特征\",\"t\":[\"🌎 跨平台支持（macOS、Windows、Linux）\",\"✨ 单文件，轻松安装，即时启动\",\"🚀 以速度为中心\",\"📂 适用于.node-version和.nvmrc文件\"]},\"288\":{\"h\":\"fnm常用命令\",\"t\":[\"列出远程版本\",\"fnm ls-remote\",\"安装&卸载\",\"fnm install 16.8.0 fnm install --latest # 安装最新版本 fnm install lts # 安装最新 LTS 版本 # 在安装时指定镜像 fnm install 16.8.0 --node-dist-mirror=https://npmmirror.com/mirrors/node/ fnm uninstall 16.8.0 # 卸载16.8.0版本\",\"切换版本\",\"fnm use 16.8.0 fnm default <version> # 设置默认版本（全局生效）\",\"查看版本\",\"fnm list # 查看系统上安装了哪些版本 fnm ls fnm current # 显示当前使用的 Node.js 版本\",\"设置 Node.js 版本别名\",\"fnm alias <version> <name> # fnm alias 20.10.0 A # 使用 fnm use A\",\"其他\",\"fnm prune # 清理无用的 Node.js 版本 fnm clean # 清除缓存 fnm --version # 显示 fnm 版本 fnm help # 帮助命令\"]},\"289\":{\"h\":\"不同项目自动切换不同的node版本\",\"t\":[\"根据项目中的 .node-version 或 .nvmrc 文件，或packages.json#engines#node自动切换版本：\"]},\"290\":{\"h\":\"环境变量配置\",\"t\":[\"引用\",\"https://blog.csdn.net/Helen_T/article/details/135912916\"]},\"291\":{\"h\":\"Powershell\",\"t\":[\"1、在下面的目录新建profile.ps1文件\",\"%USERPROFILE%\\\\Documents\\\\WindowsPowerShell\\\\Microsoft.PowerShell_profile.ps1\",\"提示：\",\"%USERPROFILE%：表示用户目录，直接在文件管理的地址栏输入 %USERPROFILE%后回车\",\"WindowsPowerShell为新建的目录, 如果安装node后命令仍然无法识别，将文件夹名称改为PowerShell\",\"2、将下面的代码写入到上面的配置文件里面\",\"fnm env --use-on-cd --version-file-strategy=recursive | Out-String | Invoke-Expression\"]},\"292\":{\"h\":\"CMD\",\"t\":[\"1、搜索 cmd，打开文件所在位置\",\"img\",\"2、对 “命令提示符” 右键，点击属性\",\"img\",\"3、修改“目标”为下面的值\",\"%windir%\\\\system32\\\\cmd.exe /k %USERPROFILE%\\\\bashrc.cmd\",\"img\",\"4、进入用户目录（%USERPROFILE%），添加文件 bashrc.cmd\",\"5、将下面的代码写入到上面的配置文件里面\",\"@echo off :: for /F will launch a new instance of cmd so we create a guard to prevent an infnite loop if not defined FNM_AUTORUN_GUARD ( set \\\"FNM_AUTORUN_GUARD=AutorunGuard\\\" FOR /f \\\"tokens=*\\\" %%z IN ('fnm env --use-on-cd --version-file-strategy=recursive') DO CALL %%z )\"]},\"293\":{\"h\":\"git bash\",\"t\":[\"进入用户目录（%USERPROFILE%），在[git bash](https://so.csdn.net/so/search?q=git bash&spm=1001.2101.3001.7020)的配置文件 .bash_profile 添加下面的代码\",\"如果用户目录没有.bash_profile，则新建一个文件\",\"eval $(fnm env | sed 1d) export PATH=$(cygpath $FNM_MULTISHELL_PATH):$PATH if [[ -f .node-version || -f .nvmrc ]]; then fnm use fi\"]},\"294\":{\"h\":\"webstorm找不到node路径的解决办法\",\"t\":[\"将%USERPROFILE%\\\\AppData\\\\Roaming\\\\fnm\\\\aliases\\\\default\\\\路径添加到PATH\",\"github地址：\",\"https://github.com/Schniz/fnm\"]},\"295\":{\"h\":\"NVM\",\"t\":[\"通过将多个node 版本安装在指定路径，然后通过 nvm 命令切换时，就会切换我们环境变量中 node 命令指定的实际执行的软件路径。\"]},\"296\":{\"h\":\"下载\",\"t\":[\"链接：https://github.com/coreybutler/nvm-windows/releases\"]},\"297\":{\"h\":\"NVM常用命令\",\"t\":[\"nvm list 命令 - 显示版本列表\",\"nvm list # 显示已安装的版本（同 nvm list installed） nvm list installed # 显示已安装的版本 nvm list available # 显示所有可以下载的版本\",\"nvm install 命令 - 安装指定版本nodejs\",\"nvm install 14.5.0 # 安装14.5.0版本node nvm install latest # 安装最新版本node\",\"nvm use 命令 - 使用指定版本node\",\"nvm use 14.5.0 # 使用14.5.0版本node\",\"nvm uninstall 命令 - 卸载指定版本 node\",\"nvm uninstall 14.5.0 # 卸载14.5.0版本node\"]},\"298\":{\"h\":\"其他命令\",\"t\":[\"nvm arch ：显示node是运行在32位还是64位系统上的\",\"nvm on ：开启nodejs版本管理\",\"nvm off ：关闭nodejs版本管理\",\"nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。\",\"nvm node_mirror [url] ：设置node镜像。默认是https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\",\"nvm npm_mirror [url] ：设置npm镜像。https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\",\"nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。\",\"nvm version ：显示nvm版本。version可简化为v。\",\"nvm中文网站\",\"https://nvm.uihtm.com/\"]},\"299\":{\"h\":\"UglifyJS\",\"t\":[\"UglifyJS是个包含JS解释器、代码最小化、压缩、美化的工具集，是前端开发打包的最常用工具之一\"]},\"300\":{\"h\":\"安装\",\"t\":[\"npm install uglify-js -g\"]},\"301\":{\"h\":\"用法\",\"t\":[\"uglifyjs [input files] [options]\",\"options\",\"-o 输出\",\"-c 压缩\",\"-m 混淆\"]},\"302\":{\"h\":\"压缩多个文件到一个文件\",\"t\":[\"uglifyjs copy.js copy2.js -m -c -o min.js\"]},\"303\":{\"h\":\"javascript-obfuscator简介\"},\"304\":{\"h\":\"介绍\",\"t\":[\"javascript-obfuscator是一个免费开源的JavaScript代码混淆工具，它功能强大，可以把你的源代码变得“面目全非”，完全没有可读性。还具有部分防调试功能，给JavaScript代码多一层保护。\",\"它支持很多流行的前端打包工具，如Webpack、Gulp、Grunt等都有相应的插件。本文为保持简单，以单独的命令行版本示例\"]},\"305\":{\"h\":\"安装\",\"t\":[\"npm install javascript-obfuscator -g\"]},\"306\":{\"h\":\"命令\",\"t\":[\"查看版本 javascript-obfuscator -v 默认混淆 javascript-obfuscator a.js\"]},\"307\":{\"h\":\"配置\",\"t\":[\"controlFlowFlattening = false # 默认 # 设为 true，表示开启代码控制流展平，这是源代码的一种结构转换，使代码增大且变得难以理解 controlFlowFlatteningThreshold = [0, 1] #取值从0到1，如果为0等同于 controlFlowFlattening为false # 和 controlFlowFlattening配合，表示代码控制流展平的概率，此设置对于大代码影响较大，大量的控制流转换会减慢代码速度并增加代码大小。\",\"deadCodeInjection = false 默认 设为true，表示将添加随机废代码到被混淆代码中。 该选项会显著增加代码大小（高达200%） deadCodeInjectionThreshold = [0, 1] 值范围是从0到1，如果为0等同于 deadCodeInjection为false。 此选项强制启用stringArray选项。\",\"stringArray 删除字符串文字并将其放置在特殊数组中。例如，var m=“Hello World”中的字符串“Hello World”，将被替换为var m=x12c456[0x1]； stringArrayEncoding 使用 base64或 rc4对stringArray影响的所有字符串文本进行编码，并插入用于在运行时对其进行解码的特殊代码。 此选项会减慢脚本的速度。 stringArrayThreshold = [0, 1] 此设置调整将字符串文本插入stringArray的概率（从0到1）\"]},\"308\":{\"h\":\"示例\",\"t\":[\"一个中等混淆强度的配置选项如下，它会使性能降低约30-50%，代码体积增加约300%\",\" { \\\"compact\\\": true, \\\"controlFlowFlattening\\\": true, \\\"controlFlowFlatteningThreshold\\\": 0.75, \\\"deadCodeInjection\\\": true, \\\"deadCodeInjectionThreshold\\\": 0.4, \\\"debugProtection\\\": false, \\\"debugProtectionInterval\\\": false, \\\"disableConsoleOutput\\\": true, \\\"identifierNamesGenerator\\\": \\\"hexadecimal\\\", \\\"log\\\": false, \\\"renameGlobals\\\": false, \\\"rotateStringArray\\\": true, \\\"selfDefending\\\": true, \\\"stringArray\\\": true, \\\"stringArrayEncoding\\\": \\\"base64\\\", \\\"stringArrayThreshold\\\": 0.75, \\\"unicodeEscapeSequence\\\": false }\",\"将上述配置选项，保存为文件 test.json，并指定输出结果到 b.js，输入\",\"javascript-obfuscator a.js --config test.json --output b.js\",\"上面命令表示， javascript-obfuscator将会使用test.json指定的配置，对 a.js 执行混淆，结果输出到 b.js\"]},\"309\":{\"h\":\"官方推荐的三种配置\"},\"310\":{\"h\":\"1.性能将比没有混淆的情况下慢50-100%\",\"t\":[\"{ compact: true, controlFlowFlattening: true, controlFlowFlatteningThreshold: 1, deadCodeInjection: true, deadCodeInjectionThreshold: 1, debugProtection: true, debugProtectionInterval: true, disableConsoleOutput: true, identifierNamesGenerator: 'hexadecimal', log: false, renameGlobals: false, rotateStringArray: true, selfDefending: true, stringArray: true, stringArrayEncoding: 'rc4', stringArrayThreshold: 1, transformObjectKeys: true, unicodeEscapeSequence: false }\"]},\"311\":{\"h\":\"2.性能将比没有混淆的情况下降低30-35%\",\"t\":[\"{ compact: true, controlFlowFlattening: true, controlFlowFlatteningThreshold: 0.75, deadCodeInjection: true, deadCodeInjectionThreshold: 0.4, debugProtection: false, debugProtectionInterval: false, disableConsoleOutput: true, identifierNamesGenerator: 'hexadecimal', log: false, renameGlobals: false, rotateStringArray: true, selfDefending: true, stringArray: true, stringArrayEncoding: 'base64', stringArrayThreshold: 0.75, transformObjectKeys: true, unicodeEscapeSequence: false }\"]},\"312\":{\"h\":\"3.性能会比没有混淆的情况稍微慢一些\",\"t\":[\"{ compact: true, controlFlowFlattening: false, deadCodeInjection: false, debugProtection: false, debugProtectionInterval: false, disableConsoleOutput: true, identifierNamesGenerator: 'hexadecimal', log: false, renameGlobals: false, rotateStringArray: true, selfDefending: true, stringArray: true, stringArrayEncoding: false, stringArrayThreshold: 0.75, unicodeEscapeSequence: false }\"]},\"313\":{\"h\":\"更多详解请参考\",\"t\":[\"https://www.npmjs.com/package/javascript-obfuscator\"]},\"314\":{\"h\":\"\"},\"315\":{\"h\":\"安装\",\"t\":[\"npm install crypto-js\"]},\"316\":{\"h\":\"gulp-tinypng-extended简介\"},\"317\":{\"h\":\"介绍\",\"t\":[\"对png，jpg图片进行压缩\"]},\"318\":{\"h\":\"安装\",\"t\":[\"npm install gulp-tinypng-extended\"]},\"319\":{\"h\":\"示例\",\"t\":[\"var gulp = require('gulp'); var plumber = require('gulp-plumber'); var tinypng = require('gulp-tinypng-extended'); gulp.task('tinypng', function () { return gulp.src('images/src/**/*.{png,jpg,jpeg}') .pipe(plumber()) .pipe(tinypng({ key: 'API_KEY', sigFile: 'images/.tinypng-sigs', log: true })) .pipe(gulp.dest('images')); });\"]},\"320\":{\"h\":\"参考\",\"t\":[\"https://www.npmjs.com/package/gulp-tinypng-extended\"]},\"321\":{\"h\":\"gulp简介\"},\"322\":{\"h\":\"介绍\",\"t\":[\"自动化构建工具\"]},\"323\":{\"h\":\"安装\"},\"324\":{\"h\":\"参考\",\"t\":[\"https://www.npmjs.com/package/gulp\"]},\"325\":{\"h\":\"\",\"t\":[\"前端代码美化库\"]},\"326\":{\"h\":\"\"},\"327\":{\"h\":\"安装\",\"t\":[\"cnmp i mkdirp --save\"]},\"328\":{\"h\":\"\"},\"329\":{\"h\":\"NPM\",\"t\":[\"nrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换\"]},\"330\":{\"h\":\"1.安装nrm\",\"t\":[\"在命令行执行命令，npm install -g nrm，全局安装nrm。\"]},\"331\":{\"h\":\"2.使用\",\"t\":[\"执行命令nrm ls查看可选的源。\",\"nrm ls\",\"*npm ---- https://registry.npmjs.org/\",\"cnpm --- http://r.cnpmjs.org/\",\"taobao - http://registry.npm.taobao.org/\",\"eu ----- http://registry.npmjs.eu/\",\"au ----- http://registry.npmjs.org.au/\",\"sl ----- http://npm.strongloop.com/\",\"nj ----- https://registry.nodejitsu.com/\",\"其中，带*的是当前使用的源，上面的输出表明当前源是官方源。\"]},\"332\":{\"h\":\"3.切换\",\"t\":[\"如果要切换到taobao源，执行命令\",\"nrm use taobao\"]},\"333\":{\"h\":\"4.增加\",\"t\":[\"你可以增加定制的源，特别适用于添加企业内部的私有源，执行命令 nrm add < registry > < url >，其中reigstry为源名，url为源的路径。\",\"nrm add registry http://registry.npm.frp.trmap.cn/\"]},\"334\":{\"h\":\"5.删除\",\"t\":[\"nrm del < registry >\"]},\"335\":{\"h\":\"6.测试速度\",\"t\":[\"你还可以通过 nrm test 测试相应源的响应时间。\",\"nrm test npm\"]},\"336\":{\"h\":\"\"},\"337\":{\"h\":\"简介\",\"t\":[\"提供来自express的自动生成的swagger-ui生成的API文档\"]},\"338\":{\"h\":\"安装\",\"t\":[\"npm i swagger-ui-express npm i @types/swagger-ui-express --save-dev\"]},\"339\":{\"h\":\"同类工具\",\"t\":[\"swagger-jsdoc\"]},\"340\":{\"h\":\"\"},\"341\":{\"h\":\"调试TypeScript项目\",\"t\":[\"TypeScript 需要生成 Source Map 文件，以便 DevTools 能将运行的 JavaScript 代码映射回原始 TypeScript 代码\",\"在 tsconfig.json 中启用 Source Map：\",\"{ \\\"compilerOptions\\\": { \\\"sourceMap\\\": true, } }\",\"通过 ts-node 调试（无需编译）：\",\"# 立即启动调试，代码自动运行 node --inspect -r ts-node/register src/index.ts # 在首行暂停，等待调试器连接 node --inspect-brk -r ts-node/register src/index.ts # 或者 NODE_OPTIONS=\\\"--inspect\\\" ts-node src/index.ts\"]},\"342\":{\"h\":\"\",\"t\":[\"直接调试：\",\"# 立即启动调试，代码自动运行 node --inspect dist/index.js # 在首行暂停，等待调试器连接 node --inspect-brk dist/index.js\"]},\"343\":{\"h\":\"\",\"t\":[\"打开 Chrome 浏览器，输入地址栏：\",\"chrome://inspect\",\"在Remote Target部分找到你的 Node.js 进程，点击 Inspect\",\"如果未自动出现，确保端口正确（默认 9229），或手动添加连接地址。\",\"设置断点并调试\",\"在 DevTools 中： \",\"切换到 Sources 面板。\",\"通过左侧文件树导航到你的 TypeScript 文件（可能需要展开 file:// 目录）\",\"点击行号设置断点。\",\"功能支持： \",\"单步执行（Step Over/Into/Out）、查看调用栈。\",\"监视变量、修改表达式（Console）\",\"捕获异常（通过 Pause on exceptions 按钮）\"]},\"344\":{\"h\":\"\",\"t\":[\"如果更喜欢在 VSCode 中调试，可配置 .vscode/launch.json：\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"node\\\", \\\"request\\\": \\\"launch\\\", \\\"name\\\": \\\"Debug TS\\\", \\\"skipFiles\\\": [\\\"<node_internals>/**\\\"], \\\"program\\\": \\\"${workspaceFolder}/src/index.ts\\\", \\\"preLaunchTask\\\": \\\"tsc: build\\\", \\\"outFiles\\\": [\\\"${workspaceFolder}/dist/**/*.js\\\"], \\\"sourceMaps\\\": true } ] }\"]},\"345\":{\"h\":\"\",\"t\":[\"Source Map 未加载：检查文件路径是否正确，或尝试在 DevTools 中手动映射（右键 → Add source map）。\",\"端口冲突：通过 --inspect=9222 指定其他端口。\",\"TypeScript 文件未显示：确保编译后的 .js 和 .js.map 文件在正确位置。\"]},\"346\":{\"h\":\"\",\"t\":[\"代码编辑器：Visual Studio Code，理论上你用记事本编写代码也没关系，但是目前 ExtendScript 的 debugger 工具只有 VSCode 的 debugger 扩展还在维护。而且用 VSCode 你还可以安装一些 CEP 开发辅助的扩展，例如我开发的 Adobe Extension Development Tools 和 Scripting Listener\",\"Debugger： ExtendScript Debugger 是 VSCode 上用于 debug ExtendScript 和 CEP 扩展的 debugger 插件，如果需要向官方反馈这个插件的问题请去：forums.adobeprerelease.com，在插件市场的评论区反馈是没用的\",\"vscode安装完成之后，随便新建一个测试文件 demo.js\",\"alert(app.documents.length);\",\"接着打开VSCode左侧运行按钮，创建一个启动配置 launch.json\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"extendscript-debug\\\", \\\"request\\\": \\\"launch\\\", \\\"name\\\": \\\"demo.js\\\", \\\"program\\\": \\\"${workspaceFolder}/demo.js\\\", \\\"stopOnEntry\\\": false }, ] }\",\"接着点击底部 选择目标应用 就弹出电脑上安装好的Ps版本\",\"选择目标应用\",\"选择目标应用\",\"选择Ps版本\",\"选择Ps版本\",\"最后，点击运行，就可以在Ps中看到执行的效果了\",\"运行脚本\",\"运行脚本\",\"如果你的脚本执行有错误，它能够直接定位到对应的行，并且输出一些上下文，和传统的前端调试差不多\",\"错误提示\",\"错误提示\",\"你还可以在你的编辑器中设置断点，进行JSX脚本的单步调试，你通过 $.write() 打印的内容，会在底部的Console中进行输出，非常好用。总体来说，ExtendScript Debugger 是Adobe希望用来替代老旧的那款ExtensionScript编辑器 ExtensionToolkit\",\"然而……然而……\",\"Adobe一如既往的尿性，这个项目也停止维护更新了，最后一次升级是在2019年7月，这个插件还是存在很多Bug，稳定性也一版，经常不不动，就连不上Ps了，这个时候，可能可以通过重启Ps/VSCode/电脑等来恢复链接状态\"]},\"347\":{\"h\":\"2. ExtendScript Toolkit\",\"t\":[\"这是早期Adobe提供的用于开发调试ExtensionScript的开发工具，支持代码编写，断点调试等特性\",\"Extension Toolkit\",\"Extension Toolkit\",\"功能不太多，基本够用，应该是目前比较常用的JSX脚本调试工具。\",\"然而……然而……\",\"这个产品也一样不升级维护了，由于是32位的程序，目前在最新版本的Mac系统上已经无法安装了，于我这样的Mac常驻开发者而言，就非常忧伤\"]},\"348\":{\"h\":\"3. Padda\",\"t\":[\"由于，上面的2款工具，第二款我的Mac用不了，第一款呢有特别不稳定，对于时不时要测试JSX脚本的我，决定自己开发一个……\",\"Padda\",\"Padda\",\"这是一款运行在Ps上的插件，它内置了一个简易的文本编辑器，可以让你写Jsx代码，并立刻运行拿到结果。 我在日常开发插件产品的时候，经常需要在Ps上测试一段小脚本，看看是否工作是否正常，这时候就可以把代码贴到这个编辑器里头，直接运行就可以了。底部的输出窗口会显示当前脚本的执行状态和最后输出结果。\",\"output\",\"output\",\"如果代码执行有错误，输出窗口会显示报错的行和一些基本的错误提示\",\"Error\",\"Error\",\"支持脚本高亮，提供了代码快照功能，就是可以把当前执行的这段代码保存起来，这样当我在测试多段代码之间切换的时候，会非常有用。另外我也会把一些常用的代码片段通过这种方式保存起来，随时调用读取，并修改调试，满意后，再拷贝到我的项目工程当中，非常方便。\",\"Error\",\"Error\",\"该工具还提供了执行本地脚本文件，读取图层信息，代码快照管理等功能，都是很常见和使用的一些特性。目前该项目在持续维护升级当中，工具免费，代码开源，我会随着日常开发不断往里面迭代功能，如果有小伙伴用得上，欢迎一键三连，想要添加功能的，可以在github上提issue\"]},\"349\":{\"h\":\"\",\"t\":[\"接下来我们动手写一个简单的 Hello World 级别的插件，功能很简单：插件面板有一个按钮，点击这个按钮在插件界面上显示出当前选中图层的名称。完整的项目代码我已经放到 github 上了：cep-hello-world。\",\"演示\"]},\"350\":{\"h\":\"项目结构\",\"t\":[\"最终我们 Hello world 项目的目录结构是这样的：\",\" ├── .debug # CEP 扩展 debug 模式配置文件，只开开发时需要 ├── CSXS # 用于存放扩展的配置和资源文件（例如图标） │ └── manifest.xml # 扩展清单文件，用于配置扩展的名称，兼容性，图标，菜单等方方面面，类似 chrome 扩展和 pwa 应用的 manifest ├── JSX # 存放 extendscript 代码 │ └── index.jsx # jsx 代码入口 └── web # 前端代码 └── index.html # 扩展面板的 HTML\"]},\"351\":{\"h\":\"创建项目\",\"t\":[\"插件必须要放在特定的文件夹才能被 PS 加载到。有三个位置都能存放 CEP 插件：\",\"插件必须要放在特定的文件夹才能被 PS 加载到。有三个位置都能存放 CEP 插件：\",\"软件安装文件夹\",\"系统级插件存放文件夹\",\"用户级插件存放文件夹\"]},\"352\":{\"h\":\"软件安装文件夹\",\"t\":[\"软件安装文件夹/Required/CEP/extensions\",\"例如软件（或者说宿主）是 Photoshop，那么在 Mac 对应的路径默认就是：/Applications/Adobe Photoshop 2022，当然软件的安装路径你是可以修改的。这个文件夹不应该被用于存放第三方插件，是用来存放软件自带的 CEP 插件的，而且在 Mac 上修改这个文件夹是需要 Root 权限的。\"]},\"353\":{\"h\":\"系统级的插件存放文件夹\",\"t\":[\"Win(x64): C:\\\\Program Files (x86)\\\\Common Files\\\\Adobe\\\\CEP\\\\extensions, and C:\\\\Program Files\\\\Common Files\\\\Adobe\\\\CEP\\\\extensions (since CEP 6.1)\",\"macOS: /Library/Application Support/Adobe/CEP/extensions\",\"既然是系统级的，那么将插件安装到这就是需要 root 权限。开发插件的时候肯定是不会放这的，放这都没权限修改代码。\",\"这个文件夹适合存放生产环境的插件，某种程度上可以防止用户修改到插件内容，修改了插件内容一般会导致 PS 加载插件的时候报插件内容和签名不一致的问题。\"]},\"354\":{\"h\":\"用户级别的插件存放文件夹\",\"t\":[\"Win: C:\\\\Users\\\\<用户名>\\\\AppData\\\\Roaming\\\\Adobe\\\\CEP/extensions\",\"macOS: ~/Library/Application Support/Adobe/CEP/extensions\",\"这才是我们在开发插件时插件应该存放的目录，我们可以随意修改这个文件夹内的内容。\"]},\"355\":{\"h\":\"插件查找顺序\",\"t\":[\"软件安装文件夹 > 系统级的插件存放文件夹 > 用户级别的插件存放文件夹。\",\"所以我们第一步就是在用户级别的插件存放文件夹创建我们的插件文件夹：\",\"# 以 Mac 举例，Windows 就是 C:\\\\Users\\\\<USERNAME>\\\\AppData\\\\Roaming\\\\Adobe\\\\CEP/extensions cd '~/Library/Application Support/Adobe/CEP/extensions' mkdir cep-hello-world\"]},\"356\":{\"h\":\"添加插件配置文件\",\"t\":[\"一个包含 CSXS/manifest.xml 的文件夹就能称之为一个 CEP 插件。宿主扫描到存放插件的文件夹中的子文件中包含 CSXS/manifest.xml 便会将这个子文件夹识别为一个 CEP 插件。有过 chrome 扩展或者 pwa 应用的读者应该都见过个名为 manifest 的文件，同样的在 CEP 插件中也必须存在一个这样的配置文件。\",\"在项目根目录下创建 CSXS 文件夹，并添加 manifest.xml 文件，文件内容：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\" ?> <!-- ExtensionBundleId 是插件 id --> <!-- Version 指的是 manifest.xml 的 schema 版本 --> <ExtensionManifest xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" ExtensionBundleId=\\\"org.ytj.helloWorld\\\" ExtensionBundleVersion=\\\"1.0\\\" Version=\\\"7.0\\\" > <!-- 一个 CEP 插件可以注册多个面板，每一个面板都可以视为一个子插件 --> <ExtensionList> <!-- 注册一个面板，这个面板可以视为一个子插件，id 为 org.ytj.helloWorld.panel --> <Extension Id=\\\"org.ytj.helloWorld.panel\\\" Version=\\\"0.0.1\\\" /> </ExtensionList> <ExecutionEnvironment> <!-- 声明这个插件支持的宿主，也就是说是支持跑在 PS 还是 AE，还是其它 adobe 软件 --> <HostList> <!-- PHSP 和 PHXS 都是说 Photoshop --> <Host Name=\\\"PHSP\\\" Version=\\\"16.0\\\" /> <!-- 16.0 指的是兼容 ps 的 16.0 版本及其以上 --> <Host Name=\\\"PHXS\\\" Version=\\\"16.0\\\" /> </HostList> <!-- 插件支持的语言 --> <LocaleList> <Locale Code=\\\"All\\\" /> </LocaleList> <RequiredRuntimeList> <!-- 声明支持的 CEP 版本为 CEP9 --> <RequiredRuntime Name=\\\"CSXS\\\" Version=\\\"9.0\\\" /> </RequiredRuntimeList> </ExecutionEnvironment> <DispatchInfoList> <!-- 面板的具体配置 --> <Extension Id=\\\"org.ytj.helloWorld.panel\\\"> <DispatchInfo> <Resources> <!-- 面板的网页 HTML 首页路径，相对路径是相对于插件文件夹 --> <MainPath>./web/index.html</MainPath> <!-- 和这个面板相关联的 extendscript 线程加载的 extendscript 文件路径 --> <!-- 不同的面板它们的 jsx 环境是隔离的，这和宿主的实现有关，PS 是隔离的， AE 不是 --> <ScriptPath>./JSX/index.jsx</ScriptPath> <!-- 浏览器环境和 nodejs 环境的一些参数 --> <CEFCommandLine> <Parameter>--enable-speech-input</Parameter> <Parameter>--enable-media-stream</Parameter> <!-- 开启 nodejs 支持，可以在 node 环境直接写 nodejs 代码 --> <Parameter>--enable-nodejs</Parameter> </CEFCommandLine> </Resources> <Lifecycle> <!-- 设置打开插件显示面板界面，也可以设置为 false，打开后不会显示界面--> <AutoVisible>true</AutoVisible> </Lifecycle> <!-- 面板 UI 配置 --> <UI> <!-- 除了普通的面板类型还有 --> <!-- ModalDialog：模态框，不能嵌入 PS 界面，用户在关掉之前不能和 PS 交互 --> <!-- Modeless：和 ModalDialog 区别在于它不会阻止你和 PS 交互 --> <!-- Custom：配合 AutoVisible 实现无界面面板 --> <Type>Panel</Type> <!-- 插件名称，你在 PS 的菜单中看到的插件名称 --> <Menu>Hello World</Menu> <!-- 面板尺寸相关 --> <Geometry> <!-- 插件默认宽高 --> <Size> <Height>611</Height> <Width>280</Width> </Size> <!-- 插件最大宽高 --> <MaxSize> <Height>4000</Height> <Width>600</Width> </MaxSize> <!-- 插件最小宽高 --> <MinSize> <Height>611</Height> <Width>280</Width> </MinSize> </Geometry> <Icons> <!-- 不同主题下的面板图标 --> <Icon Type=\\\"Normal\\\">./images/IconLight.png</Icon> <Icon Type=\\\"RollOver\\\">./images/IconLight.png</Icon> <Icon Type=\\\"DarkNormal\\\">./images/IconDark.png</Icon> <Icon Type=\\\"DarkRollOver\\\">./images/IconDark.png</Icon> </Icons> </UI> </DispatchInfo> </Extension> </DispatchInfoList> </ExtensionManifest>\",\"里面很多配置项的功能我都以注释的形式说明了。这里再提一下其中几个点：\",\"manifest.xml 中所有的相对路径都是相对于插件的根路径\",\"一个 CEP 插件是可以包含多个面板，每一个面板都可以称之为一个子插件，这在 manifest.xml 和后面提到的 debug 配置里都能体现出来。这些面板可以是能嵌入 PS 界面的普通面板，也可以是是模态的，非模态的，还可以是无界面的面板。模态面板主要是阻止用户在使用插件时和 PS 交互，修改文档数据。无界面面板你可以作为后台服务来用，例如启动一个 nodejs 服务器提供图片压缩等耗时任务。每一个面板都是一个独立的进程，不同的进程相互是隔离的，不会因为一个面板崩溃影响到另一个面板。\",\"CSXS 文件夹下我们一般还会存放其它插件用到的资源，例如 CSXS/logo 用来存放插件图标，当然这不是强制的，只不过我看社区的人很多都是这么干。学习一门技术同时也意味着需要去习惯这个社区的文化\",\"插件和面板的关系\",\"顺便提醒一下，我们可以配置 VSCode 的 XML Schema 来获取 manifest.xml 文档提示，增加 .vscode/settings.json，在其中添加：\",\"{ \\\"xml.fileAssociations\\\": [ { \\\"pattern\\\": \\\"CSXS/manifest.xml\\\", // 这里声明的是 7.0 版本，和 manifest.xml 中 ExtensionManifest 标签的 Version 属性对应 // raw.githubusercontent.com 这个域名似乎国内访较慢，你可以直接下载到本地，然后直接用本地文件路径 \\\"systemId\\\": \\\"https://raw.githubusercontent.com/Adobe-CEP/CEP-Resources/master/CEP_7.x/ExtensionManifest_v_7_0.xsd\\\" } ] }\",\".vscode/settings.json\"]},\"357\":{\"h\":\"浏览器代码\",\"t\":[\"这部分内容我们来编写前端部分的代码，这部分代码是使用 chromium 内核渲染的，一个面板其实相当于一个浏览器标签页。\",\"还记得前面 manifest.xml 我们有配置插件面板的 HTML 路径吗？其实就是 MainPath 标签的内容。\",\"<Resources> <!-- 面板的网页 HTML 首页路径，相对路径是相对于插件文件夹 --> <MainPath>./web/index.html</MainPath> <!-- 和这个面板相关联的 extendscript 线程加载的 extendscript 文件路径 --> <!-- 不同的面板它们的 jsx 环境是隔离的，这和宿主的实现有关，PS 是隔离的， AE 不是 --> <ScriptPath>./jsx/index.jsx</ScriptPath> <!-- 浏览器环境和 nodejs 环境的一些参数 --> <CEFCommandLine> <Parameter>--enable-speech-input</Parameter> <Parameter>--enable-media-stream</Parameter> <!-- 开启 nodejs 支持，可以在 node 环境直接写 nodejs 代码 --> <Parameter>--enable-nodejs</Parameter> </CEFCommandLine> </Resources>\",\"在插件根目录下新建文件夹 web，这个文件夹用来存在插件使用的前端代码，增加 index.html，添加如下内容：\",\"<!doctype html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>CEP Hello World</title> <link rel=\\\"stylesheet\\\" href=\\\"./style.css\\\" /> </head> <body> <div id=\\\"container\\\"> <p>当前图层名称为：<span id=\\\"currentLayerName\\\"></span></p> <button id=\\\"refresh\\\">刷新</button> </div> <script> // 调用 jsx 接口获取当前选中的图层名称 function getCurrentLayerNameFromJsx(cb) { // evalScript 在某些 JSX engine 的实现是异步的，也有是同步的 return window.__adobe_cep__.evalScript('api.getCurrentLayerName()', function (result) { cb(result); }); } const refreshBtn = document.querySelector('#refresh'); function refresh() { getCurrentLayerNameFromJsx(function (layerName) { const span = document.querySelector('#currentLayerName'); span.textContent = layerName; }); } refreshBtn.addEventListener('click', function () { refresh(); }); // 打开插件时刷新 refresh(); </script> </body> </html>\",\"代码内容很简单：\",\"打开面板时更新当前图层名称\",\"点击刷新按钮时更新当前图层名称\",\"面板插件面板默认背景是黑色的，会导致默认为黑色的文字看不见。我们再增加一个 web/style.css 文件来修改网页样式：\",\"#container { margin: 40px auto; /* 水平居中 */ display: flex; flex-direction: column; align-items: center; } html body { /* 默认背景是黑的，文字也是黑的 */ background-color: white; color: black; }\",\"现在插件肯定还是运行不起来的，因为我们获取选中图层的 jsx 接口还没有实现。\"]},\"358\":{\"h\":\"ExtendScript 代码\",\"t\":[\"ExtendScript 在我们 CEP 圈子里又称之为 jsx，可能因为它的文件后缀名就是 .jsx，这对于写 react 的前端来说开始可能有点不习惯。在前面的代码中我们还没有实现获取当前选中的图层的名称的接口，在实现它之前我们得先对 CEP 各个运行时有个基本的了解。\",\"CEP 浏览器代码和 jsx 代码交互\",\"CEP 插件的代码按照职责可以分为两部分：\",\"负责读取数据渲染界面\",\"负责处理业务逻辑\",\"前面写的跑在浏览器的代码就是用于渲染插件界面，而插件的业务逻辑一般需要获取 PS 中的各种信息（也就是访问 DOM API），以及调用 PS 的 API 让 PS 执行各种操作。\",\"浏览器环境是没办法直接获取宿主信息的，但是我们可以用通过 window.__adobe_cep__.evalScript(script, callback); 去执行一段 jsx 代码访问宿主信息。\",\"增加 JSX/index.jsx 文件，添加以下内容：\",\"// 使用立即执行函数避免全局污染 (function () { 'use strict'; function getCurrentLayerName() { // 没有打开的文档返回 null if (app.documents.length === 0) return null; // activeDocument 为当前打开的文档，activeLayer 为当前选中的图层 var currentLayer = activeDocument.activeLayer; return currentLayer ? currentLayer.name : null; } // 使用全局变量 api 存放我们所有暴露给浏览器代码调用的 API // $.global 类似浏览器环境中的 window 和 nodejs 中的 global $.global.api = {}; api.getCurrentLayerName = getCurrentLayerName; })();\",\"JSX 文件夹用于存放我们所有的 jsx 代码，JSX/index.jsx 是所有 jsx 代码的入口。这个路径对应 manifest.xml 中 ScriptPath 标签配置。\"]},\"359\":{\"h\":\"配置 CEP Debug 模式\",\"t\":[\"当我们的插件写到这，如果你重启 PS 你会发现，菜单中虽然显示出 Hello World 这个插件，但是打开是空白的。一个 CEP 插件只有两种情况能被加载：\",\"签过名\",\"开启了 CEP 的 debug 模式\",\"在开发插件时我们肯定不会每次打开插件先签一遍名，所以开发前我们都会选择先去配置 CEP 的 debug 模式。不同的系统配置方式不同。\"]},\"360\":{\"h\":\"Mac 环境配置 CEP debug 模式\",\"t\":[\"在终端执行下面的命令即可开启 CEP11 的 debug 模式：\",\"defaults write com.adobe.CSXS.11 PlayerDebugMode 1\",\"11 对应 CEP 的版本。CEP 版本可以可以对照下面的表格，如果你实在搞不清楚那就直接把 8, 9, 10, 11 全给开了。\",\"Application\",\"Host ID(Product SAPCode)\",\"CC 2019 Version\",\"CC 2020 Version\",\"FY 2020\",\"FY2021\",\"Photoshop\",\"PHSP/PHXS\",\"20 (CEP 9)\",\"21 (CEP 9)\",\"22.0 (CEP 10)\",\"23.0 (CEP 11)\",\"InDesign\",\"IDSN\",\"14 (CEP 9)\",\"15 (CEP 9)\",\"16.0 (CEP 10 )\",\"16.3(CEP 11)\",\"InCopy\",\"AICY\",\"14 (CEP 9)\",\"15 (CEP 9)\",\"16.0 (CEP 10 )\",\"16.3(CEP 11)\",\"Illustrator\",\"ILST\",\"23 (CEP 9)\",\"24 (CEP 9)\",\"25.0 (CEP 10)\",\"25.3(CEP 11)\",\"Premiere Pro\",\"PPRO\",\"13 (CEP 9)\",\"14 (CEP 9)\",\"14.4 (CEP 10)\",\"15.4(CEP 11)\",\"Prelude\",\"PRLD\",\"8 (CEP 9)\",\"9 (CEP 9)\",\"10.0(CEP 10)\",\"10.1(CEP 11)\",\"After Effects\",\"AEFT\",\"16 (CEP 9)\",\"17 (CEP 9)\",\"17.1.4 (CEP 10)\",\"18.4(CEP 11)\",\"Animate\",\"FLPR\",\"19 (CEP 9)\",\"20 (CEP 9)\",\"21.0 (CEP 10)\",\"22.0(CEP 11)\",\"Audition\",\"AUDT\",\"12 (CEP 9)\",\"13 (CEP 9)\",\"13.0.10 (CEP 10)\",\"14.4(CEP 11)\",\"Dreamweaver\",\"DRWV\",\"19 (CEP 9)\",\"20 (CEP 9)\",\"21.0 (CEP 10)\",\"22.0(CEP 11)\",\"Bridge\",\"KBRG\",\"9 (CEP 9)\",\"10 (CEP 9)\",\"11.0 (CEP 10)\",\"12.0(CEP 11)\",\"Rush\",\"RUSH\",\"1 (CEP 9)\",\"1.2.1 (CEP 9)\",\"1.5.29 (CEP 10)\",\"2.1(CEP 11)\",\"PS版本\",\"版本号\",\"CEP版本\",\"CSXS\",\"CC2015\",\"16.0\",\"6.x\",\"CSXS.6\",\"CC2016\",\"17.0\",\"7.x\",\"CSXS.7\",\"CC2017\",\"18.0\",\"8.x\",\"CSXS.8\",\"CC2018\",\"19.0\",\"9.x\",\"CSXS.9\",\"CC2019\",\"20.0\",\"10.x\",\"CSXS.10\",\"CC2020\",\"21.0\",\"11.x\",\"CSXS.11\",\"CC2021\",\"22.0\",\"12.x\",\"CSXS.12\",\"为了方便起见，可以在 .zshrc 中添加下面两个别名：\",\"alias enable_cep_debug=\\\"defaults write com.adobe.CSXS.11 PlayerDebugMode 1\\\" alias disable_cep_debug=\\\"defaults write com.adobe.CSXS.11 PlayerDebugMode 0\\\"\"]},\"361\":{\"h\":\"Windows 环境配置 CEP Debug 模式\",\"t\":[\"Win + R 输入 regedit 打开注册表编辑器，定位到 HKEY_CURRENT_USER/Software/Adobe/CSXS.11，修改 PlayerDebugMode 项的值为 1，值类型选择字符串。如果没有找到 PlayerDebugMode 项，那就自己添加一个。\",\"Windows 配置 CEP debug 模式\",\"为了大家方便，我这里把这几个注册表都导出来了，你只有下载下面的压缩包，解压，然后双击里面的reg文件，就可以导入到注册表\",\"注册表文件压缩包\",\"配置完 CEP 的 debug 模式后，重启 ps 后你应该就可以在菜单中找到并打开插件了：\",\"打开插件步骤\"]},\"362\":{\"h\":\"总结\",\"t\":[\"通过一步一步实现 Hello World 项目，我们可以对 CEP 的插件开发有一个初步的了解：\",\"可以通过 manifest.xml 来配置插件的方方面面\",\"用前端代码渲染界面\",\"需要访问宿主就编写 JSX 接口，通过 evalScript 调用\",\"随着你对 CEP 插件了解的加深，你会慢慢能理解下面这张图：\",\"CEP 架构\",\"本文没有涉及对 nodejs 的使用，后面再单独出一篇教程吧。下一篇教程将讨论如何 debug CEP 的前端代码和 ExtendScript 代码。\",\"链接：\",\"https://yutengjing.com/posts/cep-扩展开发二helloworld/\"]},\"363\":{\"h\":\"\"},\"364\":{\"h\":\"浏览器环境代码 debug\",\"t\":[\"由于 CEP 的浏览器环境代码下可以混编 nodejs 代码，因此浏览器 v8 的代码和 nodejs v8 的代码是可以混在一起调试的，也就是说 debug 的时候你可以直接从浏览器原生代码跳进 nodejs 的函数，再跳回来。\"]},\"365\":{\"h\":\"配置 .debug 文件\",\"t\":[\"在开启了 CEP 的 debug 模式后，我们便可以在不签名的情况下加载 CEP 插件。如果需要 debug 浏览器环境的代码或者查看网页的 DOM 元素，首先要做的便是配置 .debug 文件。\",\"在 CEP 项目的根路径增加 .debug 文件。这是一个 xml 格式的文件，需要注意的是虽然是 xml 格式，但是不能使用注释语法。之前我就踩过这个坑，查了半天才发现之所以没法 debug 居然是因为我在 xml 文件里用了注释语法…。在添加完 .debug 文件后记得先关闭面板再重新打开面板让 ps 加载 .debug 文件。\",\"<!-- !!! 拷贝这段代码去用的时候记得删掉所有注释 --> <!-- 可以指定多个插件面板的 debug 配置 --> <ExtensionList> <!-- id 为面板 id --> <Extension Id=\\\"org.ytj.helloWorld.panel\\\"> <HostList> <!-- 不同的宿主可以使用不同的端口号 --> <!-- port 为 chromium remote debug 的端口 --> <Host Name=\\\"PHSP\\\" Port=\\\"9999\\\" /> <Host Name=\\\"PHXS\\\" Port=\\\"9999\\\" /> </HostList> </Extension> </ExtensionList>\",\"如果这个时候我们查看一下 tcp 端口占用，我们会发现 CEP 的 Html engine 占用了 9999 这个 tcp 端口：\",\"# lstcp 是一个 alias alias lstcp=\\\"sudo lsof -iTCP -sTCP:LISTEN -P -n\\\"\",\"tcp 端口占用情况\",\"由于这个文件的后缀名不是 xml, 因此 vscode 无法识别它为 xml，为此我们需要配置 vscode 的文件类型映射：\",\"// .vscode/settings.json { \\\"files.associations\\\": { // 将所有 jsx 代码映射为 javascript 代码而不是 javascriptreact \\\"**/JSX/**/*.jsx\\\": \\\"javascript\\\", // .debug 文件映射为 xml \\\".debug\\\": \\\"xml\\\", // 将 scripting listener 的 日志文件识别为 javascript \\\"**/Desktop/ScriptingListenerJS.log\\\": \\\"javascript\\\" } }\"]},\"366\":{\"h\":\"使用 chrome 远程调试\",\"t\":[\"我们 debug 浏览器环境代码采用的是 remote debug，如果你以前有开发过移动端网页，使用 chrome 远程调式过 node/react native 之类的话应该对 remote debug 很熟悉了。\",\"通过上面的配置给我们的面板扩展指定了远程调式的端口号：9999。接下来我们使用 chrome 打开地址 chrome://inspect，启用 Discover network targets。点击 Configure... 按钮来配置 chrome 扫描的端口号，我们添加 localhost:9999。刷新一下，就可以在 remote target 列表中找到 PS 托管的插件服务了。\",\"Chrome Inspect\",\"点击上图中的 inspect 按钮可以打开 remote devtools 窗口对浏览器代码进行调试了。\",\"Debug 浏览器代码\"]},\"367\":{\"h\":\"踩坑记录\",\"t\":[\"如果你是使用 edge 浏览器来调试，chrome://inspect 对应的是 edge://inspect\",\"实测在 Windows 系统上当你打开 chrome://inspect 页面，扫描到 CEP 的 remote target 会比较慢，10s 以内都不奇怪。\",\"每次当你关闭调式中的 CEP 扩展，当前的 remote devtools 窗口都会失效，需要你从新到 chrome://inspect 页面点击 inspect 打开新的 devtools 窗口\",\"目前 CEP 的 debug 有个 bug，在开着 devtools 的情况下，很多 DOM 事件会失效。例如 hover 事件，mouseMove 事件等。所以当你在调试如按钮的 hover 样式或者 mouseMove 事件代码时请关掉 devtools 窗口。这也是我为什么会自己还封装了一套跨端的日志框架的原因。\",\"演示的代码对应这次提交：配置调试浏览器代码\"]},\"368\":{\"h\":\"ExtendScript 代码 debug\",\"t\":[\"早期 CEP 扩展是使用 ESTK 来调试的，但是目前这个项目已经放弃维护。官方替代品为 VSCode 插件：ExtendScript Debugger。这是个闭源插件，开发者是 ErinF。如果大家想要反馈插件问题可以去他发布的插件更新帖子下面评论。\",\"目前插件来到了 V2.0.3，V2 对 V1 版本的代码完全重写，目标就是稳定性，性能，扩展性优化，以及改善了对 VSCode 自身能力的适配。并没有增加什么新功能，区别较大的就是新增了 attach 模式。\"]},\"369\":{\"h\":\"debug 级别\",\"t\":[\"通过在 jsx 代码中设置 $.level 可以设置 jsx 的 debug 级别：\",\"0：关闭 debug\",\"1：在遇到运行时异常时断点\",\"2：完整的 debug 模式\",\"一般来说直接在 index.jsx 最开始直接 $.level = 2 即可，当然最好是区分开发环境设置，关闭 debug 模式性能可能会好点。\",\"// index.jsx $.level = isProduction ? 0 : 2;\"]},\"370\":{\"h\":\"配置\",\"t\":[\"这部分没什么太多可以说的，我就贴一下最常用的 debug 配置吧：\",\"// .vscode/launch.json { \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ // 对当前打开的文件进行 debug { \\\"name\\\": \\\"Run File\\\", \\\"type\\\": \\\"extendscript-debug\\\", // launch 模式每次 debug 时插件会和 ps jsx engine 建立一次连接，当代码执行结束自动断开 // 这种 debug 方式其实和一般我们 debug nodejs 代码没区别 \\\"request\\\": \\\"launch\\\", // 指定 jsx 代码执行的宿主环境，指定后就不用每次 debug 的时候都要选择宿主 \\\"hostAppSpecifier\\\": \\\"photoshop\\\", // 指定执行的入口文件为当前打开的文件 // 查看所有的 VSCode 变量：https://code.visualstudio.com/docs/editor/variables-reference#_predefined-variables \\\"script\\\": \\\"${file}\\\", // 在 debug variables panel 中隐藏函数属性 (包括操作符重载)，内建属性（包括 arguments） \\\"hiddenTypes\\\": [\\\"Function\\\", \\\"builtin\\\"] }, { \\\"name\\\": \\\"Attach Debug\\\", \\\"type\\\": \\\"extendscript-debug\\\", // attach 模式相当于建立一个持久连接，每次代码执行结束连接不会断开，除非手动断开连接 \\\"request\\\": \\\"attach\\\", \\\"hostAppSpecifier\\\": \\\"photoshop\\\" } ] }\",\"配置完你就可以像 debug 普通的 js 代码一样使用 VSCode 断点，或者在需要断点的地方写 debugger 语句。\",\"jsx debug\",\"如果你想点一次 debug 按钮同时 debug 浏览器中的 JavaScript 和宿主执行的 ExtendScript，可以参考下面的配置：\",\"{ \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"type\\\": \\\"chrome\\\", \\\"request\\\": \\\"attach\\\", \\\"name\\\": \\\"[Attach] CEP JavaScript\\\", \\\"port\\\": 7777, // <-- Whatever debug port you have configured. \\\"webRoot\\\": \\\"${workspaceRoot}\\\", \\\"pathMapping\\\": { \\\"/\\\": \\\"${workspaceRoot}\\\" } }, { \\\"type\\\": \\\"extendscript-debug\\\", \\\"request\\\": \\\"attach\\\", \\\"name\\\": \\\"[Attach] CEP ExtendScript\\\", \\\"hostAppSpecifier\\\": \\\"premierepro-22.0\\\" } ], \\\"compounds\\\": [ { \\\"name\\\": \\\"[Compound] Debug CEP\\\", \\\"configurations\\\": [\\\"[Attach] CEP JavaScript\\\", \\\"[Attach] CEP ExtendScript\\\"] } ] }\",\"对应的代码提交：增加 debug 配置\"]},\"371\":{\"h\":\"局限性\"},\"372\":{\"h\":\"不支持 sourcemap\",\"t\":[\"目前官方的 Debug 工具最大的遗憾就是不支持 sourcemap，这意味着如果我们 jsx 代码想要使用 TypeScript 编写就没法在源码中调试，这也是我目前 CEP 工程化中最遗憾的一点。\",\"不要和我说话你不需要 debug，但凡项目逻辑复杂点，人肉 debug 都是折磨。也不要说什么我可以直接在编译后的代码内 debug。\",\"编译前：\",\"// index.ts class Test { hello() { console.log('hello'); } } for (const num1 of [1, 2, 3]) { for (const num2 of ['a', 'b', 'c']) { console.log(num1 + num2); } }\",\"编译后：\",\"var Test = /** @class */ (function () { function Test() {} Test.prototype.hello = function () { console.log('hello'); }; return Test; })(); for (var _i = 0, _a = [1, 2, 3]; _i < _a.length; _i++) { var num1 = _a[_i]; for (var _b = 0, _c = ['a', 'b', 'c']; _b < _c.length; _b++) { var num2 = _c[_b]; console.log(num1 + num2); } }\",\"可以看出编译后的代码和编译前的代码区别还是很大的，在编译后的代码里 debug 你要花很多额外的时间去将它和源码的逻辑对应起来。这还不是关键问题，最大的问题是你怎么去处理 import，打包成单文件？打包成单文件那代码更乱了。\"]},\"373\":{\"h\":\"调试 CEP 插件调用的 jsx\",\"t\":[\"执行 jsx 有两种常用方式：\",\"debugger 扩展直接运行\",\"CEP 插件 manifest.xml 的 标签，或者 window.__adobe_cep__.evalScript()\",\"后者支持部分宿主 debug，例如 AE。部分宿主不支持，例如 PS。\",\"如果你要调试 AE 的 CEP 扩展执行的 JSX 代码，那使用 attach 模式即可，因为插件和宿主一直是连着的，CEP 回调中执行的 jsx 代码如果被打了断点也能正常的被 debugger 插件定位调试。\"]},\"374\":{\"h\":\"总结\",\"t\":[\"本篇讲述了任何软件开发中非常重要一环：debug。我希望读者能够意识到：debug 工具不只是用来定位和修复 bug 的，它还是一份 api 文档。当你需要实现一个功能的时候，也可以借助 debug 去查看相关的 jsx 变量。\",\"CEP 系列教程暂时就到此结束，后续我还会写一些 CEP 的文章，但是不再以教程的形式来写，并且不会从新人的视角来写。写新人教程实在是太费劲了，很多时候说明一个稍微比较深入的点需要写很多预备知识。目前还想写的主题有：提升 CEP 开发体验，CEP 工程化，jsx 性能优化，跨端通信框架，跨端日志，内存泄漏分析等。至于什么时候写，会不会写那就看心情了。指不定我哪天被裁了，以后不写 CEP 插件那就永远不写了。\"]},\"375\":{\"h\":\"\"},\"376\":{\"h\":\"ExtendScript语言\",\"t\":[\"下面是Adobe官方给出的一段针对这个语言的介绍\",\"”[…] an extended form of JavaScript used by several Adobe applications, including Photoshop, Illustrator, and InDesign. ExtendScript implements the JavaScript language according to the ECMA-262 specification. [It] supports the 3rd Edition of the ECMA-262 Standard, including its notational and lexical conventions, types, objects, expressions, and statements. ExtendScript also implements the E4X ECMA-357 specification, which defines access to data in XML format.”\",\"从里面我们就可以看到，JSX采用的ES3标准，是一套非常非常非常旧的语言集合，我们目前基于chrome的web开发，一般都用到了ES6的标准，那是差的不是一两个时代，你不能在JSX里头使用各种新的语言特性，比如let, const, 箭头函数 等等，这些在里面都跑不起来，你只能一路var到底，同时有一些你平常习惯了的函数可能也没有，比如\",\"Array.indexOf() // JSX的Array对象里头并没有indexOf函数\",\"针对这种场景，你可以自己做一些Array的扩展，或者就是乖乖的用for去遍历。\",\"不过虽然如此，借助整个web繁荣的生态，我们依然可以用最新的语言集合来编码，然后通过编译工具生成目标语言，比如我自己日常开发，就喜欢用Typescript来开发，然后通过webpack/ts编译、混淆、打包然后在进行发布，这个部分对web开发的前端同学应该都很熟悉，我就不展开介绍了。教程后面的篇章，会讲插件的打包，混淆，发布相关，会在介绍这块内容。\",\"Typescript\",\"Typescript\"]},\"377\":{\"h\":\"脚本DOM编程\",\"t\":[\"大多数涉及到脚本插件开发的小伙伴，都会从官方那里找到photoshop-cc-javascript-ref.pdf这样的参考文档，这也是插件开发所能找到的最全，最完整的官方参考资料了…\",\"photoshop cc javascript reference\",\"photoshop cc javascript reference\",\"从这个文档里头，我们找到可以针对Ps编程需要的一些接口Api，使用方法，注意事项等。而它价值最大的是给与开发着一张编程图谱：即宿主可操控对象的DOM树。对于前端开发着而言，经常面对的是HTML的DOM树，看到Ps的这个DOM树结构，也应该非常适应，我对这个DOM树做了一些归类，如下图\",\"photoshop dom tree\",\"photoshop dom tree\",\"然后文档也告诉我们DOM的顶级层级是app，一切都可以通过它开始\",\"var doc = app.activeDocument; // 获取当前文档 var layer = app.activeDocument.activeLayer; // 获取当前选中的图层\",\"其中app是一切的入口，同时它又是默认值，可以缺省，即\",\"var doc = activeDocument; var layer = activeDocument.activeLayer;\",\"通过文档中的接口，我们可以通过Layers/Layer来操作图层相关的内容，通过Guides来操作参考线，PathItems操作路径等内容，具体每个对象具备的接口和使用方法，文档当中都有，我这里就不一一介绍了，下面通过几个示例，讲述其中的一些需要注意的点\"]},\"378\":{\"h\":\"1. 图层操作\",\"t\":[\"涉及到图层相关的对象有ArtLayer/ArtLayers/Layers/LayerSet/LayerSets，其中ArtLayer是一般图层，区别于LayerSet是图层组，ArtLayers/LayerSets分别是一般图层和图层的集合，即包含了一堆这样的图层\",\"ArtLayer & LayerSet \",\"ArtLayer & LayerSet\",\"而Layers是图层统称，即可以是ArtLayer，也可以是LayerSet， 所以通常我们不知道图层里头都是哪些的时候，就可以用Layers，下面的例子我们遍历document的一级图层打印图层信息\",\"var layers = app.activeDocument.layers; for (var i=0; i<layers.length; i++) { var layer = layers[i]; $.writeln(\\\"doc.layers[\\\" + i + \\\"] \\\" + layer.name + \\\". id: \\\" + layer.id + \\\". itemIndex: \\\" + layer.itemIndex); }\",\"上面的例子，有一个非常重要的地方要记住，它不是遍历当前文档中的所有图层，而是只会输出图层面板上的一级图层。我们知道Ps的图层结构，层级是可以不断深入的，所以这里就有了层级的概念，每次Layers都只能遍历当前层级的第一个子层级列表。\",\"ArtLayer & LayerSet \",\"ArtLayer & LayerSet\",\"所以要遍历所有图层，我们就需要判断当前图层是否是图层组（LayerSet），如果是图层组，意味着里头还有图层，如此反复。通常我们用递归的方法来完成这样的操作：\",\"// 递归方式遍历文档中的所有图层 function loopLayers(layers) { for (var i=0; i<layers.length; i++) { var layer = layers[i]; $.writeln(\\\"doc.layers[\\\" + i + \\\"] \\\" + layer.name + \\\". id: \\\" + layer.id + \\\". itemIndex: \\\" + layer.itemIndex); if (layer.typename == \\\"LayerSet\\\") { // 如果当前图层是图层组，就遍历它里头的图层 loopLayers(layer.layers); } } } loopLayers(activeDocument.layers);\",\"通过上面的代码我们可以递归遍历文档中的所有图层，并拿到想要的信息，不过你会发现当文档图层很多，嵌套很深的时候，这个方式会很慢，后面我会介绍更快的办法，暂时……先这样。下面我给了一个图层列表，通过上面的代码进行测试，可以看到结果如下\",\"loop layers\",\"loop layers\",\"doc.layers[0] Layer 5. id: 8. itemIndex: 8 doc.layers[1] Group 1. id: 6. itemIndex: 7 doc.layers[0] Layer 4. id: 5. itemIndex: 6 doc.layers[1] Layer 3. id: 4. itemIndex: 5 doc.layers[2] Layer 2. id: 3. itemIndex: 3 doc.layers[3] Layer 1. id: 2. itemIndex: 2 doc.layers[4] Background. id: 1. itemIndex: 1\",\"从上面的输出结果，我们可以看到如下几个特征：\",\"虽然图层是有层级的，但是他们的index却是一维的，图层位于越上面的，index值越大，在视觉层面，它就会盖住下面的图层，这个和HTML/CSS中的z-index类似\",\"如果你调整了一些图层的顺序再执行上面的代码，会发现对于图层的调整而言，图层的ID是不会发生变化的，但是它的index会做相应的调整，来保证视觉顺序\",\"layer adjustment\",\"layer adjustment\",\"doc.layers[0] Layer 2. id: 3. itemIndex: 8 doc.layers[1] Layer 1. id: 2. itemIndex: 7 doc.layers[2] Group 1. id: 6. itemIndex: 6 doc.layers[0] Layer 4. id: 5. itemIndex: 5 doc.layers[1] Layer 3. id: 4. itemIndex: 4 doc.layers[3] Layer 5. id: 8. itemIndex: 2 doc.layers[4] Background. id: 1. itemIndex: 1\",\"如果你仔细观察输出的结果，你会发现index里头少了3，id里头少了7，这是为什么呢？这是因为当你新建了一个图层组的时候，Ps在后面预留了一个图层index，这个预留的值会在你拖动图层到图层组的时候派上用场，比如你可以把一个图层移动到图层组的里面，外面，末尾的位置等等，都是通过这个预留的图层索引来操作的。这块内容，我们在后面讲动作管理器的时候还会提到。至于在DOM下，你要增加一个图层非常简单，不用关心这个隐藏的索引数值\",\"// 给某个图层组添加一个图层 var layerSet = activeDocument.layerSets[0]; var layer = layerSet.artLayers.add();\"]},\"379\":{\"h\":\"2. 属性操作\",\"t\":[\"从官方文档里头，我们可以看到对象提供了许多方法(methods)和属性(properties)，对于属性，我们有一个特别注意的地方是，有些属性是可以改的，有些是不能的\",\"properties read write\",\"properties read write\",\"只有那些Read-Write的属性，你才可以设置它，比如你可以通过修改name属性来设置一个图层的名称，但是你不能通过设置typename来把一个普通图层改成图层组\",\"var layerSet = activeDocument.layerSets[0]; var layer = layerSet.artLayers.add(); layer.name = \\\"an awesome name\\\"; // 可以设置名称 // 这样是不可以的 layer.typename = \\\"LayerSet\\\";\"]},\"380\":{\"h\":\"3. 单位\",\"t\":[\"Ps提供了多种尺寸单位：像素/毫米/厘米/英寸等（可以在首选项->标尺&单位里头找到），它适用在不同的场景当中，当你要操作文档的时候，如果不进行设置，它就会采用当前用户使用的单位，这个往往会和你的预期不符，我们在脚本开发的时候，尤其需要注意这个，只要涉及到尺寸，距离相关的计算，都要考虑到这里。\",\"Units & Rulers\",\"Units & Rulers\",\"脚本提供了一个叫UnitValue的对象来包装所有的单位处理，你还可以通过该对象提供的as, convert两个方法来做单位的转换，具体使用参考官方的Javascript-Tools-Guide-CC.pdf文档\",\"new UnitValue(70, \\\"px\\\"); // 表示70像素 new UnitValue(10, \\\"in\\\"); // 表示10英寸\",\"由于单位的设置是在首选项里头进行的，前面我们看到API提供了首选项Preference的操作，于是我们可以通过设置首选项对应的值来修改默认的单位，这个在我们脚本编程的时候非常重要。又我们的代码执行完之后，还应该把用户原来的设置还原回去\",\"// 先把用户原来的单位设置保存起来 var rulerUnit = preferences.rulerUnits; var typeUnit = preferences.typeUnits; // 把默认单位都设置成像素 preferences.rulerUnits = Units.PIXELS; preferences.typeUnits = TypeUnits.PIXELS; // 执行你的代码... // 最后把用户的值还原回去 preferences.rulerUnits = rulerUnit; preferences.typeUnits = typeUnit;\"]},\"381\":{\"h\":\"内置对象\",\"t\":[\"JSX核心除了提供给我们一个DOM树之外，还提供了一些内置对象来完成一些其它操作\"]},\"382\":{\"h\":\"1. $对象\",\"t\":[\"$ 是一个全局对象，它提供了一些属性和方法，在某些场景你可能用得上\",\"// 0: No debugging // 1: Break on runtime errors // 2: Full debug mode $.level; // String. The current File Name: works only if it's been saved once // Won't work in the context of HTML Panels $.fileName; // Object. The Global namespace. $.global; // String. The current locale (e.g. \\\"en_US\\\"). It's Read-Write, so you can // change the locale of your scripts on the fly to test different languages $.locale; // String. In my machine, \\\" Macintosh OS 10.12.0/64\\\" $.os; // The current Stack trace $.stack; // The line where the $.line itself is found $.line; // --------------------- // === METHODS === // --------------------- // Write a String, without or with a linefeed $.write(\\\"Hello World!\\\"); // no LF $.writeln(\\\"Ciao Mondo!\\\"); // with LF // Evaluates the ExtendScript code from a file that loads from a path, // provided as a string, and returns the result of the evaluation $.evalFile(\\\"~/Desktop/TEMP/foobarbazprr.jsx\\\"); // Pauses for n milliseconds. Mind you: not equivalent to JavaScript setTimeout() $.sleep(4000); // Runs the garbage collection $.gc(); // Set and Get Environment Vars // Useful when you need, say, PS and Bridge to share variables $.setenv(\\\"HotFolder\\\", \\\"~/Desktop/TEMP\\\"); $.getenv(\\\"HotFolder\\\"); // \\\"~/Desktop/TEMP\\\" // Set a breakpoint $.bp(); debugger; // can be used as well within the code\"]},\"383\":{\"h\":\"2. 文件引用\",\"t\":[\"当你的JSX文件很多的时候，如果进行文件引用会成为一个问题，通常，我们会在插件加载的时候，把这些jsx都加载进来，但是也还有另外一种方法，系统提供另一个#include指令，通过它我们可以引用其它JSX文件\",\"// in main.jsx #include \\\"tools.jsx\\\" // ...\"]},\"384\":{\"h\":\"3. 文件系统\",\"t\":[\"宿主给我们提供了File/Folder两个对象，通过它我们可以操作本地系统的文件和文件夹，当我们需要做一些持久化存储的时候，或者从本地读取/存储一些文件的时候，就会用到这些对象的方法\",\"var folder = new Folder('~/Desktop/'); $.writeln(folder.absolutePath);\",\"相关的API大家看文档就可以了，后续篇章会有讲持久化存储的，还会再讲到这里\"]},\"385\":{\"h\":\"4. XML解析\",\"t\":[\"通过提供的XML对象，我们可以比较方便的解析xml格式文件，虽然这种格式目前用的比较少了\",\"/* * demo.xml * <root> * <item>value</item> * </root> */ var file = new File(\\\"~/Desktop/demo.xml\\\"); file.open(\\\"r\\\"); var content = file.read(); file.close(); // 创建一个xml对象 var xmlObj = new XML(content); xmlObj.children().length; // 1 xmlObj.root[0].item; // value\"]},\"386\":{\"h\":\"5. 其它\",\"t\":[\"还有一些Socket, XMP, Localization等内置对象，一般用的都比较少，我就不再一一介绍了，感兴趣的查看官方文档即可。\"]},\"387\":{\"h\":\"总结\",\"t\":[\"本文主要介绍了JSX的核心，通过官方给出的文档给大家做一个初步的介绍，并且介绍了DOM的基本概念和一些使用问题，通过DOM提供的API，我们可以对宿主做一些基本操作，比如创建图层，查找图层等。\",\"本文介绍所涉及到的官方文档，我这里弄了一份，有需要的可以直接下载使用\",\"JavaScript-Tools-Guide-CC.pdf\",\"photoshop-cc-javascript-ref.pdf\",\"photoshop-cc-scripting-guide-2015.pdf\",\"但是，你很容易就会发现，DOM提供的API太少了，能力非常有限，比如你可以通过名称来查找图层getByName，但是它只能在第一个子图层层级用，并且图层名称是可以重复的，这样你就很难找到唯一的某个图层。在比如activeLayer返回当前选中的图层，但是如果你选中了多个图层，它只能返回第一个，那我怎么拿到选中的图层列表呢？还有很多很多其它的操作，你会发现DOM里头都没有，大多数时候，你只依赖DOM提供的API，是完不成一件完整的事情的。\",\"那怎么办呢？ 这就要涉及到我们下一篇要讲的Action Manager，也叫动作管理器，它是Photoshop提供的一种俗称黑魔法的东西，通过它，我们可以做更多的事情\"]},\"388\":{\"h\":\"\"},\"389\":{\"h\":\"前言\",\"t\":[\"上篇文章我们介绍了JSX的脚本核心 - DOM编程，它是Ps对外提供的一套API，提供了可以通过JS Api来调用宿主核心功能的接口，通过它我们可以完成需要的一些工作，而这也是官方文档提供给我们的有限的可用接口。但是你实际使用过程中就会发现，DOM提供的api太少太少了，大体也就能覆盖你日常需要的40%，剩下的很多需求，都无法通过DOM API来完成。\",\"photoshop dom tree\",\"photoshop dom tree\",\"比如当选中的多图层的时候，你想拿到当前选中的多个图层，通过\",\"app.activeDocument.activeLayer\",\"只能拿到其中的一个，无法拿到所有选中的图层。再比如你想通过代码来选中移动工具，或者你想获取到图层的图层叠加效果等等，这些你在DOM API中都找不到相关的信息。于是，通常你就会在网上进行搜索，查找别人是怎么做的，搜着搜着，你可能就会在一些论坛上看到别人贴出来的这样的一坨代码\",\"var idselect = stringIDToTypeID( \\\"select\\\" ); var desc4 = new ActionDescriptor(); var idnull = stringIDToTypeID( \\\"null\\\" ); var ref1 = new ActionReference(); var idpathComponentSelectTool = stringIDToTypeID( \\\"pathComponentSelectTool\\\" ); ref1.putClass( idpathComponentSelectTool ); desc4.putReference( idnull, ref1 ); var iddontRecord = stringIDToTypeID( \\\"dontRecord\\\" ); desc4.putBoolean( iddontRecord, true ); var idforceNotify = stringIDToTypeID( \\\"forceNotify\\\" ); desc4.putBoolean( idforceNotify, true ); executeAction( idselect, desc4, DialogModes.NO );\",\"你会一边好奇，一边把代码拷贝出来贴进去，哎嘛，居然好使！接着你就会开始想这TMD是啥东西，紧接着继续搜索下去，你就会看到Action Manager这样的词，被翻译成中文大体是动作管理器/动作代理这样的词汇，你可能会想到，这可能是另外PS提供的另外一种API，于是你继续搜寻和它相关的信息，却发现，什么都搜不到，除了论坛上各种零星的代码随便，没有官方文档，没有非官方文档，没有任何地方会介绍这个东西是什么，怎么用，真的是什么都没有！\",\"于是你会更加疑惑，每当你从论坛，群各种地方看到这种代码的时候，都会纳闷，他们是怎么写出来这种代码的？\",\"WTF\",\"WTF\",\"客观来说，官方确实没有提供有关Action Manager（以下简称AM）的完整资料，有限的内容只有在官方文档中找到比如Action Descriptor这样的类的接口说明，但这离实际使用差了十万八千里。\",\"Action Descriptor\",\"Action Descriptor\",\"接下来，我会通过上、中、下三篇文章，系统性的给大家介绍一下，这个有着Ps脚本编程黑暗魔法著称的Action Manager，到底是怎么回事，包含哪些部分，如何去使用它，如何能够像论坛里头那些大神一样可以写出来自己完全无法理解的代码。希望通过这三篇文章，你也可以靠自己的力量，亲自学会这种魔法。\",\"文章篇幅较长，请摆正椅子，泡好咖啡。另，文章是我长时间思考、研究成果，内容原创，全网独一份，转载请注明出处。\"]},\"390\":{\"h\":\"背景介绍\",\"t\":[\"早在PS4的年代，PS加入了Action（动作） 这个功能，对PS比较熟悉的小伙伴应该都了解这个东西，它可以记录你在PS上的各种操作，然后类似录像机一样把你的动作记录下来之后进行重放，就可以实现一些批量操作的任务。为了实现这样的机制，PS底层实现了一整套动作 - 事件机制，你在PS的每个操作，都会转化成一个Action（动作），在这个动作完成之后呢，又通过事件（Event）派发出来，给需要关心这个动作的其它组件进行监听，（我们前面文章讲到的事件机制就来此于此）。这套机制，是宿主引擎在C++层实现的，你依然可以在C++的SDK中看到它的影子\",\"C++ SDK\",\"C++ SDK\",\"后来，随着Extend Script推出，Adobe大佬将这套机制进行了封装，提供了JS的API，本质上也就是一个桥接，最后JS的解释器转化到底层C++部分，所以你看到的这种不常见的语法和使用方式，归根到底是底层C的语法结构。再后来，Adobe科学家Thomas Ruark针对此写了一个非常有价值的插件ScriptListener，这个插件能够将你在PS中的操作，记录成一个动作脚本，将它输出出来，并且这个动作脚本是JS的方式提供的，也就是我们上面看到的那段代码，有了这个工具，大大降低了AM脚本获取的门槛（虽然门槛依然很高），它最大的价值，并不是给我们输出免费的代码，而是让我们可以窥探AM这个神秘的领域，打开了一扇窗户（嗯……不是门，一个很小的窗户）\",\"window\",\"window\"]},\"391\":{\"h\":\"ScriptListener\",\"t\":[\"这个插件的重要性，可以说是CEP/脚本开发领域必备工具了，有了它，可以在DOM API需求满足度40%，提高到80%，所以我们先来介绍一下它的安装和使用。\",\"首先下载插件，为了大家方便，我已经打包好了放在下面的链接当中，点击下载后解压，会看到两个文件，ScriptingListener.plugin是mac上用的，ScriptListener.8li是windows上用的\",\"ScriptListener Plugin\",\"将这个文件，拷贝到photoshop安装路径/plug-ins文件夹下，如下图\",\"mac plug-ins\",\"mac plug-ins\",\"win plug-ins\",\"win plug-ins\",\"安装完成之后，重启PS，接着你在PS上随便操作，就会发现在你的桌面上会生成一个ScriptingListenerJS.log文件，该文件记录下了你在PS的每一步操作对应的JS AM代码\",\"ScriptingListenerJS.log\",\"ScriptingListenerJS.log\",\"你把这一段段的代码拷贝出来，放到你的编辑器（如Extend Toolkit）中运行，会发现它和你手动操作的行为是一模一样的。有了它，相当于有了一个学霸同桌，有地方抄作业了！\"]},\"392\":{\"h\":\"Action Manager语法结构\",\"t\":[\"好了，现在有了一个学霸同桌，接下来我们讲一下如何优雅的抄作业。\",\"先看一个例子，我们用PS打开一个文件，就可以看到如下的代码输出\",\"var idopen = stringIDToTypeID( \\\"open\\\" ); var desc7 = new ActionDescriptor(); var iddontRecord = stringIDToTypeID( \\\"dontRecord\\\" ); desc7.putBoolean( iddontRecord, false ); var idforceNotify = stringIDToTypeID( \\\"forceNotify\\\" ); desc7.putBoolean( idforceNotify, true ); var idnull = stringIDToTypeID( \\\"null\\\" ); desc7.putPath( idnull, new File( \\\"/Users/xiaoqiang/Desktop/Untitled-1.psd\\\" ) ); var iddocumentID = stringIDToTypeID( \\\"documentID\\\" ); desc7.putInteger( iddocumentID, 224 ); executeAction( idopen, desc7, DialogModes.NO );\",\"虽然我们还不太理解这段代码的详细意思，但是可以通过括号里头的参数半猜半蒙，open就是打开文件的意思，然后对应的文件路径在**new File(…)**里头，所以我们可以将这段代码封装一下，包装一个我们自己的文件打开函数，我们传进去一个可变的路径参数，这样就可以打开我们想要的文件了\",\"function openDocument(filePath) { var idopen = stringIDToTypeID( \\\"open\\\" ); var desc7 = new ActionDescriptor(); var iddontRecord = stringIDToTypeID( \\\"dontRecord\\\" ); desc7.putBoolean( iddontRecord, false ); var idforceNotify = stringIDToTypeID( \\\"forceNotify\\\" ); desc7.putBoolean( idforceNotify, true ); var idnull = stringIDToTypeID( \\\"null\\\" ); desc7.putPath( idnull, new File( filePath ) ); var iddocumentID = stringIDToTypeID( \\\"documentID\\\" ); desc7.putInteger( iddocumentID, 224 ); executeAction( idopen, desc7, DialogModes.NO ); }\",\"仔细观察，会发现上面的代码有些冗余，看起来费劲的很，我们可以把里头的局部变量做一下优化，变成这样\",\"function openDocument(filePath) { var desc7 = new ActionDescriptor(); desc7.putBoolean( stringIDToTypeID( \\\"dontRecord\\\" ), false ); desc7.putBoolean( stringIDToTypeID( \\\"forceNotify\\\" ), true ); desc7.putPath( stringIDToTypeID( \\\"null\\\" ), new File( filePath ) ); desc7.putInteger( stringIDToTypeID( \\\"documentID\\\" ), 224 ); executeAction( stringIDToTypeID( \\\"open\\\" ), desc7, DialogModes.NO ); }\",\"代码简化之后，我们大体就可以看清晰它的脉络，它的整个过程如下\",\"创建了一个ActionDescriptor对象\",\"给这个对象设置了一堆属性\",\"执行一个open动作，把这个对象传给这个动作\",\"open document\",\"open document\",\"关于ActionDescriptor这个类，我们可以在官方文档里头找到它的接口API，这个类有许多函数接口，我写了一个Typescript的typings\",\"declare class ActionDescriptor { readonly count:number; // The number of keys contained in the descriptor readonly typename: string; clear(): void; // clear the descriptor erase(key: string): boolean; // erase a key from the descriptor getBoolean(key:number): boolean; // get the value of a key of type boolean getClass(key: number): number; // get the value of a key of type class getDouble(key: number): number; // get the value of a key of type double getEnumerationType(key: number): number; // get the enumeration value of a key getEnumerationValue(key: number): number; // get the enumeration value of a key getInteger(key: number): number; // get the value of a key of type integer getKey(index: number): number; // get ID of the Nth key getList(key: number): ActionList; // get the value of a key of type list getObjectType(key: number): number; // get the class ID of an object in a key of type object getObjectValue(key: number): ActionDescriptor; // get the value of a key of type object getPath(key: number): string; // get the value of a key of type Alias getReference(num: number): ActionReference; // get the value of a key of type ActionReference getString(key: number): string; // get the value of a key of type string getType(key: number): DescValueType; // get the type of a key getUnitDoubleType(key: number): number; // get the unit type of a key of type UnitDouble getUnitDoubleValue(key: number): number; // get the value of a key of type UnitDouble getData(key: number): string; hasKey(key: number): boolean; // does the descriptor contain the provided key? isEqual(color: any): boolean; // return true if the provided color is visually equal to this color putBoolean(key: number,value: boolean): void; putClass(key: number,value: number):void; putDouble(key: number,value: number):void; putEnumerated(key: number,enumType: any,value: any):void putInteger(key: number,value: number):void; putList(key: number,value: any): void; putObject(key: number,classID: number,value: any):void; putPath(key: number,value: string): void; putReference(key: number,value: ActionReference): void; putString(key: number,value: string): void; putUnitDouble(key: number,unitID: number,value: number): void; }\",\"可是，那这里面的stringIDToTypeID是啥意思？dontRecord, forceNotify是做什么，为什么有一个null，我能猜到open是打开的意思，那关闭难道是close？那复制呢？从哪里可以找到这些命令的值呢？我们面临的问题还有很多，我们一个个来。\"]},\"393\":{\"h\":\"1. TypeID/CharID/StringID\",\"t\":[\"在所有AM的代码片段中，你都会看到这些函数\",\"charIDToTypeID\",\"stringIDToTypeID\",\"typeIDToCharID\",\"typeIDToStringID\",\"最常见的，应该是charIDToTypeID，该函数的参数，是一个4个字符长度的字符串缩写，比如Lyr 表示的是图层Layer的意思，Shw 表示的显示Show的含义。\",\"// code sample 1 var desc1 = new ActionDescriptor(); var list1 = new ActionList(); var ref1 = new ActionReference(); ref1.putIdentifier(charIDToTypeID(\\\"Lyr \\\"), this.id);; list1.putReference(ref1); desc1.putList(charIDToTypeID(\\\"null\\\"), list1); executeAction(charIDToTypeID(\\\"Shw \\\"), desc1, DialogModes.NO);\",\"你实验执行一下，下面的代码，会发现charIDToTypeID/stringIDToTypeID的执行结果是一串数值\",\"charIDToTypeID( \\\"Opn \\\" ) //1332768288 stringIDToTypeID(\\\"open\\\") //1332768288\",\"然后typeIDToCharID/typeIDToStringID就是反过来把数值转成可读的字符串\",\"typeIDToCharID(1332768288) // Opn typeIDToStringID(1332768288) // open\",\"上面我们讲历时背景的时候提到了，底层是C的代码结构，我们看到的open, show等等命令，在引擎层就是一个HasMap，charIDToTypeID输出的数值就是该map的索引，计算机是不认识open这个单词的，所以我们通过函数将这个命令转成索引数值，在底层就可以找到对应的命令了。\",\"我们还可以看到charIDToTypeID(“Opn “) == stringIDToTypeID(“open”)，所以两个都可以用，上面的code sample 1中也可以将charIDToType替换掉，如下\",\"var desc1 = new ActionDescriptor(); var list1 = new ActionList(); var ref1 = new ActionReference(); ref1.putIdentifier(stringIDToTypeID(\\\"layer\\\"), this.id);; list1.putReference(ref1); desc1.putList(stringIDToTypeID(\\\"null\\\"), list1); executeAction(stringIDToTypeID(\\\"show\\\"), desc1, DialogModes.NO);\",\"我们会发现，char对应的是一个C层的一个字符，4个字节长度，所以它的参数都是4长度的字符串，而string则是这个缩写的完整表达，为什么存在这两种功能相同表达方式不同的函数，这里头有历时原因，早期只有charIDToTypeID这个函数，通过命令字符串缩写来提供参数，后来随着PS的功能越来越多，只有4个字符串表示的缩写不够用了，于是推出了完整字符表示的stringIDToType这个函数，它通过完整的字符串表示命令，比如 stringIDToTypeID(“targetLayersIDs”) ，于是我们可以通过以下两个函数来做转换，查看缩写命令和完整命令，比如你看到一个缩写命令(N )，想知道它到底是啥意思，可以将它的完整字符弄出来\",\"var typeId = charIDToTypeID(\\\"N \\\"); var value = typeIDToStringID(typeId); // name\",\"通过typeIDToStringID和typeIDToCharID，我们可以将缩写命令和完整命令之间进行转换。\",\"有个注意的点是，不是所有的缩写命令和完整命令都能相互转换，有些缩写命令没有提供完整字符命令，有些完整字符命令没有缩写命令\",\"我们还没有回答上面一个问题，这些命令的集合，从哪里能找到？\",\"所有的完整字符命令，可以在C++SDK的其中一个头文件中找到，如下位置\",\"./pluginsdk/photoshopapi/photoshop/PIStringTerminology.h\",\"PIStringTerminology.h\",\"PIStringTerminology.h\",\"然而有这样一个集合，并没有太多作用，这个文件定义了5k多个命令，你很难靠人肉去一个个看，看了也只能靠猜，效率低下，在后面一篇文章里头，我会讲述一个更好的办法，当我想要弄一个功能的时候，怎么能找到这个命令的值。\"]},\"394\":{\"h\":\"2. ActionDescriptor\",\"t\":[\"我们再来看一个稍微复杂一点点的例子，调整图层的大小，我们在PS中通过图层的自由变换，可以改变元素的大小，会输出如下代码\",\"var idtransform = stringIDToTypeID( \\\"transform\\\" ); var desc31 = new ActionDescriptor(); var idnull = stringIDToTypeID( \\\"null\\\" ); var ref11 = new ActionReference(); var idlayer = stringIDToTypeID( \\\"layer\\\" ); var idordinal = stringIDToTypeID( \\\"ordinal\\\" ); var idtargetEnum = stringIDToTypeID( \\\"targetEnum\\\" ); ref11.putEnumerated( idlayer, idordinal, idtargetEnum ); desc31.putReference( idnull, ref11 ); var idfreeTransformCenterState = stringIDToTypeID( \\\"freeTransformCenterState\\\" ); var idquadCenterState = stringIDToTypeID( \\\"quadCenterState\\\" ); var idQCSAverage = stringIDToTypeID( \\\"QCSAverage\\\" ); desc31.putEnumerated( idfreeTransformCenterState, idquadCenterState, idQCSAverage ); var idoffset = stringIDToTypeID( \\\"offset\\\" ); var desc32 = new ActionDescriptor(); var idhorizontal = stringIDToTypeID( \\\"horizontal\\\" ); var idpixelsUnit = stringIDToTypeID( \\\"pixelsUnit\\\" ); desc32.putUnitDouble( idhorizontal, idpixelsUnit, 58.500000 ); var idvertical = stringIDToTypeID( \\\"vertical\\\" ); var idpixelsUnit = stringIDToTypeID( \\\"pixelsUnit\\\" ); desc32.putUnitDouble( idvertical, idpixelsUnit, 31.500000 ); var idoffset = stringIDToTypeID( \\\"offset\\\" ); desc31.putObject( idoffset, idoffset, desc32 ); var idwidth = stringIDToTypeID( \\\"width\\\" ); var idpercentUnit = stringIDToTypeID( \\\"percentUnit\\\" ); desc31.putUnitDouble( idwidth, idpercentUnit, 139.000000 ); var idheight = stringIDToTypeID( \\\"height\\\" ); var idpercentUnit = stringIDToTypeID( \\\"percentUnit\\\" ); desc31.putUnitDouble( idheight, idpercentUnit, 152.500000 ); var idinterfaceIconFrameDimmed = stringIDToTypeID( \\\"interfaceIconFrameDimmed\\\" ); var idinterpolationType = stringIDToTypeID( \\\"interpolationType\\\" ); var idbicubic = stringIDToTypeID( \\\"bicubic\\\" ); desc31.putEnumerated( idinterfaceIconFrameDimmed, idinterpolationType, idbicubic ); executeAction( idtransform, desc31, DialogModes.NO );\",\"这坨代码不好阅读，我们做一下简化\",\"var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putEnumerated( stringIDToTypeID( \\\"layer\\\" ), stringIDToTypeID( \\\"ordinal\\\" ), stringIDToTypeID( \\\"targetEnum\\\" ) ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); desc1.putEnumerated( stringIDToTypeID( \\\"freeTransformCenterState\\\" ), stringIDToTypeID( \\\"quadCenterState\\\" ), stringIDToTypeID( \\\"QCSAverage\\\" ) ); var desc2 = new ActionDescriptor(); desc2.putUnitDouble( stringIDToTypeID( \\\"horizontal\\\" ), stringIDToTypeID( \\\"pixelsUnit\\\" ), 58.500000 ); desc2.putUnitDouble( stringIDToTypeID( \\\"vertical\\\" ), stringIDToTypeID( \\\"pixelsUnit\\\" ), 31.500000 ); desc1.putObject( stringIDToTypeID( \\\"offset\\\" ), stringIDToTypeID( \\\"offset\\\" ), desc2 ); desc1.putUnitDouble( stringIDToTypeID( \\\"width\\\" ), stringIDToTypeID( \\\"percentUnit\\\" ), 139.000000 ); desc1.putUnitDouble( stringIDToTypeID( \\\"height\\\" ), stringIDToTypeID( \\\"percentUnit\\\" ), 152.500000 ); desc1.putEnumerated( stringIDToTypeID( \\\"interfaceIconFrameDimmed\\\" ), stringIDToTypeID( \\\"interpolationType\\\" ), stringIDToTypeID( \\\"bicubic\\\" ) ); executeAction( stringIDToTypeID( \\\"transform\\\" ), desc1, DialogModes.NO );\",\"为了更好理解，我们将优化后的代码做了缩进，以便更清晰的看到它的层次结构，要理解AM的代码结构，我们应从下往上看，最后一行代码，执行了一个动作，动作命令是transform，我们可以很好理解他是自由变换，同时在执行这个命令的时候，传递给它一个参数，这个参数是一个ActionDescriptor（以下简称AD）对象，我们给整个AD对象设置了一堆参数，比如宽(width)，高(height)，水平位置(horizontal)，垂直位置(vertical)等等，我们对这个命令做一下拆解，可以得到这个图\",\"execute action\",\"execute action\",\"通过上面的图，我们可以发现AM的代码组织是有对应的层次结构的，它由多个ActionDescriptor/ActionReference/ActionList等对象组织而成，无论你看到的代码多复杂，都是由这几个对象组成，每个对象设置相应的属性值，最后组成一个完整的动作命令，并执行这个命令。\",\"我们继续解读这断代码，desc1是一个完整的动作描述，这个动作描述对象本质就描述了一句话： 对某个目标对象，设置一些属性。那目标对象的代码在哪里呢？如下\",\"var ref1 = new ActionReference(); ref1.putEnumerated( stringIDToTypeID( \\\"layer\\\" ), stringIDToTypeID( \\\"ordinal\\\" ), stringIDToTypeID( \\\"targetEnum\\\" ) ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 );\",\"上面的代码定义了一个ActionReference（简称AR）动作引用，给这个AR对象设置了枚举属性layer，对应的值是targetEnum，从字面含义，我们就可以猜出来，这是当前选中的目标图层。然后把这个引用对象复制给desc1，这里为什么是null呢？，其实null的含义就是target，你会发现\",\"stringIDToTypeID(\\\"target\\\") == charIDToTypeID(\\\"null\\\") typeIDToCharID(stringIDToTypeID(\\\"target\\\")) // null\",\"所以，含义就是我们desc1这个动作描述生效的目标对象就是当前选中的图层。有了操作对象了，然后是需要设置的一些属性，这些属性有一些是直接挂在desc1下的，有一些挂在另外一个AD下，比如offset这个属性，它包含了水平和垂直两个方向的数值，所以它是另外一个描述符对象，为了理解方便，我们将上面的结构用伪JSON来表示，一看就明白了\",\"{ \\\"command\\\": \\\"transform\\\", \\\"descriptor\\\": { \\\"interfaceIconFrameDimmed\\\": \\\"bicubic\\\", \\\"width\\\": 139, \\\"height\\\": 152, \\\"offset\\\": { \\\"horizontal\\\": 58, \\\"vertical\\\": 31 }, \\\"freeTransformCenterState\\\": \\\"QCSAverage\\\", \\\"target\\\": { \\\"layer\\\": \\\"targetNum\\\" } } }\",\"在设置属性值的时候，desc1设置属性值的方法有很多putUnitDouble/putObject等，这些通过目标属性值就可以判断出来，其中第二个参数目标值的单位或者属性类型，这些类型大体是可枚举的\",\"数值型，putInteger/putDouble，参数类型是PS提供的数值类型UnitValue，比如pixelUnit表示像素，inchUnit表示英寸，还有百分比percentUnit等\",\"枚举类型，putEnumerated，参数类型对应的是一个xxxType这样（这里就是底层C++的某个结构体的体现）\",\"对象类型，putObject，比如AD/AR/AL等，这种场景，一般参数类型就是自己本身，比如\",\"desc1.putObject( stringIDToTypeID( \\\"offset\\\" ), stringIDToTypeID( \\\"offset\\\" ), desc2 );\"]},\"395\":{\"h\":\"3. DOM VS ActionManager\",\"t\":[\"在我们常规开发的时候，DOM和AM是可以结合使用的，反正大家都是JS代码，所可以混合在一起来达成目的，你可以优先用DOM API来完成操作，如果发现某个需求没有相应的API，则可以通过查看ScriptListener的代码输出，拷贝出来结合使用。通常，我们将拷贝出来的AM代码包装成一个函数，然后把里头可变的值作为参数传进去，以便后续调用\",\"function transform(width, height, offsetX, offsetY) { var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putEnumerated( stringIDToTypeID( \\\"layer\\\" ), stringIDToTypeID( \\\"ordinal\\\" ), stringIDToTypeID( \\\"targetEnum\\\" ) ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); desc1.putEnumerated( stringIDToTypeID( \\\"freeTransformCenterState\\\" ), stringIDToTypeID( \\\"quadCenterState\\\" ), stringIDToTypeID( \\\"QCSAverage\\\" ) ); var desc2 = new ActionDescriptor(); desc2.putUnitDouble( stringIDToTypeID( \\\"horizontal\\\" ), stringIDToTypeID( \\\"pixelsUnit\\\" ), offsetX ); desc2.putUnitDouble( stringIDToTypeID( \\\"vertical\\\" ), stringIDToTypeID( \\\"pixelsUnit\\\" ), offsetY ); desc1.putObject( stringIDToTypeID( \\\"offset\\\" ), stringIDToTypeID( \\\"offset\\\" ), desc2 ); desc1.putUnitDouble( stringIDToTypeID( \\\"width\\\" ), stringIDToTypeID( \\\"percentUnit\\\" ), width ); desc1.putUnitDouble( stringIDToTypeID( \\\"height\\\" ), stringIDToTypeID( \\\"percentUnit\\\" ), height ); desc1.putEnumerated( stringIDToTypeID( \\\"interfaceIconFrameDimmed\\\" ), stringIDToTypeID( \\\"interpolationType\\\" ), stringIDToTypeID( \\\"bicubic\\\" ) ); executeAction( stringIDToTypeID( \\\"transform\\\" ), desc1, DialogModes.NO ); } // 对某个图层进行变换 var layer = activeDocument.artLayers.getByName(\\\"Layer 1\\\"); activeDocument.activeLayer = layer; transform(200, 300, 20, 30);\",\"ScriptListener插件输出的代码，冗余度很高，可读性很差，我们可以通过这个工具来进行代码优化\",\"parse action manager code\",\"parse action manager code\",\"parse action manager code\",\"通常，大多数开发者都会根据自己的需要，将这些常见的AM代码做封装，以弥补DOM API的接口不足，通过实际验证我们发现AM的脚本执行效率要比DOM API高的多，所以推荐大家少用DOM API，尽量使用AM脚本来完成诉求。为了开发方便，我在前些年将这些AM脚本做了封装和抽象，包装了一套类似DOM API的库，比如对Document的常用操作，对Layer的常用操作，可以快速提升开发效率，该项目目前开源，并且在升级2.0版本，详情见\",\"https://github.com/emptykid/photoshop-script-api\",\"photoshop script api\",\"photoshop script api\"]},\"396\":{\"h\":\"总结\",\"t\":[\"以上，就是本篇的主要内容，讲述了如何通过ScriptListener插件来获取PS操作输出AM代码，并且对其中的代码做了一些介绍，让大家能够对这种不常见的语法结构做一些了解，希望阅读本篇文章之后，你看到那一坨AM代码，心理就不太怵了。但是这篇文章并没有解决一个很实际又很重要的问题：我现在只学会了抄作业，不会自己写！\",\"我们发现ScriptListener输出的代码，基本都是我们在PS里头做了实际操作，它才会输出，做操作的过程是一个SET的过程，那如果我想GET一些数据，就无法从插件的输出里头获取到了，比如我想获取当前PS的主题颜色，获取当前选中的多个图层等，就无从下手了。还有，不是所有的PS操作，都会在ScriptListener中有输出，比如我要设置工具的属性值，在日志里头就不会有输出\",\"tool options\",\"tool options\",\"那该怎么办呢？\",\"总体而言，我们对PS的诉求，无非就是GET：获取一些信息，和SET：修改一些信息，这两个诉求，我们将在后面两篇文章中详细道来，我们会在中篇介绍如何从PS中获取想要的信息，在下篇介绍如何修改这些信息，它们会介绍通用性的逻辑和方法，而不是告诉你打开文档用这段代码，选中图层用那段代码这样的片段，通过介绍AM的底层运作逻辑和一些辅助工具，告诉大家使用这些方法，可以不通过去网上搜索，也能自己把一些命令，功能写出来，相信这三篇文章下来，基本就可以告别只会抄作业的水平了\"]},\"397\":{\"h\":\"\",\"t\":[\"上篇文章我们介绍了Action Manager的入门知识，讲如何通过ScriptListener插件来让Ps输出AM代码为我所用。同时介绍了AM的独特的代码结构，都是源于底层C的转换逻辑，使得对大多数开发者而言，异常晦涩难懂。上篇文章相当于是基础知识的介绍，离真正实际应用还差的很多，基本上你只能通过拷贝Ps输出的代码，自己简单改吧改吧凑合着用，如果Ps没有输出，就无能为力了。\",\"这篇文章，以及下一篇，我们开始介绍AM实战部分，深入了解AM的运作机制，通过一些前人的积累和经验，让我们自己也可以顺藤摸瓜的开始自己写AM代码，实现想要的功能。\",\"对于我们日常想要的操作，无非就是希望从宿主获取一些信息（GET操作），设置宿主的一些状态（SET操作），针对这两个操作，我们分为两篇文章分别介绍，中篇介绍如何从Ps中获取信息，下篇介绍如何设置这些信息。这么安排是有考虑的，一方面相比SET而言，GET其实要相对简单一些（虽然SET有ScriptListener辅助，但离开它确实举步维艰），另外一方面SET部分会用到GET讲的数据结构。\",\"让我们马上开始吧~\",\"本文是此系列教程中的精华，内容较长，要保持耐心。文章是我长时间思考、研究成果，内容原创，全网独一份，转载请注明出处。\"]},\"398\":{\"h\":\"1. ActionDescriptor数据获取\",\"t\":[\"上一篇文章我们讲过，Ps核心通过动作（Action）和事件（Event）两套机制来响应每个操作，在每个动作、事件的过程中，都会有一个目标对象描述，表示我要对某个对象做动作，这个对象描述就是ActionDescriptor，这个对象描述里头包含了目标对象的一些属性信息，所以我们只要获取到这个目标对象描述，然后从中获取到这个对象的属性信息，就可以了。\",\"我们现在以获取图层属性为例子，进行展开介绍，仔细看不要开小差！\",\"我们先从选中某个图层为入口，当你选中一个图层的时候，会看到ScriptListener输出如下代码\",\"var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); desc1.putBoolean( stringIDToTypeID( \\\"makeVisible\\\" ), false ); var list1 = new ActionList(); list1.putInteger( 117 ); desc1.putList( stringIDToTypeID( \\\"layerID\\\" ), list1 ); executeAction( stringIDToTypeID( \\\"select\\\" ), desc1, DialogModes.NO );\",\"我们把这段代码的结构用脑图来表示\",\"execute action\",\"execute action\",\"可以很清晰的看出来，执行了动作select，这个动作的描述符是ActionDescriptor，这个描述符里头表示的目标对象，通过null(target) 属性表示，这个属性值是一个ActionReference，它里头设置了一个layer属性，它的值是Rectangle，意思就是图层名称是Rectangle的目标对象。\",\"这里面有一个很关键的地方\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" );\",\"ActionReference是一个动作引用对象，它表示我们对某个目标对象的引用，上面的代码理解为我要引用一个名称是Rectangle的图层，于是ref1这个对象就包含了这个图层的引用，拿到这个引用之后，我们可以把它传给很多地方（比如前面的代码，把它传给了一个选择动作的描述符）。现在我们的目标是想要获取到这个图层的属性，于是我们需要想办法获取到这个图层的动作描述符（ActionDescriptor）。AM提供了一个方法executeActionGet，让我们可以通过引用拿到它的描述符\",\"declare interface Application { executeActionGet(reference: ActionReference): ActionDescriptor; }\",\"所以我们可以这样，拿到这个图层的描述符\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1);\",\"从输出的结果可以看到layerDescriptor是一个ActionDescriptor对象\",\"ActionDescriptor\",\"ActionDescriptor\",\"拿到这个图层的ActionDescriptor之后，我们如何去获取它的属性和值呢？它又都有哪些属性和值呢？\",\"做过Javascript开发的小伙伴，都应该知道，我们如果拿到一个未知的JS对象，想要知道它里头包含哪些属性或者方法，可以用for去遍历它的属性，比如\",\"var obj = new SomeUnknownObject(); for (var i in obj) { if (obj.hasOwnProperty(i)) { console.log(i + \\\" => \\\" + obj[i]) } }\",\"同理，我们也可以想办法遍历出来那个ActionDescriptor对象里头都包含了哪些属性和值，但是方法不太一样，如果你查阅官方文档，可以看到ActionDescriptor有一个count的属性，它表示这个AD里头key的数量，于是依然可以通过遍历把这些key弄出来，这里需要注意，要把key拿出来，得通过AD的getKey这个方法，这些方法都在AD的官方文档api里头能找到。\",\"count property\",\"count property\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1); for (var i=0; i<layerDescriptor.count; i++) { var key = layerDescriptor.getKey(i); $.writeln(key); }\",\"output key\",\"output key\",\"我们可以看到key的输出是一连串的数字，如果你还记得上一篇文章讲过的内容，说不定会想到，这个key的值，就是charIDToTypeID函数返回的数值，它是每个字符串key在底层引擎的数值表示，于是，我们可以通过typeIDToStringID这个函数将数值反射为字符串\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1); for (var i=0; i<layerDescriptor.count; i++) { var key = layerDescriptor.getKey(i); var keyString = typeIDToStringID(key); $.writeln(keyString); }\",\"output key string\",\"output key string\",\"哇~~ 看到了什么！ 我们成功的看到了这个图层的各种属性了！\",\"于是我们可以确定，getKey函数，通过传入索引序号，可以获取到当前ActionDescriptor每个属性的char值，通过char->string的转换，就可以拿到它可读的字符串属性。这个图层的属性有很多，上图只是截取的一部分，你可以自己实际运行一下代码看看各个属性值。\",\"现在只拿到了它的属性key，接下来就需要根据这个属性，去获取它的属性值了。在获取属性值的时候，我们需要先判断它的属性类型，比如尺寸这样的属性，它应该是数值型，图层名称，肯定是字符串型，可能还有其它比如颜色，可能是更复杂的类型，不同的类型，获取的方式是不一样的，下面我们先判断它的属性类型，类型，是通过ActionDescriptor的getType方法来获取的，它通过传递一个typeID作为参数，返回它的类型，该方法也在官方API里头\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1); for (var i=0; i<layerDescriptor.count; i++) { var typeID = layerDescriptor.getKey(i); // getKey方法返回的是一个typeID数值 var stringID = typeIDToStringID(typeID); // 通过反射获取到字符串的属性 var typeString = layerDescriptor.getType(typeID); // 把上面的typeID作为参数，拿到它的类型 $.writeln(stringID + \\\" => \\\" + typeString); }\",\"property type\",\"property type\",\"于是，我们就拿到了每个属性和它的属性类型了，拿到类型之后，我们就可以通过ActionDescriptor提供的getXXX方法来拿到它的属性值了，比如我们看上图name属性的类型是STRINGTYPE，我们就可以通过getString方法来获取它的值\",\"var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1); for (var i=0; i<layerDescriptor.count; i++) { var typeID = layerDescriptor.getKey(i); // getKey方法返回的是一个typeID数值 var stringID = typeIDToStringID(typeID); // 通过反射获取到字符串的属性 var typeString = layerDescriptor.getType(typeID); // 把上面的typeID作为参数，拿到它的类型 if (stringID === \\\"name\\\") { var value = layerDescriptor.getString(typeID); $.writeln(stringID + \\\" => \\\" + value); } }\",\"get layer name\",\"get layer name\",\"看上图，我们成功的输出了当前图层的名称，并且发现它和我们设置给ActionReference的名称值是一样的，说明一切都符合预期，属性的类型还有一些其它的，我们可以根据类型来做判断，挨个输出，大体是这样\",\"output all properties\",\"output all properties\",\"为了偷懒，我上面例子只输出了基础类型的属性值，你还能看到里面还有class, list, object类型等复杂类型，这些类型里面的数据结构，又都是不一样的，我们需要逐个进去分析，我们以object类型为例介绍一下，其它类型大家下来自己尝试，当做课后作业了。\",\"如果属性类型是DescValueType.OBJECTTYPE的话，我们可以通过getObjectValue方法去获取它的属性值，然后发现它返回的也是一个ActionDescriptor对象，这个对象里头又有一堆属性需要我们去挖掘，聪明的你就会发现，它可能需要一个递归，所以我们可以写一个单独的函数来专门解析ActionDescriptor，我们给这个函数取名ADToJson吧，把一个ActionDescrptor的属性值都拿出来，转换成Json数据结构\",\"/** * 这个函数接受一个AD的对象，返回这个对象所有属性值的JSON结构 * @param desc [ActionDescriptor] * @return JSON */ function ADToJson(desc) { var json = {}; for (var i=0; i<desc.count; i++) { var typeID = desc.getKey(i); var stringID = typeIDToStringID(typeID); var typeString = (desc.getType(typeID)).toString(); switch(typeString) { case \\\"DescValueType.BOOLEANTYPE\\\": json[stringID] = desc.getBoolean(typeID); break; case \\\"DescValueType.DOUBLETYPE\\\": json[stringID] = desc.getDouble(typeID); break; case \\\"DescValueType.INTEGERTYPE\\\": json[stringID] = desc.getInteger(typeID); break; case \\\"DescValueType.STRINGTYPE\\\": json[stringID] = desc.getString(typeID); break; case 'DescValueType.OBJECTTYPE': var objectValue = desc.getObjectValue(typeID); json[stringID] = ADToJson(objectValue); break; case 'DescValueType.CLASSTYPE': case 'DescValueType.LISTTYPE': case 'DescValueType.REFERENCETYPE': // 剩下这些留给你去补充完成 break; default: ; break; } } return json; } var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Rectangle\\\" ); var layerDescriptor = executeActionGet(ref1); var json = ADToJson(layerDescriptor);\",\"这样，我们就顺利的将一个图层对象的所有属性和属性，都拿到了！通过遍历ActionDescriptor的所有属性，判断它的类型，递归遍历获取到它所有的属性值，这个是AM的核心，圈起来这块要考，通过它我们也能够更深刻的理解ActionDescriptor的内部组织结构。有了上面的ADToJson函数，后续当你看到一个ActionDescriptor的时候，就可以通过该函数，对它一探究竟，你就再也不用对它发怵了~~\"]},\"399\":{\"h\":\"2. 如何选定目标对象\",\"t\":[\"上面的例子，我们通过给ActionReference设置了一个名称是Recntangle的目标对象，然后获取到了该图层的ActionDescriptor，就可以拿到该图层的各种属性信息了。那除了通过名称之外，还能够通过其它方式来获取到目标图层对象么？比如能不能通过图层ID，图层顺序来锁定目标图层呢？\",\"当然可以了，我们可以通过ref1设置对应的typeID来达到目的，比如\",\"var ref1 = new ActionReference(); ref1.putIndex( stringIDToTypeID( \\\"itemIndex\\\" ), 22 ); // 通过设置图层顺序来定位图层 ref1.putIdentifier(stringIDToTypeID( \\\"layerID\\\", 25 )); // 通过设置图层ID来定位图层\",\"上面ActionReference的方法putIndex, putIdentifier都在官方文档api里头，你可以去看看还有一些别的。\",\"上面这几种方法，都指向同一个图层，通过*executeActionGet(ref1)**，都能拿到一致的*ActionDescriptor，所以，如果你愿意的话，可以自己封装一些函数，比如\",\"/** * 根据图层ID来获取图层信息 * @param layerID * @return {*} */ function getLayerInfoByID(layerID) { var ref1 = new ActionReference(); ref1.putIdentifier(stringIDToTypeID( \\\"layerID\\\", layerID)); var layerDescriptor = executeActionGet(ref1); var json = ADToJson(layerDescriptor); return json; } /** * 根据图层的顺序，来获取图层信息 * @param index * @return {*} */ function getLayerInfoByIndex(index) { var ref1 = new ActionReference(); ref1.putIndex( stringIDToTypeID( \\\"itemIndex\\\" ), index); var layerDescriptor = executeActionGet(ref1); var json = ADToJson(layerDescriptor); return json; }\",\"如果你想要获取当前选中的图层，而且你也不知道它的id和index，上面两个方法就用不上了，你可以通过如下方式获取到\",\"var ref1 = new ActionReference(); // 它的含义是 layer -> ordinal -> target，也就是当前选中的图层 ref1.putEnumerated(charIDToTypeID(\\\"Lyr \\\"), charIDToTypeID(\\\"Ordn\\\"), charIDToTypeID(\\\"Trgt\\\")); var layerDescriptor = executeActionGet(ref1);\",\"上面这行代码也很重要，它给ActionReference设置了一个枚举类型，指的是当前target->layer，也就是当前选中的图层，为什么说它很重要呢？它是AM给我们提供的一个相当于快捷途径，用来表示当前处于被激活状态的一些目标对象，除了选中的图层之外，还有当前选中的文档，选中的通道，选中的工具等等，都可以通过这种方式来获取到，比如上面我们一直都在讲图层，现在我们来把目标对象换成当前文档，比如我想知道当前文档的一些信息，比如名称，id，图层数量等。\",\"来，跟着我的思路：我们创建一个ActionReference，把当前文档作为属性设置进去，然后反向获取到它的ActionDescriptor，就可以遍历出它的属性了\",\"var ref1 = new ActionReference(); // 这几个key: Dcmn, Ordn, Trgt，你就背下来就好了 // 如果看着不习惯，也可以换成string的表达方式document, ordinal, target ref1.putEnumerated(charIDToTypeID('Dcmn'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var docDescriptor = executeActionGet(ref1); var json = ADToJson(docDescriptor); $.writeln(json.title);\",\"get document info\",\"get document info\",\"你可以把整个Document的属性都dump出来，看看一个Document，都具备了哪些属性，本质上，它也是一个属性树，逐层往下挖掘，就能够找到你想要的目标对象了，比如前文我们一直提到过的一个问题：当选中多个图层的时候，activeLayer只返回其中一个，如何能够获取到所有被选中的图层信息呢？\",\"我们可以从文档（document）的属性里面找到一个叫targetLayersIDs的属性，这个属性的值，就是当前被选中的图层的ID列表，那结合前面我们介绍的内容，我们就可以拿到选中图层列表的所有信息了，我们来试一下代码\",\"var ref1 = new ActionReference(); ref1.putEnumerated(charIDToTypeID('Dcmn'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var docDescriptor = executeActionGet(ref1); // 我们可以通过打印发现targetLayersIDs是一个list类型，通过getList拿到一个数组 var list = docDescriptor.getList(stringIDToTypeID(\\\"targetLayersIDs\\\")); // 遍历这个list，拿到图层ID，ActionList的数据结构和AD也差不多，数组里头的元素是ActionReference对象 for (let i=0; i<list.count; i++) { var ar = list.getReference(i); var layerId = ar.getIdentifier(); $.writeln(layerId); } // 拿到这些图层ID之后，你就可以通过上面的getLayerInfoByID取拿每个图层的信息了\",\"这里面有一个小问题！\",\"当我们通过executeActionGet去获取一个目标对象的ActionDescriptor的时候，有的目标对象很大（比如Document），那这个返回的ActionDescriptor就会很大（因为包含了非常多的属性和值），这样一方面获取的时候就会有点慢，同时也非常消耗内存和性能。所以，当你如果很明确的想要获取目标对象的某个属性的时候，可以把该属性也设置到ActionReference当中，如下\",\"var ref1 = new ActionReference(); // 给AR设置一个property，表示你我只要获取targetLayersIDs属性的值，其它的不要给我返回了 ref1.putProperty(charIDToTypeID(\\\"Prpr\\\"), stringIDToTypeID(\\\"targetLayersIDs\\\")); ref1.putEnumerated(charIDToTypeID('Dcmn'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var docDescriptor = executeActionGet(ref1); var list = docDescriptor.getList(stringIDToTypeID(\\\"targetLayersIDs\\\"));\",\"这样descriptor返回的，就只有上面那个属性和它的值，不会返回其它的属性，速度更快，内存消耗更低，再给一个例子，比如你想获取到ID为3的图层的名称，可以这样\",\"var ref1 = new ActionReference(); // 只要名称 ref1.putProperty(charIDToTypeID(\\\"Prpr\\\"), stringIDToTypeID(\\\"layer\\\")); ref1.putIdentifier(stringIDToTypeID( \\\"layerID\\\", 3)); var layerDescriptor = executeActionGet(ref1);\"]},\"400\":{\"h\":\"3. Photoshop对象树\",\"t\":[\"做过浏览器web开发的小伙伴，都应该用过chrome的开发者工具，里头有一个inspector，可以对DOM树进行查看\",\"chrome dev tool\",\"chrome dev tool\",\"通过该工具，我们可以查看网页DOM的层次结构，每个元素的上下级节点，和元素的属性以及它的值。\",\"同样的，对于Ps这个宿主而言，它也有一个对象树，前面我们介绍的图层，文档只是这个对象树的一个分支，有些时候，我们需要操作其它目标对象，比如通道，画笔，工具等等，它也都是这个对象树中的一个节点/分支。于是，搞清楚整个宿主的对象树，就好比弄了一个devtool，有助于我们找到想要的目标对象。\",\"对于Photoshop来说，所有的目标对象，都在根对象（Application）下面，我们可以从界面交互的角度去看看都有哪些，当然这个只是能看见的部分，还有许许多多看不到的子对象。\",\"chrome dev tool\",\"chrome dev tool\",\"Application DOM\",\"Application DOM\",\"我们可以根据上面学习到的方法，把Ps根对象Application的属性给dump出来，看看它都有哪些东西\",\"var ref1 = new ActionReference(); ref1.putEnumerated(stringIDToTypeID('application'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var appDescriptor = executeActionGet(ref1); var json = ADToJson(appDescriptor);\",\"大家可以自己实际测试一下，看看输出，比如我dump出来的数据，可以得到Ps的各种配置项、字体列表、最近打开的文件、工具、操作历史等等信息，等待你去挖掘。\",\"{ \\\"path\\\": \\\"/Applications/Adobe Photoshop 2021/Adobe Photoshop 2021.app\\\", \\\"preferencesFolder\\\": \\\"~/Library/Preferences/Adobe Photoshop 2021 Settings\\\", \\\"kuiBrightnessLevel\\\": \\\"kPanelBrightnessMediumGray\\\", \\\"controlColor\\\": \\\"controlColorDefault\\\", \\\"highlightColorOption\\\": \\\"uiDefaultHighlightColor\\\", \\\"limited\\\": false, \\\"currentToolOptions\\\": { \\\"AtSl\\\": true, \\\"ASGr\\\": false, \\\"Abbx\\\": true }, \\\"tool\\\": \\\"targetEnum\\\" }\",\"拿到这些属性之后，你可以进一步去看里头的内容，比如你想拿到当前选中的工具的一些选项，我们知道它是application的tool属性，通过下面的代码，就可以获取到选中工具的ActionDescriptor\",\"var ref1 = new ActionReference(); ref1.putProperty(stringIDToTypeID('property'), stringIDToTypeID(\\\"tool\\\")); ref1.putEnumerated(stringIDToTypeID('application'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var desc1 = executeActionGet(ref1); // ...\",\"拿到tool的ActionDescriptor之后，你可以继续遍历它，拿到其中的工具配置项，比如我当前选中的是文字工具，我就可以通过AD获取到当前输入文字的样式\",\"text tool options\",\"text tool options\",\"var ref1 = new ActionReference(); ref1.putProperty(stringIDToTypeID('property'), stringIDToTypeID(\\\"tool\\\")); ref1.putEnumerated(stringIDToTypeID('application'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var desc1 = executeActionGet(ref1); // 获取到当前工具的选项描述符 var desc2 = desc1.getObjectValue(stringIDToTypeID('currentToolOptions')); // 拿到文本字体配置项 var textTool = desc2.getObjectValue(stringIDToTypeID(\\\"textToolCharacterOptions\\\")); // 获取到文字样式 var style = textTool.getObjectValue(stringIDToTypeID(\\\"textStyle\\\")); // 文字样式里头还有字体，颜色，大小尺寸等等信息 var fontName = style.getString(stringIDToTypeID(\\\"fontName\\\")); // ...\",\"对于将Ps的数据dump出来这个事情，有很多前辈大佬总结过很多方法，并且还封装了一些比较好用的工具/脚本，我将这些中比较好用的也分享给大家，\"]},\"401\":{\"h\":\"1. GetterDemo.jsx\",\"t\":[\"GetterDemo.jsx\",\"这是Ps script大神xbytor编写的xtools库的一部分，它提供了一个gui界面让你选择需要dump的数据对象\",\"Getter Demo\",\"Getter Demo\",\"并将数据以xml的格式出处到你的桌面，你可以仔细观察该xml的格式结构，从中也能反应出来AD的数据结构\",\"<?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\" ?> <PhotoshopInfo> ... <ActionDescriptor count=\\\"7\\\"> <String symname=\\\"Name\\\" sym=\\\"Nm \\\" string=\\\"Untitled-1\\\"/> <Integer symname=\\\"ItemIndex\\\" sym=\\\"ItmI\\\" integer=\\\"1\\\"/> <Integer symname=\\\"Count\\\" sym=\\\"Cnt \\\" integer=\\\"2\\\"/> <Boolean symname=\\\"Auto\\\" sym=\\\"Auto\\\" boolean=\\\"false\\\"/> <Boolean symname=\\\"HistoryBrushSource\\\" sym=\\\"HstB\\\" boolean=\\\"true\\\"/> <Boolean symname=\\\"CurrentHistoryState\\\" sym=\\\"CrnH\\\" boolean=\\\"false\\\"/> <Integer symname=\\\"ID\\\" sym=\\\"Idnt\\\" integer=\\\"221\\\"/> </ActionDescriptor> <ActionDescriptor count=\\\"7\\\"> <String symname=\\\"Name\\\" sym=\\\"Nm \\\" string=\\\"New\\\"/> <Integer symname=\\\"ItemIndex\\\" sym=\\\"ItmI\\\" integer=\\\"2\\\"/> <Integer symname=\\\"Count\\\" sym=\\\"Cnt \\\" integer=\\\"2\\\"/> <Boolean symname=\\\"Auto\\\" sym=\\\"Auto\\\" boolean=\\\"true\\\"/> <Boolean symname=\\\"HistoryBrushSource\\\" sym=\\\"HstB\\\" boolean=\\\"false\\\"/> <Boolean symname=\\\"CurrentHistoryState\\\" sym=\\\"CrnH\\\" boolean=\\\"true\\\"/> <Integer symname=\\\"ID\\\" sym=\\\"Idnt\\\" integer=\\\"220\\\"/> </ActionDescriptor> </PhotoshopInfo>\"]},\"402\":{\"h\":\"2. descriptor-info.jsx\",\"t\":[\"descriptor-info.jsx\",\"这是另外一个轻量级的脚本，其实就是我上面介绍的如何遍历分析ActionDescriptor对象，并将结果转化成JSON输出。代码简单清晰，原代码有几处bug，上面链接是我修复后的版本，使用方式如下：\",\"#include \\\"./descriptor-info.jsx\\\"; #include \\\"./JSON.jsx\\\"; var ref = new ActionReference(); ref.putEnumerated(stringIDToTypeID(\\\"application\\\"), charIDToTypeID(\\\"Ordn\\\"), charIDToTypeID(\\\"Trgt\\\")); var desc = executeActionGet(ref); // 把JSON数据输出到桌面文件 var descFlags = { reference : false, extended : false, maxRawLimit : 10000, maxXMPLimit : 100000, saveToFile: Folder.desktop.absoluteURI + '/descriptor-info-application.json' }; // 这个descObject就是最终的JSON结构输出 var descObject = descriptorInfo.getProperties( desc, descFlags ); // Running in ExtendScript $.writeln(JSON.stringify(descObject, null, 4));\",\"下图是它输出的数据结构的样子，相比上面的GetterDemo，它更易读一些，不过也缺少了属性类型等信息\",\"Json output\",\"Json output\"]},\"403\":{\"h\":\"3. Padda\",\"t\":[\"https://github.com/cutterman-cn/padda\",\"这是我开发的一个脚本辅助工具，里头有一项功能，是可以实时输出当前图层的JSON数据结构，图层切换，它会会自动更新\",\"padda layer\",\"padda layer\"]},\"404\":{\"h\":\"4. 官方代码\",\"t\":[\"CC2015之后的版本，Ps官方支持针对一些对象进行JSON输出，提供一个json的字符串key\",\"var af = new ActionReference(); af.putProperty(charIDToTypeID(\\\"Prpr\\\"), stringIDToTypeID(\\\"json\\\")); af.putEnumerated(stringIDToTypeID(\\\"document\\\"), charIDToTypeID(\\\"Ordn\\\"), charIDToTypeID(\\\"Trgt\\\")); var ad = new ActionDescriptor(); ad.putReference(charIDToTypeID(\\\"null\\\"), af); var desc = executeAction(charIDToTypeID(\\\"getd\\\"), ad, DialogModes.NO); var json = desc.getString(stringIDToTypeID(\\\"json\\\"))\",\"上面这段代码，会将当前文档以json数据结构进行输出，也很方便让你进行数据检查\"]},\"405\":{\"h\":\"总结\",\"t\":[\"通过上面介绍的诸多方法和工具之后，你会发现，ActionDescriptor才真正提供了宿主完整的信息，比DOM提供的丰富的多的多，基本上，有了AD，你几乎不太需要使用DOM的API了，比如获取选中的图层，你可以用AM代码来写，隐藏，添加，修改图层等等这些，都可以用AM代码来写，并且AM代码要比dom api性能更优，所以也推荐你尽量使用AM代码来编写插件，少用Dom api。\",\"本文介绍的示例代码，可以在下面工程中找到\",\"https://github.com/cutterman-cn/cep-panel-start.git\",\"分支： actionmanager\"]},\"406\":{\"h\":\"\",\"t\":[\"上篇文章我们介绍了如何使用Action Manager来从PS中获取数据，我们深入讲解了ActionDescriptor的组织结构和使用逻辑，本质上和JS开发没有多大区别，我们通过ActionDescriptor, ActionReference, ActionList这3个对象以及他们提供的方法，进行递归遍历，将其中的key和value打印出来，以获取我们需要的数据项。并且我还介绍了如何从宿主全局出发通过对象树分析的方法，挨个将Ps的各个对象和数据进行挖掘，这样你就不需要去猜测某个目标用什么key了，这些key都在对象树的属性当中。如果你仔细研读该文章，并且自己实际动手去尝试了，应该就能够自己尝试的去写一些AM代码了，然后会发现它的功能针对比官方提供的DOM API要丰富强大的多。\",\"这篇文章，我们开始介绍AM三部曲的最后一篇，如何对宿主进行设置操作。把设置放在最后来讲，是因为它相比GET行为，要更难，更不好理解，也更不可预期。所以阅读本篇文章，一定要专注认真，尽量跟随我的思路往下走，我会努力将这套方法一点点剖析出来，尽管如此，也不能确保Ps所有的目标对象都是可以设置成功的，这点你要提前明白。让我们开始吧\",\"本文是此系列教程中的精华，内容较长，要保持耐心。文章是我长时间思考、研究成果，内容原创，全网独一份，转载请注明出处。\"]},\"407\":{\"h\":\"ActionDescriptor逆向操作\",\"t\":[\"我们上一篇介绍的获取数据，是通过ActionDescriptor对象的getXXX方法来拿到目标对象的某个属性值实现的。那如果现在要修改这些值，是不是反过来去setXXX就可以了呢？\",\"带着这个猜测我们去翻一下ActionDescriptor对象的API，能够发现它确实提供了设置属性值的方法，putXXX和getXXX基本是相对应的，于是我们大体可以判断，要修改目标对象的属性值，就是通过AD的put相关的方法来达成，整体是GET的一个逆向过程。\",\"declare class ActionDescriptor { putBoolean(key: number,value: boolean): void; putClass(key: number,value: number):void; putDouble(key: number,value: number):void; putEnumerated(key: number,enumType: any,value: any):void putInteger(key: number,value: number):void; putList(key: number,value: any): void; putObject(key: number,classID: number,value: any):void; putPath(key: number,value: string): void; putReference(key: number,value: ActionReference): void; putString(key: number,value: string): void; putUnitDouble(key: number,unitID: number,value: number): void; }\"]},\"408\":{\"h\":\"1. 简单例子\",\"t\":[\"我们先通过一个简单的例子来展开：修改选中图层名称，通过上一篇文章，我们知道获取选中图层名称的代码大体是这样\",\"var ref1 = new ActionReference(); // 它的含义是 layer -> ordinal -> target，也就是当前选中的图层 ref1.putEnumerated(charIDToTypeID(\\\"Lyr \\\"), charIDToTypeID(\\\"Ordn\\\"), charIDToTypeID(\\\"Trgt\\\")); var layerDescriptor = executeActionGet(ref1); var value = layerDescriptor.getString(stringIDToTypeID(\\\"name\\\")); $.writeln(value);\",\"那反过来，我如果要修改这个图层的名称为abc，是不是这样就行了呢？\",\"var layerDescriptor = executeActionGet(ref1); layerDescriptor.putString(stringIDToTypeID(\\\"name\\\"), \\\"abc\\\");\",\"我们用ScriptListener插件，手动改一下图层的名称，会输出如下代码\",\"var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putEnumerated( stringIDToTypeID( \\\"layer\\\" ), stringIDToTypeID( \\\"ordinal\\\" ), stringIDToTypeID( \\\"targetEnum\\\" ) ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); var desc2 = new ActionDescriptor(); desc2.putString( stringIDToTypeID( \\\"name\\\" ), \\\"abc\\\" ); desc1.putObject( stringIDToTypeID( \\\"to\\\" ), stringIDToTypeID( \\\"layer\\\" ), desc2 ); executeAction( stringIDToTypeID( \\\"set\\\" ), desc1, DialogModes.NO );\",\"这里面很多代码我们都见过了，我们将它的层次结构图画出来\",\"set layer name\",\"set layer name\",\"可以看到要对目标进行修改，最外层是通过调用set这个命令，然后给它传递一个ActionDescriptor，这个动作描述里头包含了一个对当前选中图层的引用，接着把一个新创建的AD赋值给整个图层，这个新创建的动作描述里头只有一个name = abc这样的属性和值，相当于把一个新的AD覆盖到图层原有的AD上。以达到更新的数据的目的。\",\"其中第7行 desc1.putObject( stringIDToTypeID( “to” ), stringIDToTypeID( “layer” ), desc2 ); 可以再解释一下，这里的layer其实可以替换成null,或者target，效果都是一样的，它的含义就是把desc2这个动作描述符设置到的reference的对象上。\",\"有了修改name属于的经验之后，你可以继续试试修改图层的其它属性，其它属性可以通过我们之前学习的到遍历属性的方法拿到，然后通过该属性的类型，使用对应的putXXX方法来设置\",\"property type\",\"property type\",\"如果你试了就会发现，有些属性是可以按照上面的代码修改的，有些是不行的，比如layerID, itemIndex，你是无法直接给itemIndex设置一个新的值来达到修改图层顺序的目的，因为Ps的图层顺序是有相互依赖的，它会影响到这个图层的顺序树，因此它是通过另外一个move命令来进行修改的。\",\"我们继续扩展一下上面的例子，上面的例子只针对选中的图层进行操作，很多时候我们都没法先选中再操作，我们需要根据某些特定的条件来操作，比如根据图层顺序、图层ID或者图层名称来做修改操作。那它本质上就是Reference所引用的目标对象不同而已，我们来看一下\",\"var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putName(stringIDToTypeID(\\\"layer\\\"), \\\"Camera\\\"); // 把目标引用对象修改为图层名称是Camera的图层 desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); var desc2 = new ActionDescriptor(); desc2.putString( stringIDToTypeID( \\\"name\\\" ), \\\"abc\\\" ); desc1.putObject( stringIDToTypeID( \\\"to\\\" ), stringIDToTypeID( \\\"layer\\\" ), desc2 ); executeAction( stringIDToTypeID( \\\"set\\\" ), desc1, DialogModes.NO );\",\"上面代码就不是根据选中的图层来进行修改操作了，而是根据你想要条件的目标对象，同样的，你还可以根据我们上一篇学得到的知识，修改ActionReference所引用的目标对象来进行操作。\"]},\"409\":{\"h\":\"2. 复杂的例子\",\"t\":[\"上面是一个简单的例子，代码结构也不复杂，我们现在来看一个复杂一些的情况。这是一个真实的案例，前一阵子一个网友找我求助，他希望在选中文字工具的时候，能够自动设置文字的字体。这个需求用ScriptListener是找不到代码的。\",\"Text Tool options\",\"Text Tool options\",\"思路和上面一样，总体而言，我们大概需要设置一下文字工具的一些属性项，接下来，我们按照逆向GET的方法来完成这个操作，首先找到这些属性的项是什么，利用我们上一篇学习的知识，我们来把文字工具的各种属性给挖掘出来，然后通过putXXX修改该属性的值，再设置回去。\",\"我们可以在application对象的属性中找到一个叫currentToolOptions的key，它就是上面截图框起来的部分，表示当前选中的工具的选项部分配置，并且还能知道它是一个Object类型，所以它里头又包含了一个ActionDescriptor\",\"current tool options\",\"current tool options\",\"继续挖掘，我们可以一点点的找到每个层级的属性，直到找到我们最终想要的属性，大体属性结构图如下，我们发现字体的属性在textStyle下面\",\"text style\",\"text style\",\"整个查找属性的过程代码如下\",\"var ref1 = new ActionReference(); ref1.putEnumerated(stringIDToTypeID('application'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt')); var appDesc = executeActionGet(ref1); var currentToolOptions = appDesc.getObjectValue(stringIDToTypeID(\\\"currentToolOptions\\\")); var textTool = currentToolOptions.getObjectValue(stringIDToTypeID(\\\"textToolCharacterOptions\\\")); var style = textTool.getObjectValue(stringIDToTypeID(\\\"textStyle\\\")) var fontName = style.getString(stringIDToTypeID(\\\"fontName\\\")); var fontStyleName = style.getString(stringIDToTypeID(\\\"fontStyleName\\\")); var fontPostScriptName = style.getString(stringIDToTypeID(\\\"fontPostScriptName\\\")); $.writeln(fontName + \\\" - \\\" + fontStyleName + \\\" - \\\" + fontPostScriptName);\",\"找到这个字体的属性之后，我们开始逆向设置它，从上面简单例子的对照，我们大体可以将反向设置的树形图画出来\",\"set text style\",\"set text style\",\"有了这个树形图之后，我们就可以按照这个树形结构来编写AM代码了，我们先最底层开始，然后逐级往上，最后到Application。但是！最终的options不是直接修改application的currentToolOptions属性值，而是要修改当前选择的文字工具的属性，它不是对application生效的，因为你选中不同的工具，它的选项是不一样的，currentToolOptions相当于只是一个只读的快捷方式，在设置属性的时候，需要设置到对应工具这个目标对象上。\",\"// 创建一个textStyle的AD，给它重新赋值 var textStyle = new ActionDescriptor(); textStyle.putString(stringIDToTypeID(\\\"fontName\\\"), \\\"Consolas\\\"); // 你想要的字体 textStyle.putString(stringIDToTypeID(\\\"fontStyleName\\\"), \\\"Regular\\\"); textStyle.putString(stringIDToTypeID(\\\"fontPostScriptName\\\"), \\\"Consolas\\\"); // 创建一个textToolCharacterOptions的AD，将textStyle赋值给它 var textToolCharacterOptions = new ActionDescriptor(); textToolCharacterOptions.putObject(stringIDToTypeID(\\\"textStyle\\\"), stringIDToTypeID(\\\"textStyle\\\"), textStyle); // 创建一个currentToolOptions的AD，将textToolCharacterOptions赋值给它 var currentToolOptions = new ActionDescriptor(); currentToolOptions.putObject(stringIDToTypeID(\\\"textToolCharacterOptions\\\"), stringIDToTypeID(\\\"textToolCharacterOptions\\\"), textToolCharacterOptions); // 将currentToolOptions赋值给文字工具 var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putClass(stringIDToTypeID('typeCreateOrEditTool')); // 文字工具这个目标对象 desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); desc1.putObject( stringIDToTypeID( \\\"to\\\" ), stringIDToTypeID( \\\"null\\\" ), currentToolOptions); executeAction( stringIDToTypeID( \\\"set\\\" ), desc1, DialogModes.NO );\",\"这个案例还是相对复杂的，但是原理是一致的，只是涉及到的层级比较多，同时多了一个有效目标对象的概念，有了这个例子之后，你可以自己尝试着去设置其它不同工具的不同选项值，看能不能成功，如果能成功，说明你已经理解并掌握了这个技能了，这权当是留给大家的作业。\"]},\"410\":{\"h\":\"3. 其它命令\",\"t\":[\"上面的例子我们介绍的是修改某个目标对象的属性，它通过set命令来完成，本质上是修改目标对象的ActionDescriptor。除此之外，Ps的很多设置动作，是有自己单独的命令来完成的，比如修改图层顺序是move命令，新建图层是make，关闭文档是close等等，这些命令，基本上你都可以从ScriptListener中获取到。\",\"这是一个选中多个图层的代码输出\",\"var desc1 = new ActionDescriptor(); var ref1 = new ActionReference(); ref1.putName( stringIDToTypeID( \\\"layer\\\" ), \\\"Color\\\" ); desc1.putReference( stringIDToTypeID( \\\"null\\\" ), ref1 ); desc1.putEnumerated( stringIDToTypeID( \\\"selectionModifier\\\" ), stringIDToTypeID( \\\"selectionModifierType\\\" ), stringIDToTypeID( \\\"addToSelectionContinuous\\\" ) ); desc1.putBoolean( stringIDToTypeID( \\\"makeVisible\\\" ), false ); var list1 = new ActionList(); list1.putInteger( 246 ); list1.putInteger( 264 ); list1.putInteger( 248 ); list1.putInteger( 249 ); desc1.putList( stringIDToTypeID( \\\"layerID\\\" ), list1 ); executeAction( stringIDToTypeID( \\\"select\\\" ), desc1, DialogModes.NO );\",\"你可以从中看到它通过传递多个layerID来完成选中的多图层的操作，于是你可以自己将上面的代码进行封装成函数，把图层ID传进去，就可以为自己所用了。\"]},\"411\":{\"h\":\"总结\",\"t\":[\"本篇文章的主要内容就结束了，这篇文章的核心内容是向你介绍了逆向法来修改Ps的特性属性值，它的前提是你要对AD的正向属性获取有足够的熟悉，也就是上一篇文章的内容。这三篇文章是逐渐递进，少一节都无法全部掌握，所以想要学习的小伙伴，一定记得从上篇开始阅读。\",\"Action Manager由于缺乏官方文档，也没有系统性的资料，所以不管是我，还是国外的各种大佬，都是从各种角落、前人的研究成果、官方代码碎片等地方进行参考，同时结合了大量，大量自己的研究和摸索，才对这种黑暗魔法有一丁点了解和沉淀，所以，如果你想要学习的话，光靠网上的资料，是永远无法满足述求的，核心还是需要自己不断去猜测、尝试、验证，然后总结，才能真正掌握这个技能。这三篇文章的内容，就是我长时间的摸索总结下来的可复制，可操作，实用性强的一套逻辑方法，希望你可以学会这套方法来探索更多的内容。\",\"关于AM的系统性介绍就这三篇内容，但是关于它的知识点并没有结束，后续的篇章里头，我们还会经常涉及到这块的知识，并且都以实战为主，敬请期待~~\"]},\"412\":{\"h\":\"\",\"t\":[\"引用：\",\"https://blog.cutterman.cn/archives/page/3/\",\"https://yutengjing.com/posts/2/\",\"Adobe CEP 扩展开发教程\"]},\"413\":{\"h\":\"\"},\"414\":{\"h\":\"常用语法\"},\"415\":{\"h\":\"目录\",\"t\":[\"[toc]\"]},\"416\":{\"h\":\"\",\"t\":[\"# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题\"]},\"417\":{\"h\":\"\",\"t\":[\"**加粗** *斜体* ***斜体加粗*** ~~这是加删除线的文字~~\"]},\"418\":{\"h\":\"\",\"t\":[\"【普通链接】 [链接名称](链接地址) 或者 <链接地址> 【高级链接】 这个链接用 1 作为网址变量 [Google][1] 这个链接用 runoob 作为网址变量 [Runoob][runoob] 然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [runoob]: http://www.runoob.com/\"]},\"419\":{\"h\":\"\",\"t\":[\"[](#标题)\"]},\"420\":{\"h\":\"\",\"t\":[\"![alt 属性文本](图片地址) ![alt 属性文本](图片地址 \\\"可选标题\\\") 使用实例： ![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png) ![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png \\\"RUNOOB\\\") 如果想制定宽度和高度： <img src=\\\"http://static.runoob.com/images/runoob-logo.png\\\" width=\\\"50%\\\" height=\\\"50%\\\">\"]},\"421\":{\"h\":\"\",\"t\":[\"| 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 |\"]},\"422\":{\"h\":\"\",\"t\":[\">这是引用的内容 >>这是引用的内容 >>>>>>>>>>这是引用的内容\"]},\"423\":{\"h\":\"\",\"t\":[\"--- ***\"]},\"424\":{\"h\":\"非常用语法\"},\"425\":{\"h\":\"\",\"t\":[\"+ 空格 - 空格 * 空格 按Tab键可转换为二级/三级...列表\"]},\"426\":{\"h\":\"\",\"t\":[\"1. 空格 2. 空格\"]},\"427\":{\"h\":\"\",\"t\":[\":\"]},\"428\":{\"h\":\"\"},\"429\":{\"h\":\"快捷键\"},\"430\":{\"h\":\"代码高亮\",\"t\":[\"Typora 中代码的插入也可以分为行内和块间两种：\",\"行内代码：用 ... 或 ... 括起代码，代码会以主题中设置的样式出现在行内，但不会实现代码高亮。\",\"代码块：输入 ````` 后并输入语言名，换行，开始写代码，Typora 就会自动帮你实现代码高亮。Typora 原生支持许多编程语言代码块的语法高亮，基本日常常用的编程语言它都能很好地支持。 除此以外，你也可以直接换行开始写，而后再选择语言。\"]},\"431\":{\"h\":\"表格\",\"t\":[\"你只需要在行内 鼠标右键 - 插入 - 表格 ，并输入行数和列数，Typora 就会自动生成一张样式不错的空表格。\"]},\"432\":{\"h\":\"\"},\"433\":{\"h\":\"GitBook命令\"},\"434\":{\"h\":\"安装 GitBook\",\"t\":[\"npm install gitbook-cli -g\"]},\"435\":{\"h\":\"查看版本\",\"t\":[\"gitbook -V\"]},\"436\":{\"h\":\"初始化\",\"t\":[\"cd到对应目录\",\"gitbook init 创建 README.md 和 SUMMARY.md 这两个文件 README.md 是说明文档 SUMMARY.md 是章节目录\"]},\"437\":{\"h\":\"编译\",\"t\":[\"gitbook build\"]},\"438\":{\"h\":\"启动服务\",\"t\":[\"gitbook serve 包含了gitbook build命令 gitbook serve --port 2333 指定端口\"]},\"439\":{\"h\":\"导出\",\"t\":[\"gitbook pdf ./ ./mybook.pdf 生成 PDF gitbook epub ./ ./mybook.epub 生成 epub gitbook mobi ./ ./mybook.mobi 生成 mobi\"]},\"440\":{\"h\":\"文件结构\"},\"441\":{\"h\":\"\",\"t\":[\"# Summary ### Part I * [Part I](part1/README.md) * [Writing is nice](part1/README.md#writing) * [GitBook is nice](part1/README.md#gitbook) * [Part II](part2/README.md) * [We love feedback](part2/README.md#feedback) * [Better tools for authors](part2/README.md#tools)\"]},\"442\":{\"h\":\"book.json\",\"t\":[\"{ \\\"title\\\": \\\"Blankj's Glory\\\", 本书标题 \\\"author\\\": \\\"Blankj\\\", 本书作者 \\\"description\\\": \\\"select * from learn\\\", 本书描述 \\\"language\\\": \\\"zh-hans\\\", 本书语言，中文设置 \\\"zh-hans\\\" 即可 \\\"gitbook\\\": \\\"3.2.3\\\", 指定使用的 GitBook 版本 \\\"styles\\\": { 自定义页面样式 \\\"website\\\": \\\"./styles/website.css\\\" }, \\\"structure\\\": { 指定 Readme、Summary、Glossary 和 Languages 对应的文件名 \\\"readme\\\": \\\"README.md\\\" }, \\\"links\\\": { 在左侧导航栏添加链接信息 \\\"sidebar\\\": { \\\"我的狗窝\\\": \\\"https://blankj.com\\\" } }, \\\"plugins\\\": [ 配置使用的插件 \\\"-sharing\\\", \\\"splitter\\\", \\\"expandable-chapters-small\\\", \\\"anchors\\\", \\\"github\\\", \\\"github-buttons\\\", \\\"donate\\\", \\\"sharing-plus\\\", \\\"anchor-navigation-ex\\\", \\\"favicon\\\" ], \\\"pluginsConfig\\\": { 配置插件的属性 \\\"github\\\": { \\\"url\\\": \\\"https://github.com/Blankj\\\" }, \\\"github-buttons\\\": { \\\"buttons\\\": [{ \\\"user\\\": \\\"Blankj\\\", \\\"repo\\\": \\\"glory\\\", \\\"type\\\": \\\"star\\\", \\\"size\\\": \\\"small\\\", \\\"count\\\": true } ] }, \\\"donate\\\": { \\\"alipay\\\": \\\"./source/images/donate.png\\\", \\\"title\\\": \\\"\\\", \\\"button\\\": \\\"赞赏\\\", \\\"alipayText\\\": \\\" \\\" }, \\\"sharing\\\": { \\\"douban\\\": false, \\\"facebook\\\": false, \\\"google\\\": false, \\\"hatenaBookmark\\\": false, \\\"instapaper\\\": false, \\\"line\\\": false, \\\"linkedin\\\": false, \\\"messenger\\\": false, \\\"pocket\\\": false, \\\"qq\\\": false, \\\"qzone\\\": false, \\\"stumbleupon\\\": false, \\\"twitter\\\": false, \\\"viber\\\": false, \\\"vk\\\": false, \\\"weibo\\\": false, \\\"whatsapp\\\": false, \\\"all\\\": [ \\\"google\\\", \\\"facebook\\\", \\\"weibo\\\", \\\"twitter\\\", \\\"qq\\\", \\\"qzone\\\", \\\"linkedin\\\", \\\"pocket\\\" ] }, \\\"anchor-navigation-ex\\\": { \\\"showLevel\\\": false }, \\\"favicon\\\":{ \\\"shortcut\\\": \\\"./source/images/favicon.jpg\\\", \\\"bookmark\\\": \\\"./source/images/favicon.jpg\\\", \\\"appleTouch\\\": \\\"./source/images/apple-touch-icon.jpg\\\", \\\"appleTouchMore\\\": { \\\"120x120\\\": \\\"./source/images/apple-touch-icon.jpg\\\", \\\"180x180\\\": \\\"./source/images/apple-touch-icon.jpg\\\" } } } }\"]},\"443\":{\"h\":\"忽略文件\",\"t\":[\"Gitbook 会依次读取 .gitignore, .bookignore 和 .ignore 文件来将一些文件和目录排除\",\"# 忽略文件 test.md # 忽略目录 bin/*\"]},\"444\":{\"h\":\"封面\",\"t\":[\"gitbook 的封面可以通过插件auto cover自动生成，也可以自己配置。 如果要使用自定义的封面，在书籍的根目录下放置 cover.jpg，如果想要缩略图可以放置 cover_small.jpg，文件格式必须为 jpg。\",\"一个好的封面需要:\",\"大小要求 cover.jpg 1800x2360 pixels , cover_small.jpg 200x262\",\"不要有边框\",\"有清晰的标题\",\"任何小的标题需要清晰可见\"]},\"445\":{\"h\":\"\"},\"446\":{\"h\":\"插件安装命令\",\"t\":[\"gitbook install\"]},\"447\":{\"h\":\"配置\",\"t\":[\"\\\"plugins\\\": [ \\\"-search\\\", 其中\\\"-search\\\"中的 - 符号代表去除默认自带的插件 \\\"back-to-top-button\\\", ... ... ]\"]},\"448\":{\"h\":\"相关插件介绍\"},\"449\":{\"h\":\"1.导航目录折叠\",\"t\":[\"{ \\\"plugins\\\":[\\\"chapter-fold\\\"] }\"]},\"450\":{\"h\":\"2.代码复制，行号\",\"t\":[\"{ \\\"plugins\\\" : [ \\\"code\\\" ] }\"]},\"451\":{\"h\":\"3.高级搜索（支持中文）\",\"t\":[\"支持中文搜索, 在使用此插件之前，需要将默认的search和lunr 插件去掉\",\"{ \\\"plugins\\\": [ \\\"-lunr\\\", \\\"-search\\\", \\\"search-pro\\\" ] }\"]},\"452\":{\"h\":\"4.侧边栏宽度可调节\",\"t\":[\"{ \\\"plugins\\\": [ \\\"splitter\\\" ] }\"]},\"453\":{\"h\":\"5.分享\",\"t\":[\"分享当前页面，比默认的 sharing 插件多了一些分享方式\",\"{ \\\"plugins\\\": [\\\"-sharing\\\", \\\"sharing-plus\\\"], \\\"pluginsConfig\\\": { \\\"sharing\\\": { \\\"douban\\\": false, \\\"facebook\\\": false, \\\"google\\\": true, \\\"pocket\\\": false, \\\"qq\\\": false, \\\"qzone\\\": true, \\\"twitter\\\": false, \\\"weibo\\\": true, \\\"all\\\": [ \\\"douban\\\", \\\"facebook\\\", \\\"google\\\", \\\"instapaper\\\", \\\"linkedin\\\",\\\"twitter\\\", \\\"weibo\\\", \\\"messenger\\\",\\\"qq\\\", \\\"qzone\\\",\\\"viber\\\",\\\"whatsapp\\\" ] } } }\"]},\"454\":{\"h\":\"6.页面添加页脚、版权信息\",\"t\":[\"插件地址GitHub地址\",\"运行以后有很多信息是原创作者的，这些配置都在你的插件安装目录**\\\\node_modules\\\\gitbook-plugin-page-copyright下的index.js中，自己可以修改。大部分信息都在defaultOption中。 那个二维码可以在文件中找到QRcode改成自己的，或者直接把所有的efaultOption.isShowQRCode改成false\",\"{ \\\"plugins\\\" : [\\\"page-copyright\\\"], \\\"pluginsConfig\\\" : { \\\"page-copyright\\\": { \\\"description\\\": \\\"modified at\\\", \\\"signature\\\": \\\"你的签名\\\", \\\"wisdom\\\": \\\"Designer, Frontend Developer & overall web enthusiast\\\", \\\"format\\\": \\\"YYYY-MM-dd hh:mm:ss\\\", \\\"copyright\\\": \\\"Copyright &#169; 你的名字\\\", \\\"timeColor\\\": \\\"#666\\\", \\\"copyrightColor\\\": \\\"#666\\\", \\\"utcOffset\\\": \\\"8\\\", \\\"style\\\": \\\"normal\\\", \\\"noPowered\\\": false, } } }\"]},\"455\":{\"h\":\"7.页内漂浮目录\",\"t\":[\"{ \\\"plugins\\\": [ \\\"ancre-navigation\\\" ] }\"]},\"456\":{\"h\":\"引用\",\"t\":[\"gitbook 插件 https://einverne.github.io/gitbook-tutorial/plugins/\",\"GitBook插件整理 https://www.jianshu.com/p/427b8bb066e6\"]},\"457\":{\"h\":\"\"},\"458\":{\"h\":\"插件推荐\",\"t\":[\"功能增加插件\",\"增加tab标签、目录大纲、搜索等功能\"]},\"459\":{\"h\":\"\"},\"460\":{\"h\":\"\",\"t\":[\"Cocos Creator：2.4.5\",\"Android Studio：4.1.3\"]},\"461\":{\"h\":\"\",\"t\":[\"项目中经常会接入一些 SDK，而 SDK 基本都是基于原生平台开发，迭代速度比较快，其依赖的 Gradle 版本比较高\",\"而通过 Cocos 构建的项目，Android 的 Gradle 版本是跟随 Creator 版本的，所以在接入 SDK 的时候，如果 Creator 版本中设置的 Gradle 版本低于 SDK 中需要的 Gradle 版本，就会编译报错\",\"这时候需要我们自己手动修改\",\"好在随着 Creator 版本的迭代，很多功能也越来越完善\",\"比如现在升级 Gradle，只需要很简单的几步就可以完成\",\"1构建\",\"在 Creator 构建面板中按照自己的需求构建 Android\",\"图片\",\"·APP ABI：\",\"ABI 全称：Application Binary Interface\",\"不同的 Android 设备使用不同的 CPU，而不同的 CPU 支持不同的指令集。CPU 与指令集的每种组合都有专属的应用二进制接口 (ABI)\",\"主流的 ABI 架构\",\"armeabiv-v7a：第7代及以上的 ARM 处理器，2011年以后的生产的大部分 Android 设备使用该架构\",\"arm64-v8a：第8代64位 ARM 处理器，目前主流的 Android 设备使用该架构\",\"armeabi：第5代、第6代的 ARM 处理器，早期的手机使用的比较多\",\"x86：平板、模拟器使用得比较多\",\"x86_64：64位的平板\",\"通过 adb 命令可以查看手机的 CPU 架构\",\"adb shell getprop ro.product.cpu.abi\",\"2更改gradle版本\",\"Gradle 插件版本和 Gradle 版本一定要对应\",\"其对应关系：\",\"https://developer.android.google.cn/studio/releases/gradle-plugin\",\"· Android Studio 更改\",\"图片\",\"选择版本，依然是要注意对应关系\",\"图片\",\"通过 Android Studio 更改后，下面的几个地方会自动更新，同样也可以手动更改\",\"· 手动更改\",\"图片\",\"构建后默认的 Gradle 插件版本为 3.2.0，更改为 4.1.3\",\"图片\",\"Gradle 版本为 4.10.3，更改为 6.6\",\"图片\",\"通过 Android Studio 更改后，会显示下载状态\",\"图片\",\"3编译\",\"下载完成后，编译报错：\",\"图片\",\"game 用于构建 Google Instant App，可以直接删除\",\"在 setting.gradle 中删除 ,':game', ':instantapp'\",\"图片\",\"重新编译，就可以正常运行了\",\"https://mp.weixin.qq.com/s/duWokZsIRyJW8HhrSY04JA\"]},\"462\":{\"h\":\"\",\"t\":[\"自动合图与动态合图\",\"将骨骼动画的图合到自动图集中会减少Drawcall吗\",\"增加自动对齐组件，替换掉CCWidget（性能考虑？）\"]},\"463\":{\"h\":\"\"},\"464\":{\"h\":\"\",\"t\":[\"去年，古风模拟经营类手游《江南百景图》成功破圈，成为年度现象级爆款。 如何将它搬到小游戏平台？是转换还是重写？使用哪些技术方案，能在包体大小仅为原版 1/20 的同时，达到与 App 版相当的游戏体验？ 椰岛小游戏研发负责人 大城小胖 ，带着他近 300 页的 PPT，在 Cocos 的两次线下活动中做了全面的技术分享。\",\"game1080×720 838 KB\"]},\"465\":{\"h\":\"转换 or 重写\",\"t\":[\"《江南百景图》App 版游戏包大小有 600+M ，上线前期还有部分用户反映游戏运行时手机发热严重。而小游戏版在经过立项选型后，决定使用 Cocos Creator 重写，仅用了 1 天就做出了 Demo。经过 4 个月的优化，我们最后将包体压缩到 30M 左右，同时保证游戏体验与 App 版相当。\",\"B095A344-0AB8-4ACF-94BA-013CA3E08EE11352×760 243 KB\",\"优化的过程中，我们做了以下工作，其中 代码 部分需要重新设计和编写。\",\"WeChat53065d81487f52e0255e074c84201dc31000×460 60.2 KB\"]},\"466\":{\"h\":\"渲染优化\",\"t\":[\"原生版本的《江南百景图》移植到小游戏首先需要解决的就是 耗电高、易发烫、Draw Call 高 等问题。\"]},\"467\":{\"h\":\"合批\",\"t\":[\"合批是降低 Draw Call 最快也是最有效的方式。优化同样的 Texture，将多张的图片合并到一张图集上，这样不论要生成多少张不同的图片，都不会打断合批渲染，Draw Call 也就降低下来了。\",\"但是《江南百景图》的资源非常多，每个玩家使用资源的顺序也不尽相同，如果玩家使用的资源分别在不同的图集上，还是会导致合批渲染被打断，产生 Draw Call。因此，针对这一情况，我们采用了 Multi-Texture 的方式进行了优化，其原理是将传统的判断是否在同一张图集，转换为判断是否在 同一批图集，这样就大大减少了 Draw Call 产生。\",\"WeChatfcf178e3cfb6af9dc743dd61503c0a0f1000×562 123 KB\",\"另外，通过 gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) 这个指令，可以知道在一台设备中 Shader 最多支持几张图集。测试发现目前 90% 以上的手机至少支持8张，因此我们将批图集的数量设置为8张。因为一个批次有 8 张图集，所以我们是通过这个 idx 判断某张图用的哪个图集，代码也很简单。\",\"drawcall1052×582 129 KB\"]},\"468\":{\"h\":\"动态合图\",\"t\":[\"小游戏版本采用了 Cocos 的动态合图机制，这样在 CDN 下载的图片也能进行合图。而为了提高合图的效率，避免浪费空间，我们会将长度或者宽度特别大的图片进行裁剪。\",\"all01438×666 311 KB\",\"例如左图中的旗杆，由于图片太长，在动态合图时会导致空间浪费，因此我们将这张旗杆的图片裁剪成两张，如右图所示，再在项目中进行拼接处理。\"]},\"469\":{\"h\":\"采用同一个材质资源\",\"t\":[\"在《江南百景图》中，玩家移动地图时，原本在显示范围外的图片将从水墨色变为彩色。\",\"__3350×592 1.71 MB\",\"传统的方案是改变图片材质，当地图移动到要显示的节点时，节点一个一个地进行材质的切换，达到一个 “淡入淡出” 的效果。但是在项目中尝试之后，我们发现这样会导致 Draw Call 上升，而且拖拽地图又是一个很频繁的操作，游戏中实际效果较差。\",\"因此在这里我们将所有城市物体资源，无论是人物还是建筑、常态还是淡入状态，都用统一的 Material、并使用顶点数据传递“时间参数”，以此节约性能消耗，最终达到所有建筑和人物的创建、移动、销毁等全都只需要一个材质就能够完成。\",\"material1358×760 157 KB\",\"很多人会觉得一个普通的图片也用这么复杂的方案，会影响性能，导致性能变差。但是实际测试效果并不差，这也告诉我们，在游戏开发中还是要以实践为准，不能想当然。\"]},\"470\":{\"h\":\"优化 Shader 的输入数据\",\"t\":[\"由于《江南百景图》的图片资源中不会用到 Color 这个属性，因此在材质中，我们将原有的 Color 数据去除掉。\",\"nodeColor1360×500 78.3 KB\",\"下图是一个正常的顶点数据：\",\"vertex2256×498 234 KB\",\"接下来就是将原有的 Color 数据去除掉。用来存放项目中所需要的其它信息，这样做可以减少 CPU 与 GPU 互相传输的数据量。\",\"scaleVague1840×668 240 KB\"]},\"471\":{\"h\":\"层级规划\",\"t\":[\"我们将不同的类型的资源，分别放置在对应的层级中。《江南百景图》共分了13个层级，下图只展示了部分比较重要的层级：\",\"hierarchy1360×760 84 KB\",\"其中比较有意思的是 旗帜层 。旗帜是《江南百景图》中的一个常见元素，但因为项目实际技术限制，无法将一个旗帜制作在一个完整龙骨动画中，如果强行放在一起，就会导致在渲染到旗帜的时候出现断批。我们采用了 动态组织层级关系 的方式来解决这个问题。例如这是一个原来的旗帜预制体：\",\"flag1358×758 139 KB\",\"采用 动态组织层级关系 的方式，将旗杆与旗面拆开，旗杆放在下面的普通建筑物层，旗面则单独分为一层旗帜层放在上层，这样就很好地避免了渲染时一直被打断合批的情况。\",\"changeFlag1358×760 148 KB\"]},\"472\":{\"h\":\"UI 渲染优化\",\"t\":[\"UI 部分我们没有使用动态合图或者 MultiTexture，动态合图我们留给了游戏中的人物和建筑、而没有使用 MultiTexture 主要是开发成本的原因。但在我们的优化下，现在游戏的 Draw Call 可以降得很低。\",\"UIShader1360×758 85.4 KB\",\"UI 方面我们也是做了分层，比如下面左边的图上我们的 button 层，里面都是按钮部分，右边是我们的标签牌层级。这样我们就可以根据功能区去划分图集，然后和游戏里的层级对应起来，而不会打断合批。\",\"Layered2130×1198 305 KB\"]},\"473\":{\"h\":\"自定义引擎\",\"t\":[\"Cocos 是个开源引擎，我们可以根据项目的实际需要，对引擎进行定制、修改，从而达到更好的效果。\"]},\"474\":{\"h\":\"增强 TiledMap\",\"t\":[\"我们在 Cocos Creator 原有的 TiledMap 组件的基础上，拓展了新的功能，下图是 Cocos 自带的组件。\",\"tiledmap2262×456 69.2 KB\",\"这里就不详细说了，有兴趣的可以去官方文档查阅，我们主要来说一下经过拓展的新功能。\",\"tiledmap21178×396 90.5 KB\",\"1. Diamond Tile： 游戏中使用了很多 TiledMap 中的图块菱形方块， 但是引擎默认的传递方式是矩形，这样就会造成数据浪费和冗余。\",\"tiledmap3934×469 167 KB\",\"这些图片首先都是 规则的菱形 ，所以很简单，直接 根据宽高进行进行计算。\",\"tiledmap41098×510 201 KB\",\"将菱形周围多余的部分切割，这样很明显图片大小减少了一半.这里注意一下非标准图形就不能这么用了。\",\"2. Share Culling： 《江南百景图》共有三层 TiledMap 地图层， 勾选时 将只对 TiledMap 的第一个地图层进行处理判断可视区域的范围，而其他的地图层将直接照搬第一个地图层的处理结果，这样能够节约不少性能。\",\"tiledmap52434×1262 424 KB\",\"3. With Color： 如果不需要颜色数据就可以勾选，减少数据量的传输。\"]},\"475\":{\"h\":\"将道路转为 Tile\",\"t\":[\"游戏中的道路是不需要进行淡入淡出效果的，如果当作普通建筑物资源来用之前的材质进行渲染，会消耗相当多的性能。因此我们将道路作为 Tile Map 地图的一部分，让道路不需要用之前提到的材质进行渲染。\",\"还有一个小细节，在 Tiled Map Editor 中设置的宽高，与实际项目中使用是无关的，因此在生成的时候可以将地图块按照实际项目需求进行缩小，减少资源使用。\",\"tileSet1360×758 114 KB\"]},\"476\":{\"h\":\"资源压缩\",\"t\":[\"将一个原版 600+M 的游戏压缩到最终的 30M 左右，资源的压缩工作必不可少。我们需要将游戏资源进行合理的压缩，使其更加适合小游戏运行，并且不影响游戏最终的显示效果。\"]},\"477\":{\"h\":\"图片缩放\",\"t\":[\"对不同类型、不同清晰度的资源，我们可以设置不同的缩放比例。我们将大部分的建筑缩放到原来的 0.65 倍，背景中的山川则被缩放到原来的 0.3 倍。另外，就算是相同位置上使用的人物立绘，由于每个人物的自身和背景的颜色、精度不同，也都可以给它们设置不同的缩放比例。\",\"smallSpr1540×861 429 KB\",\"于是我们将所有 Sprite 组件采用 Custom 模式，可以自由控制比例。不同的图片使用差异化配置，设置不同的缩放比例，用脚本控制缩放比例，这样便可以打包出任意画质和体积的各种版本，并且还提升了动态合图的利用率和部分性能。\",\"custom1358×758 202 KB\",\"scale1348×734 283 KB\"]},\"478\":{\"h\":\"图片减色\",\"t\":[\"综合比较了大家比较熟知的 tinypng 和 pngquant 两种工具之后，项目最终选择使用 pngquant 对 PNG 图片进行批量压缩。pngquant 可以自定义压缩品质，而且 pngquant 开源，容易维护，风险可控。pngquant 也提供像 ImageAlpha 这样的工具，可以实时查看图片减色后的效果，方便调整参数。\",\"pngquant1358×644 66.9 KB\",\"需要注意的是，由于 Cocos 会进行合图处理，如果对 Build 前的图片做压缩，合图时前期的一些压缩工作可能就此无效化，所以我们要对 Build 后的图片 做压缩处理。\",\"另外我们也建议程序多了解一下图片格式以及其原理。不是所有图片都要使用 PNG 格式，也会有使用 JPG 的情况。\"]},\"479\":{\"h\":\"场景剔除\",\"t\":[\"这部分我们的需求是 只渲染可视物体 。那么用什么方法确定哪些物体是可见的呢？最开始我们使用了四叉树，但是在 JS 语言中的效果并不好。所以我们给地图划分格子，Grid 的单元格大小要适中，但单元格的边长应为 2的整次幂 ，便于利用 位运算 提升性能。\",\"如下图所示，红框就是镜头，所以需要渲染的也就是这个红框里出现的格子。然后我们再根据建筑物的坐标、大小去进行计算，判断建筑在哪一行哪一列的格子里，从而确定该建筑物是否是需要被渲染的物体。\",\"clear1077×592 443 KB\",\"test1812×1018 283 KB\",\"这是一段简单的检测函数 大家可以根据自己的项目需求去进行扩展。\",\"testTs1786×814 139 KB\",\"除此之外，为了防止特殊情况出现，判断的可视范围需要比实际范围更大一些。\",\"range1812×1020 184 KB\"]},\"480\":{\"h\":\"寻路\",\"t\":[\"《江南百景图》使用的寻路算法，有针对单源单点的 A* 和单源多点的 Dijkstra 。但这里我们要讲的不是寻路算法，而是在游戏中的用法优化。\",\"针对地图很大、建筑物和人物都很多的情况下，这些算法一起执行就会很损耗性能。所以我们用了 分时寻路 ，就是把寻路过程由一帧分到若干帧去进行计算，这样就不会在某一个时间段集中进行大量运算，对游戏性能也不会有太大的影响。\",\"pathfinding2040×1056 343 KB\",\"除此之外我们还在游戏里做了一个大胆的优化，就是统一管理寻路任务，同一时间只为一个角色服务。也许有人会问，那岂不是一个角色在哪里走、其他对象都在那边等着？其实真正在游戏里不会有这种奇怪的表现。首先每个角色寻路的起始和结束时间都不一样，再者这个同一时间是非常短的，就等于把角色寻路分配到了不同帧里，交替进行执行。\"]},\"481\":{\"h\":\"再谈性能\"},\"482\":{\"h\":\"模糊特效\",\"t\":[\"玩家在打开《江南百景图》的任意界面时，游戏的背景需要做模糊处理，而背景中的人物动画等仍需要正常播放。\",\"vague1360×766 250 KB\",\"模糊效果我们最常见的就是高斯模糊。高斯模糊的效果很好，但是性能却较为一般。下图是常见的一些模糊算法：\",\"blur1360×720 211 KB\",\"经过综合的考虑，在江南百景图项目中，最终采用了 Kawase 模糊，具有较高的效果的同时又具有较好的性能。关于更多的各种模糊的详细介绍，可以参考 十种图像模糊算法的总结。\",\"下面的是对于传统的高斯模糊与 Kawase 模糊的效果对比：\",\"blurCompare780×425 61.4 KB\",\"运用了高斯模糊的的画面很卡大概是每秒 十几帧 的样子。而采用了 Kawase 模糊 的画面是可以流畅运行的，可以跑满 60 帧。\",\"另外，还有一个可以适配任何模糊算法的方法，可以将要模糊的图片先渲染到一个小的 RenderTexture 上，然后将其 模糊后再放大 显示，这样做可以增加模糊算法的 处理速度。如下图所示:\",\"scaleVague1840×668 240 KB\"]},\"483\":{\"h\":\"RenderTexture 池\",\"t\":[\"在小游戏或 Web 端 创建 RenderTexture 时，比较损耗性能。所以我们在游戏中使用完 RenderTexture 后，不是直接销毁，而是将其放在一个 缓存池 中，下次从缓存池中调用符合要求的 RenderTexture 即可。\"]},\"484\":{\"h\":\"点击检测\",\"t\":[\"《江南百景图》中有很多建筑物，而在用户点击时，并非简单地通过地形上的块做判断，而是给每个建筑物画了一个 多边形检测区域 。但是建筑物是移动的，如果 多边形检测区域 也随之移动，从性能和逻辑上都不是好的处理方式。\",\"click1910×1066 234 KB\",\"于是在实际操作中，我们让建筑物移动，而对应的 多边形检测区域 不做移动，并将其设置在原点坐标上。用户点击操作时，将点击的坐标减去建筑物相对原点的坐标，就可以进行点击检测了。同理如果建筑物是反转状态，可以将点击坐标进行镜像，而 多边形检测区域 仍然可以不做调整。类似还有其他情况，大家也可以去了解一下各情况下对多边形的处理方式。\"]},\"485\":{\"h\":\"数组排序\",\"t\":[\"数组排序是大家容易忽略的一个优化模块，很多开发者在开发中都直接使用 Array.sort() 这样的 快速排序 算法，但是其实每种排序算法其实他都有一个擅长的场景。在开发中应该针对实际的项目情况采用合适的排序算法。例如 Array.sort() 排序更适用于混乱无章的数据，而在江南百景图项目中 每一帧 都会对这些人物建筑物进行排序，而这一帧对于上一帧来说差异不会很大，也就是相对 有序的数据。因此，它更适合使用像下图这样的 插入排序 算法。能更好的提升运算的效率。\",\"sort1814×852 135 KB\"]},\"486\":{\"h\":\"其他优化\"},\"487\":{\"h\":\"「阅后即焚」\",\"t\":[\"游戏中存在一些低频显示的大图，例如进入游戏时的公告、抽到的卡片等，玩家在游戏中看一遍就不会再出现了，对于这一类我们用了“阅后即焚”的思路。\",\"image1197×642 358 KB\",\"像这些大图，我们通常先从远程服务器下载到本地缓存，产生 Image 对象，还有 cc.Texture2D、renderer.Texture2D。\",\"download1145×513 55.7 KB\",\"我们通过伪代码来简单讲解一下，加载图片时，将图片添加到我们自己创建的回收用工具类 TextureRecycle 中。\",\"destoryTs962×246 50.7 KB\",\"视图关闭时，通过工具类回收这些图片。\",\"cleanUp\",\"在图片的回收阶段中，就可以将以上所有用到的对象都清理干净了。\",\"cache871×423 79.5 KB\"]},\"488\":{\"h\":\"构建优化\",\"t\":[\"在构建发布流程中，江南百景图项目使用了大量的自动化脚本来优化构建流程。包括 全平台构建、上传游戏平台、资源预处理和后处理、CDN 同步和版本控制和二次混淆加密 等。但成也脚本败也脚本，过长的构建时间也造成了不少困扰，因此我们也需要做一些额外优化。\",\"Cocos 新版本添加了一个第三方开源压缩工具 Sharp，压缩级别是 0-9，数值越大压缩越久，而 Cocos 的默认参数是 6。由于我们已经进行过 图片减色 处理，因此我们将参数改为 0，这样就能减少很多构建的时间。\",\"buildVage1704×724 168 KB\",\"而在各平台构建时，总是格外漫长，原因是每次平台构建时，Creator 都要重新生成对应的平台图集。找到原因后，我们在每次构建前，将对应目录中的 info.json 中的 actualPlatform 参数先修改为 对应的平台名称 再打包，这个改动使我们的构建时间由之前的 15 分钟缩短到 10 分钟左右，提升了 30% 效率。\",\"route1328×724 144 KB\",\"routeScripts1666×706 185 KB\"]},\"489\":{\"h\":\"结语\",\"t\":[\"在不懈的优化下，我们看到在现场演示时，这个用于官方演示游戏的高级账号，在游戏场景人物都很丰富的情况下，仍然只有 6 个 Draw Call。\"]},\"490\":{\"h\":\"\"},\"491\":{\"h\":\"说明\",\"t\":[\"在CocosCreator官方文档中没有提供跨平台的通用写文件接口。如果运行环境是浏览器，有一个替代方案可以实现把内容保存到文件，效果相当于下载了一个文件到本地\",\"// 保存字符串内容到文件。 // 效果相当于从浏览器下载了一个文件到本地。 // textToWrite - 要保存的文件内容 // fileNameToSaveAs - 要保存的文件名 saveForBrowser(textToWrite, fileNameToSaveAs) { if (cc.sys.isBrowser) { console.log(\\\"浏览器\\\"); let textFileAsBlob = new Blob([textToWrite], {type:'application/json'}); let downloadLink = document.createElement(\\\"a\\\"); downloadLink.download = fileNameToSaveAs; downloadLink.innerHTML = \\\"Download File\\\"; if (window.webkitURL != null) { // Chrome allows the link to be clicked // without actually adding it to the DOM. downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob); } else { // Firefox requires the link to be added to the DOM // before it can be clicked. downloadLink.href = window.URL.createObjectURL(textFileAsBlob); downloadLink.onclick = destroyClickedElement; downloadLink.style.display = \\\"none\\\"; document.body.appendChild(downloadLink); } downloadLink.click(); } }\"]},\"492\":{\"h\":\"\"},\"493\":{\"h\":\"Creator的深层解读：\",\"t\":[\"CCScene与CCNode的区别\",\"组件的生命回调流程\",\"引擎绘制流程\",\"CCSprite、CCTexture、CCImage的关系\",\"动态合图\"]},\"494\":{\"h\":\"微信小程序自定义导航栏组件(完美适配所有手机),可自定义实现任何你想要的功能\",\"t\":[\"志军2019-08-19\"]},\"495\":{\"h\":\"背景\",\"t\":[\"在做小程序时，关于默认导航栏，我们遇到了以下的问题：\",\"Android、IOS手机对于页面title的展示不一致，安卓title的显示不居中\",\"页面的title只支持纯文本级别的样式控制，不能够做更丰富的title效果\",\"左上角的事件无法监听、定制\",\"路由导航单一，只能够返回上一页，深层级页面的返回不够友好\"]},\"496\":{\"h\":\"探索\",\"t\":[\"小程序自定义导航栏已开放许久>>了解一下，相信不少小伙伴已使用过这个功能，同时不少小伙伴也会发现一些坑：\",\"机型多如牛毛：自定义导航栏高度在不同机型始终无法达到视觉上的统一\",\"调皮的胶囊按钮：导航栏元素（文字，图标等）怎么也对不齐那该死的胶囊按钮\",\"各种尺寸的全面屏，奇怪的刘海屏，简直要抓狂\"]},\"497\":{\"h\":\"一探究竟\",\"t\":[\"为了搞明白原理，我先去翻了官方文档，>>飞机，点过去是不是很惊喜，很意外，通篇大文尽然只有最下方的一张图片与这个问题有关，并且啥也看不清，汗汗汗…\",\"我特意找了一张图片来\",\"分析上图，我得到如下信息：\",\"Android跟iOS有差异，表现在顶部到胶囊按钮之间的距离差了6pt\",\"胶囊按钮高度为32pt， iOS和Android一致\"]},\"498\":{\"h\":\"动手分析\",\"t\":[\"我们写一个状态栏，通过wx.getSystemInfoSync().statusBarHeight设置高度\",\"Android：\",\"iOS:\",\"可以看出，iOS胶囊按钮与状态栏之间距离为：4px， Android为8px，是不是所有手机都是这种情况呢？ 答案是:苹果手机确实都是4px,安卓大部分都是7和8 也会有其他的情况(可以自己打印getSystemInfo验证)如何快速便捷算出这个高度,请接着往下看\"]},\"499\":{\"h\":\"如何计算\",\"t\":[\"导航栏分为状态栏和标题栏,只要能算出每台手机的导航栏高度问题就迎刃而解\",\"导航栏高度 = 胶囊按钮高度 + 状态栏到胶囊按钮间距 * 2 + 状态栏高度\",\"注：由于胶囊按钮是原生组件，为表现一致，其单位在各种手机中都为px，所以我们自定义导航栏的单位都必需是px（切记不能用rpx），才能完美适配。\"]},\"500\":{\"h\":\"解决问题\",\"t\":[\"现在我们明白了原理，可以利用胶囊按钮的位置信息和statusBarHeight高度动态计算导航栏的高度，贴一个实现此功能最重要的方法\",\"let systemInfo = wx.getSystemInfoSync(); let rect = wx.getMenuButtonBoundingClientRect ? wx.getMenuButtonBoundingClientRect() : null; //胶囊按钮位置信息 wx.getMenuButtonBoundingClientRect(); let navBarHeight = (function() { //导航栏高度 let gap = rect.top - systemInfo.statusBarHeight; //动态计算每台手机状态栏到胶囊按钮间距 return 2 * gap + rect.height; })();\",\"gap信息就是不同的手机其状态栏到胶囊按钮间距，具体更多代码实现和使用demo请移步下方代码仓库，代码中还会有输入框文字跳动解决办法,安卓手机输入框文字飞出解决办法,左侧按钮边框太粗解决办法等等\"]},\"501\":{\"h\":\"胶囊信息报错和获取不到\",\"t\":[\"问题就在于 getMenuButtonBoundingClientRect 这个方法，在某些机子和环境下会报错或者获取不到，对于此种情况完美可以模拟一个胶囊位置出来\",\"try { rect = Taro.getMenuButtonBoundingClientRect ? Taro.getMenuButtonBoundingClientRect() : null; if (rect === null) { throw 'getMenuButtonBoundingClientRect error'; } //取值为0的情况 if (!rect.width) { throw 'getMenuButtonBoundingClientRect error'; } } catch (error) { let gap = ''; //胶囊按钮上下间距 使导航内容居中 let width = 96; //胶囊的宽度，android大部分96，ios为88 if (systemInfo.platform === 'android') { gap = 8; width = 96; } else if (systemInfo.platform === 'devtools') { if (ios) { gap = 5.5; //开发工具中ios手机 } else { gap = 7.5; //开发工具中android和其他手机 } } else { gap = 4; width = 88; } if (!systemInfo.statusBarHeight) { //开启wifi的情况下修复statusBarHeight值获取不到 systemInfo.statusBarHeight = systemInfo.screenHeight - systemInfo.windowHeight - 20; } rect = { //获取不到胶囊信息就自定义重置一个 bottom: systemInfo.statusBarHeight + gap + 32, height: 32, left: systemInfo.windowWidth - width - 10, right: systemInfo.windowWidth - 10, top: systemInfo.statusBarHeight + gap, width: width }; console.log('error', error); console.log('rect', rect); }\",\"以上代码主要是借鉴了拼多多的默认值写法，android 机子中 gap 值大部分为 8，ios 都为 4，开发工具中 ios 为 5.5，android 为 7.5，这样处理之后自己模拟一个胶囊按钮的位置，这样在获取不到胶囊信息的情况下，可保证绝大多数机子完美显示导航头\"]},\"502\":{\"h\":\"吐槽\",\"t\":[\"这么重要的问题，官方尽然没有提供解决方案…竟然提供了一张看不清的图片???\",\"网上有很多ios设置44，android设置48，还有根据不同的手机型号设置不同高度，通过长时间的开发和尝试，本人发现以上方案并不完美,并且bug很多\"]},\"503\":{\"h\":\"代码库\",\"t\":[\"Taro组件gitHub地址详细用法请参考README\",\"原生组件npm构建版本gitHub地址详细用法请参考README\",\"原生组件简易版gitHub地址详细用法请参考README\",\"由于本人精力有限，目前只计划发布维护好这2种组件，其他组件请自行修改代码，有问题请联系\"]},\"504\":{\"h\":\"备注\",\"t\":[\"上方2种组件在最下方30多款手机测试情况表现良好\",\"iPhone手机打电话和开热点导致导航栏样式错乱，问题已经解决啦，请去demo里测试，这里特别感谢moments网友提出的问题\",\"本文章并无任何商业性质，如有侵权请联系本人修改或删除\",\"文章少量部分内容是本人查询搜集而来\",\"如有问题可以下方留言讨论，微信zhijunxh\",\"参考\",\"https://developers.weixin.qq.com/community/develop/article/doc/00068aec7941f8f57509794be54413\"]},\"505\":{\"h\":\"\",\"t\":[\"作者：洛小易 链接：https://www.zhihu.com/question/25984324/answer/727952266 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\"]},\"506\":{\"h\":\"1.纪念碑谷\",\"t\":[\"艾达公主的救赎之旅。\",\"游戏以艾达公主归还神圣几何为解谜动机，利用视觉错位为我们编织了一个个唯美关卡。「纪念碑谷1」由原作加「艾达的梦」加「被遗忘的海岸」共计19章构成（10+1+8）。初玩游戏，从令人眼前一亮的视觉错位设定开始，再到乌鸦人、图腾等元素的出现，游戏逐渐变复杂，但更有趣。每帧都可用作壁纸的唯美画风配上灵动的音乐，与利用视觉错位和矛盾空间的操作交互成这部被玩家们吹爆多年的经典之作。\"]},\"507\":{\"h\":\"2.纪念碑谷2\",\"t\":[\"引领、爱、与成长。\",\"相比「纪念碑谷1」，2作的声势明显小了些。原因在于2作并没有像玩家们期待的那样在玩法等方面增添新元素，整个游戏倒像是1作的大号DLC。不过2作也有值得赞叹的地方，游戏以全新的剧情出现在玩家们眼前，带我们展示了一个小女孩的蜕变之路。由一开始的跟随，到最后独自前行，探究神圣几何之谜的旅途促进了小女孩的成长。等等，我现在只想知道那个爱说鸡汤话的NPC和变蓝的门腾哥后来怎么样了……\",\"無非\\\\纪念碑谷周边 创意个性笔筒多功能水泥收纳盒办公淘宝¥ 89.00去购买\"]},\"508\":{\"h\":\"3.未上锁的房间1\",\"t\":[\"充满魔幻的盒子。\",\"同样是个被广大玩家们吹爆的经典解谜之作，孤静诡异的音乐，稍具年代感的画风让人顿时身临其境。精密高深的盒子机关与目镜的搭配更是让我佩服设计者们的脑洞。尤其是一环扣一环的道具和线索没有提供任何多余无用的元素。当然，最想让我吹爆的还是解谜的逻辑性，每一个关键步骤都有或多或少的暗示和引导，不像其他解谜游戏会给人某种莫名其妙感。再次强推！\"]},\"509\":{\"h\":\"4.未上锁的房间2\",\"t\":[\"诡秘奇怪的房间。\",\"个人认为2作仍然保持或者说提高了前一部的水准。它让我们把眼光从单纯的盒子解谜移到了整个房间，解谜所考虑的元素散播得更广了，不过解谜格局的开阔让人更舒适了。同时，2作的画面比1作更精致，音效也比1作更诡异，目镜比1作用得更频繁，剧情更让人健忘2333。好在最后终于离开了那座诡异的房子。赶紧让主人公找点吃的吧，放现实中以我的解谜速度他早饿死了~\",\"The Room 1和2 未上锁的房间1 2 安卓完整版淘宝¥ 1.58去购买\"]},\"510\":{\"h\":\"5.未上锁的房间3\",\"t\":[\"从列车到密室。\",\"3作继承了前两部的水准，还是一如既往的优秀。解谜的格局越来越大，房间楼层间的来回穿梭，最后都跑室外解谜了，终于不觉得闷得慌了。画面更加精细，终章的多线索解谜更是增大了游戏难度，结尾4个结局也让整个游戏升华得更加诡异，是一部游戏性很强的解谜作品。\"]},\"511\":{\"h\":\"6.机械迷城\",\"t\":[\"一个崭新的机械世界。\",\"一部自由度很高的解谜游戏。整部具有机械制造感的画风和音效一下子就吸引住了我，简直就是设计者们为我们构造了一个全新的世界模型。而剧情方面也是通俗易懂，整部游戏不靠任何文字，单独借用主人公的回忆就能完整理解发生了什么以及自己的目标是什么。结尾的小情节让我一度认为还会出续作，不过可能希望不大了。\",\"机械迷城 for mac 支持苹果全系统 苹果电脑原生游戏淘宝¥ 3.00去购买\"]},\"512\":{\"h\":\"7.地狱边境\",\"t\":[\"在地狱边缘寻求希望。\",\"这是一部能让你内心发出无数“woc”的游戏。你需要扮演一个小男孩，克服路上的种种陷阱和阻碍，在地狱边境寻找自己的姐姐。游戏采用黑白色调，配合昏暗的谜雾，使得全屏唯一明亮的就是小男孩坚定的眼睛。再结合逼真诡异的音效，以及路上各种会让你挂掉的陷阱与生物，让这款游戏名副其实地成为一部恐怖类型的经典解谜作品。\",\"Inside中文版 地狱边境 内部LIMBOⅡ京东¥ 18.00去购买\"]},\"513\":{\"h\":\"8.王国保卫战\",\"t\":[\"玩得停不下来的经典塔防。\",\"如果说推荐的前几款游戏都是解谜经典，那这款就是一部当之无愧的塔防经典。游戏改变了传统塔防游戏的模式，新增了兵营、英雄、援军、科技树等元素，混合防御塔和法术，为我们带来了一部混合多种角度制作的突破性塔防游戏。多种不同类型的防御单位与属性多样的敌军，加上许多不同的游戏场景，为游戏赋予了高趣味性与高可玩性等特点。\"]},\"514\":{\"h\":\"9.王国保卫战：前线\",\"t\":[\"倍受喜爱的二代作品。\",\"游戏比上代作品新增了全新的特殊炮塔与英雄，玩法变得更加丰富多样。一如既往的漫画手绘风格和应景的音乐与喊叫声把我们带入了这场紧张的战斗。40种不同属性、特性的敌人使得防御元素之间的配合依然重要。整体上讲，游戏确是一部保持原作水准的作品。\"]},\"515\":{\"h\":\"10.王国保卫战：起源\",\"t\":[\"黑暗森林中的较量。\",\"游戏继承了上部作品的游戏元素，又比上部作品新增了很多有趣的细节，能交互多种画面中与战斗无关紧要的元素。游戏画风依然是整部系列中统一的漫画风格，不过这部的主题变为了森林或自然，也是为了映照精灵族与怪物们对立的场景。在策略上游戏更加偏向于对友军利用上的把握，也加大了英雄的存在感。总体来说，依然是部有趣而漫长的作品。\"]},\"516\":{\"h\":\"11.王国保卫战：复仇\",\"t\":[\"维兹南再临。\",\"依然是熟悉的风格，多种类型的防御塔与敌人保持了系列一贯的丰富多样。本作游戏画面比前作更加精细，让人忍不住仔细欣赏每个人物与防御塔的卡通模型。不过在界面设计上又少了某些细节。塔收费的设定也让一些玩家不爽，然而游戏的防御塔个数比前作增加了许多，在这一点上游戏趣味性、可玩性反而增加，这可能也是四代作品保持了一如既往高分的原因吧。\"]},\"517\":{\"h\":\"12.纸境\",\"t\":[\"樱花还能再次盛开吗？\",\"这款画风简约的解谜游戏讲述了一个武士独自寻找内心春天的故事。游戏音乐缓和平淡，所有场景全部由折纸构成，带给人一种唯美的意境。游戏内最熟悉的生物只有狼，没有过多的元素。结局时，武士又坐在了游戏一开始的位置，而后摘下一朵美丽的樱花。结尾处一句“怀拥自身之丧逝”，让我们不自觉猜测那位武士藏匿着的、隐隐作痛的伤感往事。\"]},\"518\":{\"h\":\"13.Cytus\",\"t\":[\"全屏幕的敲敲划划。\",\"这是一款全屏点触式的音乐游戏。玩家需要通过屏幕中移动黑色线的指引，完成屏幕中出现的3种不同音符的操作（点击，锁链，长按）。超现实的电子风格画风，动感十足的原创乐曲让玩家们沉浸其中。与之对应的、覆盖全屏幕的手指操作也提高了游戏本身难度的底线。\",\"【二次元】音乐 Cytus II 赛特斯2 音乐游戏 短袖T恤男京东¥ 119.68去购买\"]},\"519\":{\"h\":\"14.Cytus2\",\"t\":[\"沉浸式爆炸特效。\",\"游戏继承了前作的玩法，提高了操作特效的水准，让手与屏幕的接触迸发出动力十足的爆炸感。配合更复杂的曲目与屏幕中突然变速的扫描线，让大神玩家的粉丝们不禁连连感慨：“妈妈问我为什么跪着看视频。”此外，华丽的游戏角色、多首隐藏音乐、和趋于完善的剧情也增强了玩家们对此款游戏的粘性。\",\"NEKO电子音乐手游音乐世界Cytus II周边T恤短袖男女全京东¥ 127.24去购买\"]},\"520\":{\"h\":\"15.致命框架1\",\"t\":[\"一部可编辑的连环画。\",\"游戏以创新性的方格连环画设计，通过改变框架的顺序来给主人公引路，以推动剧情发展。游戏中人物采用黑白对比的形式来表现人物，使得人物更加诡秘，同时画风也更加简洁。在游戏中后期，框架的循环使用稍稍增大了游戏难度。看着小黑人来回穿梭于由自己塑造的漫画之间，倒也是一种乐趣。\"]},\"521\":{\"h\":\"16.致命框架2\",\"t\":[\"游戏也可由自己“导演”。\",\"2作延续了1作的设计和基本操作，不过框架的旋转与反复使用频率的提高使得2作比1作要更难一些。同样的黑白人物风格与爵士乐配音，以及没有文字描述却依然展现得淋漓尽致的剧情，使得2作完好保持了前作的水准，依然是一部给予玩家们与游戏独一无二交互机会的优秀作品。\"]},\"522\":{\"h\":\"17.瘟疫公司\",\"t\":[\"来自上帝的泯灭。\",\"一款题材新颖的休闲策略类游戏。玩家需要自己创造出一种瘟疫类型，通过收集屏幕中出现的基因，不断新增或强化瘟疫的症状和特性，直到杀死或控制全人类以完成任务。游戏画面和音乐虽不足称为亮点，不过相互配合也达到了渲染主题的作用。关键在于游戏新颖的题材激发了玩家们的兴趣，7种常规与4种特殊的瘟疫类型对应着不同的基因树，使得游戏可玩性大大增加。\",\"瘟疫公司物竞天择进化纯棉假两件卫衣游戏周边男女宽松淘宝¥ 78.00去购买\"]},\"523\":{\"h\":\"18.逃离方块、锈湖系列\",\"t\":[\"兼顾数量与质量的优秀解谜作品。\",\"整个游戏系列以解谜、剧情、略带惊悚的标签问世，玩家需要在不同的时间线，扮演不同的人物，解开一个个谜题，当然也有好坏结局之分。系列共13部曲，TapTap上这13款游戏的平均得分高达9.75，可见设计者们对游戏的用心制作深受玩家们爱戴。推荐游玩顺序：「Cube Escape: The Seasons 」、「Cube Escape: Lake 」、「Cube Escape: Arles 」、「Cube Escape: Harvey's Box 」、「Cube Escape: Case 23」、「Cube Escape: The Mill 」、「锈湖：旅馆」、「Cube Escape: Birthday 」、「Cube Escape: Theatre」、「锈湖：追溯」、「Cube Escape: The Cave」、「锈湖：天堂岛」、「Cube Escape: Paradox」。\"]},\"524\":{\"h\":\"19.生命线系列\",\"t\":[\"沉浸式小说游戏。\",\"在众多游戏厂商以游戏画面为卖点的今天，像生命线系列这种纯文字通讯类游戏还能让玩家们青睐，可想而知设计者们需要将剧情刻画的多么精彩。在游戏中，你需要不停的帮助主人公做出选择，你的每一个选择都直接影响剧情的发展甚至游戏的成败。此外，游戏的实时性特点也是整个系列的亮点。有时主角的下线还需要你在现实生活中等待一些时间，有时你在现实生活中还能接到主角的弹窗消息，这极大增强了游戏的真实体验感。「生命线」、「生命线：静夜」、「生命线：涅槃」为泰勒小天使系列，不建议跳着玩，容易引起剧情断层。「生命线：冰天穴地」、「生命线：冰天穴地2」（可在「生命线：图书馆」中体验）为亚当斯系列。其余的诸如魔法少女、刑警都为独立的系列，无游戏顺序要求。对了，自称泰勒还会有意外彩蛋。\"]},\"525\":{\"h\":\"20.古树旋律\",\"t\":[\"原来我一直在试图回到那个没有你的世界。\",\"如果你玩过「节奏大师」，那你玩这款游戏就非常容易上手。与「节奏大师」不同的是它那柔和稍带阴郁的画风与让人泪目的剧情。游戏讲述了小黑Deemo用钢琴音符的力量让大树长大，以帮助一个小女孩回到她自己世界的故事。初入游戏，也许你会觉得简单，但很多曲子疯狂数量的音符降落依然能让你双指/四指抽搐，算是一部技术与艺术并重的游戏。\",\"圆益古树旋律deemo周边圆领T恤男女游戏衣服宽松打底衫淘宝¥ 49.00去购买\"]},\"526\":{\"h\":\"21.爷爷的城市\",\"t\":[\"建模技术大背景下的手工艺术品。\",\"在游戏建模广为传播的今天，竟还有人愿意花费3年时间，利用折纸、微型灯等现实元素构建城市纸模，使得这款最真实的解谜游戏成为名副其实的艺术品。因为爷爷被神秘人掳走，孙女开始了寻找爷爷之旅。在旅途中你需要不断解决谜题，有的谜题还需要你打破常规思维定式。可以说场景的手工制作、童话般的谜题以及剧情的首尾呼应都是游戏的亮点。\"]},\"527\":{\"h\":\"22.这是我的战争\",\"t\":[\"我只想活下去。\",\"因为战乱，城市中的人们与外界隔绝了。面对有限的资源，玩家需要控制三个平民合作（后面变成四个），竭尽全力让他们存活下去。在自救的过程中，没有任何规则，你可以对陌生人做任何不人道的事，唯一能阻挡你的只有自己内心的道德准则。游戏以阴暗的画风与阴郁、充满危险感的背景音乐结合，让我们深深体会到战争为人们带来的国破家亡，流离失所的惨状。\",\"单机游戏 这是我的战争淘宝¥ 5.66去购买\"]},\"528\":{\"h\":\"23.勇敢的心：伟大战争\",\"t\":[\"一部可游玩的漫画。\",\"游戏将冒险、动作、解谜的元素融合起来，以4名角色各自的故事为我们展示了战争中友情、爱情和亲情的交互作用。漫画风格的画面，逗比的NPC增强了游戏的趣味性，也消除了玩家对于战争题材游戏的紧张感。结尾处喜剧与悲剧结合的设定也将这场战争上升为人性的伟大，也可成为现实战争中一种人性的缩影。\"]},\"529\":{\"h\":\"24.植物精灵\",\"t\":[\"保护最后一颗“家园”。\",\"一款超级唯美、自然的解谜游戏，丰富的生物造型与自然灵动的音乐增强了游戏本身唯美的意境。游戏讲述了一颗大树上住着5个小精灵，因为它们的家园（大树）被寄生虫侵蚀，所以它们要找到母树上最后一颗还未被吸干的种子，以重建它们的家园。玩家需要不断尝试5个小精灵不同的作用，才能完成某一个谜题，这使得游戏具有足够的可玩性。此外，游戏中的某个画面还会跳出一些小彩蛋以致敬同厂商的其他作品，这倒是个增强趣味性的小惊喜。\"]},\"530\":{\"h\":\"25.去月球\",\"t\":[\"拥有可拍成电影的催泪剧情。\",\"这是一款特殊的像素风RPG游戏，特殊在游戏完全剧情向，没有包含经验、技能、武器等元素在内的打斗系统。整部游戏预计花费3-4小时通关，讲述了两位医生帮助一个濒临死亡的病人通过改变他记忆的方式满足他愿望的故事，而他的愿望竟然是……去月球。建议一个人晚上玩，玩完游戏，然后做个好梦。\",\"PS:我最喜欢的还是游戏那些唯美长情的bgm，可在「网易云音乐」中搜到。\"]},\"531\":{\"h\":\"26.破碎大陆1、2\",\"t\":[\"守住最后一个生命。\",\"「破碎大陆Badland」，更多翻译为「迷失之地」。玩家需要控制一个黑色不知名飞行物，吃掉各种道具，冲过各种陷阱机关，直到终点存活下来。游戏不像想象的这么简单，比如有些变大变小的道具不能乱吃，太大容易卡死自己，太小障碍物又撞不开。此外，你还可以和朋友们较量，还是怀念小时候和同学玩双人的时光。\"]},\"532\":{\"h\":\"27.迷失岛1、2\",\"t\":[\"我是谁？从哪来？到哪去？\",\"「迷失岛」系列为点触式益智解谜游戏，对新手解谜玩家很友好。两作都是通过解开一个个小谜题，带着主人公探索孤岛从而发现秘密。手绘漫画风格的画面、幽静平和的音乐、丰富有趣的谜题让玩家可以身心放松享受解谜乐趣。\",\"迷失岛3:宇宙的尘埃 Isoland3淘宝¥ 3.00去购买\"]},\"533\":{\"h\":\"28.饥荒\",\"t\":[\"异世界的生存法则。\",\"游戏讲述一名科学家被恶魔带到了异世界，而我们需要控制他在资源有限，怪物横生的荒野中尽力生存下去。作为一款沙盒游戏，种类丰富的角色、小怪、boss、日用品及武器装备与高自由度特点给予玩家们更多创造、想象与突破极限的机会。之前就在b站上看到大神玩家竟将「饥荒」玩成了“胀肚”……\",\"饥荒Don'tStarve淘宝¥ 3.00去购买\"]},\"534\":{\"h\":\"29.聚爆\",\"t\":[\"砍！砍！砍！\",\"一款打击感超强的ARPG手游，玩这个游戏时内心不住呐喊“砍！砍！砍！”！游戏大背景设定在22世纪，地球被外星生物侵占，而人类要夺回这片家园。这款大型科幻游戏以超现实的游戏特效与磅礴大气的配乐再加上惊艳的CG动画，迅速俘获了一批玩家。不过这么绚丽的游戏1.5G的大小还是不能少的。\"]},\"535\":{\"h\":\"30.辐射：避难所\",\"t\":[\"情怀与卡机的对立。\",\"一款足够耐玩却很肝的模拟经营类游戏。在核战的大背景下，人们预先建立的避难所派上了用场，而你将作为避难所的管理者让居民们健康安全的存活下去。游戏中你将按照居民不同属性分配适合他们的任务以及工作与休息时间，生产资源并抵御外患。不过随着居民人数上升，挂机被强拆、退游耗资源等设定让这个游戏的玩家有些累，游戏卡机的现象也让游戏掉了分。\",\"辐射4避难所纯棉短袖t恤游戏周边衣服男女哔哔小子情侣淘宝¥ 68.00去购买\"]},\"536\":{\"h\":\"31.神之折纸1、2\",\"t\":[\"时间杀手……\",\"「神之折纸」系列是一部规则简单却容易烧脑的休闲益智类游戏。游戏规定你需要将纸面上杂乱的颜色用最少或预定的步数统一为一种颜色。在「神之折纸1」中，你需要进行尽量少的步骤来完成任务，以获得“Perfect!”、“OK”或“Fail!”等评价。而在「神之折纸2」中，超过步数要求则会直接失败重来。此外，2作相较1作拥有更精致的画面与更丰富的关卡，给予玩家更多沉浸感与解谜乐趣。\"]},\"537\":{\"h\":\"32.战斗之心1、2\",\"t\":[\"简单与复杂交融。\",\"一款混合ARPG与RTS类型元素的游戏。庞大复杂的职业选择与技能搭配，配合丰富的关卡让这款游戏非常耐玩；萌萌的简易Q版画风与横向操作又透露着简单。简单与复杂的交融，促成了这部经典。要能再加强一下剧情的设计，就真的经典神作了。\"]},\"538\":{\"h\":\"33.投影寻真/shadowmatic\",\"t\":[\"在表象中探求真实。\",\"这是一款脑洞大开的休闲神作。玩家需要在一个个毫无规则的悬浮模型中通过投影的方式找到本体。有时你会同时遇到多个悬浮模型，通过单一模型的旋转及多模型的配合才能找到本体，所以这可能也是个很容易摔手机的游戏，不过刻画精细的模型与优美空灵的音乐倒是也能提高玩家们的耐心。\"]},\"539\":{\"h\":\"34.永不言弃1、2、3\",\"t\":[\"对耐性、脑力与熟练度的综合考验。\",\"第一次接触这个游戏，你会感到非常“魔性”；深入了解之后，你会感到不仅“魔性”，还很“虐心”……这部节奏感超强的跑酷作品向我们生动展示了一款手残党噩梦的游戏应该长什么样子。在游戏中，你需要不断躲开红光并跳上突出的木桩，否则宣告游戏结束。\",\"在1作中，会纵向移动的柱子和横向移动的触台增大了游戏难度；2作中，游戏路径逐渐由一维向二维发展，可跌落的空中触台与红光同色路径的干扰使得此作比1作难度更大；3代360°全角度覆盖的游戏路径替换了我们原先熟悉的从左到右的路径，使得游戏更具挑战性。\"]},\"540\":{\"h\":\"35.信任的进化-合作无私的基因\",\"t\":[\"我们该如何看待信任以在社会立足？\",\"这款简洁的小游戏唤起了我们对人际关系中信任与欺骗权衡的思考。游戏分为几个不同的场景，以寓教于乐的图文互动方式让我们接触到经济学博弈论的内容。那么在当今社会，我们究竟该扮演游戏中的哪个人物呢？\"]},\"541\":{\"h\":\"36.劳拉GO/Lara Croft GO\",\"t\":[\"集多种游戏类型于一身。\",\"游戏集成策略、冒险、解谜等多种游戏类型元素，以棋格回合制的玩法和手指滑动的操作方式让我们控制劳拉，展开一段冒险之旅。游戏包含大量关卡与丰富的解谜元素供玩家们欣赏游玩。配合清新的画风，出色的配乐与细腻的生物音效，仿佛我们也踏入了这异域遗迹之中。\"]},\"542\":{\"h\":\"37.晶体管\",\"t\":[\"待完成使命，我将与你同生共死。\",\"因为游戏一开始就在埋伏笔，所以这就不介绍剧情了。这款ARPG游戏最大的特点是将传统实时对战模式与新加入的计划式格斗模式相结合，让我们体会到技能衔接的流畅与酷炫；此外，精致复杂的画面、迷人的配声、复杂感人的剧情都可成为游戏卖点，是一款综合水平很高的游戏。\"]},\"543\":{\"h\":\"38.回声探路\",\"t\":[\"听声辨位。\",\"多年前很有创意的小游戏。游戏全程盲人状态，你需要依靠自己的脚步制造的回声线判断该如何走出密室。其中，白色线代表安全，红色代表陷阱，黄色代表机关，蓝色代表水潭。只要找到并走到加粗的白色线条密集处即可过关。\"]},\"544\":{\"h\":\"39.二重奏\",\"t\":[\"眼花缭乱。\",\"一款节奏很快、玩法简单的虐心小游戏。玩家需用两只手指不断旋转小球以躲避从天而降的障碍物。玩到中后期，旋转、变速、渐变的障碍物使得游戏有一些虐心。不过好在路程简短，强节奏感的鼓点与梦幻柔和的配音女声也让玩家们更耐得住性子。虽然我并听不懂每局开头的话都有什么含义……\"]},\"545\":{\"h\":\"40.蠢蠢的死法1、2、3\",\"t\":[\"原来还能这么死……\",\"一款画风简易的休闲小游戏，游戏氛围血腥又呆萌。三代游戏的目标是一致的，玩家需要通过完成各种有趣的小游戏来阻止豆子们的疯狂作死。前两代游戏中的操作都有时间倒计时，且越到后面时间消耗得越快。而第三代算是无尽模式，越往后游戏越难。不过只有你死了，才算游戏结束。\"]},\"546\":{\"h\":\"41.沉默年代\",\"t\":[\"时空悖论。\",\"一种未来病毒穿越到现代，这个病毒足以摧毁当今所有人类，而男主的任务就是通过不断穿越过去和未来破解谜题，发现病毒穿越的原因，以阻止人类悲剧的发生。当然，不仅剧情，我还喜欢游戏的插画式画风，而且过去未来的切换，造成的场景对比也非常出彩。\"]},\"547\":{\"h\":\"42.超级兄弟：剑与巫术\",\"t\":[\"总有人愿意牺牲自己，以换取一方和平安宁。\",\"这是一款像素风冒险游戏。玩家扮演一名旅行的剑客，解开诅咒以拯救村庄。在游戏过程中，你需要不断点触，利用剑盾击杀敌人，利用巫术破解谜题。游戏丰富的细节刻画增强游戏趣味性。不过最让我欣赏的还是那些bgm，有时欢快灵动，有时又恢宏大气，仿佛在渲染英雄使命的神圣感。\"]},\"548\":{\"h\":\"43.崩溃大陆\",\"t\":[\"剧情向「饥荒」。\",\"玩家的宇宙飞船被怪物击落，逃生到一个陌生的星球上。玩家需要不断收集素材原料制造装备以抵御星球上各种奇特生物的袭击，并找到逃离星球的方法。沙盒游戏自带的高自由度特点与非线性剧情设计，再加上主角与NPC逗比风格的对话，提高了这款游戏的耐玩性与趣味性。如果你想找一款耐玩的游戏，放心，它真的能让你肝很久。\"]},\"549\":{\"h\":\"44.直到晨曦来临\",\"t\":[\"成长只在一夜之间。\",\"因为被两个好友关在一个阴暗的大别墅里，女主不得不在屋内通过各种解谜意图逃出来，这款3D动作解谜游戏就在演绎一个“密屋逃脱”的故事。游戏战斗过程像是在玩简单的音乐游戏，很难死掉。高颜值的画面与只靠手指点触或滑动即可打怪的设定，让这款游戏非常适合女生体验。\"]},\"550\":{\"h\":\"45.元气骑士\",\"t\":[\"玩得我元气不足……\",\"一款像素风闯关冒险游戏，剧情可以忽略，不过玩着真爽呀！流畅的操作，配合欢快动感的音乐，让你玩得根本停不下来。10多种角色与游戏中随机武器和雕像也大大增加游戏耐玩性。而且此游戏还支持云存档与4人联机，可以和小伙伴们放心肝了！\",\"元气骑士动漫游戏周边衣服男女春秋装高领连帽卫衣韩版淘宝¥ 79.00去购买\"]},\"551\":{\"h\":\"46.永不孤单\",\"t\":[\"面对暴雪，我永不孤单。\",\"因为莫名的暴风雪，导致小女孩所在部落的粮食几乎中断供给，所以小女孩要和一只白狐一起寻找暴风雪的源头，以解决这次灾难。这款冒险与益智相结合的游戏从纯洁唯美的画风到暴雪凛冽的音效，无时无刻不散发着真实感。尤其是小女孩面对暴风雪的俯身动作，站不稳的摇晃动作等细节刻画更让玩家沉浸其中。\"]},\"552\":{\"h\":\"47.里奥的财富\",\"t\":[\"为了钱，你丢过几次命？\",\"为了找回丢失的金币，里奥开启了一段充满危险与汗水的旅程。这款冒险类游戏以真实细腻的模型刻画、丰富的机关设计、多样的场景切换与简易流畅的操作体验深受玩家们吹捧。跨越重重虐心机关的里奥，生动地向我们演示了什么叫“为了钱，命都可以不要”……\"]},\"553\":{\"h\":\"48.进化之地1、2\",\"t\":[\"致敬RPG游戏发展史。\",\"此游戏完全以创意制胜。众多经典游戏画风与对战风格混合于一款游戏，让我们一览20多年RPG游戏的发展变革。画风与游戏模式的快速切换，不断勾起我小时候玩游戏的种种回忆，仿佛这款游戏也是我们每个人的成长史，让人泪目。\",\"1作纯靠创意取胜，而2作不仅继承了1作的创意，还特意注重游戏不同类别元素的融入，如格斗、卡牌、射击等。此外，2作对剧情的重视也弥补的1作的缺陷。\"]},\"554\":{\"h\":\"49.阿尔托的冒险\",\"t\":[\"冒险，就应该从哪跌倒从哪爬起来。\",\"第一次玩这个游戏，真以为是在玩「滑雪大冒险」。但这款游戏的重点不在操作技术，而在于对冒险的定义。“禅模式”是这款游戏的特色，在这个模式中没有分数也没有死亡，你可以从哪跌倒就立刻从哪爬起来。结合简约的画风与清新的bgm，你可以舒适地享受这美好旅途。\"]},\"555\":{\"h\":\"50.星噬\",\"t\":[\"终有一日，整个宇宙都将在我面前黯然失色。\",\"看画面就知道这又是一款高颜值唯美游戏。游戏玩法简单，你需要通过不断吞噬其他星系来完成任务目标。在游戏过程中，你只能吞噬比你小的蓝色星系，而要远离那些能将你吞噬的红色星系。总的来说游戏并不难，用于休闲解闷很不错。\"]},\"556\":{\"h\":\"51.月圆之夜\",\"t\":[\"小红帽与……呃……一堆怪物。\",\"这是一款黑暗童话主题风格的独立卡牌游戏。为了找到神秘失踪的外婆，小红帽就此踏上黑森林的冒险之旅。游戏不仅继承一般卡牌游戏多职业与多卡牌种类的设定，和对手的选择性互动、多线性结局也是这款游戏的特色，诱导玩家一步步沉浸其中。\"]},\"557\":{\"h\":\"52.修剪艺术\",\"t\":[\"蜿蜒曲折，只为一刻繁花似锦。\",\"一款佛系男女必备的禅意游戏。你需要在树生长的过程中为它修剪，躲避阻碍，以至于它有足够的动力向光芒处伸展，最后开出美妙绝伦的花朵。观摩游戏中树木的生长经历，让我们不禁思索关于人生的修剪艺术。\"]},\"558\":{\"h\":\"53.我在7年后等着你\",\"t\":[\"我相信，你一定会做出和我一样的选择。\",\"与「去月球」一样，这是一款完全剧情向的RPG游戏，同样拥有可拍成电影的感人剧情。游戏以男主意图找回记忆开始，为我们逐渐揭开背后与女主的7年之约之谜。剧情铺设很长，但多说一句都是剧透，不如去玩玩游戏，与男主一起找回丢失的记忆碎片。\"]},\"559\":{\"h\":\"54.我的世界\",\"t\":[\"让内心的世界得到安置。\",\"这是一款瞬间火爆全球的沙盒游戏，整个世界由像素积木块构成。在这里，只有想不到，没有做不到，你可以创造任何你心中的事物。它释放了我们的创造力与想象力，让我们每个人心中的世界都得到了安置。你还可以在网上浏览大神们那些令人惊叹的作品，并把他们的分享植入自己的软件里以获得更好的观赏体验。此外，你还可以和你的朋友、恋人联机，一起构造属于你们的世界。\",\"我的世界末影龙笔袋 中小学生周边文具盒大容量钢笔铅淘宝¥ 49.00去购买\"]},\"560\":{\"h\":\"55.涂鸦上帝、恶魔、农场\",\"t\":[\"融合成就丰富世界。\",\"一款脑洞大开的休闲益智游戏。游戏玩法简单，一开始给出几种基本元素，然后你需要不断将它们合成以创造新元素，然后有些生成的元素还会在画面中显示。极其丰富的元素与场景切换让这款游戏有点肝，但又因为自由度高也没有剧情要求，所以也不易沉迷。有些另类的合成路径还让人们感叹设计者们的奇葩脑洞……\"]},\"561\":{\"h\":\"56.天鹅绝唱\",\"t\":[\"从此，世界五彩斑斓。\",\"看多了简易画风，可以尝试这款画面丰富鲜艳的游戏。这款油画画风的游戏以自然与城市工业化的矛盾为主题，配合云里雾里的背景与柔和悠长又稍带些许悲凉的音乐，成为了一部感染力极强的艺术作品。游戏采用点触式操作，通过不断转动手机屏幕以改变方向。旅途中你需要不断净化那群白色的“鸟”，当你不断被碰撞直至变白则游戏结束。对了，地图略大，如果迷路，可以暂停看看地图。\"]},\"562\":{\"h\":\"57.漂泊\",\"t\":[\"代表和平的羽毛是否也代表着新生？\",\"一款让手残党窒息的横版跑酷游戏。玩家需要躲避空中的热气球、飞鸟、导弹以及底下的楼房、大树等各种障碍物，带着魔法伞完成一个个任务。游戏简易的画风、贴合完美的音效、呼唤和平的剧情都是游戏的亮点。首尾呼应的羽毛更是发人深省。\"]},\"563\":{\"h\":\"58.模拟山羊\",\"t\":[\"无法用正常眼光来看待这款游戏。\",\"这是一款节奏欢快的沙雕游戏。游戏中你将扮演一只山羊，山羊唯一的任务就是破坏。当然，偶尔你也会被汽车怼飞，还能在地上滚滚，发发羊癫疯什么的……此外，不同类型的羊还有不同的特性，不过依然很沙雕……然而，当新鲜感消退，这款游戏3D但不精致的画面还有各种奇特的bug还是让人有一种想弃游的冲动。\"]},\"564\":{\"h\":\"59.迷失自我\",\"t\":[\"我第一次这么喜欢柜子。\",\"强烈推荐这款恐怖生存解谜游戏。一家庞大而废弃的精神病院即将被拆除。玩家扮演一名副警长，进入里面检查是否还有人在，却不小心跌落在不熟悉的地方，从此他的目标只有活下去并逃出这家医院。在探索过程中，他逐渐发现这家医院背后的秘密。这款游戏亮点在于恐怖氛围渲染非常出色，你会时不时听到尖叫声、脚步声、还有物体发出的声响。相信遇到柜子你也会跟我一样先冲进去躲会儿……\"]},\"565\":{\"h\":\"60.海之号角\",\"t\":[\"平息失控。\",\"这款游戏在ARPG类型的基础上增加了探索解谜的元素。讲述了主角的父亲离开家独自一人与宿敌“海之号角”决斗，而主角沿着父亲的足迹一路冒险，最终控制“海之号角”的故事。游戏系统符合塞达尔风格，配音配乐也很出色。此外，击败最终boss之后可以继续探索未知海域，是一款自由度很高的游戏。\"]},\"566\":{\"h\":\"61.疯狂动物园—极速跑酷\",\"t\":[\"地方大了，什么动物都有。\",\"模拟经营与跑酷的融合让这款游戏为玩家同时带来短期和长期快感，大大提升游戏耐玩性。在游戏中，你不仅可以骑乘动物跑酷，不断突破自己的极限；还可以通过不断搜捕不同的动物以增加动物园门票价格，玩一场模拟经营游戏。画面简易干净，音乐乡村风格，各种各样的动物让你眼花缭乱，在跑酷中，许多动物还有不同的效果等你挖掘。\"]},\"567\":{\"h\":\"62.笨拙的忍者\",\"t\":[\"到哪找脾气这么好的人？\",\"一款很有趣的模拟养成游戏，卡通画风比较讨喜。你将训练一个呆萌的忍者，让他成为一个优秀的忍者，并帮他找到自己失散已久的女友。在游戏中，你可以跟他进行花样百出的互动，其实就是疯狂虐他……当完成某一小任务时，他还会跟你击掌，似乎很开心的样子。像这种生命力顽强、耐心幽默、脾气又好的男生可真不多见了呀~\"]},\"568\":{\"h\":\"63.1010！\",\"t\":[\"计划式「俄罗斯方块」。\",\"一款画风简洁的休闲益智小游戏。你需要用底下不断刷新的方块来填充中间的格子，当横向或纵向格子被填充满后自动消除，同时得分。分数无上限，直到方块没有位置去填充为止。是一款打法时间的利器。\"]},\"569\":{\"h\":\"64.踪迹：谋杀之谜\",\"t\":[\"来当一波名侦探。\",\"这款3D益智游戏以谋杀案为主题设计诸多谜题。玩家将扮演一名侦探，通过凶杀案现场的诸多线索与疑点一步步还原案件真相，将凶手绳之以法。游戏解谜题材生活化，非常适合喜欢侦探推理的玩家。配合现实化场景与轻音乐渲染，很容易让玩家沉浸其中。\"]},\"570\":{\"h\":\"65.勇敢的约翰\",\"t\":[\"胆小鬼的勇敢冒险之旅。\",\"一款卡通画风的RPG休闲游戏。为了阻止大魔王的复活，胆小呆萌的约翰还是“被迫”找回那个复活所需的宝石。游戏丰富的职业与多类型关卡设计出色。战士、杀手、黑暗魔法师……护送战、boss战、防御战，总有你喜欢的场景或玩法。操作简单的游戏也透露着复杂，你需要不断注意敌人的攻击前摇并快速躲开，因为小约翰真的不耐打。\"]},\"571\":{\"h\":\"66.异形工厂\",\"t\":[\"爽就行了！\",\"一款画风精致的动作射击游戏。这款游戏不重视剧情，几乎可以说是个纯打怪游戏。在每局开始时，你需要装备主武器、副武器和盔甲。30多种武器的选择加上种类丰富的怪物，尽情地屠杀吧！\"]},\"572\":{\"h\":\"67.虚拟入侵\",\"t\":[\"玩了一会儿，想滚去学习……\",\"（第一张图打马赛克防止透露答案）这款模拟黑客入侵的益智游戏通过一条剧情线贯穿始终，在剧情发展过程中利用线索与提示来解谜。游戏采用和「脑裂」一样的黑底绿字画面，关卡设计短小精悍。你不仅可以感受游戏独特的解谜乐趣，还能顺便学学英语单词hhhh。\"]},\"573\":{\"h\":\"68.喜欢和你在一起\",\"t\":[\"离开你，我就会死！\",\"这是一款音乐欢快，画风唯美的休闲小游戏，以“和喜欢的人一起环球旅行”为灵感制作。游戏玩法很简单，两只小兔子绕着大球转圈，血量会随着时间缓慢流逝，两只兔子每次相遇可以回血。看看你能坚持几圈吧！此外，游戏还有情侣版哦~\"]},\"574\":{\"h\":\"69.王权\",\"t\":[\"平衡比什么都重要。\",\"一款画风简易的策略类卡牌游戏。玩家需要根据事件影响不断做出选择，以平衡游戏中4种数值（宗教、人们、军队、财富）。任何一项数值消耗殆尽则游戏结束，下一任国王将继承遗志重新开始游戏。有些时候，一个选择能同时增加所有数值，也可能直接将某项数值归0。看看你能在位几年吧！\"]},\"575\":{\"h\":\"70.跳舞的线\",\"t\":[\"总有一个关卡能让你震撼。\",\"一款积木画风的点触式音乐游戏。玩家需要不断依靠音乐节奏与线的指引躲避沿路障碍。每一关，你不仅能听完一首高质量的音乐，还能用余光欣赏两边的唯美风景。丰富的场景与难度变化，提高了游戏耐玩性。虽然广告很多，不过这也是一款看广告什么都能干的游戏，毕竟还是免费的，只期待广告的弹出位置能更亲民些。\"]},\"576\":{\"h\":\"71.双子\",\"t\":[\"母子？兄妹？还是情侣？\",\"平静、依偎、涟漪、甜蜜；黑暗、谜雾、寒风、陨落。两枚小球交相呼应，彼此牵绊，完成一段治愈浪漫却又充满困难险阻的旅程。这款优雅华丽的禅式游戏以高颜值唯美画面和完美贴合不同场景的配乐为我们带来一次舒适的视听盛宴。虽无剧情设计，但又让我们不自觉联想到与自己最亲密的人。\"]},\"577\":{\"h\":\"72.手指画线\",\"t\":[\"![img](data:image/svg+xml;utf8,)\",\"微操实战。\",\"一款画风清新简易的益智游戏。游戏玩法简单，玩家需要用手指在屏幕上画一条线，线会按照路径不断重复以戳破不同颜色的球。线撞上左右界面会反弹，撞上上下界面或黑球则消失，撞上虫洞则传送，戳破除黑球外所有颜色的球即成功。每关游戏的成功路径不止一种，需要我们不断发挥想象力。\"]},\"578\":{\"h\":\"73.魔女之泉1、2、3\",\"t\":[\"一心寻找剧情。\",\"这是一款需要你费尽心力，到处触发剧情的RPG游戏。在这里，你可以做任何事。制作物品、收集宠物、或者直接在家当条咸鱼。游戏大背景为人类与神族的战斗，占上风的人类对魔女们展开了狩猎行动。3作游戏皆采用回合制战斗方式，游戏从1作到3作更加重视了人物立绘，也稍稍提高了画面质量，而且从2作开始去掉100天机制（主角100天内的行为影响最终剧情）。不过，2、3作的剧情还是引发了玩家们的不满……\"]},\"579\":{\"h\":\"74.迷你地铁\",\"t\":[\"铁路规划原来如此困难。\",\"这款休闲益智游戏模拟城市不断发展时地下铁路网的建设。随着站点数量与类型的增多，玩家需要不断重新规划道路以防止各个站点人群堵塞。铁路不断扩张、站点处不断衔接，玩家要不断算好线路长度、站点形状、道具利用情况等因素对站点拥挤程度的影响。可以说是个操作简单但很考验规划能力的游戏。\"]},\"580\":{\"h\":\"75.流言侦探\",\"t\":[\"一部可以玩的侦探小说。\",\"这是一部挺耗时间的文字类侦探游戏。创作者们将小说、聊天、解谜等内容融合起来，打造了这款可以玩的侦探小说。游戏中人物各自性格鲜明，相互影响着演绎了精彩的剧情。聊天中的回复选择和接受语音信息的设计也很有意思。不过游戏依然有一些缺点，作者因为重视剧情而轻视了解谜体验，而且后期剧情的突然紧凑也让许多玩家不知所措。\"]},\"581\":{\"h\":\"76.棱镜\",\"t\":[\"棱镜核心已经点亮。\",\"对应、旋转、变换、拆解，玩家需将棱镜上的小球根据预设轨迹放到指定的位置上，从而不断拆解棱镜，直至得到棱镜“核心”。这款游戏将重点放在光影特效的运用与画面刻画上，我们甚至能看清棱镜的每一面纹理。拆解棱镜的过程不像玩游戏，而更像在把玩一件艺术品。休闲娱乐玩玩这款高颜值游戏，心情也会变愉悦。\"]},\"582\":{\"h\":\"77.家园7：贵族\",\"t\":[\"Lorien是我微信名哈哈哈\",\"世外桃源。\",\"这是一款模拟经营类游戏，分为剧情和沙盒模式。在这里，你可以建造多种建筑或装饰物满足市民要求，还可以调整税金、与商人交易、与强盗战斗、甚至做研究来解锁游戏新元素，以打造属于你自己的世外桃源。此外，游戏细节刻画良好（其实画质还可以，只是用游戏自带的功能截图像素会变低）。你不仅可以看到每个市民的行动，还能听见诸如泼水声、鸟叫声、抗议声等背景音效，而且幸福值还会影响市民们的工作效率。\"]},\"583\":{\"h\":\"78.极速变色龙\",\"t\":[\"跑酷也能跑出打击感。\",\"一款积木块画风的跑酷游戏。玩家需不断切换颜色，保证自身颜色与路面相同。此外也不能撞击黑色方块，不然游戏结束。风速的跑酷、流畅的动作、配合快节奏音乐，再加上每次人物落地或游戏失败迸发的碎方块，让这款跑酷游戏极具节奏感与打击感。\"]},\"584\":{\"h\":\"79.混沌之戒1、2、3\",\"t\":[\"剧情杀。\",\"3款游戏皆为大型回合制RPG游戏，剧情相互独立。1作中，5对人被召唤到方舟竞技场，他们被要求相互搏斗最终只留下1对人，而你就要帮助主角们解开方舟竞技场之谜；2作中，世界即将毁灭，玩家需要取出5名活祭的灵魂以拯救世界，却发现……；3作则讲述玩家受神秘女士指引，前往蓝色星球展开冒险的故事。最有趣的是，对于1作而2作，游戏初始的选择会导致剧情的变化。\"]},\"585\":{\"h\":\"80.回忆之旅\",\"t\":[\"假如能重来……\",\"初进游戏，它细腻的手绘风格画面配合柔和的音乐一下子吸引住了我。游戏从老人接到一封信后收拾行囊离家出走开始，通过触景生情的方式，为我们逐渐揭开老人年轻时的故事。这款益智游戏需要你不断改变游戏地形，帮助老人创造通路，以到达最终目的地。直到最后我们才明白，他不是离家，而是回家。\"]},\"586\":{\"h\":\"81.画中世界\",\"t\":[\"一人一画一世界。\",\"这款穿越时空阻隔的拼图解谜类游戏通过不断嵌套、补充画中的元素，以不同时间线上的线索相互交错推动剧情发展。最有趣的是，这款游戏虽无任何文字描述，却似乎透露着某些人生哲理。我们可以在解谜过程中同时看到不同人生阶段的男生，他们共同组成了在每个玩家心中不尽相同的故事。\"]},\"587\":{\"h\":\"82.花语月\",\"t\":[\"我自奔月去。\",\"非常文艺的休闲益智类游戏。游戏操作和玩法都很简单，大多数场景交互通过一笔画完成，玩家需要按照要求路径或虚线路径画一笔画。游戏随无剧情，但空灵的音乐和文艺的画风还是吸引了一批玩家，他们都沉醉于游戏的唯美意境。\"]},\"588\":{\"h\":\"83.黑暗旅行\",\"t\":[\"一段光影交织的旅程。\",\"这是一款关卡式益智游戏。通过手指滑动改变地形，再配合游戏中的多种道具让小黑球到达发出闪亮蓝光的位置即可过关。在游戏中，你不仅可以和画面背景元素交互，还能看到游戏对细节的刻画。萌萌的小黑球受到撞击会露出眩晕的表情。你停止操作，他还会露出无语的神情。细腻的画风、宁静的音乐、与黑白灰混合的色调为我们带来平静安逸的感受。\"]},\"589\":{\"h\":\"84.飞跃印刷史\",\"t\":[\"将历史存进游戏里。\",\"这款休闲冒险游戏以精心的玩法设计与详细文字资料结合，带我们重温了世界文字样式的发展与造字过程。玩家可以一边玩游戏，一边体会文字与印刷术悠久的发展历史。创意如此，设计者们还很重视对游戏意境的渲染。光看贴图画面，一股历史感扑面而来，是一款难得的寓教于乐佳作。\"]},\"590\":{\"h\":\"85.伯特伦•费德历险记EP1、EP2\",\"t\":[\"一部可以玩的动画片。\",\"这是一款将解谜融入动画片中的章节式游戏，也同样是一款重剧情而轻解谜的游戏。游戏讲述主角与随从一起追踪伦敦疯狂的连环杀人魔的故事，似乎是在影射当时让伦敦陷入社会恐慌的“开膛手杰克”。不过主角尖锐滑稽的配音与幽默，加上剧情中一些搞笑逗趣的元素，让这个悬疑故事不再那么恐怖。\"]},\"591\":{\"h\":\"86.波克艾克大冒险\",\"t\":[\"部落缺乏的不是电子乐，而是燥热的内心。\",\"游戏采用抽象化低模画面，充斥强节奏感电子乐，讲述波克艾克为了寻找部落失去的声音而踏上冒险之旅。虽说是音乐解谜类游戏，不过是在解谜过程中有音乐相伴，而且解谜内容并不难，适合解谜新手体验。\"]},\"592\":{\"h\":\"87.缤纷彩带\",\"t\":[\"得借助纸笔推算。\",\"一款不能太相信自己脑力的休闲益智游戏。玩家用彩带串住每一个格子，一共需要穿两层，而第二层彩带需要和底下格子的颜色一样。所有格子都达成这样的效果则通关。你会发现由于颜色杂乱，走一步看一步的操作方式很容易挡住颜色，影响思考。所以这种游戏可能需要纸笔做标记而后一气呵成的操作。纯净的彩带、柔和的画布背景、加上轻盈的钢琴音，似乎我们都喜欢这种唯美风格的益智游戏。\"]},\"593\":{\"h\":\"88.被错过的天堂\",\"t\":[\"好结局可能也不太好。\",\"一款题材有趣的老解谜游戏。讲述了一对夫妻不知什么原因昏迷后从房间醒来，却发现自己被封印在屋子里，然后接触封印的故事。游戏流程简短，解谜依然由探索以及各种老式小游戏构成。游戏唯一“缺点”就是解谜引导语过多，很多解谜因素很平常但还是进行了很多文字描述。不过这种设定对当时的玩家来说也算正常，毕竟是快20年前的游戏了……\"]},\"594\":{\"h\":\"89.暗影格斗2、3\",\"t\":[\"有剧情的格斗游戏。\",\"2作所有游戏人物都为纯黑色暗影，配合一张简易却具真实感的背景布，让格斗也变得唯美起来。各种各样的武器、盔甲、暗器供你选择，它们也都有自己的特性，技能树中也能解锁新的战斗姿势。足够肝的普通关卡更是提高了游戏耐玩性，装备的获取难度也让很多玩家为这款格斗游戏赋予了休闲的情感。\",\"对于3作而言，人物不再暗影风格，而是更贴近真实打斗。虽然游戏更加精致，也增强了打击感，但总觉得它失去了2作格斗的美感。而且对于某些bug，以及糟糕的ai设计，也遭到了许多玩家吐槽。\"]},\"595\":{\"h\":\"90.ICEY\",\"t\":[\"探索自我。\",\"这款2D横板ARPG游戏以精湛的画风、华丽的特效和自然流畅的操作给予玩家畅爽的游戏体验。你还也可以用金币学技能来解锁更多酷炫连击姿势。此外，游戏旁白NPC还是个逗比的存在，你的每一次动作失败，旁白大哥都会很逗比地吐槽你。正因如此，很多玩家还会故意做错动作来调戏旁白君。在真结局中，你能看到整个游戏的主旨。\",\"ICEY 艾希手游周边二次元动漫衣服连帽卫衣加绒外套上淘宝¥ 88.00去购买\"]},\"596\":{\"h\":\"91.急速冲击\",\"t\":[\"在前进的路上，打碎一切阻碍。\",\"曾经上课经常用来消遣的休闲游戏，考验反应力。你需要抛出铁球打碎阻拦你前进路上的障碍，每次使用铁球或撞上障碍物会掉球数，直到球消耗完则游戏结束，游戏目标就是尽量撑过更远的距离。模型近处可见的精细纹理、场景的无缝变换，超爽的打击快感让很多玩家“中毒”，不过最重要的还是勾起了它们以前和同伴比切磋的回忆。\"]},\"597\":{\"h\":\"92.老爸曾是小偷\",\"t\":[\"这老爸破坏力贼强！\",\"为了妻子和孩子，这个抢银行的老爸要开始他的极限跑酷了。这款萌萌画风的休闲跑酷游戏超有节奏感，一个憨憨的胖子一直在横向奔跑，碰到障碍物则会掉头。期间要找准机会不断撞破楼层，躲避警察和各种陷阱。越到后面的楼层，陷阱越密集，看看你能坚持几层吧。对于上班族或学生党来说，把这游戏当成个解压工具也不错。\"]},\"598\":{\"h\":\"93. 一起玩陶艺\",\"t\":[\"用心创造艺术品。\",\"一款很佛系的休闲游戏。玩法简单，通过制作各种各样的陶艺，最后以拍卖的方式获得收益。游戏设计陶艺的过程宁静自然，我们享受的也是休闲的制作环境和制作完成后满满的成就感。不过有许多商品需要同时花费金币和钻石，这就有点强迫玩家充钱的意思了。而且拍卖判定不太智能，似乎重成本而轻创意。如果能优化这两点，一定能成为5星级休闲游戏。\"]},\"599\":{\"h\":\"94.众生游\",\"t\":[\"我们能否通过后天的选择改变命运？\",\"模拟经营类游戏的卖点，在于它可以让我们体验现实中很难体验的生活。每个人都不能选择自己的出身，但可以在有限的时间、有限的条件下自由选择做其他事。游戏将模拟在不同出身条件下你一生的生活，你的每个选择都会改变你的属性值。你可以通过这款游戏，体会先天出身和后天努力对我们人生的影响有什么不同。\"]},\"600\":{\"h\":\"95.伪装游戏\",\"t\":[\"特工VS特工。\",\"这是一款题材新颖的解谜游戏。玩家被上司指派追踪敌方的一名女特工，而女特工却策划杀死了自己的上司，游戏正式开始……这款游戏画风简易，几何图形般的模型设计让我们把注意力放在追逐剧情和解谜上。游戏解谜比较丰富简单，对新手玩家非常友好。而剧情方面，游戏也是留下了很大的伏笔。\"]},\"601\":{\"h\":\"96.深海水族馆\",\"t\":[\"我从来没有这么喜欢广告过。\",\"一款足够耐玩的休闲游戏，游戏目标就是不断收集各种各样的鱼和珊瑚，让水族馆充满生命力。丰富多样的鱼种、不同类型的主题背景大大提高了游戏耐玩性，对于收集癖来说这里简直是天堂。看着自己的水族馆更加华丽热闹，想想这深海的的石头也能不再孤单了。\"]},\"602\":{\"h\":\"97.旅行青蛙\",\"t\":[\"在手机里养“儿子”。\",\"曾在2018年初爆火的佛系游戏，很多人把这只喜欢旅行的青蛙当自己儿子养。你需要不断收集三叶草，帮蛙子整理各种旅游用品，而后蛙子就会带回旅行照片或特产给你。游戏佛系在于我们不清楚它什么时候回来，一上线发现它不在，总会有一种淡淡的忧伤，这跟父母担心离家的孩子一模一样。不过这款游戏还是很能满足收集欲的，而且很随缘。如果你害怕其它手机游戏耽误你时间，那你可以试试玩这个。\",\"旅行青蛙公仔毛绒玩具周边淘宝¥ 16.80去购买\"]},\"603\":{\"h\":\"98.浅塘\",\"t\":[\"唯美版华容道。\",\"将高颜值标签与华容道自身魅力结合，成就了这款高分休闲益智游戏。游戏的唯美意境甚至盖过了玩法本身，简易清新的画面、宁静的音乐，玩着玩着就发现时间已悄然流逝（其实是因为越到后面越难hhhh）。\"]},\"604\":{\"h\":\"99.漫漫旅途\",\"t\":[\"在祥和中感受恐怖。\",\"这款恐怖解谜游戏的灵感诞生于瑞典民俗，人们为了预知未来而冒风险进入另一个世界。游戏采用剪纸风格的画面。新世界恐怖的生物与黑、白、红构成的色调共同为游戏蒙上了一层诡秘氛围。刚开始玩这个游戏会很一头雾水的，因为这游戏“哲学三问”里一个答案都没给。不过这游戏也是挺关心人的，如果一头雾水，还可以看提示和地图。对了，结尾有彩蛋，带你了解游戏背后的民俗秘密~\"]},\"605\":{\"h\":\"100.拒绝上班\",\"t\":[\"改名叫《好好开车》吧。\",\"这是一款开车游戏。啊不，一款撞车游戏。在每个关卡中，玩家要操纵许多不同类型的车到达指定路口。不过你每开一辆车，路径都会被记录，你操控下一辆车时，会遇上你原来操控的车。然后随着车数增多，随着各种各样开车轨迹的涌现，总有一辆车是你避不开的。玩会儿这游戏，终于会好好开车了。\"]},\"606\":{\"h\":\"101.小3传奇\",\"t\":[\"《小3传奇》→《2048》\",\"一款画风简易的休闲益智游戏。尽量叠加更大的数字，每次操作也都会产生新数字。不过只有“3”以上的数字可以叠加，而“1”只能和“2”，或者说“2”只能和“1”叠加成“3”，其他都不可以。每次挑战成功一个新数字，你都能认识一个萌萌的新朋友。\"]},\"607\":{\"h\":\"102.喵斯快跑\",\"t\":[\"可以改背景音乐的跑酷游戏。\",\"这是一款跑酷与音乐相结合的游戏。玩惯了降落的音符，再玩这种游戏一开始也会有些不适应。充满粉红少女心的卡通画风与欢快的音乐让这款游戏深受女性玩家的喜爱。总的来说这不像标签写的音乐游戏，倒像一款可以改背景音乐的跑酷游戏~~~\"]},\"608\":{\"h\":\"103.无限循环系列\",\"t\":[\"另类拼图游戏。\",\"同样是一款休闲益智游戏，也同样拥有唯美游戏配备的简洁画风和轻音乐。你需要将每个关卡给出的众多杂乱的线条拼成一个或几个图形。线条每点击一次就会旋转一个方向，想想看你的朋友看你一直在点乱七八糟的线条会是什么反应呢？当然，也可以将这款游戏安利给Ta！\",\"preview\",\"来自：https://www.zhihu.com/question/25984324/answer/727952266\"]},\"609\":{\"h\":\"\"},\"610\":{\"h\":\"客户端SDK主要接口\",\"t\":[\"image-20201126164647675\"]},\"611\":{\"h\":\"客户端SDK使用流程\",\"t\":[\"image-20201126164830037\",\"image-20201126165012713\",\"image-20201126165025869\",\"image-20201126165038828\"]},\"612\":{\"h\":\"帧同步\",\"t\":[\"// 初始化SDK const gameInfo: MGOBE.types.GameInfoPara = { // 游戏信息 gameId: \\\"xxx\\\", openId: \\\"xxx\\\", secretKey: \\\"xxx\\\", } const config: MGOBE.types.ConfigPara = { // 游戏配置 url: \\\"xxx.com\\\", isAutoRequestFrame: true, // 是否自动补帧（默认false） } MGOBE.Listener.init(gameInfo, config, event => { if (event.code === MGOBE.ErrCode.EC_OK) { let room = new MGOBE.Room(); MGOBE.Listener.add(room); } }); // 判断SDK是否初始化 function isInited(): boolean { return !!MGOBE.Player && !!MGOBE.Player.id; // 初始化成功后才有玩家ID } // 查询自己是不是房主 function isOwner(): boolean { return roomInfo.owner === MGOBE.Player.id; } // 房间内广播回调 // In MGOBE.d.ts class RoomBroadcastHandler { } class Room extends RoomBroadcastHandler { } // 创建房间 const playerInfo: MGOBE.types.PlayerInfoPara = { name: \\\"测试玩家\\\", customPlayerStatus: 0, // 自定义玩家状态 customProfile: \\\"\\\", // 自定义玩家信息 }; const createRoomPara: MGOBE.types.CreateRoomPara = { roomName: \\\"cocos_demo\\\", roomType: \\\"create\\\", maxPlayers: 5, // 房间最大玩家数量 isPrivate: true, // 是否私有 customProperties: \\\"\\\", // 自定义房间属性 playerInfo, // 玩家信息 }; global.room.initRoom(); global.room.createRoom(createRoomPara, event => { if (event.code === MGOBE.ErrCode.EC_OK) { // ... } else if (event.code === MGOBE.ErrCode.EC_ROOM_PLAYER_ALREADY_IN_ROOM) { // 已经在房间内 // ... } else { // ... } }); // 匹配队友 global.room.initRoom(); global.room.matchPlayers(matchPlayersPara, event => { if (event.code === MGOBE.ErrCode.EC_OK) { // ... } else if (event.code === MGOBE.ErrCode.EC_ROOM_PLAYER_ALREADY_IN_ROOM) { // 已经在房间内 // ... } else { // ... } }); // 离开房间 global.room.leaveRoom({}, event => { if (event.code === MGOBE.ErrCode.EC_OK || event.code === MGOBE.ErrCode.EC_ROOM_PLAYER_NOT_IN_ROOM) { // ... } else { // ... } });\"]},\"613\":{\"h\":\"随机数\",\"t\":[\"const seed = frame.ext.seed + frame.id; MGOBE.RandomUtil.init(seed); MGOBE.RandomUtil.random();\"]},\"614\":{\"h\":\"引用\",\"t\":[\"游戏联机对战引擎 官网\",\"纯前端如何利用帧同步做一款联机游戏？\",\"使用签名初始化 SDK\"]},\"615\":{\"h\":\"\"},\"616\":{\"h\":\"Creator | Android 集成 Bugly，捕获上报脚本及原生代码错误信息\",\"t\":[\"转载\",\"https://mp.weixin.qq.com/s/xTR9iNmxGeOUk0JJ-VYDdw\"]},\"617\":{\"h\":\"\"},\"618\":{\"h\":\"CocosCreator Shader模板\"},\"619\":{\"h\":\"结构\",\"t\":[\"shader描述（pass 描述， 属性列表）\",\"vert shader实现，着色shader实现\"]},\"620\":{\"h\":\"shader顶点数据来源\",\"t\":[\"从渲染管道中获取 【attribute】\",\"从CPU传递 【uniform】\",\"顶点shader传递给着色shader 【】\"]},\"621\":{\"h\":\"GLSL顶点shader\",\"t\":[\"**attribute：**从渲染管道获取的数据给顶点shader\",\"**uniform：**从CPU传递给shader的数据\",\"**varying：**由顶点shader ---> 着色shader （顶点shader定义一次，着色shader也要定义一次）\"]},\"622\":{\"h\":\"GLSL着色Shader\"},\"623\":{\"h\":\"GLSL 数据定义\",\"t\":[\"精度：（高highp，中mediump，低lowp）\",\"参考：https://www.bilibili.com/video/BV1kE41197Zs?p=5\"]},\"624\":{\"h\":\"\"},\"625\":{\"h\":\"\",\"t\":[\"Cocos Creator Shader 入门教程合集https://www.bilibili.com/video/BV1Cq4y1d726\",\"Cocos Creator Shader Effect 系列https://forum.cocos.org/t/topic/87889\",\"creator shader：从零开始，用shader画个彩虹https://forum.cocos.org/t/topic/118989\",\"学习shader的入门笔记https://forum.cocos.org/t/shader/99677\",\"SSRShaderFX && Creatorhttps://forum.cocos.org/t/topic/103617\",\"一文看懂 YAML（Shader 扩展学习）https://forum.cocos.org/t/yaml-shader/93515\",\"Shader编程系列（白玉无冰公众号）https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI1Nzk1MzExNw==&action=getalbum&album_id=1338611201454014464&scene=173&from_msgid=2247485754&from_itemidx=1&count=3&nolastread=1#wechat_redirect\"]},\"626\":{\"h\":\"\",\"t\":[\"腾讯高级工程师宝爷：帧同步游戏在技术层面的实现细节https://mp.weixin.qq.com/s?__biz=MjM5ODAxNTM2NA==&mid=2659671295&idx=1&sn=f888c19ddaa276d7073f923b171d1a72&chksm=bda2c4148ad54d028dde5cc8bf0fdec6576a2be4413fb7e526d842882216b6dfec05ba0880dc&scene=21#wechat_redirect\",\"Cocos技术派 |《野蛮人大作战》H5项目从开发到上线https://mp.weixin.qq.com/s/jid-ZiEmu141hmaPcP351w\"]},\"627\":{\"h\":\"\",\"t\":[\"游戏性能优化https://mp.weixin.qq.com/s/oa0soa28g-6nvaUftCucMg\"]},\"628\":{\"h\":\"\",\"t\":[\"Cocos Creator 的引擎部分包括 JavaScript、Cocos2d-x 和 adapter 三个部分。全部都在 GitHub 上开源。地址在：\",\"JavaScript 引擎：GitHub\",\"Cocos2d-x 引擎：GitHub\",\"Adapter 地址分别在：\",\"jsb-adapter：GitHub\",\"Mini-game-adapters：GitHub\",\"runtime-adapters：GitHub\",\"建议通过 GitHub 的 fork 工作流程来维护自己定制的代码，以便在将来引擎升级时，可以方便地将定制的部分更新上去，具体操作方式请阅读 Fork a repo。如果你愿意帮助 Cocos 越做越好，欢迎在 GitHub 提交你的修改，请参考 如何向 Cocos 提交代码。关于更多 GitHub 相关工作流程请参考 GitHub Help。\",\"另外，根据不同的 Creator 版本，还需要切换不同的引擎分支，例如：\",\"master/develop 分支：当前最新版本所用分支\",\"vX.Y-release 分支：对应 X.Y 版本所用分支\",\"vX.Y 分支：和 vX.Y-release 分支相同，主要用于版本发布之前的研发工作\",\"next 分支：大型重构所用分支\",\"通常建议使用和所用 Creator 相同版本的 vX.Y-release 分支，如果找不到的话，则使用 master 分支。\"]},\"629\":{\"h\":\"定制 JavaScript 引擎\",\"t\":[\"如果您只需要定制 Web 版游戏的引擎功能，或只需要修改纯 JavaScript 层逻辑（如 UI 系统，动画系统），那么您只要按照下面的流程修改 JS 引擎就可以了\"]},\"630\":{\"h\":\"首先您需要从 GitHub 上 fork 或者克隆 JavaScript 引擎的原始版本（地址见上文\",\"t\":[\"JavaScript 引擎在使用前请根据 Creator 版本切换相对应的分支。\"]},\"631\":{\"h\":\"修改 JS 引擎路径\",\"t\":[\"通过 项目 -> 项目设置 面板的 自定义引擎 选项卡，设置需要定制的 JavaScript 引擎路径。\"]},\"632\":{\"h\":\"安装编译依赖\",\"t\":[\"# node使用11.15.0版本 cd E:/engine # 在命令行中进入引擎路径 npm install -g gulp # 安装 gulp 构建工具 npm install # 安装依赖的模块\"]},\"633\":{\"h\":\"进行修改然后编译\",\"t\":[\"接下来您可以定制引擎修改了，修改之后请在命令行中继续执行：\",\"gulp build-dev\",\"该命令会在引擎目录下生成一个 bin 文件夹，并将引擎源码编译到 bin 目录下。\",\"img\",\"注意：如果在编译过程中出现 JavaScript heap out of memory 的报错，可执行以下命令解决：\",\"gulp build-dev --max-old-space-size=8192\"]},\"634\":{\"h\":\"定制 Cocos2d-x 引擎\",\"t\":[\"如果您需要定制和原生平台相关的引擎功能，在修改 JS 引擎的基础上，可能还需要同步修改 Cocos2d-x 引擎。\"]},\"635\":{\"h\":\"获取 Cocos2d-x 引擎\",\"t\":[\"从上文中指定的 GitHub 仓库下载或者克隆。和 JS 引擎类似，Cocos2d-x 引擎在使用前也请确认当前所在分支\"]},\"636\":{\"h\":\"初始化\",\"t\":[\"下载或者克隆好 Cocos2d-x 引擎仓库后，在命令行进入引擎路径然后执行以下命令。\",\"注意：如果是从编辑器拷贝出来的内置 cocos2d-x 目录，可以跳过该步骤。\",\"# node使用11.15.0版本 cd E:/cocos2d-x # 在命令行进入 Cocos2d-x 引擎路径 npm install # 安装编译依赖 npm install -g gulp # 安装 gulp 构建工具 gulp init # 初始化仓库\",\"如果遇到类似下方这样的报错，请手动下载该 zip 文件。出错原因是您的 python 自带的一个库版本太低，但是不太好升级，比较简单一些的方法是下载该 zip 文件，手动放到 Cocos2d-x 引擎仓库下并重命名为 v3-deps-54.zip（不需要解压该 zip 文件），再重新运行 gulp init。\",\"> ==> Ready to download 'v3-deps-54.zip' from > 'https://github.com/cocos/cocos-engine-external/archive/v3-deps-54.zip' > Traceback (most recent call last): > ... > URLError: <urlopen error [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:590)>\",\"若遇到类似下方这样的报错，请手动下载该 zip 文件。手动放到 Cocos2d-x 引擎仓库 tools/cocos2d-console 目录下并重命名为 creator-console-2.zip（不需要解压该 zip 文件），再重新运行 gulp init。\",\"> ==> Ready to download 'creator-console-2.zip' from > 'https://github.com/cocos2d/console-binary/archive/creator-console-2.zip' > Traceback (most recent call last): > ... > URLError: <urlopen error [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:590)>\",\"若遇到类似下方这样的报错，通常是因为该 Cocos2d-x 引擎仓库是直接从 GitHub 下载而不是克隆下来的。可以执行 git init，然后再重新运行 gulp init 即可。\",\"fatal: not a git repository (or any of the parent directories): .git\"]},\"637\":{\"h\":\"修改引擎\",\"t\":[\"接下来可以对 Cocos2d-x 引擎进行定制修改了，由于只有在 构建发布 过程中才会编译代码，所以修改引擎后可以直接打开 构建发布 面板，选择 default 或者 link 模板进行构建和编译。\"]},\"638\":{\"h\":\"编译模拟器\",\"t\":[\"要在模拟器中预览您的引擎修改，需要执行以下命令来重新编译模拟器\",\"bash\",\"# node使用11.15.0版本 # 通过 cocos console 生成模拟器 gulp gen-simulator gulp update-simulator-config\",\"注意：如果需要在 Mac 上通过 Safari 来调试模拟器中的 JavaScript 代码，则需要在生成自定义模拟器之前先在 Xcode 中随便设置一个签名。详见 Build simulator。\",\"img\"]},\"639\":{\"h\":\"定制jsb-adapter\",\"t\":[\"jsb-adapter的代码位于resources/builtin 目录下的 jsb-adapter\",\"在 jsb-adapter 目录下，主要包括以下两个目录结构：\",\"builtin：适配原生平台的 runtime\",\"engine：适配引擎层面的一些 api\",\"builtin 部分除了适配 BOM 和 DOM 运行环境，还包括了一些相关的 jsb 接口，如 openGL、audioEngine 等。\",\"在 v2.0.7 之后，jsb-adapter 废弃了繁琐的手动编译的操作。可以直接修改 builtin 和 engine 目录下的源码。修改完成后打开编辑器，编辑器会在启动时自动编译这部分源码。\"]},\"640\":{\"h\":\"定制Mini-game-adapters\",\"t\":[\"小游戏 的适配层代码位于 resources/builtin 目录下的 adapters。\",\"这部分代码的定制，不需要任何编译操作。\",\"引擎层面的适配工作，请在相应的 engine 目录下完成。\"]},\"641\":{\"h\":\"定制runtime-adapters\",\"t\":[\"runtime-adapters的代码位于resources/builtin 目录下的 runtime-adapters\",\"修改完成后，重新打开creator即可\"]},\"642\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"643\":{\"h\":\"Java Script\"},\"644\":{\"h\":\"Book\"},\"645\":{\"h\":\"Jenkins\"},\"646\":{\"h\":\"Linux\"},\"647\":{\"h\":\"Python\"},\"648\":{\"h\":\"其他\"},\"649\":{\"h\":\"插件\"},\"650\":{\"h\":\"Node版本工具\"},\"651\":{\"h\":\"调试\"},\"652\":{\"h\":\"CEP\"},\"653\":{\"h\":\"PS插件开发\"},\"654\":{\"h\":\"Doc\"},\"655\":{\"h\":\"Tyora\"},\"656\":{\"h\":\"Bug收集\"},\"657\":{\"h\":\"Shader\"},\"658\":{\"h\":\"帧同步\"},\"659\":{\"h\":\"性能优化\"},\"660\":{\"h\":\"2.4.x版本\"},\"661\":{\"h\":\"定制引擎\"}},\"dirtCount\":0,\"index\":[[\"废弃了繁琐的手动编译的操作\",{\"1\":{\"639\":1}}],[\"过程中才会编译代码\",{\"1\":{\"637\":1}}],[\"过长的构建时间也造成了不少困扰\",{\"1\":{\"488\":1}}],[\"出错原因是您的\",{\"1\":{\"636\":1}}],[\"出色的配乐与细腻的生物音效\",{\"1\":{\"541\":1}}],[\"仓库下载或者克隆\",{\"1\":{\"635\":1}}],[\"欢迎在\",{\"1\":{\"628\":1}}],[\"欢迎一键三连\",{\"1\":{\"348\":1}}],[\"野蛮人大作战\",{\"1\":{\"626\":1}}],[\"腾讯高级工程师宝爷\",{\"1\":{\"626\":1}}],[\"学习shader的入门笔记https\",{\"1\":{\"625\":1}}],[\"学习一门技术同时也意味着需要去习惯这个社区的文化\",{\"1\":{\"356\":1}}],[\"入门教程合集https\",{\"1\":{\"625\":1}}],[\"低lowp\",{\"1\":{\"623\":1}}],[\"顶点shader定义一次\",{\"1\":{\"621\":1}}],[\"顶点shader传递给着色shader\",{\"1\":{\"620\":1}}],[\"着色shader也要定义一次\",{\"1\":{\"621\":1}}],[\"着色shader\",{\"1\":{\"621\":1}}],[\"着色shader实现\",{\"1\":{\"619\":1}}],[\"描述\",{\"1\":{\"619\":1}}],[\"捕获上报脚本及原生代码错误信息\",{\"0\":{\"616\":1}}],[\"捕获异常\",{\"1\":{\"343\":1}}],[\"集成\",{\"0\":{\"616\":1}}],[\"集多种游戏类型于一身\",{\"1\":{\"541\":1}}],[\"纯前端如何利用帧同步做一款联机游戏\",{\"1\":{\"614\":1}}],[\"纯净的彩带\",{\"1\":{\"592\":1}}],[\"官网\",{\"1\":{\"614\":1}}],[\"官方尽然没有提供解决方案\",{\"1\":{\"502\":1}}],[\"官方代码碎片等地方进行参考\",{\"1\":{\"411\":1}}],[\"官方代码\",{\"0\":{\"404\":1}}],[\"官方确实没有提供有关action\",{\"1\":{\"389\":1}}],[\"官方替代品为\",{\"1\":{\"368\":1}}],[\"官方推荐的三种配置\",{\"0\":{\"309\":1}}],[\"官方英文文档\",{\"1\":{\"158\":1}}],[\"官方和社区中也提供了查找和安装的渠道\",{\"1\":{\"124\":1}}],[\"房间最大玩家数量\",{\"1\":{\"612\":1}}],[\"房间内广播回调\",{\"1\":{\"612\":1}}],[\"房间楼层间的来回穿梭\",{\"1\":{\"510\":1}}],[\"倒像一款可以改背景音乐的跑酷游戏~~~\",{\"1\":{\"607\":1}}],[\"倒也是一种乐趣\",{\"1\":{\"520\":1}}],[\"喵斯快跑\",{\"0\":{\"607\":1}}],[\"叠加成\",{\"1\":{\"606\":1}}],[\"啊不\",{\"1\":{\"605\":1}}],[\"吧\",{\"1\":{\"605\":1}}],[\"改名叫\",{\"1\":{\"605\":1}}],[\"改为只引入指定的类型声明文件\",{\"1\":{\"137\":1}}],[\"拒绝上班\",{\"0\":{\"605\":1}}],[\"哲学三问\",{\"1\":{\"604\":1}}],[\"刚开始玩这个游戏会很一头雾水的\",{\"1\":{\"604\":1}}],[\"白玉无冰公众号\",{\"1\":{\"625\":1}}],[\"白\",{\"1\":{\"604\":1}}],[\"白色线代表安全\",{\"1\":{\"543\":1}}],[\"漫漫旅途\",{\"0\":{\"604\":1}}],[\"漫画风格的画面\",{\"1\":{\"528\":1}}],[\"唯美版华容道\",{\"1\":{\"603\":1}}],[\"唯一能阻挡你的只有自己内心的道德准则\",{\"1\":{\"527\":1}}],[\"唯一不同的就是\",{\"1\":{\"275\":1}}],[\"唯一的区别是后者无法共享数据\",{\"1\":{\"29\":1}}],[\"浅塘\",{\"0\":{\"603\":1}}],[\"浅绿色方块表示函数\",{\"1\":{\"50\":1}}],[\"帮蛙子整理各种旅游用品\",{\"1\":{\"602\":1}}],[\"帮助老人创造通路\",{\"1\":{\"585\":1}}],[\"帮助命令\",{\"1\":{\"288\":1}}],[\"曾在2018年初爆火的佛系游戏\",{\"1\":{\"602\":1}}],[\"曾经上课经常用来消遣的休闲游戏\",{\"1\":{\"596\":1}}],[\"儿子\",{\"1\":{\"602\":1}}],[\"伪装游戏\",{\"0\":{\"600\":1}}],[\"体会先天出身和后天努力对我们人生的影响有什么不同\",{\"1\":{\"599\":1}}],[\"体系的计算机都采用小端字节序\",{\"1\":{\"11\":1}}],[\"众生游\",{\"0\":{\"599\":1}}],[\"众多经典游戏画风与对战风格混合于一款游戏\",{\"1\":{\"553\":1}}],[\"陷阱越密集\",{\"1\":{\"597\":1}}],[\"越做越好\",{\"1\":{\"628\":1}}],[\"越到后面的楼层\",{\"1\":{\"597\":1}}],[\"越往后游戏越难\",{\"1\":{\"545\":1}}],[\"躲避警察和各种陷阱\",{\"1\":{\"597\":1}}],[\"躲避阻碍\",{\"1\":{\"557\":1}}],[\"期间要找准机会不断撞破楼层\",{\"1\":{\"597\":1}}],[\"碰到障碍物则会掉头\",{\"1\":{\"597\":1}}],[\"老爸曾是小偷\",{\"0\":{\"597\":1}}],[\"场景的无缝变换\",{\"1\":{\"596\":1}}],[\"场景剔除\",{\"0\":{\"479\":1}}],[\"考验反应力\",{\"1\":{\"596\":1}}],[\"考虑另一种情况\",{\"1\":{\"272\":1}}],[\"急速冲击\",{\"0\":{\"596\":1}}],[\"艾希手游周边二次元动漫衣服连帽卫衣加绒外套上淘宝¥\",{\"1\":{\"595\":1}}],[\"艾达的梦\",{\"1\":{\"506\":1}}],[\"艾达公主的救赎之旅\",{\"1\":{\"506\":1}}],[\"旁白大哥都会很逗比地吐槽你\",{\"1\":{\"595\":1}}],[\"华丽的特效和自然流畅的操作给予玩家畅爽的游戏体验\",{\"1\":{\"595\":1}}],[\"华丽的游戏角色\",{\"1\":{\"519\":1}}],[\"装备的获取难度也让很多玩家为这款格斗游戏赋予了休闲的情感\",{\"1\":{\"594\":1}}],[\"足够肝的普通关卡更是提高了游戏耐玩性\",{\"1\":{\"594\":1}}],[\"暗器供你选择\",{\"1\":{\"594\":1}}],[\"暗影格斗2\",{\"0\":{\"594\":1}}],[\"盔甲\",{\"1\":{\"594\":1}}],[\"毕竟是快20年前的游戏了\",{\"1\":{\"593\":1}}],[\"毕竟还是免费的\",{\"1\":{\"575\":1}}],[\"缺点\",{\"1\":{\"593\":1}}],[\"柔和的画布背景\",{\"1\":{\"592\":1}}],[\"影响思考\",{\"1\":{\"592\":1}}],[\"影响route字段的长度\",{\"1\":{\"227\":1}}],[\"走一步看一步的操作方式很容易挡住颜色\",{\"1\":{\"592\":1}}],[\"缤纷彩带\",{\"0\":{\"592\":1}}],[\"适配引擎层面的一些\",{\"1\":{\"639\":1}}],[\"适配原生平台的\",{\"1\":{\"639\":1}}],[\"适合解谜新手体验\",{\"1\":{\"591\":1}}],[\"适用于\",{\"1\":{\"287\":1}}],[\"适用于加密大量数据的场合\",{\"1\":{\"144\":1}}],[\"充斥强节奏感电子乐\",{\"1\":{\"591\":1}}],[\"充满粉红少女心的卡通画风与欢快的音乐让这款游戏深受女性玩家的喜爱\",{\"1\":{\"607\":1}}],[\"充满危险感的背景音乐结合\",{\"1\":{\"527\":1}}],[\"充满魔幻的盒子\",{\"1\":{\"508\":1}}],[\"波克艾克大冒险\",{\"0\":{\"591\":1}}],[\"似乎重成本而轻创意\",{\"1\":{\"598\":1}}],[\"似乎我们都喜欢这种唯美风格的益智游戏\",{\"1\":{\"592\":1}}],[\"似乎是在影射当时让伦敦陷入社会恐慌的\",{\"1\":{\"590\":1}}],[\"似乎很开心的样子\",{\"1\":{\"567\":1}}],[\"费德历险记ep1\",{\"0\":{\"590\":1}}],[\"伯特伦\",{\"0\":{\"590\":1}}],[\"光看贴图画面\",{\"1\":{\"589\":1}}],[\"光靠网上的资料\",{\"1\":{\"411\":1}}],[\"飞跃印刷史\",{\"0\":{\"589\":1}}],[\"飞鸟\",{\"1\":{\"562\":1}}],[\"宁静的音乐\",{\"1\":{\"588\":1,\"603\":1}}],[\"细腻的画风\",{\"1\":{\"588\":1}}],[\"细心的人或许发现\",{\"1\":{\"220\":1}}],[\"萌萌的小黑球受到撞击会露出眩晕的表情\",{\"1\":{\"588\":1}}],[\"萌萌的简易q版画风与横向操作又透露着简单\",{\"1\":{\"537\":1}}],[\"花语月\",{\"0\":{\"587\":1}}],[\"花括号\",{\"1\":{\"206\":1}}],[\"风速的跑酷\",{\"1\":{\"583\":1}}],[\"风险可控\",{\"1\":{\"478\":1}}],[\"跑酷也能跑出打击感\",{\"1\":{\"583\":1}}],[\"抗议声等背景音效\",{\"1\":{\"582\":1}}],[\"甚至做研究来解锁游戏新元素\",{\"1\":{\"582\":1}}],[\"世界即将毁灭\",{\"1\":{\"584\":1}}],[\"世界五彩斑斓\",{\"1\":{\"561\":1}}],[\"世外桃源\",{\"1\":{\"582\":1}}],[\"贵族\",{\"0\":{\"582\":1}}],[\"休闲娱乐玩玩这款高颜值游戏\",{\"1\":{\"581\":1}}],[\"核心\",{\"1\":{\"581\":1}}],[\"核心还是需要自己不断去猜测\",{\"1\":{\"411\":1}}],[\"拆解棱镜的过程不像玩游戏\",{\"1\":{\"581\":1}}],[\"拆解\",{\"1\":{\"581\":1}}],[\"棱镜核心已经点亮\",{\"1\":{\"581\":1}}],[\"棱镜\",{\"0\":{\"581\":1}}],[\"道具利用情况等因素对站点拥挤程度的影响\",{\"1\":{\"579\":1}}],[\"站点形状\",{\"1\":{\"579\":1}}],[\"站点处不断衔接\",{\"1\":{\"579\":1}}],[\"站不稳的摇晃动作等细节刻画更让玩家沉浸其中\",{\"1\":{\"551\":1}}],[\"铁路不断扩张\",{\"1\":{\"579\":1}}],[\"铁路规划原来如此困难\",{\"1\":{\"579\":1}}],[\"收集宠物\",{\"1\":{\"578\":1}}],[\"收到master发出的请求后\",{\"1\":{\"282\":1}}],[\"收到请求后\",{\"1\":{\"282\":1}}],[\"制作物品\",{\"1\":{\"578\":1}}],[\"魔女之泉1\",{\"0\":{\"578\":1}}],[\"魔性\",{\"1\":{\"539\":2}}],[\"戳破除黑球外所有颜色的球即成功\",{\"1\":{\"577\":1}}],[\"撞上虫洞则传送\",{\"1\":{\"577\":1}}],[\"撞上上下界面或黑球则消失\",{\"1\":{\"577\":1}}],[\"线条每点击一次就会旋转一个方向\",{\"1\":{\"608\":1}}],[\"线撞上左右界面会反弹\",{\"1\":{\"577\":1}}],[\"线会按照路径不断重复以戳破不同颜色的球\",{\"1\":{\"577\":1}}],[\"线程加载的\",{\"1\":{\"356\":1,\"357\":1}}],[\"线程使用\",{\"1\":{\"32\":1}}],[\"线程的数量\",{\"1\":{\"32\":1}}],[\"线程的回应后\",{\"1\":{\"29\":1}}],[\"线程的回应\",{\"1\":{\"29\":1}}],[\"线程进入休眠\",{\"1\":{\"32\":1}}],[\"线程如果要写入数据\",{\"1\":{\"31\":1}}],[\"线程用\",{\"1\":{\"30\":1}}],[\"线程用来承担计算任务\",{\"1\":{\"29\":1}}],[\"线程就不会终止循环\",{\"1\":{\"30\":1}}],[\"线程直接改写共享内存\",{\"1\":{\"29\":1}}],[\"线程可能就会来读取数据\",{\"1\":{\"29\":1}}],[\"线程收到数据后的处理如下\",{\"1\":{\"29\":1}}],[\"线程发送这段共享内存\",{\"1\":{\"29\":1}}],[\"线程发消息\",{\"1\":{\"29\":1}}],[\"线程创建\",{\"1\":{\"29\":1}}],[\"线程从事件的\",{\"1\":{\"29\":1}}],[\"线程与主线程共享同一块内存\",{\"1\":{\"29\":1}}],[\"线程共享\",{\"1\":{\"29\":1}}],[\"线程之间的数据交换可以是各种格式\",{\"1\":{\"29\":1}}],[\"线程也是通过监听\",{\"1\":{\"29\":1}}],[\"线程\",{\"1\":{\"29\":6,\"30\":1,\"31\":1,\"32\":6}}],[\"虽说是音乐解谜类游戏\",{\"1\":{\"591\":1}}],[\"虽无剧情设计\",{\"1\":{\"576\":1}}],[\"虽然游戏更加精致\",{\"1\":{\"594\":1}}],[\"虽然广告很多\",{\"1\":{\"575\":1}}],[\"虽然我并听不懂每局开头的话都有什么含义\",{\"1\":{\"544\":1}}],[\"虽然我们还不太理解这段代码的详细意思\",{\"1\":{\"392\":1}}],[\"虽然set有scriptlistener辅助\",{\"1\":{\"397\":1}}],[\"虽然门槛依然很高\",{\"1\":{\"390\":1}}],[\"虽然这种格式目前用的比较少了\",{\"1\":{\"385\":1}}],[\"虽然图层是有层级的\",{\"1\":{\"378\":1}}],[\"虽然在sioconnector中\",{\"1\":{\"221\":1}}],[\"虽然是简简单单的两行代码\",{\"1\":{\"50\":1}}],[\"虽然是一个\",{\"1\":{\"26\":1}}],[\"彼此牵绊\",{\"1\":{\"576\":1}}],[\"陨落\",{\"1\":{\"576\":1}}],[\"寒风\",{\"1\":{\"576\":1}}],[\"谜雾\",{\"1\":{\"576\":1}}],[\"甜蜜\",{\"1\":{\"576\":1}}],[\"涟漪\",{\"1\":{\"576\":1}}],[\"兄妹\",{\"1\":{\"576\":1}}],[\"母子\",{\"1\":{\"576\":1}}],[\"双子\",{\"0\":{\"576\":1}}],[\"双击postman打开应用程序\",{\"1\":{\"159\":1}}],[\"跳舞的线\",{\"0\":{\"575\":1}}],[\"跳过校验直接提交\",{\"1\":{\"74\":1}}],[\"财富\",{\"1\":{\"574\":1}}],[\"军队\",{\"1\":{\"574\":1}}],[\"宗教\",{\"1\":{\"574\":1}}],[\"王权\",{\"0\":{\"574\":1}}],[\"王国保卫战\",{\"0\":{\"513\":1,\"514\":1,\"515\":1,\"516\":1}}],[\"血量会随着时间缓慢流逝\",{\"1\":{\"573\":1}}],[\"离开房间\",{\"1\":{\"612\":1}}],[\"离开你\",{\"1\":{\"573\":1}}],[\"离真正实际应用还差的很多\",{\"1\":{\"397\":1}}],[\"喜欢和你在一起\",{\"0\":{\"573\":1}}],[\"脑裂\",{\"1\":{\"572\":1}}],[\"脑力与熟练度的综合考验\",{\"1\":{\"539\":1}}],[\"虚拟入侵\",{\"0\":{\"572\":1}}],[\"副武器和盔甲\",{\"1\":{\"571\":1}}],[\"几何图形般的模型设计让我们把注意力放在追逐剧情和解谜上\",{\"1\":{\"600\":1}}],[\"几乎可以说是个纯打怪游戏\",{\"1\":{\"571\":1}}],[\"几种常见的加密技术介绍\",{\"0\":{\"142\":1}}],[\"爽就行了\",{\"1\":{\"571\":1}}],[\"防御战\",{\"1\":{\"570\":1}}],[\"防止数据被改写\",{\"1\":{\"33\":1}}],[\"护送战\",{\"1\":{\"570\":1}}],[\"黑暗旅行\",{\"0\":{\"588\":1}}],[\"黑暗\",{\"1\":{\"576\":1}}],[\"黑暗魔法师\",{\"1\":{\"570\":1}}],[\"黑暗森林中的较量\",{\"1\":{\"515\":1}}],[\"杀手\",{\"1\":{\"570\":1}}],[\"杀死某个服务器等等\",{\"1\":{\"272\":1}}],[\"战士\",{\"1\":{\"570\":1}}],[\"战斗之心1\",{\"0\":{\"537\":1}}],[\"胆小呆萌的约翰还是\",{\"1\":{\"570\":1}}],[\"胆小鬼的勇敢冒险之旅\",{\"1\":{\"570\":1}}],[\"勇敢的约翰\",{\"0\":{\"570\":1}}],[\"勇敢的心\",{\"0\":{\"528\":1}}],[\"谋杀之谜\",{\"0\":{\"569\":1}}],[\"踪迹\",{\"0\":{\"569\":1}}],[\"俄罗斯方块\",{\"1\":{\"568\":1}}],[\"计划式\",{\"1\":{\"568\":1}}],[\"计算机是不认识open这个单词的\",{\"1\":{\"393\":1}}],[\"计算机采用小端字节序\",{\"1\":{\"11\":1}}],[\"计算uid字段的crc32校验码\",{\"1\":{\"246\":1}}],[\"计算出要发往的后端服务器id\",{\"1\":{\"192\":1}}],[\"计算就简化许多\",{\"1\":{\"26\":1}}],[\"脾气又好的男生可真不多见了呀~\",{\"1\":{\"567\":1}}],[\"耐心幽默\",{\"1\":{\"567\":1}}],[\"卡通画风比较讨喜\",{\"1\":{\"567\":1}}],[\"卡牌\",{\"1\":{\"553\":1}}],[\"笨拙的忍者\",{\"0\":{\"567\":1}}],[\"许多动物还有不同的效果等你挖掘\",{\"1\":{\"566\":1}}],[\"极速变色龙\",{\"0\":{\"583\":1}}],[\"极速跑酷\",{\"0\":{\"566\":1}}],[\"极其丰富的元素与场景切换让这款游戏有点肝\",{\"1\":{\"560\":1}}],[\"疯狂动物园\",{\"0\":{\"566\":1}}],[\"击败最终boss之后可以继续探索未知海域\",{\"1\":{\"565\":1}}],[\"决斗\",{\"1\":{\"565\":1}}],[\"决定使用\",{\"1\":{\"465\":1}}],[\"决定自己开发一个\",{\"1\":{\"348\":1}}],[\"决定其大小的最重要的字节是\",{\"1\":{\"11\":1}}],[\"平静\",{\"1\":{\"576\":1}}],[\"平衡比什么都重要\",{\"1\":{\"574\":1}}],[\"平息失控\",{\"1\":{\"565\":1}}],[\"平板\",{\"1\":{\"461\":1}}],[\"海之号角\",{\"0\":{\"565\":1},\"1\":{\"565\":2}}],[\"脚步声\",{\"1\":{\"564\":1}}],[\"脚本\",{\"1\":{\"400\":1}}],[\"脚本开发领域必备工具了\",{\"1\":{\"391\":1}}],[\"脚本提供了一个叫unitvalue的对象来包装所有的单位处理\",{\"1\":{\"380\":1}}],[\"脚本dom编程\",{\"0\":{\"377\":1}}],[\"脚本等简单的网页基本信息\",{\"1\":{\"157\":1}}],[\"却似乎透露着某些人生哲理\",{\"1\":{\"586\":1}}],[\"却不小心跌落在不熟悉的地方\",{\"1\":{\"564\":1}}],[\"却发现自己被封印在屋子里\",{\"1\":{\"593\":1}}],[\"却发现\",{\"1\":{\"389\":1,\"584\":1}}],[\"偶尔你也会被汽车怼飞\",{\"1\":{\"563\":1}}],[\"山羊唯一的任务就是破坏\",{\"1\":{\"563\":1}}],[\"呼唤和平的剧情都是游戏的亮点\",{\"1\":{\"562\":1}}],[\"贴合完美的音效\",{\"1\":{\"562\":1}}],[\"贴一个实现此功能最重要的方法\",{\"1\":{\"500\":1}}],[\"漂泊\",{\"0\":{\"562\":1}}],[\"鸟叫声\",{\"1\":{\"582\":1}}],[\"鸟\",{\"1\":{\"561\":1}}],[\"旅行青蛙公仔毛绒玩具周边淘宝¥\",{\"1\":{\"602\":1}}],[\"旅行青蛙\",{\"0\":{\"602\":1}}],[\"旅途中你需要不断净化那群白色的\",{\"1\":{\"561\":1}}],[\"旅馆\",{\"1\":{\"523\":1}}],[\"融合成就丰富世界\",{\"1\":{\"560\":1}}],[\"农场\",{\"0\":{\"560\":1}}],[\"恶魔\",{\"0\":{\"560\":1}}],[\"涂鸦上帝\",{\"0\":{\"560\":1}}],[\"恋人联机\",{\"1\":{\"559\":1}}],[\"观摩游戏中树木的生长经历\",{\"1\":{\"557\":1}}],[\"蜿蜒曲折\",{\"1\":{\"557\":1}}],[\"诱导玩家一步步沉浸其中\",{\"1\":{\"556\":1}}],[\"呃\",{\"1\":{\"556\":1}}],[\"月圆之夜\",{\"0\":{\"556\":1}}],[\"星噬\",{\"0\":{\"555\":1}}],[\"禅模式\",{\"1\":{\"554\":1}}],[\"滑雪大冒险\",{\"1\":{\"554\":1}}],[\"真以为是在玩\",{\"1\":{\"554\":1}}],[\"真的是什么都没有\",{\"1\":{\"389\":1}}],[\"阿尔托的冒险\",{\"0\":{\"554\":1}}],[\"射击等\",{\"1\":{\"553\":1}}],[\"致敬rpg游戏发展史\",{\"1\":{\"553\":1}}],[\"致命框架2\",{\"0\":{\"521\":1}}],[\"致命框架1\",{\"0\":{\"520\":1}}],[\"永不孤单\",{\"0\":{\"551\":1}}],[\"永不言弃1\",{\"0\":{\"539\":1}}],[\"流畅的动作\",{\"1\":{\"583\":1}}],[\"流畅的操作\",{\"1\":{\"550\":1}}],[\"流言侦探\",{\"0\":{\"580\":1}}],[\"流离失所的惨状\",{\"1\":{\"527\":1}}],[\"女主不得不在屋内通过各种解谜意图逃出来\",{\"1\":{\"549\":1}}],[\"沙盒游戏自带的高自由度特点与非线性剧情设计\",{\"1\":{\"548\":1}}],[\"逃生到一个陌生的星球上\",{\"1\":{\"548\":1}}],[\"逃离方块\",{\"0\":{\"523\":1}}],[\"崩溃大陆\",{\"0\":{\"548\":1}}],[\"仿佛这款游戏也是我们每个人的成长史\",{\"1\":{\"553\":1}}],[\"仿佛在渲染英雄使命的神圣感\",{\"1\":{\"547\":1}}],[\"仿佛我们也踏入了这异域遗迹之中\",{\"1\":{\"541\":1}}],[\"剑与巫术\",{\"0\":{\"547\":1}}],[\"造成的场景对比也非常出彩\",{\"1\":{\"546\":1}}],[\"沉默年代\",{\"0\":{\"546\":1}}],[\"沉浸式小说游戏\",{\"1\":{\"524\":1}}],[\"沉浸式爆炸特效\",{\"1\":{\"519\":1}}],[\"蠢蠢的死法1\",{\"0\":{\"545\":1}}],[\"渐变的障碍物使得游戏有一些虐心\",{\"1\":{\"544\":1}}],[\"旋转\",{\"1\":{\"544\":1,\"581\":1}}],[\"眼花缭乱\",{\"1\":{\"544\":1}}],[\"蓝色代表水潭\",{\"1\":{\"543\":1}}],[\"蓝色方块表示对象\",{\"1\":{\"50\":1}}],[\"黄色代表机关\",{\"1\":{\"543\":1}}],[\"听声辨位\",{\"1\":{\"543\":1}}],[\"迷你地铁\",{\"0\":{\"579\":1}}],[\"迷人的配声\",{\"1\":{\"542\":1}}],[\"迷失自我\",{\"0\":{\"564\":1}}],[\"迷失岛3\",{\"1\":{\"532\":1}}],[\"迷失岛\",{\"1\":{\"532\":1}}],[\"迷失岛1\",{\"0\":{\"532\":1}}],[\"迷失之地\",{\"1\":{\"531\":1}}],[\"待完成使命\",{\"1\":{\"542\":1}}],[\"晶体管\",{\"0\":{\"542\":1}}],[\"展开一段冒险之旅\",{\"1\":{\"541\":1}}],[\"冒险\",{\"1\":{\"541\":1,\"554\":1}}],[\"劳拉go\",{\"0\":{\"541\":1}}],[\"信任的进化\",{\"0\":{\"540\":1}}],[\"信息填写\",{\"1\":{\"74\":1}}],[\"信息都是\",{\"1\":{\"74\":2}}],[\"虐心\",{\"1\":{\"539\":1}}],[\"投影寻真\",{\"0\":{\"538\":1}}],[\"促成了这部经典\",{\"1\":{\"537\":1}}],[\"庞大复杂的职业选择与技能搭配\",{\"1\":{\"537\":1}}],[\"神之折纸2\",{\"1\":{\"536\":1}}],[\"神之折纸\",{\"1\":{\"536\":1}}],[\"神之折纸1\",{\"0\":{\"536\":1},\"1\":{\"536\":1}}],[\"退游耗资源等设定让这个游戏的玩家有些累\",{\"1\":{\"535\":1}}],[\"退出\",{\"1\":{\"98\":1}}],[\"退出这次\",{\"1\":{\"83\":1}}],[\"挂机被强拆\",{\"1\":{\"535\":1}}],[\"挂载好了每一个module相应的回调函数\",{\"1\":{\"262\":1}}],[\"情怀与卡机的对立\",{\"1\":{\"535\":1}}],[\"避难所\",{\"0\":{\"535\":1}}],[\"避免浪费空间\",{\"1\":{\"468\":1}}],[\"避免\",{\"1\":{\"45\":1}}],[\"辐射4避难所纯棉短袖t恤游戏周边衣服男女哔哔小子情侣淘宝¥\",{\"1\":{\"535\":1}}],[\"辐射\",{\"0\":{\"535\":1}}],[\"迅速俘获了一批玩家\",{\"1\":{\"534\":1}}],[\"砍\",{\"1\":{\"534\":6}}],[\"聚爆\",{\"0\":{\"534\":1}}],[\"胀肚\",{\"1\":{\"533\":1}}],[\"日用品及武器装备与高自由度特点给予玩家们更多创造\",{\"1\":{\"533\":1}}],[\"日志文件识别为\",{\"1\":{\"365\":1}}],[\"怪物横生的荒野中尽力生存下去\",{\"1\":{\"533\":1}}],[\"饥荒don\",{\"1\":{\"533\":1}}],[\"饥荒\",{\"0\":{\"533\":1},\"1\":{\"533\":1,\"548\":1}}],[\"宇宙的尘埃\",{\"1\":{\"532\":1}}],[\"丰富多样的鱼种\",{\"1\":{\"601\":1}}],[\"丰富的场景与难度变化\",{\"1\":{\"575\":1}}],[\"丰富的机关设计\",{\"1\":{\"552\":1}}],[\"丰富的生物造型与自然灵动的音乐增强了游戏本身唯美的意境\",{\"1\":{\"529\":1}}],[\"丰富有趣的谜题让玩家可以身心放松享受解谜乐趣\",{\"1\":{\"532\":1}}],[\"幽静平和的音乐\",{\"1\":{\"532\":1}}],[\"手指画线\",{\"0\":{\"577\":1}}],[\"手绘漫画风格的画面\",{\"1\":{\"532\":1}}],[\"手动放到\",{\"1\":{\"636\":2}}],[\"手动更改\",{\"1\":{\"461\":1}}],[\"手动改一下图层的名称\",{\"1\":{\"408\":1}}],[\"手动删除\",{\"1\":{\"102\":1}}],[\"太小障碍物又撞不开\",{\"1\":{\"531\":1}}],[\"太大容易卡死自己\",{\"1\":{\"531\":1}}],[\"冲过各种陷阱机关\",{\"1\":{\"531\":1}}],[\"冲突的不要\",{\"1\":{\"83\":1}}],[\"吃掉各种道具\",{\"1\":{\"531\":1}}],[\"守住最后一个生命\",{\"1\":{\"531\":1}}],[\"破碎大陆badland\",{\"1\":{\"531\":1}}],[\"破碎大陆1\",{\"0\":{\"531\":1}}],[\"破译des加密算法实际上就是搜索密钥的编码\",{\"1\":{\"144\":1}}],[\"武器等元素在内的打斗系统\",{\"1\":{\"530\":1}}],[\"武士又坐在了游戏一开始的位置\",{\"1\":{\"517\":1}}],[\"技能树中也能解锁新的战斗姿势\",{\"1\":{\"594\":1}}],[\"技能\",{\"1\":{\"530\":1}}],[\"拥有可拍成电影的催泪剧情\",{\"1\":{\"530\":1}}],[\"家园7\",{\"0\":{\"582\":1}}],[\"家园\",{\"1\":{\"529\":1}}],[\"植物精灵\",{\"0\":{\"529\":1}}],[\"逗比的npc增强了游戏的趣味性\",{\"1\":{\"528\":1}}],[\"伟大战争\",{\"0\":{\"528\":1}}],[\"竭尽全力让他们存活下去\",{\"1\":{\"527\":1}}],[\"城市中的人们与外界隔绝了\",{\"1\":{\"527\":1}}],[\"童话般的谜题以及剧情的首尾呼应都是游戏的亮点\",{\"1\":{\"526\":1}}],[\"孙女开始了寻找爷爷之旅\",{\"1\":{\"526\":1}}],[\"微操实战\",{\"1\":{\"577\":1}}],[\"微型灯等现实元素构建城市纸模\",{\"1\":{\"526\":1}}],[\"微信zhijunxh\",{\"1\":{\"504\":1}}],[\"微信小程序自定义导航栏组件\",{\"0\":{\"494\":1}}],[\"竟还有人愿意花费3年时间\",{\"1\":{\"526\":1}}],[\"竟然提供了一张看不清的图片\",{\"1\":{\"502\":1}}],[\"爷爷的城市\",{\"0\":{\"526\":1}}],[\"圆益古树旋律deemo周边圆领t恤男女游戏衣服宽松打底衫淘宝¥\",{\"1\":{\"525\":1}}],[\"算是一部技术与艺术并重的游戏\",{\"1\":{\"525\":1}}],[\"算法\",{\"1\":{\"485\":2}}],[\"算法应易于各种硬件和软件实现\",{\"1\":{\"146\":1}}],[\"节奏大师\",{\"1\":{\"525\":2}}],[\"节点一个一个地进行材质的切换\",{\"1\":{\"469\":1}}],[\"古树旋律\",{\"0\":{\"525\":1}}],[\"古风模拟经营类手游\",{\"1\":{\"464\":1}}],[\"刑警都为独立的系列\",{\"1\":{\"524\":1}}],[\"冰天穴地2\",{\"1\":{\"524\":1}}],[\"冰天穴地\",{\"1\":{\"524\":1}}],[\"涅槃\",{\"1\":{\"524\":1}}],[\"静夜\",{\"1\":{\"524\":1}}],[\"静态属性继承\",{\"1\":{\"54\":1}}],[\"静态方法\",{\"0\":{\"38\":1},\"1\":{\"22\":1}}],[\"生动地向我们演示了什么叫\",{\"1\":{\"552\":1}}],[\"生产资源并抵御外患\",{\"1\":{\"535\":1}}],[\"生命线\",{\"1\":{\"524\":6}}],[\"生命线系列\",{\"0\":{\"524\":1}}],[\"生成模拟器\",{\"1\":{\"638\":1}}],[\"生成\",{\"1\":{\"439\":3}}],[\"生成以moduleid为主键的module的map\",{\"1\":{\"273\":1}}],[\"生成tsconfig\",{\"0\":{\"136\":1}}],[\"生成符号链接\",{\"1\":{\"102\":1}}],[\"生成公钥\",{\"1\":{\"94\":1}}],[\"生成本地\",{\"1\":{\"69\":1}}],[\"生成视图\",{\"1\":{\"22\":1}}],[\"生成一个\",{\"1\":{\"9\":1}}],[\"生成一个新的\",{\"1\":{\"6\":1}}],[\"生成了三个视图\",{\"1\":{\"9\":1}}],[\"天鹅绝唱\",{\"0\":{\"561\":1}}],[\"天堂岛\",{\"1\":{\"523\":1}}],[\"天就做出了\",{\"1\":{\"465\":1}}],[\"追溯\",{\"1\":{\"523\":1}}],[\"锈湖\",{\"1\":{\"523\":3}}],[\"锈湖系列\",{\"0\":{\"523\":1}}],[\"推荐游玩顺序\",{\"1\":{\"523\":1}}],[\"推荐使用pinus\",{\"1\":{\"282\":1}}],[\"推荐使用chrome\",{\"1\":{\"190\":1}}],[\"推荐使用\",{\"1\":{\"40\":1}}],[\"扮演不同的人物\",{\"1\":{\"523\":1}}],[\"略带惊悚的标签问世\",{\"1\":{\"523\":1}}],[\"剧情相互独立\",{\"1\":{\"584\":1}}],[\"剧情杀\",{\"1\":{\"584\":1}}],[\"剧情铺设很长\",{\"1\":{\"558\":1}}],[\"剧情可以忽略\",{\"1\":{\"550\":1}}],[\"剧情向\",{\"1\":{\"548\":1}}],[\"剧情\",{\"1\":{\"523\":1}}],[\"剧情更让人健忘2333\",{\"1\":{\"509\":1}}],[\"兼顾数量与质量的优秀解谜作品\",{\"1\":{\"523\":1}}],[\"兼容性\",{\"1\":{\"350\":1}}],[\"兼容\",{\"1\":{\"54\":1}}],[\"瘟疫公司物竞天择进化纯棉假两件卫衣游戏周边男女宽松淘宝¥\",{\"1\":{\"522\":1}}],[\"瘟疫公司\",{\"0\":{\"522\":1}}],[\"框架的循环使用稍稍增大了游戏难度\",{\"1\":{\"520\":1}}],[\"框架是由一些松散耦合的component组成的\",{\"1\":{\"253\":1}}],[\"妈妈问我为什么跪着看视频\",{\"1\":{\"519\":1}}],[\"短袖t恤男京东¥\",{\"1\":{\"518\":1}}],[\"赛特斯2\",{\"1\":{\"518\":1}}],[\"音乐乡村风格\",{\"1\":{\"566\":1}}],[\"音乐游戏\",{\"1\":{\"518\":1}}],[\"音乐\",{\"1\":{\"518\":1}}],[\"音效也比1作更诡异\",{\"1\":{\"509\":1}}],[\"覆盖全屏幕的手指操作也提高了游戏本身难度的底线\",{\"1\":{\"518\":1}}],[\"长按\",{\"1\":{\"518\":1}}],[\"长度在0～255byte之间\",{\"1\":{\"226\":1}}],[\"长度在0～5byte之间\",{\"1\":{\"226\":1}}],[\"长度为2\",{\"1\":{\"9\":1}}],[\"长度\",{\"1\":{\"8\":9,\"22\":1}}],[\"锁链\",{\"1\":{\"518\":1}}],[\"隐隐作痛的伤感往事\",{\"1\":{\"517\":1}}],[\"隐藏\",{\"1\":{\"405\":1}}],[\"怀拥自身之丧逝\",{\"1\":{\"517\":1}}],[\"樱花还能再次盛开吗\",{\"1\":{\"517\":1}}],[\"纸境\",{\"0\":{\"517\":1}}],[\"塔收费的设定也让一些玩家不爽\",{\"1\":{\"516\":1}}],[\"维兹南再临\",{\"1\":{\"516\":1}}],[\"维护module的map\",{\"1\":{\"273\":1}}],[\"维护客户端的session信息\",{\"1\":{\"242\":1}}],[\"维护统计信息\",{\"1\":{\"196\":2,\"197\":1}}],[\"起源\",{\"0\":{\"515\":1}}],[\"科技树等元素\",{\"1\":{\"513\":1}}],[\"援军\",{\"1\":{\"513\":1}}],[\"英雄\",{\"1\":{\"513\":1}}],[\"英寸等\",{\"1\":{\"380\":1}}],[\"玩惯了降落的音符\",{\"1\":{\"607\":1}}],[\"玩会儿这游戏\",{\"1\":{\"605\":1}}],[\"玩着玩着就发现时间已悄然流逝\",{\"1\":{\"603\":1}}],[\"玩了一会儿\",{\"1\":{\"572\":1}}],[\"玩一场模拟经营游戏\",{\"1\":{\"566\":1}}],[\"玩得我元气不足\",{\"1\":{\"550\":1}}],[\"玩得停不下来的经典塔防\",{\"1\":{\"513\":1}}],[\"玩到中后期\",{\"1\":{\"544\":1}}],[\"玩法简单\",{\"1\":{\"598\":1}}],[\"玩法简单的虐心小游戏\",{\"1\":{\"544\":1}}],[\"玩法变得更加丰富多样\",{\"1\":{\"514\":1}}],[\"玩这个游戏时内心不住呐喊\",{\"1\":{\"534\":1}}],[\"玩成了\",{\"1\":{\"533\":1}}],[\"玩完游戏\",{\"1\":{\"530\":1}}],[\"玩家信息\",{\"1\":{\"612\":1}}],[\"玩家要操纵许多不同类型的车到达指定路口\",{\"1\":{\"605\":1}}],[\"玩家要不断算好线路长度\",{\"1\":{\"579\":1}}],[\"玩家被上司指派追踪敌方的一名女特工\",{\"1\":{\"600\":1}}],[\"玩家用彩带串住每一个格子\",{\"1\":{\"592\":1}}],[\"玩家可以一边玩游戏\",{\"1\":{\"589\":1}}],[\"玩家将扮演一名侦探\",{\"1\":{\"569\":1}}],[\"玩家扮演一名副警长\",{\"1\":{\"564\":1}}],[\"玩家扮演一名旅行的剑客\",{\"1\":{\"547\":1}}],[\"玩家的宇宙飞船被怪物击落\",{\"1\":{\"548\":1}}],[\"玩家需不断切换颜色\",{\"1\":{\"583\":1}}],[\"玩家需将棱镜上的小球根据预设轨迹放到指定的位置上\",{\"1\":{\"581\":1}}],[\"玩家需用两只手指不断旋转小球以躲避从天而降的障碍物\",{\"1\":{\"544\":1}}],[\"玩家需要按照要求路径或虚线路径画一笔画\",{\"1\":{\"587\":1}}],[\"玩家需要取出5名活祭的灵魂以拯救世界\",{\"1\":{\"584\":1}}],[\"玩家需要用手指在屏幕上画一条线\",{\"1\":{\"577\":1}}],[\"玩家需要根据事件影响不断做出选择\",{\"1\":{\"574\":1}}],[\"玩家需要躲避空中的热气球\",{\"1\":{\"562\":1}}],[\"玩家需要不断重新规划道路以防止各个站点人群堵塞\",{\"1\":{\"579\":1}}],[\"玩家需要不断依靠音乐节奏与线的指引躲避沿路障碍\",{\"1\":{\"575\":1}}],[\"玩家需要不断收集素材原料制造装备以抵御星球上各种奇特生物的袭击\",{\"1\":{\"548\":1}}],[\"玩家需要不断尝试5个小精灵不同的作用\",{\"1\":{\"529\":1}}],[\"玩家需要通过完成各种有趣的小游戏来阻止豆子们的疯狂作死\",{\"1\":{\"545\":1}}],[\"玩家需要通过屏幕中移动黑色线的指引\",{\"1\":{\"518\":1}}],[\"玩家需要在一个个毫无规则的悬浮模型中通过投影的方式找到本体\",{\"1\":{\"538\":1}}],[\"玩家需要在不同的时间线\",{\"1\":{\"523\":1}}],[\"玩家需要控制一个黑色不知名飞行物\",{\"1\":{\"531\":1}}],[\"玩家需要控制三个平民合作\",{\"1\":{\"527\":1}}],[\"玩家需要自己创造出一种瘟疫类型\",{\"1\":{\"522\":1}}],[\"玩家在游戏中看一遍就不会再出现了\",{\"1\":{\"487\":1}}],[\"玩家在打开\",{\"1\":{\"482\":1}}],[\"玩家移动地图时\",{\"1\":{\"469\":1}}],[\"玩家状态等信息及时写入数据库\",{\"1\":{\"188\":1}}],[\"克服路上的种种陷阱和阻碍\",{\"1\":{\"512\":1}}],[\"克隆远端仓库到本地并指定本地仓库的文件夹名称为\",{\"1\":{\"71\":1}}],[\"克隆远端仓库到本地\",{\"1\":{\"71\":2}}],[\"克隆的速度\",{\"0\":{\"60\":1}}],[\"地址见上文\",{\"0\":{\"630\":1}}],[\"地址分别在\",{\"1\":{\"628\":1}}],[\"地址在\",{\"1\":{\"628\":1}}],[\"地方大了\",{\"1\":{\"566\":1}}],[\"地球被外星生物侵占\",{\"1\":{\"534\":1}}],[\"地狱边境\",{\"0\":{\"512\":1},\"1\":{\"512\":1}}],[\"地图略大\",{\"1\":{\"561\":1}}],[\"地图的一部分\",{\"1\":{\"475\":1}}],[\"地图层\",{\"1\":{\"474\":1}}],[\"苹果电脑原生游戏淘宝¥\",{\"1\":{\"511\":1}}],[\"苹果手机确实都是4px\",{\"1\":{\"498\":1}}],[\"终于会好好开车了\",{\"1\":{\"605\":1}}],[\"终于不觉得闷得慌了\",{\"1\":{\"510\":1}}],[\"终有一日\",{\"1\":{\"555\":1}}],[\"终章的多线索解谜更是增大了游戏难度\",{\"1\":{\"510\":1}}],[\"画中世界\",{\"0\":{\"586\":1}}],[\"画风唯美的休闲小游戏\",{\"1\":{\"573\":1}}],[\"画风与游戏模式的快速切换\",{\"1\":{\"553\":1}}],[\"画面简易干净\",{\"1\":{\"566\":1}}],[\"画面更加精细\",{\"1\":{\"510\":1}}],[\"画笔\",{\"1\":{\"400\":1}}],[\"赶紧让主人公找点吃的吧\",{\"1\":{\"509\":1}}],[\"诡秘奇怪的房间\",{\"1\":{\"509\":1}}],[\"尤其是小女孩面对暴风雪的俯身动作\",{\"1\":{\"551\":1}}],[\"尤其是一环扣一环的道具和线索没有提供任何多余无用的元素\",{\"1\":{\"508\":1}}],[\"尤其需要注意这个\",{\"1\":{\"380\":1}}],[\"稍具年代感的画风让人顿时身临其境\",{\"1\":{\"508\":1}}],[\"孤静诡异的音乐\",{\"1\":{\"508\":1}}],[\"创意如此\",{\"1\":{\"589\":1}}],[\"创意个性笔筒多功能水泥收纳盒办公淘宝¥\",{\"1\":{\"507\":1}}],[\"创作者们将小说\",{\"1\":{\"580\":1}}],[\"创建房间\",{\"1\":{\"612\":1}}],[\"创建\",{\"1\":{\"436\":1,\"483\":1}}],[\"创建了一个actiondescriptor对象\",{\"1\":{\"392\":1}}],[\"创建项目\",{\"0\":{\"351\":1}}],[\"创建app\",{\"0\":{\"265\":1}}],[\"创建与客户端的连接\",{\"1\":{\"242\":1}}],[\"创建任务\",{\"1\":{\"169\":1}}],[\"创建gulpfile\",{\"0\":{\"169\":1}}],[\"创建collections\",{\"1\":{\"162\":1}}],[\"创建虚拟环境\",{\"1\":{\"103\":1}}],[\"创建一个currenttooloptions的ad\",{\"1\":{\"409\":1}}],[\"创建一个texttoolcharacteroptions的ad\",{\"1\":{\"409\":1}}],[\"创建一个textstyle的ad\",{\"1\":{\"409\":1}}],[\"创建一个xml对象\",{\"1\":{\"385\":1}}],[\"创建一个启动配置\",{\"1\":{\"346\":1}}],[\"创建一个新项目\",{\"1\":{\"232\":1}}],[\"创建一个新分支\",{\"1\":{\"77\":1}}],[\"创建一个指向b的int16视图\",{\"1\":{\"9\":1}}],[\"创建一个指向b的int32视图\",{\"1\":{\"9\":1}}],[\"创建一个指向b的uint8视图\",{\"1\":{\"9\":1}}],[\"创建一个8字节的arraybuffer\",{\"1\":{\"9\":1}}],[\"無非\",{\"1\":{\"507\":1}}],[\"探究神圣几何之谜的旅途促进了小女孩的成长\",{\"1\":{\"507\":1}}],[\"探索自我\",{\"1\":{\"595\":1}}],[\"探索\",{\"0\":{\"496\":1}}],[\"爱情和亲情的交互作用\",{\"1\":{\"528\":1}}],[\"爱\",{\"1\":{\"507\":1}}],[\"初进游戏\",{\"1\":{\"585\":1}}],[\"初入游戏\",{\"1\":{\"525\":1}}],[\"初玩游戏\",{\"1\":{\"506\":1}}],[\"初始内容实例\",{\"0\":{\"271\":1}}],[\"初始化仓库\",{\"1\":{\"636\":1}}],[\"初始化成功后才有玩家id\",{\"1\":{\"612\":1}}],[\"初始化sdk\",{\"1\":{\"612\":1}}],[\"初始化\",{\"0\":{\"126\":1,\"193\":1,\"436\":1,\"636\":1},\"1\":{\"70\":1,\"185\":1}}],[\"被错过的天堂\",{\"0\":{\"593\":1}}],[\"被迫\",{\"1\":{\"570\":1}}],[\"被寄生虫侵蚀\",{\"1\":{\"529\":1}}],[\"被遗忘的海岸\",{\"1\":{\"506\":1}}],[\"被翻译成中文大体是动作管理器\",{\"1\":{\"389\":1}}],[\"利用巫术破解谜题\",{\"1\":{\"547\":1}}],[\"利用剑盾击杀敌人\",{\"1\":{\"547\":1}}],[\"利用折纸\",{\"1\":{\"526\":1}}],[\"利用视觉错位为我们编织了一个个唯美关卡\",{\"1\":{\"506\":1}}],[\"利用我们上一篇学习的知识\",{\"1\":{\"409\":1}}],[\"纪念碑谷周边\",{\"1\":{\"507\":1}}],[\"纪念碑谷2\",{\"0\":{\"507\":1}}],[\"纪念碑谷1\",{\"1\":{\"506\":1,\"507\":1}}],[\"纪念碑谷\",{\"0\":{\"506\":1}}],[\"商业转载请联系作者获得授权\",{\"1\":{\"505\":1}}],[\"著作权归作者所有\",{\"1\":{\"505\":1}}],[\"知乎\",{\"1\":{\"505\":1}}],[\"洛小易\",{\"1\":{\"505\":1}}],[\"作者因为重视剧情而轻视了解谜体验\",{\"1\":{\"580\":1}}],[\"作者\",{\"1\":{\"505\":1}}],[\"作为一款沙盒游戏\",{\"1\":{\"533\":1}}],[\"作为一名前端工程师\",{\"1\":{\"50\":1}}],[\"作为网址变量\",{\"1\":{\"418\":2}}],[\"作为app的一个属性\",{\"1\":{\"261\":1}}],[\"作为对客户端错误的响应\",{\"1\":{\"197\":1}}],[\"作为第二个参数\",{\"1\":{\"22\":1}}],[\"作为参数\",{\"1\":{\"22\":1}}],[\"问题已经解决啦\",{\"1\":{\"504\":1}}],[\"问题就在于\",{\"1\":{\"501\":1}}],[\"问题就出在这里\",{\"1\":{\"218\":1}}],[\"备注\",{\"0\":{\"504\":1}}],[\"吐槽\",{\"0\":{\"502\":1}}],[\"机械迷城\",{\"0\":{\"511\":1},\"1\":{\"511\":1}}],[\"机子中\",{\"1\":{\"501\":1}}],[\"机型多如牛毛\",{\"1\":{\"496\":1}}],[\"胶囊的宽度\",{\"1\":{\"501\":1}}],[\"胶囊信息报错和获取不到\",{\"0\":{\"501\":1}}],[\"胶囊按钮上下间距\",{\"1\":{\"501\":1}}],[\"胶囊按钮位置信息\",{\"1\":{\"500\":1}}],[\"胶囊按钮高度\",{\"1\":{\"499\":1}}],[\"胶囊按钮高度为32pt\",{\"1\":{\"497\":1}}],[\"切记不能用rpx\",{\"1\":{\"499\":1}}],[\"切换\",{\"0\":{\"332\":1}}],[\"切换版本\",{\"1\":{\"288\":1}}],[\"切换异常发生时自动中断\",{\"1\":{\"215\":1}}],[\"切换到\",{\"1\":{\"343\":1}}],[\"切换到对应分支\",{\"1\":{\"87\":1}}],[\"切换到远程分支\",{\"1\":{\"77\":1}}],[\"切换到已有的本地分支\",{\"1\":{\"77\":1}}],[\"切换分支\",{\"0\":{\"77\":1}}],[\"答案是\",{\"1\":{\"498\":1}}],[\"汗汗汗\",{\"1\":{\"497\":1}}],[\"点过去是不是很惊喜\",{\"1\":{\"497\":1}}],[\"点击检测\",{\"0\":{\"484\":1}}],[\"点击下载后解压\",{\"1\":{\"391\":1}}],[\"点击上图中的\",{\"1\":{\"366\":1}}],[\"点击上图中的带+号的图标\",{\"1\":{\"162\":1}}],[\"点击刷新按钮时更新当前图层名称\",{\"1\":{\"357\":1}}],[\"点击这个按钮在插件界面上显示出当前选中图层的名称\",{\"1\":{\"349\":1}}],[\"点击运行\",{\"1\":{\"346\":1}}],[\"点击行号设置断点\",{\"1\":{\"343\":1}}],[\"点击属性\",{\"1\":{\"292\":1}}],[\"点击\",{\"1\":{\"212\":1,\"215\":1,\"343\":1,\"366\":1,\"518\":1}}],[\"点击save按钮\",{\"1\":{\"162\":1}}],[\"点击create按钮即创建成功一个collections\",{\"1\":{\"162\":1}}],[\"点击params\",{\"1\":{\"161\":1}}],[\"点击监视\",{\"1\":{\"139\":1}}],[\"点击typescript\",{\"1\":{\"139\":1}}],[\"点击终端\",{\"1\":{\"139\":1}}],[\"奇怪的刘海屏\",{\"1\":{\"496\":1}}],[\"奇数位置的值改成\",{\"1\":{\"31\":1}}],[\"深海水族馆\",{\"0\":{\"601\":1}}],[\"深入了解之后\",{\"1\":{\"539\":1}}],[\"深入了解am的运作机制\",{\"1\":{\"397\":1}}],[\"深层级页面的返回不够友好\",{\"1\":{\"495\":1}}],[\"左侧按钮边框太粗解决办法等等\",{\"1\":{\"500\":1}}],[\"左上角的事件无法监听\",{\"1\":{\"495\":1}}],[\"左右\",{\"1\":{\"465\":1,\"476\":1}}],[\"志军2019\",{\"1\":{\"494\":1}}],[\"仍然只有\",{\"1\":{\"489\":1}}],[\"仍然可以不做调整\",{\"1\":{\"484\":1}}],[\"像这种生命力顽强\",{\"1\":{\"567\":1}}],[\"像这些大图\",{\"1\":{\"487\":1}}],[\"像生命线系列这种纯文字通讯类游戏还能让玩家们青睐\",{\"1\":{\"524\":1}}],[\"像素\",{\"1\":{\"380\":1}}],[\"抽到的卡片等\",{\"1\":{\"487\":1}}],[\"阅后即焚\",{\"0\":{\"487\":1},\"1\":{\"487\":1}}],[\"排序更适用于混乱无章的数据\",{\"1\":{\"485\":1}}],[\"快速排序\",{\"1\":{\"485\":1}}],[\"快捷键\",{\"0\":{\"429\":1}}],[\"端\",{\"1\":{\"483\":1}}],[\"端口\",{\"1\":{\"365\":1}}],[\"端口占用情况\",{\"1\":{\"365\":1}}],[\"端口占用\",{\"1\":{\"365\":1}}],[\"端口冲突\",{\"1\":{\"345\":1}}],[\"端口号以及向master注册所使用的用户名和口令\",{\"1\":{\"282\":1}}],[\"端口已被占用\",{\"1\":{\"206\":1}}],[\"端口使用服务器配置中的clientport\",{\"1\":{\"193\":1}}],[\"池\",{\"0\":{\"483\":1}}],[\"帧同步游戏在技术层面的实现细节https\",{\"1\":{\"626\":1}}],[\"帧同步\",{\"0\":{\"612\":1,\"658\":1}}],[\"帧\",{\"1\":{\"482\":1}}],[\"十几帧\",{\"1\":{\"482\":1}}],[\"十种图像模糊算法的总结\",{\"1\":{\"482\":1}}],[\"建议通过\",{\"1\":{\"628\":1}}],[\"建议一个人晚上玩\",{\"1\":{\"530\":1}}],[\"建模技术大背景下的手工艺术品\",{\"1\":{\"526\":1}}],[\"建筑物和人物都很多的情况下\",{\"1\":{\"480\":1}}],[\"建立一次连接\",{\"1\":{\"370\":1}}],[\"建立锁\",{\"1\":{\"32\":1}}],[\"建立了一个\",{\"1\":{\"11\":1}}],[\"建立带符号的\",{\"1\":{\"9\":1}}],[\"建立多个视图\",{\"1\":{\"9\":1}}],[\"建立\",{\"1\":{\"4\":1,\"29\":1}}],[\"寻路\",{\"0\":{\"480\":1}}],[\"红构成的色调共同为游戏蒙上了一层诡秘氛围\",{\"1\":{\"604\":1}}],[\"红色代表陷阱\",{\"1\":{\"543\":1}}],[\"红色箭头表示\",{\"1\":{\"50\":1}}],[\"红框就是镜头\",{\"1\":{\"479\":1}}],[\"容易引起剧情断层\",{\"1\":{\"524\":1}}],[\"容易维护\",{\"1\":{\"478\":1}}],[\"容易把它们混淆\",{\"1\":{\"50\":1}}],[\"综合比较了大家比较熟知的\",{\"1\":{\"478\":1}}],[\"精度\",{\"1\":{\"623\":1}}],[\"精度不同\",{\"1\":{\"477\":1}}],[\"精致复杂的画面\",{\"1\":{\"542\":1}}],[\"精密高深的盒子机关与目镜的搭配更是让我佩服设计者们的脑洞\",{\"1\":{\"508\":1}}],[\"精简过的默认服务器配置\",{\"1\":{\"205\":1}}],[\"背景\",{\"0\":{\"495\":1}}],[\"背景中的山川则被缩放到原来的\",{\"1\":{\"477\":1}}],[\"背景介绍\",{\"0\":{\"390\":1}}],[\"倍受喜爱的二代作品\",{\"1\":{\"514\":1}}],[\"倍\",{\"1\":{\"477\":2}}],[\"资源预处理和后处理\",{\"1\":{\"488\":1}}],[\"资源的压缩工作必不可少\",{\"1\":{\"476\":1}}],[\"资源压缩\",{\"0\":{\"476\":1}}],[\"减少资源使用\",{\"1\":{\"475\":1}}],[\"减少数据量的传输\",{\"1\":{\"474\":1}}],[\"减去\",{\"1\":{\"33\":1}}],[\"勾选时\",{\"1\":{\"474\":1}}],[\"规则的菱形\",{\"1\":{\"474\":1}}],[\"拓展了新的功能\",{\"1\":{\"474\":1}}],[\"增强\",{\"0\":{\"474\":1}}],[\"增加自动对齐组件\",{\"1\":{\"462\":1}}],[\"增加自定义操作\",{\"0\":{\"62\":1}}],[\"增加tab标签\",{\"1\":{\"458\":1}}],[\"增加一个服务器等\",{\"1\":{\"254\":1}}],[\"增加args配置项\",{\"1\":{\"233\":1}}],[\"增加\",{\"0\":{\"333\":1},\"1\":{\"209\":1,\"356\":1,\"357\":1,\"358\":1,\"370\":1}}],[\"增加export\",{\"1\":{\"180\":1}}],[\"层逻辑\",{\"1\":{\"629\":1}}],[\"层\",{\"1\":{\"472\":1}}],[\"层级规划\",{\"0\":{\"471\":1}}],[\"层级是可以不断深入的\",{\"1\":{\"378\":1}}],[\"旗面则单独分为一层旗帜层放在上层\",{\"1\":{\"471\":1}}],[\"旗杆放在下面的普通建筑物层\",{\"1\":{\"471\":1}}],[\"旗帜是\",{\"1\":{\"471\":1}}],[\"旗帜层\",{\"1\":{\"471\":1}}],[\"采用\",{\"1\":{\"471\":1}}],[\"采用同一个材质资源\",{\"0\":{\"469\":1}}],[\"互相传输的数据量\",{\"1\":{\"470\":1}}],[\"互不影响\",{\"1\":{\"227\":1}}],[\"销毁等全都只需要一个材质就能够完成\",{\"1\":{\"469\":1}}],[\"游戏性能优化https\",{\"1\":{\"627\":1}}],[\"游戏联机对战引擎\",{\"1\":{\"614\":1}}],[\"游戏配置\",{\"1\":{\"612\":1}}],[\"游戏信息\",{\"1\":{\"612\":1}}],[\"游戏佛系在于我们不清楚它什么时候回来\",{\"1\":{\"602\":1}}],[\"游戏目标就是不断收集各种各样的鱼和珊瑚\",{\"1\":{\"601\":1}}],[\"游戏目标就是尽量撑过更远的距离\",{\"1\":{\"596\":1}}],[\"游戏也是留下了很大的伏笔\",{\"1\":{\"600\":1}}],[\"游戏也可由自己\",{\"1\":{\"521\":1}}],[\"游戏解谜比较丰富简单\",{\"1\":{\"600\":1}}],[\"游戏解谜题材生活化\",{\"1\":{\"569\":1}}],[\"游戏正式开始\",{\"1\":{\"600\":1}}],[\"游戏将模拟在不同出身条件下你一生的生活\",{\"1\":{\"599\":1}}],[\"游戏将冒险\",{\"1\":{\"528\":1}}],[\"游戏设计陶艺的过程宁静自然\",{\"1\":{\"598\":1}}],[\"游戏旁白npc还是个逗比的存在\",{\"1\":{\"595\":1}}],[\"游戏唯一\",{\"1\":{\"593\":1}}],[\"游戏流程简短\",{\"1\":{\"593\":1}}],[\"游戏随无剧情\",{\"1\":{\"587\":1}}],[\"游戏操作和玩法都很简单\",{\"1\":{\"587\":1}}],[\"游戏从老人接到一封信后收拾行囊离家出走开始\",{\"1\":{\"585\":1}}],[\"游戏从1作到3作更加重视了人物立绘\",{\"1\":{\"578\":1}}],[\"游戏初始的选择会导致剧情的变化\",{\"1\":{\"584\":1}}],[\"游戏细节刻画良好\",{\"1\":{\"582\":1}}],[\"游戏大背景为人类与神族的战斗\",{\"1\":{\"578\":1}}],[\"游戏大背景设定在22世纪\",{\"1\":{\"534\":1}}],[\"游戏还有情侣版哦~\",{\"1\":{\"573\":1}}],[\"游戏丰富的职业与多类型关卡设计出色\",{\"1\":{\"570\":1}}],[\"游戏丰富的细节刻画增强游戏趣味性\",{\"1\":{\"547\":1}}],[\"游戏系统符合塞达尔风格\",{\"1\":{\"565\":1}}],[\"游戏简易的画风\",{\"1\":{\"562\":1}}],[\"游戏采用剪纸风格的画面\",{\"1\":{\"604\":1}}],[\"游戏采用抽象化低模画面\",{\"1\":{\"591\":1}}],[\"游戏采用和\",{\"1\":{\"572\":1}}],[\"游戏采用点触式操作\",{\"1\":{\"561\":1}}],[\"游戏采用黑白色调\",{\"1\":{\"512\":1}}],[\"游戏不仅继承一般卡牌游戏多职业与多卡牌种类的设定\",{\"1\":{\"556\":1}}],[\"游戏不像想象的这么简单\",{\"1\":{\"531\":1}}],[\"游戏战斗过程像是在玩简单的音乐游戏\",{\"1\":{\"549\":1}}],[\"游戏氛围血腥又呆萌\",{\"1\":{\"545\":1}}],[\"游戏全程盲人状态\",{\"1\":{\"543\":1}}],[\"游戏包含大量关卡与丰富的解谜元素供玩家们欣赏游玩\",{\"1\":{\"541\":1}}],[\"游戏集成策略\",{\"1\":{\"541\":1}}],[\"游戏分为几个不同的场景\",{\"1\":{\"540\":1}}],[\"游戏路径逐渐由一维向二维发展\",{\"1\":{\"539\":1}}],[\"游戏规定你需要将纸面上杂乱的颜色用最少或预定的步数统一为一种颜色\",{\"1\":{\"536\":1}}],[\"游戏卡机的现象也让游戏掉了分\",{\"1\":{\"535\":1}}],[\"游戏讲述主角与随从一起追踪伦敦疯狂的连环杀人魔的故事\",{\"1\":{\"590\":1}}],[\"游戏讲述一名科学家被恶魔带到了异世界\",{\"1\":{\"533\":1}}],[\"游戏讲述了一颗大树上住着5个小精灵\",{\"1\":{\"529\":1}}],[\"游戏讲述了小黑deemo用钢琴音符的力量让大树长大\",{\"1\":{\"525\":1}}],[\"游戏的唯美意境甚至盖过了玩法本身\",{\"1\":{\"603\":1}}],[\"游戏的实时性特点也是整个系列的亮点\",{\"1\":{\"524\":1}}],[\"游戏的背景需要做模糊处理\",{\"1\":{\"482\":1}}],[\"游戏画面和音乐虽不足称为亮点\",{\"1\":{\"522\":1}}],[\"游戏画风依然是整部系列中统一的漫画风格\",{\"1\":{\"515\":1}}],[\"游戏继承了前作的玩法\",{\"1\":{\"519\":1}}],[\"游戏继承了上部作品的游戏元素\",{\"1\":{\"515\":1}}],[\"游戏内最熟悉的生物只有狼\",{\"1\":{\"517\":1}}],[\"游戏音乐缓和平淡\",{\"1\":{\"517\":1}}],[\"游戏确是一部保持原作水准的作品\",{\"1\":{\"514\":1}}],[\"游戏比上代作品新增了全新的特殊炮塔与英雄\",{\"1\":{\"514\":1}}],[\"游戏改变了传统塔防游戏的模式\",{\"1\":{\"513\":1}}],[\"游戏以男主意图找回记忆开始\",{\"1\":{\"558\":1}}],[\"游戏以阴暗的画风与阴郁\",{\"1\":{\"527\":1}}],[\"游戏以创新性的方格连环画设计\",{\"1\":{\"520\":1}}],[\"游戏以全新的剧情出现在玩家们眼前\",{\"1\":{\"507\":1}}],[\"游戏以艾达公主归还神圣几何为解谜动机\",{\"1\":{\"506\":1}}],[\"游戏逐渐变复杂\",{\"1\":{\"506\":1}}],[\"游戏中人物各自性格鲜明\",{\"1\":{\"580\":1}}],[\"游戏中人物采用黑白对比的形式来表现人物\",{\"1\":{\"520\":1}}],[\"游戏中你将扮演一只山羊\",{\"1\":{\"563\":1}}],[\"游戏中你将按照居民不同属性分配适合他们的任务以及工作与休息时间\",{\"1\":{\"535\":1}}],[\"游戏中的某个画面还会跳出一些小彩蛋以致敬同厂商的其他作品\",{\"1\":{\"529\":1}}],[\"游戏中的道路是不需要进行淡入淡出效果的\",{\"1\":{\"475\":1}}],[\"游戏中存在一些低频显示的大图\",{\"1\":{\"487\":1}}],[\"游戏中使用了很多\",{\"1\":{\"474\":1}}],[\"游戏中实际效果较差\",{\"1\":{\"469\":1}}],[\"游戏玩法很简单\",{\"1\":{\"573\":1}}],[\"游戏玩法简单\",{\"1\":{\"555\":1,\"560\":1,\"577\":1}}],[\"游戏玩法\",{\"0\":{\"176\":1}}],[\"淡入淡出\",{\"1\":{\"469\":1}}],[\"达到一个\",{\"1\":{\"469\":1}}],[\"达到与\",{\"1\":{\"464\":1}}],[\"判断sdk是否初始化\",{\"1\":{\"612\":1}}],[\"判断的可视范围需要比实际范围更大一些\",{\"1\":{\"479\":1}}],[\"判断建筑在哪一行哪一列的格子里\",{\"1\":{\"479\":1}}],[\"判断某张图用的哪个图集\",{\"1\":{\"467\":1}}],[\"判断它的类型\",{\"1\":{\"398\":1}}],[\"张图集\",{\"1\":{\"467\":1}}],[\"产生\",{\"1\":{\"467\":2,\"487\":1}}],[\"产品环境慎用\",{\"1\":{\"188\":1}}],[\"合作无私的基因\",{\"0\":{\"540\":1}}],[\"合图时前期的一些压缩工作可能就此无效化\",{\"1\":{\"478\":1}}],[\"合批是降低\",{\"1\":{\"467\":1}}],[\"合批\",{\"0\":{\"467\":1}}],[\"合并文件\",{\"1\":{\"171\":1}}],[\"合并分支\",{\"1\":{\"87\":1}}],[\"合并指定分支到当前分支\",{\"1\":{\"87\":1}}],[\"合并指定\",{\"0\":{\"83\":1}}],[\"易发烫\",{\"1\":{\"466\":1}}],[\"耗电高\",{\"1\":{\"466\":1}}],[\"渲染优化\",{\"0\":{\"466\":1,\"472\":1}}],[\"优化\",{\"0\":{\"470\":1}}],[\"优化同样的\",{\"1\":{\"467\":1}}],[\"优化的过程中\",{\"1\":{\"465\":1}}],[\"优雅地关闭应用\",{\"1\":{\"233\":1}}],[\"优雅地关闭各个服务器\",{\"1\":{\"188\":1}}],[\"优雅\",{\"1\":{\"54\":1}}],[\"椰岛小游戏研发负责人\",{\"1\":{\"464\":1}}],[\"成就了这款高分休闲益智游戏\",{\"1\":{\"603\":1}}],[\"成为了一部感染力极强的艺术作品\",{\"1\":{\"561\":1}}],[\"成为年度现象级爆款\",{\"1\":{\"464\":1}}],[\"成长只在一夜之间\",{\"1\":{\"549\":1}}],[\"成功破圈\",{\"1\":{\"464\":1}}],[\"成功条件\",{\"1\":{\"46\":1}}],[\"成功\",{\"1\":{\"5\":1}}],[\"江南百景图项目使用了大量的自动化脚本来优化构建流程\",{\"1\":{\"488\":1}}],[\"江南百景图\",{\"1\":{\"464\":1,\"465\":1,\"466\":1,\"467\":1,\"469\":1,\"470\":1,\"471\":2,\"474\":1,\"480\":1,\"482\":1,\"484\":1}}],[\"替换掉ccwidget\",{\"1\":{\"462\":1}}],[\"依偎\",{\"1\":{\"576\":1}}],[\"依然是一部给予玩家们与游戏独一无二交互机会的优秀作品\",{\"1\":{\"521\":1}}],[\"依然是熟悉的风格\",{\"1\":{\"516\":1}}],[\"依然是部有趣而漫长的作品\",{\"1\":{\"515\":1}}],[\"依然是要注意对应关系\",{\"1\":{\"461\":1}}],[\"依次为\",{\"1\":{\"11\":1}}],[\"好好开车\",{\"1\":{\"605\":1}}],[\"好结局可能也不太好\",{\"1\":{\"593\":1}}],[\"好在最后终于离开了那座诡异的房子\",{\"1\":{\"509\":1}}],[\"好在随着\",{\"1\":{\"461\":1}}],[\"好了\",{\"1\":{\"262\":1,\"392\":1}}],[\"迭代速度比较快\",{\"1\":{\"461\":1}}],[\"页的\",{\"1\":{\"464\":1}}],[\"页内漂浮目录\",{\"0\":{\"455\":1}}],[\"页面的title只支持纯文本级别的样式控制\",{\"1\":{\"495\":1}}],[\"页面添加页脚\",{\"0\":{\"454\":1}}],[\"页面点击\",{\"1\":{\"367\":1}}],[\"页面\",{\"1\":{\"367\":1}}],[\"页面将不会做出任何反应\",{\"1\":{\"215\":1}}],[\"版游戏的引擎功能\",{\"1\":{\"629\":1}}],[\"版游戏包大小有\",{\"1\":{\"465\":1}}],[\"版相当\",{\"1\":{\"465\":1}}],[\"版相当的游戏体验\",{\"1\":{\"464\":1}}],[\"版权信息\",{\"0\":{\"454\":1}}],[\"版本切换相对应的分支\",{\"1\":{\"630\":1}}],[\"版本所用分支\",{\"1\":{\"628\":1}}],[\"版本一定要对应\",{\"1\":{\"461\":1}}],[\"版本低于\",{\"1\":{\"461\":1}}],[\"版本中设置的\",{\"1\":{\"461\":1}}],[\"版本的迭代\",{\"1\":{\"461\":1}}],[\"版本的\",{\"1\":{\"461\":1}}],[\"版本的代码完全重写\",{\"1\":{\"368\":1}}],[\"版本是跟随\",{\"1\":{\"461\":1}}],[\"版本比较高\",{\"1\":{\"461\":1}}],[\"版本号\",{\"1\":{\"360\":1}}],[\"版本可以可以对照下面的表格\",{\"1\":{\"360\":1}}],[\"版本为\",{\"1\":{\"356\":1,\"461\":1}}],[\"版本及其以上\",{\"1\":{\"356\":1}}],[\"版本安装在指定路径\",{\"1\":{\"295\":1}}],[\"版本别名\",{\"1\":{\"288\":1}}],[\"版本索引hash值\",{\"1\":{\"84\":3,\"85\":1}}],[\"版本历史\",{\"0\":{\"84\":1}}],[\"版本\",{\"1\":{\"50\":1,\"95\":1,\"103\":1,\"288\":4,\"356\":2,\"442\":1,\"461\":1,\"628\":1}}],[\"侧边栏宽度可调节\",{\"0\":{\"452\":1}}],[\"符号代表去除默认自带的插件\",{\"1\":{\"447\":1}}],[\"封面\",{\"0\":{\"444\":1}}],[\"赞赏\",{\"1\":{\"442\":1}}],[\"鼠标右键\",{\"1\":{\"431\":1}}],[\"换行\",{\"1\":{\"430\":1}}],[\"括起代码\",{\"1\":{\"430\":1}}],[\"网易云音乐\",{\"1\":{\"530\":1}}],[\"网上有很多ios设置44\",{\"1\":{\"502\":1}}],[\"网址\",{\"1\":{\"418\":1}}],[\"网页元素之中\",{\"1\":{\"29\":1}}],[\"网页\",{\"1\":{\"26\":1}}],[\"斜体加粗\",{\"1\":{\"417\":1}}],[\"斜体\",{\"1\":{\"417\":1}}],[\"敬请期待~~\",{\"1\":{\"411\":1}}],[\"尝试\",{\"1\":{\"411\":1}}],[\"少一节都无法全部掌握\",{\"1\":{\"411\":1}}],[\"少用dom\",{\"1\":{\"405\":1}}],[\"继续挖掘\",{\"1\":{\"409\":1}}],[\"继承原型上的属性\",{\"1\":{\"54\":1}}],[\"继承而来的要结合\",{\"1\":{\"53\":1}}],[\"继承而来的\",{\"1\":{\"51\":1}}],[\"思路和上面一样\",{\"1\":{\"409\":1}}],[\"效果相当于从浏览器下载了一个文件到本地\",{\"1\":{\"491\":1}}],[\"效果相当于下载了一个文件到本地\",{\"1\":{\"491\":1}}],[\"效果都是一样的\",{\"1\":{\"408\":1}}],[\"效率\",{\"1\":{\"488\":1}}],[\"效率低下\",{\"1\":{\"393\":1}}],[\"尽情地屠杀吧\",{\"1\":{\"571\":1}}],[\"尽管如此\",{\"1\":{\"406\":1}}],[\"尽量叠加更大的数字\",{\"1\":{\"606\":1}}],[\"尽量跟随我的思路往下走\",{\"1\":{\"406\":1}}],[\"尽量使用am脚本来完成诉求\",{\"1\":{\"395\":1}}],[\"挨个将ps的各个对象和数据进行挖掘\",{\"1\":{\"406\":1}}],[\"挨个输出\",{\"1\":{\"398\":1}}],[\"颜色\",{\"1\":{\"400\":1}}],[\"搞清楚整个宿主的对象树\",{\"1\":{\"400\":1}}],[\"遍历这个list\",{\"1\":{\"399\":1}}],[\"逐层往下挖掘\",{\"1\":{\"399\":1}}],[\"圈起来这块要考\",{\"1\":{\"398\":1}}],[\"圈子里又称之为\",{\"1\":{\"358\":1}}],[\"剩下这些留给你去补充完成\",{\"1\":{\"398\":1}}],[\"剩下的很多需求\",{\"1\":{\"389\":1}}],[\"聪明的你就会发现\",{\"1\":{\"398\":1}}],[\"肯定是字符串型\",{\"1\":{\"398\":1}}],[\"哇~~\",{\"1\":{\"398\":1}}],[\"说不定会想到\",{\"1\":{\"398\":1}}],[\"说明你已经理解并掌握了这个技能了\",{\"1\":{\"409\":1}}],[\"说明一切都符合预期\",{\"1\":{\"398\":1}}],[\"说明了整个客户端请求中的控制流程\",{\"1\":{\"197\":1}}],[\"说明\",{\"0\":{\"491\":1},\"1\":{\"65\":1}}],[\"得借助纸笔推算\",{\"1\":{\"592\":1}}],[\"得通过ad的getkey这个方法\",{\"1\":{\"398\":1}}],[\"得到的进程树的一部分\",{\"1\":{\"262\":1}}],[\"得到要路由到的服务器编号\",{\"1\":{\"246\":1}}],[\"得到整个处理时间\",{\"1\":{\"200\":1}}],[\"得到\",{\"1\":{\"14\":1}}],[\"拿到文本字体配置项\",{\"1\":{\"400\":1}}],[\"拿到其中的工具配置项\",{\"1\":{\"400\":1}}],[\"拿到tool的actiondescriptor之后\",{\"1\":{\"400\":1}}],[\"拿到这些属性之后\",{\"1\":{\"400\":1}}],[\"拿到这些图层id之后\",{\"1\":{\"399\":1}}],[\"拿到这个图层的actiondescriptor之后\",{\"1\":{\"398\":1}}],[\"拿到这个图层的描述符\",{\"1\":{\"398\":1}}],[\"拿到这个引用之后\",{\"1\":{\"398\":1}}],[\"拿到图层id\",{\"1\":{\"399\":1}}],[\"拿到类型之后\",{\"1\":{\"398\":1}}],[\"拿到它的类型\",{\"1\":{\"398\":2}}],[\"拿到master的配置信息\",{\"1\":{\"262\":1}}],[\"意思就是图层名称是rectangle的目标对象\",{\"1\":{\"398\":1}}],[\"意味着里头还有图层\",{\"1\":{\"378\":1}}],[\"意味着\",{\"1\":{\"19\":1}}],[\"仔细看不要开小差\",{\"1\":{\"398\":1}}],[\"仔细观察\",{\"1\":{\"392\":1}}],[\"异形工厂\",{\"0\":{\"571\":1}}],[\"异世界的生存法则\",{\"1\":{\"533\":1}}],[\"异常晦涩难懂\",{\"1\":{\"397\":1}}],[\"异步多任务\",{\"1\":{\"167\":1}}],[\"异步代码的错误处理\",{\"1\":{\"45\":1}}],[\"讲如何通过scriptlistener插件来让ps输出am代码为我所用\",{\"1\":{\"397\":1}}],[\"讲述波克艾克为了寻找部落失去的声音而踏上冒险之旅\",{\"1\":{\"591\":1}}],[\"讲述了一对夫妻不知什么原因昏迷后从房间醒来\",{\"1\":{\"593\":1}}],[\"讲述了主角的父亲离开家独自一人与宿敌\",{\"1\":{\"565\":1}}],[\"讲述了两位医生帮助一个濒临死亡的病人通过改变他记忆的方式满足他愿望的故事\",{\"1\":{\"530\":1}}],[\"讲述了如何通过scriptlistener插件来获取ps操作输出am代码\",{\"1\":{\"396\":1}}],[\"讲述了相关的类关系\",{\"1\":{\"201\":1}}],[\"讲述其中的一些需要注意的点\",{\"1\":{\"377\":1}}],[\"告诉大家使用这些方法\",{\"1\":{\"396\":1}}],[\"做压缩处理\",{\"1\":{\"478\":1}}],[\"做过浏览器web开发的小伙伴\",{\"1\":{\"400\":1}}],[\"做过javascript开发的小伙伴\",{\"1\":{\"398\":1}}],[\"做操作的过程是一个set的过程\",{\"1\":{\"396\":1}}],[\"做一些运算后\",{\"1\":{\"246\":1}}],[\"心情也会变愉悦\",{\"1\":{\"581\":1}}],[\"心理就不太怵了\",{\"1\":{\"396\":1}}],[\"心跳超时时间为2倍的心跳间隔时间\",{\"1\":{\"224\":1}}],[\"心跳的流程如下\",{\"1\":{\"224\":1}}],[\"心跳\",{\"0\":{\"224\":1}}],[\"心跳时间间隔\",{\"1\":{\"223\":1}}],[\"心跳包的length字段为0\",{\"1\":{\"224\":1}}],[\"心跳包\",{\"1\":{\"222\":1}}],[\"心跳和服务器主动断开连接的通知等控制信息\",{\"1\":{\"221\":1}}],[\"心跳和数据传输编码\",{\"1\":{\"221\":1}}],[\"冗余度很高\",{\"1\":{\"395\":1}}],[\"反正大家都是js代码\",{\"1\":{\"395\":1}}],[\"反之返回false\",{\"1\":{\"261\":1,\"267\":1}}],[\"枚举类型\",{\"1\":{\"394\":1}}],[\"垂直位置\",{\"1\":{\"394\":1}}],[\"水平位置\",{\"1\":{\"394\":1}}],[\"水平居中\",{\"1\":{\"357\":1}}],[\"怎么也对不齐那该死的胶囊按钮\",{\"1\":{\"496\":1}}],[\"怎么能找到这个命令的值\",{\"1\":{\"393\":1}}],[\"怎么用\",{\"1\":{\"389\":1}}],[\"想想看你的朋友看你一直在点乱七八糟的线条会是什么反应呢\",{\"1\":{\"608\":1}}],[\"想想这深海的的石头也能不再孤单了\",{\"1\":{\"601\":1}}],[\"想滚去学习\",{\"1\":{\"572\":1}}],[\"想象与突破极限的机会\",{\"1\":{\"533\":1}}],[\"想知道它到底是啥意思\",{\"1\":{\"393\":1}}],[\"想要知道它里头包含哪些属性或者方法\",{\"1\":{\"398\":1}}],[\"想要添加功能的\",{\"1\":{\"348\":1}}],[\"想要调试它\",{\"1\":{\"206\":1}}],[\"底层是c的代码结构\",{\"1\":{\"393\":1}}],[\"底部的输出窗口会显示当前脚本的执行状态和最后输出结果\",{\"1\":{\"348\":1}}],[\"嗯\",{\"1\":{\"390\":1}}],[\"归根到底是底层c的语法结构\",{\"1\":{\"390\":1}}],[\"派发出来\",{\"1\":{\"390\":1}}],[\"早在ps4的年代\",{\"1\":{\"390\":1}}],[\"早期的手机使用的比较多\",{\"1\":{\"461\":1}}],[\"早期只有charidtotypeid这个函数\",{\"1\":{\"393\":1}}],[\"早期\",{\"1\":{\"368\":1}}],[\"转载\",{\"1\":{\"616\":1}}],[\"转载请注明出处\",{\"1\":{\"389\":1,\"397\":1,\"406\":1}}],[\"转换为判断是否在\",{\"1\":{\"467\":1}}],[\"转换\",{\"0\":{\"465\":1}}],[\"转换成json数据结构\",{\"1\":{\"398\":1}}],[\"转为另一种\",{\"1\":{\"22\":1}}],[\"转为字符串\",{\"1\":{\"13\":2}}],[\"研究成果\",{\"1\":{\"389\":1,\"397\":1,\"406\":1}}],[\"泡好咖啡\",{\"1\":{\"389\":1}}],[\"亲自学会这种魔法\",{\"1\":{\"389\":1}}],[\"客观来说\",{\"1\":{\"389\":1}}],[\"客户端sdk使用流程\",{\"0\":{\"611\":1}}],[\"客户端sdk主要接口\",{\"0\":{\"610\":1}}],[\"客户端发起request到服务器端\",{\"1\":{\"249\":1}}],[\"客户端发起第一个心跳\",{\"1\":{\"224\":1}}],[\"客户端会有相应的回调\",{\"1\":{\"246\":1}}],[\"客户端往往首先向gate服务器发出请求\",{\"1\":{\"241\":1}}],[\"客户端可以通过这个消息来判断是否是服务器主动断开连接的\",{\"1\":{\"226\":1}}],[\"客户端检测到心跳超时\",{\"1\":{\"224\":1}}],[\"客户端向服务器发送一个握手ack\",{\"1\":{\"223\":1}}],[\"客户端向服务器发起握手请求\",{\"1\":{\"223\":1}}],[\"客户端的类型\",{\"1\":{\"223\":1}}],[\"客户端的版本号\",{\"1\":{\"223\":1}}],[\"客户端到服务器的握手ack\",{\"1\":{\"222\":1}}],[\"客户端到服务器的握手请求以及服务器到客户端的握手响应\",{\"1\":{\"222\":1}}],[\"客户端将得不到服务器端的响应\",{\"1\":{\"197\":1}}],[\"客户端断开\",{\"0\":{\"197\":1}}],[\"客户端就会发起请求\",{\"1\":{\"195\":1}}],[\"客户端请求\",{\"0\":{\"195\":1}}],[\"客户端已经完成了与服务器端的连接\",{\"1\":{\"194\":1}}],[\"客户端连接\",{\"0\":{\"194\":1}}],[\"群各种地方看到这种代码的时候\",{\"1\":{\"389\":1}}],[\"动画系统\",{\"1\":{\"629\":1}}],[\"动感十足的原创乐曲让玩家们沉浸其中\",{\"1\":{\"518\":1}}],[\"动手分析\",{\"0\":{\"498\":1}}],[\"动态计算每台手机状态栏到胶囊按钮间距\",{\"1\":{\"500\":1}}],[\"动态组织层级关系\",{\"1\":{\"471\":2}}],[\"动态合图我们留给了游戏中的人物和建筑\",{\"1\":{\"472\":1}}],[\"动态合图\",{\"0\":{\"468\":1},\"1\":{\"493\":1}}],[\"动态添加服务器\",{\"0\":{\"189\":1}}],[\"动作引用\",{\"1\":{\"394\":1}}],[\"动作命令是transform\",{\"1\":{\"394\":1}}],[\"动作\",{\"1\":{\"390\":2,\"528\":1}}],[\"动作代理这样的词汇\",{\"1\":{\"389\":1}}],[\"紧接着继续搜索下去\",{\"1\":{\"389\":1}}],[\"居然好使\",{\"1\":{\"389\":1}}],[\"居然是因为我在\",{\"1\":{\"365\":1}}],[\"哎嘛\",{\"1\":{\"389\":1}}],[\"感兴趣的查看官方文档即可\",{\"1\":{\"386\":1}}],[\"感谢这两篇博文\",{\"1\":{\"54\":1}}],[\"感谢网友的指出\",{\"1\":{\"53\":1}}],[\"宿主给我们提供了file\",{\"1\":{\"384\":1}}],[\"宿主扫描到存放插件的文件夹中的子文件中包含\",{\"1\":{\"356\":1}}],[\"又比上部作品新增了很多有趣的细节\",{\"1\":{\"515\":1}}],[\"又都是不一样的\",{\"1\":{\"398\":1}}],[\"又通过事件\",{\"1\":{\"390\":1}}],[\"又我们的代码执行完之后\",{\"1\":{\"380\":1}}],[\"又去连接127\",{\"1\":{\"218\":1}}],[\"距离相关的计算\",{\"1\":{\"380\":1}}],[\"厘米\",{\"1\":{\"380\":1}}],[\"毫米\",{\"1\":{\"380\":1}}],[\"末尾的位置等等\",{\"1\":{\"378\":1}}],[\"外面\",{\"1\":{\"378\":1}}],[\"暂时\",{\"1\":{\"378\":1}}],[\"暂存区无变动\",{\"1\":{\"85\":1}}],[\"嵌套很深的时候\",{\"1\":{\"378\":1}}],[\"递归遍历获取到它所有的属性值\",{\"1\":{\"398\":1}}],[\"递归方式遍历文档中的所有图层\",{\"1\":{\"378\":1}}],[\"递归复制img目录下所有png图片\",{\"1\":{\"170\":1}}],[\"涉及到图层相关的对象有artlayer\",{\"1\":{\"378\":1}}],[\"教程后面的篇章\",{\"1\":{\"376\":1}}],[\"借助整个web繁荣的生态\",{\"1\":{\"376\":1}}],[\"针对地图很大\",{\"1\":{\"480\":1}}],[\"针对这一情况\",{\"1\":{\"467\":1}}],[\"针对这两个操作\",{\"1\":{\"397\":1}}],[\"针对这种场景\",{\"1\":{\"376\":1}}],[\"针对不同的服务器加载不同的组件\",{\"1\":{\"285\":1}}],[\"针对不同的服务器\",{\"1\":{\"261\":2}}],[\"箭头函数\",{\"1\":{\"376\":1}}],[\"跨越重重虐心机关的里奥\",{\"1\":{\"552\":1}}],[\"跨端日志\",{\"1\":{\"374\":1}}],[\"跨端通信框架\",{\"1\":{\"374\":1}}],[\"跨平台支持\",{\"1\":{\"287\":1}}],[\"系列https\",{\"1\":{\"625\":1}}],[\"系列是一部规则简单却容易烧脑的休闲益智类游戏\",{\"1\":{\"536\":1}}],[\"系列为点触式益智解谜游戏\",{\"1\":{\"532\":1}}],[\"系列共13部曲\",{\"1\":{\"523\":1}}],[\"系列教程暂时就到此结束\",{\"1\":{\"374\":1}}],[\"系统\",{\"1\":{\"629\":1}}],[\"系统性的给大家介绍一下\",{\"1\":{\"389\":1}}],[\"系统提供另一个\",{\"1\":{\"383\":1}}],[\"系统提供了默认的一些filter\",{\"1\":{\"271\":1}}],[\"系统上当你打开\",{\"1\":{\"367\":1}}],[\"系统级的插件存放文件夹\",{\"0\":{\"353\":1},\"1\":{\"355\":1}}],[\"系统级插件存放文件夹\",{\"1\":{\"351\":1}}],[\"系统会根据application对象中服务器的信息\",{\"1\":{\"285\":1}}],[\"系统状态\",{\"1\":{\"272\":1}}],[\"系统内建提供了一些filter\",{\"1\":{\"261\":1}}],[\"系统部分为pinus框架所需信息\",{\"1\":{\"223\":1}}],[\"系统默认是将监控禁掉了\",{\"1\":{\"190\":1}}],[\"部落缺乏的不是电子乐\",{\"1\":{\"591\":1}}],[\"部分除了适配\",{\"1\":{\"639\":1}}],[\"部分我们没有使用动态合图或者\",{\"1\":{\"472\":1}}],[\"部分需要重新设计和编写\",{\"1\":{\"465\":1}}],[\"部分宿主不支持\",{\"1\":{\"373\":1}}],[\"部署了\",{\"1\":{\"10\":1}}],[\"部署了数组接口\",{\"1\":{\"1\":1}}],[\"局限性\",{\"0\":{\"371\":1}}],[\"局部安装\",{\"1\":{\"168\":1}}],[\"普通链接\",{\"1\":{\"418\":1}}],[\"普通的\",{\"1\":{\"370\":1}}],[\"普通数组或\",{\"1\":{\"18\":1}}],[\"普通数组的操作方法和属性\",{\"1\":{\"10\":1}}],[\"普通数组与\",{\"1\":{\"8\":1}}],[\"级别\",{\"0\":{\"369\":1},\"1\":{\"369\":1}}],[\"级别的插件\",{\"1\":{\"349\":1}}],[\"区别于layerset是图层组\",{\"1\":{\"378\":1}}],[\"区别较大的就是新增了\",{\"1\":{\"368\":1}}],[\"区别在于它不会阻止你和\",{\"1\":{\"356\":1}}],[\"样式或者\",{\"1\":{\"367\":1}}],[\"窗口\",{\"1\":{\"367\":2}}],[\"窗口都会失效\",{\"1\":{\"367\":1}}],[\"窗口对浏览器代码进行调试了\",{\"1\":{\"366\":1}}],[\"扫描到\",{\"1\":{\"367\":1}}],[\"扫描的端口号\",{\"1\":{\"366\":1}}],[\"踩坑记录\",{\"0\":{\"367\":1}}],[\"托管的插件服务了\",{\"1\":{\"366\":1}}],[\"列表\",{\"1\":{\"425\":1}}],[\"列表中找到\",{\"1\":{\"366\":1}}],[\"列出远程版本\",{\"1\":{\"288\":1}}],[\"列出当前使用pinus的版本信息\",{\"1\":{\"232\":1}}],[\"列出当前应用开启的所有服务器的信息\",{\"1\":{\"232\":1}}],[\"列出当前目录所有文件\",{\"1\":{\"97\":1}}],[\"列出已安装的包\",{\"1\":{\"103\":1}}],[\"列出所有pinus支持的命令及使用说明\",{\"1\":{\"232\":1}}],[\"列出所有虚拟环境\",{\"1\":{\"103\":1}}],[\"列出所有远程的分支\",{\"1\":{\"87\":1}}],[\"列出文件的同时\",{\"1\":{\"97\":1}}],[\"列出本地所有分支\",{\"1\":{\"87\":1}}],[\"刷新一下\",{\"1\":{\"366\":1}}],[\"远程调式过\",{\"1\":{\"366\":1}}],[\"远程调试\",{\"0\":{\"366\":1}}],[\"远程克隆\",{\"0\":{\"71\":1}}],[\"格式\",{\"1\":{\"365\":1,\"478\":1}}],[\"格式的文件\",{\"1\":{\"365\":1}}],[\"格式如下\",{\"1\":{\"233\":1}}],[\"架构\",{\"1\":{\"362\":1,\"461\":2}}],[\"重写\",{\"0\":{\"465\":1},\"1\":{\"465\":1}}],[\"重启ps\",{\"1\":{\"391\":1}}],[\"重启\",{\"1\":{\"361\":1}}],[\"重新打开creator即可\",{\"1\":{\"641\":1}}],[\"重新编译\",{\"1\":{\"461\":1}}],[\"重新抛出\",{\"1\":{\"279\":1}}],[\"重新生成要发送给客户端的resp\",{\"1\":{\"197\":1}}],[\"重新初始化终端\",{\"1\":{\"97\":1}}],[\"项\",{\"1\":{\"361\":1}}],[\"项的值为\",{\"1\":{\"361\":1}}],[\"项目设置\",{\"1\":{\"631\":1}}],[\"项目最终选择使用\",{\"1\":{\"478\":1}}],[\"项目中经常会接入一些\",{\"1\":{\"461\":1}}],[\"项目的根路径增加\",{\"1\":{\"365\":1}}],[\"项目的目录结构是这样的\",{\"1\":{\"350\":1}}],[\"项目\",{\"1\":{\"362\":1,\"631\":1}}],[\"项目结构\",{\"0\":{\"350\":1}}],[\"项目名称为当前文件夹名称\",{\"1\":{\"233\":1}}],[\"项目默认是前台运行\",{\"1\":{\"186\":1}}],[\"签过名\",{\"1\":{\"359\":1}}],[\"去月球\",{\"0\":{\"530\":1},\"1\":{\"530\":1,\"558\":1}}],[\"去年\",{\"1\":{\"464\":1}}],[\"去获取它的属性值了\",{\"1\":{\"398\":1}}],[\"去查看相关的\",{\"1\":{\"374\":1}}],[\"去执行一段\",{\"1\":{\"358\":1}}],[\"去覆盖要取消的那次\",{\"1\":{\"81\":1}}],[\"标题\",{\"1\":{\"419\":1}}],[\"标签\",{\"1\":{\"373\":1}}],[\"标签配置\",{\"1\":{\"358\":1}}],[\"标签的内容\",{\"1\":{\"357\":1}}],[\"标签的\",{\"1\":{\"356\":1}}],[\"标志位flag\",{\"0\":{\"227\":1}}],[\"顺便提醒一下\",{\"1\":{\"356\":1}}],[\"配音配乐也很出色\",{\"1\":{\"565\":1}}],[\"配合一张简易却具真实感的背景布\",{\"1\":{\"594\":1}}],[\"配合快节奏音乐\",{\"1\":{\"583\":1}}],[\"配合现实化场景与轻音乐渲染\",{\"1\":{\"569\":1}}],[\"配合云里雾里的背景与柔和悠长又稍带些许悲凉的音乐\",{\"1\":{\"561\":1}}],[\"配合欢快动感的音乐\",{\"1\":{\"550\":1}}],[\"配合清新的画风\",{\"1\":{\"541\":1}}],[\"配合丰富的关卡让这款游戏非常耐玩\",{\"1\":{\"537\":1}}],[\"配合更复杂的曲目与屏幕中突然变速的扫描线\",{\"1\":{\"519\":1}}],[\"配合昏暗的谜雾\",{\"1\":{\"512\":1}}],[\"配合\",{\"1\":{\"356\":1}}],[\"配置插件的属性\",{\"1\":{\"442\":1}}],[\"配置使用的插件\",{\"1\":{\"442\":1}}],[\"配置吧\",{\"1\":{\"370\":1}}],[\"配置调试浏览器代码\",{\"1\":{\"367\":1}}],[\"配置完你就可以像\",{\"1\":{\"370\":1}}],[\"配置完\",{\"1\":{\"361\":1}}],[\"配置里都能体现出来\",{\"1\":{\"356\":1}}],[\"配置adminserver\",{\"0\":{\"264\":1}}],[\"配置router\",{\"1\":{\"261\":1}}],[\"配置为true\",{\"1\":{\"261\":1}}],[\"配置filter\",{\"1\":{\"261\":1}}],[\"配置filter的调用示例如下\",{\"1\":{\"261\":1}}],[\"配置filter等等配置操作\",{\"1\":{\"261\":1}}],[\"配置加载一个自定义的component\",{\"1\":{\"261\":1}}],[\"配置内容\",{\"0\":{\"261\":1}}],[\"配置路由使用application的route调用\",{\"1\":{\"234\":1}}],[\"配置修改\",{\"0\":{\"234\":1}}],[\"配置条目\",{\"1\":{\"218\":1}}],[\"配置条目中插入\",{\"1\":{\"203\":1}}],[\"配置\",{\"0\":{\"307\":1,\"359\":1,\"365\":1,\"370\":1,\"447\":1},\"1\":{\"209\":1,\"356\":1,\"361\":1,\"365\":1,\"370\":1}}],[\"配置ide的调试器\",{\"0\":{\"207\":1}}],[\"配置vscode自动编译ts文件3\",{\"1\":{\"139\":1}}],[\"配置vscode自动编译ts文件2\",{\"1\":{\"139\":1}}],[\"配置vscode自动编译ts文件1\",{\"1\":{\"139\":1}}],[\"配置自动编译ts文件\",{\"0\":{\"139\":1}}],[\"配置详解\",{\"0\":{\"137\":1}}],[\"配置tsconfig\",{\"0\":{\"135\":1}}],[\"配置ssh\",{\"0\":{\"94\":1}}],[\"配置简写\",{\"1\":{\"68\":1}}],[\"配置用户邮箱\",{\"1\":{\"68\":1}}],[\"配置用户名和邮箱\",{\"0\":{\"93\":1}}],[\"配置用户名\",{\"1\":{\"68\":1}}],[\"配置用户信息\",{\"0\":{\"68\":1}}],[\"交替进行执行\",{\"1\":{\"480\":1}}],[\"交互\",{\"1\":{\"356\":3}}],[\"交换的数据分为系统和用户两部分\",{\"1\":{\"223\":1}}],[\"界面的普通面板\",{\"1\":{\"356\":1}}],[\"界面\",{\"1\":{\"356\":1}}],[\"软件\",{\"1\":{\"356\":1}}],[\"软件安装文件夹\",{\"0\":{\"352\":1},\"1\":{\"351\":1,\"352\":1,\"355\":1}}],[\"声明支持的\",{\"1\":{\"356\":1}}],[\"声明这个插件支持的宿主\",{\"1\":{\"356\":1}}],[\"声卡之类的本机设备传送数据\",{\"1\":{\"22\":1}}],[\"某种程度上可以防止用户修改到插件内容\",{\"1\":{\"353\":1}}],[\"某些组件的某些启动过程依赖于另外某个组件的启动过程时\",{\"1\":{\"262\":1}}],[\"放心\",{\"1\":{\"548\":1}}],[\"放现实中以我的解谜速度他早饿死了~\",{\"1\":{\"509\":1}}],[\"放到你的编辑器\",{\"1\":{\"391\":1}}],[\"放这都没权限修改代码\",{\"1\":{\"353\":1}}],[\"放入\",{\"1\":{\"33\":3}}],[\"既然是系统级的\",{\"1\":{\"353\":1}}],[\"既然是叫\",{\"1\":{\"220\":1}}],[\"权限\",{\"1\":{\"353\":1}}],[\"权限的\",{\"1\":{\"352\":1}}],[\"权限管理\",{\"1\":{\"180\":1}}],[\"存储一些文件的时候\",{\"1\":{\"384\":1}}],[\"存储超类\",{\"1\":{\"54\":1}}],[\"存放我们所有暴露给浏览器代码调用的\",{\"1\":{\"358\":1}}],[\"存放\",{\"1\":{\"350\":1}}],[\"菜单中虽然显示出\",{\"1\":{\"359\":1}}],[\"菜单等方方面面\",{\"1\":{\"350\":1}}],[\"菜单标题\",{\"1\":{\"62\":1}}],[\"└──\",{\"1\":{\"350\":4}}],[\"│\",{\"1\":{\"350\":2}}],[\"├──\",{\"1\":{\"350\":3}}],[\"演示的代码对应这次提交\",{\"1\":{\"367\":1}}],[\"演示\",{\"1\":{\"349\":1}}],[\"满意后\",{\"1\":{\"348\":1}}],[\"随机数\",{\"0\":{\"613\":1}}],[\"随着各种各样开车轨迹的涌现\",{\"1\":{\"605\":1}}],[\"随着站点数量与类型的增多\",{\"1\":{\"579\":1}}],[\"随着extend\",{\"1\":{\"390\":1}}],[\"随着你对\",{\"1\":{\"362\":1}}],[\"随时调用读取\",{\"1\":{\"348\":1}}],[\"随便新建一个测试文件\",{\"1\":{\"346\":1}}],[\"看着自己的水族馆更加华丽热闹\",{\"1\":{\"601\":1}}],[\"看着小黑人来回穿梭于由自己塑造的漫画之间\",{\"1\":{\"520\":1}}],[\"看多了简易画风\",{\"1\":{\"561\":1}}],[\"看画面就知道这又是一款高颜值唯美游戏\",{\"1\":{\"555\":1}}],[\"看能不能成功\",{\"1\":{\"409\":1}}],[\"看看你能坚持几层吧\",{\"1\":{\"597\":1}}],[\"看看你能坚持几圈吧\",{\"1\":{\"573\":1}}],[\"看看你能在位几年吧\",{\"1\":{\"574\":1}}],[\"看看输出\",{\"1\":{\"400\":1}}],[\"看看它都有哪些东西\",{\"1\":{\"400\":1}}],[\"看看一个document\",{\"1\":{\"399\":1}}],[\"看看是否工作是否正常\",{\"1\":{\"348\":1}}],[\"看上图\",{\"1\":{\"398\":1}}],[\"看了也只能靠猜\",{\"1\":{\"393\":1}}],[\"看起来费劲的很\",{\"1\":{\"392\":1}}],[\"看到了什么\",{\"1\":{\"398\":1}}],[\"看到ps的这个dom树结构\",{\"1\":{\"377\":1}}],[\"看到这图别怕\",{\"1\":{\"50\":1}}],[\"于我这样的mac常驻开发者而言\",{\"1\":{\"347\":1}}],[\"于是在实际操作中\",{\"1\":{\"484\":1}}],[\"于是依然可以通过遍历把这些key弄出来\",{\"1\":{\"398\":1}}],[\"于是ref1这个对象就包含了这个图层的引用\",{\"1\":{\"398\":1}}],[\"于是推出了完整字符表示的stringidtotype这个函数\",{\"1\":{\"393\":1}}],[\"于是你可以自己将上面的代码进行封装成函数\",{\"1\":{\"410\":1}}],[\"于是你会更加疑惑\",{\"1\":{\"389\":1}}],[\"于是你继续搜寻和它相关的信息\",{\"1\":{\"389\":1}}],[\"于是\",{\"1\":{\"389\":1,\"398\":2,\"400\":1}}],[\"于是我们将所有\",{\"1\":{\"477\":1}}],[\"于是我们大体可以判断\",{\"1\":{\"407\":1}}],[\"于是我们可以确定\",{\"1\":{\"398\":1}}],[\"于是我们可以通过以下两个函数来做转换\",{\"1\":{\"393\":1}}],[\"于是我们可以通过设置首选项对应的值来修改默认的单位\",{\"1\":{\"380\":1}}],[\"于是我们需要想办法获取到这个图层的动作描述符\",{\"1\":{\"398\":1}}],[\"于是我们会问当增加一个应用服务器的时候\",{\"1\":{\"273\":1}}],[\"于是向所有与其连接的monitor请求服务器信息\",{\"1\":{\"282\":1}}],[\"基本都是基于原生平台开发\",{\"1\":{\"461\":1}}],[\"基本都是我们在ps里头做了实际操作\",{\"1\":{\"396\":1}}],[\"基本日常常用的编程语言它都能很好地支持\",{\"1\":{\"430\":1}}],[\"基本上你都可以从scriptlistener中获取到\",{\"1\":{\"410\":1}}],[\"基本上你只能通过拷贝ps输出的代码\",{\"1\":{\"397\":1}}],[\"基本上\",{\"1\":{\"405\":1}}],[\"基本就可以告别只会抄作业的水平了\",{\"1\":{\"396\":1}}],[\"基本够用\",{\"1\":{\"347\":1}}],[\"基于安全的缘故\",{\"1\":{\"276\":1}}],[\"基于des\",{\"1\":{\"145\":1}}],[\"基于远程分支\",{\"1\":{\"77\":1}}],[\"基于当前本地分支创建一个新分支\",{\"1\":{\"77\":1}}],[\"基于\",{\"1\":{\"32\":1}}],[\"断点\",{\"1\":{\"370\":1}}],[\"断点调试等特性\",{\"1\":{\"347\":1}}],[\"断开事件\",{\"0\":{\"279\":1}}],[\"电脑等来恢复链接状态\",{\"1\":{\"346\":1}}],[\"稳定性也一版\",{\"1\":{\"346\":1}}],[\"扩展学习\",{\"1\":{\"625\":1}}],[\"扩展开发教程\",{\"1\":{\"412\":1}}],[\"扩展开发二helloworld\",{\"1\":{\"362\":1}}],[\"扩展执行的\",{\"1\":{\"373\":1}}],[\"扩展直接运行\",{\"1\":{\"373\":1}}],[\"扩展性优化\",{\"1\":{\"368\":1}}],[\"扩展是使用\",{\"1\":{\"368\":1}}],[\"扩展或者\",{\"1\":{\"356\":1}}],[\"扩展面板的\",{\"1\":{\"350\":1}}],[\"扩展和\",{\"1\":{\"350\":1}}],[\"扩展清单文件\",{\"1\":{\"350\":1}}],[\"扩展\",{\"1\":{\"350\":1,\"367\":1}}],[\"扩展的\",{\"1\":{\"346\":1}}],[\"扩展还在维护\",{\"1\":{\"346\":1}}],[\"工作流程来维护自己定制的代码\",{\"1\":{\"628\":1}}],[\"工作根目录\",{\"1\":{\"137\":1}}],[\"工程化\",{\"1\":{\"374\":1}}],[\"工程化中最遗憾的一点\",{\"1\":{\"372\":1}}],[\"工具\",{\"1\":{\"400\":1}}],[\"工具等等\",{\"1\":{\"400\":1}}],[\"工具不只是用来定位和修复\",{\"1\":{\"374\":1}}],[\"工具最大的遗憾就是不支持\",{\"1\":{\"372\":1}}],[\"工具免费\",{\"1\":{\"348\":1}}],[\"工具只有\",{\"1\":{\"346\":1}}],[\"理论上你用记事本编写代码也没关系\",{\"1\":{\"346\":1}}],[\"确保编译后的\",{\"1\":{\"345\":1}}],[\"确保端口正确\",{\"1\":{\"343\":1}}],[\"→\",{\"1\":{\"345\":1,\"606\":1}}],[\"面对暴雪\",{\"1\":{\"551\":1}}],[\"面对有限的资源\",{\"1\":{\"527\":1}}],[\"面板插件面板默认背景是黑色的\",{\"1\":{\"357\":1}}],[\"面板尺寸相关\",{\"1\":{\"356\":1}}],[\"面板的\",{\"1\":{\"631\":1}}],[\"面板的网页\",{\"1\":{\"356\":1,\"357\":1}}],[\"面板的具体配置\",{\"1\":{\"356\":1}}],[\"面板\",{\"1\":{\"343\":1,\"356\":1,\"637\":1}}],[\"面目全非\",{\"1\":{\"304\":1}}],[\"立即启动调试\",{\"1\":{\"341\":1,\"342\":1}}],[\"立刻将这里的127\",{\"1\":{\"219\":1}}],[\"能交互多种画面中与战斗无关紧要的元素\",{\"1\":{\"515\":1}}],[\"能更好的提升运算的效率\",{\"1\":{\"485\":1}}],[\"能在包体大小仅为原版\",{\"1\":{\"464\":1}}],[\"能够自动设置文字的字体\",{\"1\":{\"409\":1}}],[\"能够发现它确实提供了设置属性值的方法\",{\"1\":{\"407\":1}}],[\"能力非常有限\",{\"1\":{\"387\":1}}],[\"能将运行的\",{\"1\":{\"341\":1}}],[\"能自动化完成javascript\",{\"1\":{\"167\":1}}],[\"测试玩家\",{\"1\":{\"612\":1}}],[\"测试发现目前\",{\"1\":{\"467\":1}}],[\"测试相应源的响应时间\",{\"1\":{\"335\":1}}],[\"测试速度\",{\"0\":{\"335\":1}}],[\"测试等任务\",{\"1\":{\"167\":1}}],[\"性能考虑\",{\"1\":{\"462\":1}}],[\"性能\",{\"1\":{\"368\":1}}],[\"性能会比没有混淆的情况稍微慢一些\",{\"0\":{\"312\":1}}],[\"性能将比没有混淆的情况下降低30\",{\"0\":{\"311\":1}}],[\"性能将比没有混淆的情况下慢50\",{\"0\":{\"310\":1}}],[\"性能优化\",{\"0\":{\"36\":1,\"659\":1},\"1\":{\"374\":1}}],[\"高highp\",{\"1\":{\"623\":1}}],[\"高颜值的画面与只靠手指点触或滑动即可打怪的设定\",{\"1\":{\"549\":1}}],[\"高斯模糊的效果很好\",{\"1\":{\"482\":1}}],[\"高级搜索\",{\"0\":{\"451\":1}}],[\"高级链接\",{\"1\":{\"418\":1}}],[\"高级加密标准\",{\"1\":{\"146\":1}}],[\"高\",{\"1\":{\"394\":1,\"466\":1}}],[\"高达200\",{\"1\":{\"307\":1}}],[\"混沌之戒1\",{\"0\":{\"584\":1}}],[\"混合防御塔和法术\",{\"1\":{\"513\":1}}],[\"混淆\",{\"1\":{\"301\":1,\"376\":2}}],[\"混用\",{\"1\":{\"45\":1}}],[\"美化的工具集\",{\"1\":{\"299\":1}}],[\"链接地址\",{\"1\":{\"418\":1}}],[\"链接名称\",{\"1\":{\"418\":1}}],[\"链接\",{\"1\":{\"296\":1,\"362\":1,\"505\":1}}],[\"链中的错误\",{\"1\":{\"45\":1}}],[\"路径都会被记录\",{\"1\":{\"605\":1}}],[\"路径吗\",{\"1\":{\"357\":1}}],[\"路径添加到path\",{\"1\":{\"294\":1}}],[\"路由导航单一\",{\"1\":{\"495\":1}}],[\"路由结果缓存等工作\",{\"1\":{\"261\":1,\"271\":1}}],[\"路由计算\",{\"1\":{\"261\":1,\"271\":1}}],[\"zip\",{\"1\":{\"636\":11}}],[\"ziemu141hmapcp351w\",{\"1\":{\"626\":1}}],[\"zshrc\",{\"1\":{\"360\":1}}],[\"z\",{\"1\":{\"292\":2}}],[\"zhihu\",{\"1\":{\"505\":1,\"608\":1}}],[\"zh\",{\"1\":{\"76\":1,\"442\":2}}],[\"右边是我们的标签牌层级\",{\"1\":{\"472\":1}}],[\"右键\",{\"1\":{\"292\":1,\"345\":1}}],[\"右下角为图例\",{\"1\":{\"50\":1}}],[\"引擎层面的适配工作\",{\"1\":{\"640\":1}}],[\"引擎进行定制修改了\",{\"1\":{\"637\":1}}],[\"引擎仓库是直接从\",{\"1\":{\"636\":1}}],[\"引擎仓库\",{\"1\":{\"636\":1}}],[\"引擎仓库下并重命名为\",{\"1\":{\"636\":1}}],[\"引擎仓库后\",{\"1\":{\"636\":1}}],[\"引擎在使用前也请确认当前所在分支\",{\"1\":{\"635\":1}}],[\"引擎在使用前请根据\",{\"1\":{\"630\":1}}],[\"引擎类似\",{\"1\":{\"635\":1}}],[\"引擎的基础上\",{\"1\":{\"634\":1}}],[\"引擎的原始版本\",{\"0\":{\"630\":1}}],[\"引擎路径\",{\"0\":{\"631\":1},\"1\":{\"631\":1,\"636\":1}}],[\"引擎就可以了\",{\"1\":{\"629\":1}}],[\"引擎\",{\"0\":{\"629\":1,\"634\":1,\"635\":1},\"1\":{\"628\":2,\"634\":1}}],[\"引擎绘制流程\",{\"1\":{\"493\":1}}],[\"引领\",{\"1\":{\"507\":1}}],[\"引用\",{\"0\":{\"456\":1,\"614\":1},\"1\":{\"290\":1,\"412\":1}}],[\"引入了frontendsession\",{\"1\":{\"247\":1}}],[\"引入了多线程\",{\"1\":{\"29\":1}}],[\"引入\",{\"1\":{\"11\":1,\"29\":1,\"54\":1,\"137\":1}}],[\"📂\",{\"1\":{\"287\":1}}],[\"🚀\",{\"1\":{\"287\":1}}],[\"轻松安装\",{\"1\":{\"287\":1}}],[\"✨\",{\"1\":{\"287\":1}}],[\"🌎\",{\"1\":{\"287\":1}}],[\"特工vs特工\",{\"1\":{\"600\":1}}],[\"特殊在游戏完全剧情向\",{\"1\":{\"530\":1}}],[\"特性的敌人使得防御元素之间的配合依然重要\",{\"1\":{\"514\":1}}],[\"特别适用于添加企业内部的私有源\",{\"1\":{\"333\":1}}],[\"特征\",{\"0\":{\"287\":1}}],[\"特定的服务器还需要加载特定的组件\",{\"1\":{\"285\":1}}],[\"停止服务器\",{\"0\":{\"281\":1}}],[\"停用虚拟环境\",{\"1\":{\"103\":1}}],[\"获知是有服务器停止工作\",{\"1\":{\"281\":1}}],[\"获知是一个subscribe操作\",{\"1\":{\"280\":1}}],[\"获取不到胶囊信息就自定义重置一个\",{\"1\":{\"501\":1}}],[\"获取到文字样式\",{\"1\":{\"400\":1}}],[\"获取到当前工具的选项描述符\",{\"1\":{\"400\":1}}],[\"获取的方式是不一样的\",{\"1\":{\"398\":1}}],[\"获取一些信息\",{\"1\":{\"396\":1}}],[\"获取当前选中的多个图层等\",{\"1\":{\"396\":1}}],[\"获取当前选中的图层\",{\"1\":{\"377\":1}}],[\"获取当前文档\",{\"1\":{\"377\":1}}],[\"获取源码并安装我们的例子应用\",{\"1\":{\"256\":1}}],[\"获取客户端\",{\"0\":{\"239\":1}}],[\"获取项目的根目录\",{\"0\":{\"237\":1}}],[\"获取运行环境的方法为\",{\"1\":{\"236\":1}}],[\"获取\",{\"0\":{\"236\":1,\"635\":1}}],[\"获取远程仓库所有分支的更新\",{\"1\":{\"86\":1}}],[\"获取远程仓库特定分支的更新\",{\"1\":{\"86\":1}}],[\"获取更新\",{\"0\":{\"86\":1}}],[\"获取单个元素\",{\"1\":{\"8\":1}}],[\"周期触发\",{\"0\":{\"277\":1}}],[\"经过综合的考虑\",{\"1\":{\"482\":1}}],[\"经过\",{\"1\":{\"465\":1}}],[\"经过filter链和handler处理\",{\"1\":{\"261\":1,\"271\":1}}],[\"经常面对的是html的dom树\",{\"1\":{\"377\":1}}],[\"经常需要在ps上测试一段小脚本\",{\"1\":{\"348\":1}}],[\"经常不不动\",{\"1\":{\"346\":1}}],[\"经历了这些步骤后\",{\"1\":{\"274\":1}}],[\"控制流程是多个\",{\"1\":{\"273\":1}}],[\"承受来自monitor和client的连接与注册\",{\"1\":{\"273\":1}}],[\"承受客户端的连接\",{\"1\":{\"192\":1}}],[\"诸如此类的问题\",{\"1\":{\"273\":1}}],[\"回忆之旅\",{\"0\":{\"585\":1}}],[\"回声探路\",{\"0\":{\"543\":1}}],[\"回调中执行的\",{\"1\":{\"373\":1}}],[\"回调的时候\",{\"1\":{\"277\":1}}],[\"回调函数里面会调用app\",{\"1\":{\"262\":1}}],[\"回滚代码\",{\"0\":{\"80\":1},\"1\":{\"80\":1}}],[\"才算游戏结束\",{\"1\":{\"545\":1}}],[\"才能完成某一个谜题\",{\"1\":{\"529\":1}}],[\"才能完美适配\",{\"1\":{\"499\":1}}],[\"才能真正掌握这个技能\",{\"1\":{\"411\":1}}],[\"才能成功连接上\",{\"1\":{\"276\":1}}],[\"才对这种黑暗魔法有一丁点了解和沉淀\",{\"1\":{\"411\":1}}],[\"才去顺序的调用每个组件的afterstart方法\",{\"1\":{\"262\":1}}],[\"才去启动应用服务器\",{\"1\":{\"262\":1}}],[\"才会处理第二个请求\",{\"1\":{\"198\":1}}],[\"往往导出的都是一个工厂函数\",{\"1\":{\"262\":1}}],[\"往往会对app进行一些配置\",{\"1\":{\"262\":1}}],[\"往往只需要一台服务器就可以支撑\",{\"1\":{\"234\":1}}],[\"均设置为master服务器所有的\",{\"1\":{\"262\":1}}],[\"均为backendsession\",{\"1\":{\"230\":1}}],[\"子进程执行的是node\",{\"1\":{\"262\":1}}],[\"组件采用\",{\"1\":{\"477\":1}}],[\"组件的生命回调流程\",{\"1\":{\"493\":1}}],[\"组件的基础上\",{\"1\":{\"474\":1}}],[\"组件的加载主要是使用load方法\",{\"1\":{\"261\":1,\"271\":1}}],[\"组件加载\",{\"0\":{\"285\":1}}],[\"组件生命周期\",{\"0\":{\"284\":1}}],[\"组织异常响应结果等\",{\"1\":{\"252\":1}}],[\"访问具体的配置参数\",{\"1\":{\"261\":1}}],[\"访问的浏览器必须支持websocket\",{\"1\":{\"190\":1}}],[\"释放请求上下文的资源\",{\"1\":{\"250\":1}}],[\"释放掉session维护的连接\",{\"1\":{\"197\":1}}],[\"形成一个filter链\",{\"1\":{\"250\":1}}],[\"给予玩家更多沉浸感与解谜乐趣\",{\"1\":{\"536\":1}}],[\"给予不同的权限\",{\"1\":{\"282\":1}}],[\"给它重新赋值\",{\"1\":{\"409\":1}}],[\"给ar设置一个property\",{\"1\":{\"399\":1}}],[\"给app配置一些上下文\",{\"1\":{\"262\":1}}],[\"给这个ar对象设置了枚举属性layer\",{\"1\":{\"394\":1}}],[\"给这个对象设置了一堆属性\",{\"1\":{\"392\":1}}],[\"给需要关心这个动作的其它组件进行监听\",{\"1\":{\"390\":1}}],[\"给某个图层组添加一个图层\",{\"1\":{\"378\":1}}],[\"给javascript代码多一层保护\",{\"1\":{\"304\":1}}],[\"给其发送请求\",{\"1\":{\"282\":1}}],[\"给其所维护的所有已经绑定uid的session广播消息\",{\"1\":{\"230\":1}}],[\"给master发送一条命令\",{\"1\":{\"273\":1}}],[\"给读者一个直观的概念\",{\"1\":{\"240\":1}}],[\"行号\",{\"0\":{\"450\":1}}],[\"行内代码\",{\"1\":{\"430\":1}}],[\"行\",{\"1\":{\"236\":1}}],[\"源间切换\",{\"1\":{\"329\":1}}],[\"源码中设置运行环境的位置\",{\"1\":{\"236\":1}}],[\"源头找到了\",{\"1\":{\"219\":1}}],[\"他还会露出无语的神情\",{\"1\":{\"588\":1}}],[\"他还会跟你击掌\",{\"1\":{\"567\":1}}],[\"他不是离家\",{\"1\":{\"585\":1}}],[\"他逐渐发现这家医院背后的秘密\",{\"1\":{\"564\":1}}],[\"他希望在选中文字工具的时候\",{\"1\":{\"409\":1}}],[\"他们都沉醉于游戏的唯美意境\",{\"1\":{\"587\":1}}],[\"他们共同组成了在每个玩家心中不尽相同的故事\",{\"1\":{\"586\":1}}],[\"他们被要求相互搏斗最终只留下1对人\",{\"1\":{\"584\":1}}],[\"他们是怎么写出来这种代码的\",{\"1\":{\"389\":1}}],[\"他们分别对应不同的权限\",{\"1\":{\"282\":1}}],[\"他们执行的是类似于\",{\"1\":{\"262\":1}}],[\"他接受四个参数\",{\"1\":{\"234\":1}}],[\"他使用用户的uid的crc32的校验码与connector服务器的个数取余\",{\"1\":{\"234\":1}}],[\"支持苹果全系统\",{\"1\":{\"511\":1}}],[\"支持不同的指令集\",{\"1\":{\"461\":1}}],[\"支持中文搜索\",{\"1\":{\"451\":1}}],[\"支持中文\",{\"0\":{\"451\":1}}],[\"支持\",{\"1\":{\"356\":1,\"357\":1}}],[\"支持脚本高亮\",{\"1\":{\"348\":1}}],[\"支持代码编写\",{\"1\":{\"347\":1}}],[\"支持一次增加一台或多台同类型的服务器\",{\"1\":{\"233\":1}}],[\"支持相对路径和绝对路径\",{\"1\":{\"233\":1}}],[\"跟着我的思路\",{\"1\":{\"399\":1}}],[\"跟同类应用服务器数目取余\",{\"1\":{\"246\":1}}],[\"跟pinus\",{\"1\":{\"233\":1}}],[\"跟前端服务器一样\",{\"1\":{\"195\":1}}],[\"口令也为admin\",{\"1\":{\"233\":1}}],[\"堆使用情况\",{\"1\":{\"232\":1}}],[\"内部limboⅱ京东¥\",{\"1\":{\"512\":1}}],[\"内部可以写任何js方法\",{\"1\":{\"267\":1}}],[\"内部可以写任何对框架的配置操作逻辑\",{\"1\":{\"257\":1}}],[\"内存消耗更低\",{\"1\":{\"399\":1}}],[\"内存泄漏分析等\",{\"1\":{\"374\":1}}],[\"内置对象\",{\"0\":{\"381\":1}}],[\"内建属性\",{\"1\":{\"370\":1}}],[\"内建的filter\",{\"1\":{\"230\":1}}],[\"内核渲染的\",{\"1\":{\"357\":1}}],[\"内容较长\",{\"1\":{\"397\":1,\"406\":1}}],[\"内容原创\",{\"1\":{\"389\":1,\"397\":1,\"406\":1}}],[\"内容的修改\",{\"1\":{\"77\":1}}],[\"内容推送到远程分支\",{\"1\":{\"75\":1}}],[\"内容\",{\"0\":{\"81\":1},\"1\":{\"62\":1,\"81\":1}}],[\"消息推送逻辑并不仅仅在后端服务器中使用\",{\"1\":{\"230\":1}}],[\"消息类型通过flag字段的第2\",{\"1\":{\"228\":1}}],[\"消息类型\",{\"0\":{\"228\":1}}],[\"消息头分为三部分\",{\"1\":{\"226\":1}}],[\"范围为0～7\",{\"1\":{\"227\":1}}],[\"占上风的人类对魔女们展开了狩猎行动\",{\"1\":{\"578\":1}}],[\"占用了\",{\"1\":{\"365\":1}}],[\"占用3个bit的message\",{\"1\":{\"227\":1}}],[\"占用一个byte\",{\"1\":{\"226\":1}}],[\"占2个字节\",{\"1\":{\"23\":1}}],[\"踢掉某个在线玩家\",{\"1\":{\"226\":1}}],[\"延迟心跳间隔的时间后再向对方发送一个心跳包\",{\"1\":{\"224\":1}}],[\"没指定表示没有字典压缩\",{\"1\":{\"223\":1}}],[\"没指定表示不需要心跳\",{\"1\":{\"223\":1}}],[\"没有做不到\",{\"1\":{\"559\":1}}],[\"没有包含经验\",{\"1\":{\"530\":1}}],[\"没有任何规则\",{\"1\":{\"527\":1}}],[\"没有任何地方会介绍这个东西是什么\",{\"1\":{\"389\":1}}],[\"没有过多的元素\",{\"1\":{\"517\":1}}],[\"没有非官方文档\",{\"1\":{\"389\":1}}],[\"没有官方文档\",{\"1\":{\"389\":1}}],[\"没有打开的文档返回\",{\"1\":{\"358\":1}}],[\"没有client角色\",{\"1\":{\"282\":1}}],[\"没有具体服务器参数\",{\"1\":{\"262\":1}}],[\"没有给chat定义router\",{\"1\":{\"234\":1}}],[\"没有使用\",{\"1\":{\"233\":1}}],[\"没有表示没有用户自定义的握手数据\",{\"1\":{\"223\":1}}],[\"没有表示没有protobuf压缩\",{\"1\":{\"223\":1}}],[\"没有\",{\"1\":{\"209\":1}}],[\"没有错误的话\",{\"1\":{\"197\":1}}],[\"没有改变远程仓库的\",{\"1\":{\"80\":1}}],[\"没有对应的远程分支\",{\"1\":{\"75\":1}}],[\"握手阶段至此成功结束\",{\"1\":{\"223\":1}}],[\"握手的流程如下\",{\"1\":{\"223\":1}}],[\"握手的内容为utf\",{\"1\":{\"223\":1}}],[\"握手响应的状态码\",{\"1\":{\"223\":1}}],[\"握手响应\",{\"1\":{\"223\":1}}],[\"握手请求\",{\"1\":{\"223\":1}}],[\"握手流程主要提供一个机会\",{\"1\":{\"223\":1}}],[\"握手\",{\"0\":{\"223\":1}}],[\"握手等都做了处理\",{\"1\":{\"221\":1}}],[\"文字\",{\"1\":{\"496\":1}}],[\"文字工具这个目标对象\",{\"1\":{\"409\":1}}],[\"文字样式里头还有字体\",{\"1\":{\"400\":1}}],[\"文字也是黑的\",{\"1\":{\"357\":1}}],[\"文章少量部分内容是本人查询搜集而来\",{\"1\":{\"504\":1}}],[\"文章是我长时间思考\",{\"1\":{\"389\":1,\"397\":1,\"406\":1}}],[\"文章篇幅较长\",{\"1\":{\"389\":1}}],[\"文章结尾\",{\"1\":{\"220\":1}}],[\"文档只是这个对象树的一个分支\",{\"1\":{\"400\":1}}],[\"文档当中都有\",{\"1\":{\"377\":1}}],[\"文档\",{\"1\":{\"374\":1}}],[\"文档提示\",{\"1\":{\"356\":1}}],[\"文件格式必须为\",{\"1\":{\"444\":1}}],[\"文件来将一些文件和目录排除\",{\"1\":{\"443\":1}}],[\"文件来修改网页样式\",{\"1\":{\"357\":1}}],[\"文件结构\",{\"0\":{\"440\":1}}],[\"文件系统\",{\"0\":{\"384\":1}}],[\"文件引用\",{\"0\":{\"383\":1}}],[\"文件映射为\",{\"1\":{\"365\":1}}],[\"文件后记得先关闭面板再重新打开面板让\",{\"1\":{\"365\":1}}],[\"文件里用了注释语法\",{\"1\":{\"365\":1}}],[\"文件路径\",{\"1\":{\"356\":1,\"357\":1}}],[\"文件路径的内容\",{\"1\":{\"64\":1}}],[\"文件内容\",{\"1\":{\"356\":1}}],[\"文件在正确位置\",{\"1\":{\"345\":1}}],[\"文件未显示\",{\"1\":{\"345\":1}}],[\"文件重命名\",{\"1\":{\"171\":1}}],[\"文件夹用于存放我们所有的\",{\"1\":{\"358\":1}}],[\"文件夹下我们一般还会存放其它插件用到的资源\",{\"1\":{\"356\":1}}],[\"文件夹下修改的内容提交到暂存区\",{\"1\":{\"73\":1}}],[\"文件夹\",{\"1\":{\"124\":1,\"159\":1,\"356\":1,\"633\":1}}],[\"文件取消缓存\",{\"1\":{\"79\":1}}],[\"文件\",{\"0\":{\"97\":1,\"365\":1},\"1\":{\"65\":5,\"289\":1,\"341\":1,\"343\":1,\"356\":1,\"358\":1,\"365\":3,\"636\":5}}],[\"文件中\",{\"1\":{\"64\":1,\"103\":1}}],[\"文件的文件对象\",{\"1\":{\"29\":2}}],[\"文件为例\",{\"1\":{\"29\":2}}],[\"应该就能够自己尝试的去写一些am代码了\",{\"1\":{\"406\":1}}],[\"应该是charidtotypeid\",{\"1\":{\"393\":1}}],[\"应该是目前比较常用的jsx脚本调试工具\",{\"1\":{\"347\":1}}],[\"应该可以连接除127\",{\"1\":{\"220\":1}}],[\"应用入口设置\",{\"0\":{\"267\":1}}],[\"应用服务器将接受外来的请求\",{\"1\":{\"262\":1}}],[\"应用服务器将会被启动\",{\"1\":{\"262\":1}}],[\"应用服务器启动完成\",{\"1\":{\"262\":1}}],[\"应用服务器与master服务器在app\",{\"1\":{\"262\":1}}],[\"应用服务器的host\",{\"1\":{\"261\":1}}],[\"应用服务器的服务器id\",{\"1\":{\"261\":1}}],[\"应用服务器a和b并不会共享channel\",{\"1\":{\"248\":1}}],[\"应用的读者应该都见过个名为\",{\"1\":{\"356\":1}}],[\"应用的\",{\"1\":{\"350\":1}}],[\"应用的功能选项可以通过enable和disable来打开和关闭\",{\"1\":{\"267\":1}}],[\"应用的功能选项配置可以通过enable和disable来打开和关闭\",{\"1\":{\"261\":1}}],[\"应用的变量可以通过set和get方法进行存取\",{\"1\":{\"267\":1}}],[\"应用的管理用户可以通过修改config\",{\"1\":{\"233\":1}}],[\"应用逻辑服务器是后端服务器\",{\"1\":{\"243\":1}}],[\"应用逻辑服务器\",{\"0\":{\"243\":1}}],[\"应用程序\",{\"1\":{\"159\":1}}],[\"应用程序就需要自己来实现锁定\",{\"1\":{\"34\":1}}],[\"应用上商店的朋友\",{\"1\":{\"159\":1}}],[\"写新人教程实在是太费劲了\",{\"1\":{\"374\":1}}],[\"写在后面\",{\"0\":{\"220\":1}}],[\"写入这段内存空间\",{\"1\":{\"29\":1}}],[\"写入\",{\"1\":{\"24\":8,\"32\":1}}],[\"聊天中的回复选择和接受语音信息的设计也很有意思\",{\"1\":{\"580\":1}}],[\"聊天\",{\"1\":{\"217\":1,\"580\":1}}],[\"常态还是淡入状态\",{\"1\":{\"469\":1}}],[\"常用语法\",{\"0\":{\"414\":1}}],[\"常用匹配示例\",{\"0\":{\"65\":1}}],[\"常见术语\",{\"0\":{\"240\":1}}],[\"常识\",{\"0\":{\"217\":1}}],[\"填入两栏表单后\",{\"1\":{\"215\":1}}],[\"☼\",{\"1\":{\"213\":1}}],[\"连接调试器\",{\"0\":{\"213\":1}}],[\"连续无空位\",{\"1\":{\"8\":1}}],[\"►\",{\"1\":{\"212\":1}}],[\"准备调试\",{\"0\":{\"211\":1}}],[\"及\",{\"1\":{\"210\":1}}],[\"附\",{\"0\":{\"210\":1}}],[\"补充画中的元素\",{\"1\":{\"586\":1}}],[\"补充\",{\"1\":{\"209\":1}}],[\"调皮的胶囊按钮\",{\"1\":{\"496\":1}}],[\"调整图层的大小\",{\"1\":{\"394\":1}}],[\"调度是由pinus\",{\"1\":{\"262\":1}}],[\"调用app\",{\"1\":{\"281\":1}}],[\"调用\",{\"1\":{\"262\":1,\"357\":1,\"362\":1}}],[\"调用传递来的\",{\"1\":{\"197\":1}}],[\"调试\",{\"0\":{\"373\":1,\"651\":1},\"1\":{\"341\":1}}],[\"调试typescript项目\",{\"0\":{\"341\":1}}],[\"调试器连接的ip地址\",{\"1\":{\"220\":1}}],[\"调试器已连接\",{\"1\":{\"213\":1}}],[\"调试器配置\",{\"1\":{\"209\":1}}],[\"调试按钮\",{\"1\":{\"213\":1}}],[\"调试按钮前面的配置下拉菜单中\",{\"1\":{\"212\":1}}],[\"调试按钮前面的小三角进入\",{\"1\":{\"208\":1}}],[\"调试配置选择\",{\"1\":{\"212\":1}}],[\"使导航内容居中\",{\"1\":{\"501\":1}}],[\"使其更加适合小游戏运行\",{\"1\":{\"476\":1}}],[\"使代码增大且变得难以理解\",{\"1\":{\"307\":1}}],[\"使得游戏更具挑战性\",{\"1\":{\"539\":1}}],[\"使得游戏可玩性大大增加\",{\"1\":{\"522\":1}}],[\"使得这款最真实的解谜游戏成为名副其实的艺术品\",{\"1\":{\"526\":1}}],[\"使得2作完好保持了前作的水准\",{\"1\":{\"521\":1}}],[\"使得人物更加诡秘\",{\"1\":{\"520\":1}}],[\"使得全屏唯一明亮的就是小男孩坚定的眼睛\",{\"1\":{\"512\":1}}],[\"使得对大多数开发者而言\",{\"1\":{\"397\":1}}],[\"使得能够周期地推送数据\",{\"1\":{\"275\":1}}],[\"使得master可以周期性地获取监控信息\",{\"1\":{\"274\":1}}],[\"使得pinus会把其当作master服务器启动\",{\"1\":{\"262\":1}}],[\"使得推送消息的时候\",{\"1\":{\"230\":1}}],[\"使gate服务器的配置组变成这样\",{\"1\":{\"206\":1}}],[\"使用签名初始化\",{\"1\":{\"614\":1}}],[\"使用的寻路算法\",{\"1\":{\"480\":1}}],[\"使用的管理用户的username和password直接使用默认的admin即可\",{\"1\":{\"233\":1}}],[\"使用哪些技术方案\",{\"1\":{\"464\":1}}],[\"使用实例\",{\"1\":{\"420\":1}}],[\"使用对应的putxxx方法来设置\",{\"1\":{\"408\":1}}],[\"使用全局变量\",{\"1\":{\"358\":1}}],[\"使用立即执行函数避免全局污染\",{\"1\":{\"358\":1}}],[\"使用这个就可以快速地在\",{\"1\":{\"329\":1}}],[\"使用14\",{\"1\":{\"297\":1}}],[\"使用指定版本node\",{\"1\":{\"297\":1}}],[\"使用非正式的时序图来说明其流程\",{\"1\":{\"278\":1}}],[\"使用application\",{\"1\":{\"272\":1}}],[\"使用如下命令切换分支\",{\"1\":{\"272\":1}}],[\"使用方式如下\",{\"1\":{\"402\":1}}],[\"使用方式都是与上报时间的方式是一样的\",{\"1\":{\"272\":1}}],[\"使用方法\",{\"0\":{\"185\":1},\"1\":{\"377\":1}}],[\"使用其他的事件触发方式\",{\"1\":{\"262\":1}}],[\"使用命令\",{\"1\":{\"262\":1}}],[\"使用pinus开发应用时\",{\"1\":{\"262\":1}}],[\"使用pinus框架的话\",{\"1\":{\"240\":1}}],[\"使用namespace进行区分\",{\"1\":{\"245\":1}}],[\"使用next\",{\"1\":{\"197\":1}}],[\"使用多台服务器要考虑负载平衡\",{\"1\":{\"234\":1}}],[\"使用同样的服务器分配策略\",{\"1\":{\"234\":1}}],[\"使用json作为其通信格式\",{\"1\":{\"221\":1}}],[\"使用了res\",{\"1\":{\"218\":1}}],[\"使用得心应手的ide来开发应用程序\",{\"1\":{\"202\":1}}],[\"使用当前填写的值生成authorization\",{\"1\":{\"163\":1}}],[\"使用数据源为dt安装\",{\"0\":{\"130\":1}}],[\"使用\",{\"0\":{\"124\":1,\"331\":1,\"366\":1},\"1\":{\"32\":1,\"76\":1,\"236\":1,\"288\":1,\"307\":1,\"366\":1}}],[\"插入排序\",{\"1\":{\"485\":1}}],[\"插入\",{\"1\":{\"431\":1}}],[\"插入下面代码\",{\"1\":{\"206\":1}}],[\"插件版本为\",{\"1\":{\"461\":1}}],[\"插件版本和\",{\"1\":{\"461\":1}}],[\"插件推荐\",{\"0\":{\"458\":1}}],[\"插件地址github地址\",{\"1\":{\"454\":1}}],[\"插件多了一些分享方式\",{\"1\":{\"453\":1}}],[\"插件去掉\",{\"1\":{\"451\":1}}],[\"插件那就永远不写了\",{\"1\":{\"374\":1}}],[\"插件定位调试\",{\"1\":{\"373\":1}}],[\"插件调用的\",{\"0\":{\"373\":1}}],[\"插件了解的加深\",{\"1\":{\"362\":1}}],[\"插件只有两种情况能被加载\",{\"1\":{\"359\":1}}],[\"插件和面板的关系\",{\"1\":{\"356\":1}}],[\"插件是可以包含多个面板\",{\"1\":{\"356\":1}}],[\"插件最小宽高\",{\"1\":{\"356\":1}}],[\"插件最大宽高\",{\"1\":{\"356\":1}}],[\"插件默认宽高\",{\"1\":{\"356\":1}}],[\"插件名称\",{\"1\":{\"356\":1}}],[\"插件支持的语言\",{\"1\":{\"356\":1}}],[\"插件可以注册多个面板\",{\"1\":{\"356\":1}}],[\"插件中也必须存在一个这样的配置文件\",{\"1\":{\"356\":1}}],[\"插件查找顺序\",{\"0\":{\"355\":1}}],[\"插件的代码按照职责可以分为两部分\",{\"1\":{\"358\":1}}],[\"插件的\",{\"1\":{\"352\":1}}],[\"插件必须要放在特定的文件夹才能被\",{\"1\":{\"351\":2}}],[\"插件面板有一个按钮\",{\"1\":{\"349\":1}}],[\"插件\",{\"0\":{\"171\":1,\"649\":1},\"1\":{\"346\":1,\"351\":2,\"356\":2,\"365\":1,\"368\":1,\"373\":1,\"456\":1}}],[\"插件高质量\",{\"1\":{\"167\":1}}],[\"插件安装命令\",{\"0\":{\"446\":1}}],[\"插件安装\",{\"1\":{\"159\":1}}],[\"打碎一切阻碍\",{\"1\":{\"596\":1}}],[\"打造了这款可以玩的侦探小说\",{\"1\":{\"580\":1}}],[\"打包然后在进行发布\",{\"1\":{\"376\":1}}],[\"打包成单文件那代码更乱了\",{\"1\":{\"372\":1}}],[\"打包成单文件\",{\"1\":{\"372\":1}}],[\"打印的内容\",{\"1\":{\"346\":1}}],[\"打印统计日志等\",{\"1\":{\"250\":1}}],[\"打开了一扇窗户\",{\"1\":{\"390\":1}}],[\"打开新的\",{\"1\":{\"367\":1}}],[\"打开地址\",{\"1\":{\"366\":1}}],[\"打开插件步骤\",{\"1\":{\"361\":1}}],[\"打开插件时刷新\",{\"1\":{\"357\":1}}],[\"打开注册表编辑器\",{\"1\":{\"361\":1}}],[\"打开面板时更新当前图层名称\",{\"1\":{\"357\":1}}],[\"打开后不会显示界面\",{\"1\":{\"356\":1}}],[\"打开systemmonitor选项会使得默认加载额外的admin\",{\"1\":{\"261\":1}}],[\"打开app\",{\"1\":{\"214\":1}}],[\"打开edit\",{\"1\":{\"208\":1}}],[\"打开\",{\"0\":{\"208\":1},\"1\":{\"343\":1}}],[\"打开game\",{\"1\":{\"205\":1}}],[\"打开文件所在位置\",{\"1\":{\"292\":1}}],[\"打开文件\",{\"0\":{\"205\":1}}],[\"打压缩包\",{\"1\":{\"97\":1}}],[\"便会将这个子文件夹识别为一个\",{\"1\":{\"356\":1}}],[\"便可以登录进来了\",{\"1\":{\"219\":1}}],[\"便可以你指定的参数运行node\",{\"1\":{\"203\":1}}],[\"便于利用\",{\"1\":{\"479\":1}}],[\"便于查找\",{\"1\":{\"82\":1}}],[\"便于下次取出\",{\"1\":{\"82\":1}}],[\"希望你可以学会这套方法来探索更多的内容\",{\"1\":{\"411\":1}}],[\"希望阅读本篇文章之后\",{\"1\":{\"396\":1}}],[\"希望通过这三篇文章\",{\"1\":{\"389\":1}}],[\"希望读者能够甄辨\",{\"1\":{\"273\":1}}],[\"希望本文也可以有一些帮助\",{\"1\":{\"202\":1}}],[\"希望对那些对js中的prototype\",{\"1\":{\"54\":1}}],[\"传统的方案是改变图片材质\",{\"1\":{\"469\":1}}],[\"传统上\",{\"1\":{\"25\":1}}],[\"传递给它一个参数\",{\"1\":{\"394\":1}}],[\"传递错误参数\",{\"1\":{\"201\":1}}],[\"超爽的打击快感让很多玩家\",{\"1\":{\"596\":1}}],[\"超级兄弟\",{\"0\":{\"547\":1}}],[\"超过步数要求则会直接失败重来\",{\"1\":{\"536\":1}}],[\"超过一个阀值时\",{\"1\":{\"201\":1}}],[\"超现实的电子风格画风\",{\"1\":{\"518\":1}}],[\"超出这个范围\",{\"1\":{\"14\":1}}],[\"定制引擎\",{\"0\":{\"661\":1}}],[\"定制runtime\",{\"0\":{\"641\":1}}],[\"定制mini\",{\"0\":{\"640\":1}}],[\"定制jsb\",{\"0\":{\"639\":1}}],[\"定制\",{\"0\":{\"629\":1,\"634\":1},\"1\":{\"495\":1}}],[\"定义的router就是使用了用户的rid的crc校验码作为键值对当前的所有chat服务器个数做了一个简单的hash运算\",{\"1\":{\"234\":1}}],[\"定义处理图像的回调函数\",{\"1\":{\"29\":1}}],[\"定位到\",{\"1\":{\"214\":1,\"361\":1}}],[\"定时器将会被清除\",{\"1\":{\"199\":1}}],[\"绑定连接\",{\"0\":{\"279\":1}}],[\"绑定的uid以及用户自定义的字段\",{\"1\":{\"247\":1}}],[\"绑定\",{\"0\":{\"196\":1}}],[\"故此时master组件的启动过程已经完毕\",{\"1\":{\"262\":1}}],[\"故会创建master组件\",{\"1\":{\"262\":1}}],[\"故需要做一个路由选择\",{\"1\":{\"195\":1}}],[\"故通过函数创建的对象即使自己没有constructor属性\",{\"1\":{\"53\":1}}],[\"处理\",{\"1\":{\"488\":1}}],[\"处理速度\",{\"1\":{\"482\":1}}],[\"处理器\",{\"1\":{\"461\":3}}],[\"处理相应功能\",{\"0\":{\"265\":1}}],[\"处理链对err将不再敏感\",{\"1\":{\"197\":1}}],[\"处理客户端的请求和响应是pinus的核心之一\",{\"1\":{\"192\":1}}],[\"处理之后再将结果转成指定的数组格式\",{\"1\":{\"22\":1}}],[\"主角100天内的行为影响最终剧情\",{\"1\":{\"578\":1}}],[\"主流的\",{\"1\":{\"461\":1}}],[\"主动请求\",{\"0\":{\"278\":1}}],[\"主要包括以下两个目录结构\",{\"1\":{\"639\":1}}],[\"主要用于版本发布之前的研发工作\",{\"1\":{\"628\":1}}],[\"主要用于需要广播推送消息的场景\",{\"1\":{\"248\":1}}],[\"主要是开发成本的原因\",{\"1\":{\"472\":1}}],[\"主要加载的组件是master组件\",{\"1\":{\"285\":1}}],[\"主要负责监控请求响应时间\",{\"1\":{\"271\":1}}],[\"主要负责记录请求的相应时间\",{\"1\":{\"271\":1}}],[\"主要负责保证所有从客户端到服务端的请求能够按顺序地处理\",{\"1\":{\"271\":1}}],[\"主要就是根据module的参数type和interval\",{\"1\":{\"262\":1}}],[\"主要介绍hybridconector实现的具体的通信协议\",{\"1\":{\"221\":1}}],[\"主要介绍pinus是如何与客户端通信以及前端服务器是如何处理用户请求的\",{\"1\":{\"192\":1}}],[\"主线程实际上会拒绝进入休眠\",{\"1\":{\"32\":1}}],[\"主线程使用\",{\"1\":{\"32\":1}}],[\"主线程一旦更改了指定位置的值\",{\"1\":{\"32\":1}}],[\"主线程用\",{\"1\":{\"30\":1}}],[\"主线程用来与用户互动\",{\"1\":{\"29\":1}}],[\"主线程的\",{\"1\":{\"30\":1}}],[\"主线程的原始顺序是先对\",{\"1\":{\"29\":1}}],[\"主线程共享的数据\",{\"1\":{\"29\":1}}],[\"主线程将共享内存的地址发送出去\",{\"1\":{\"29\":1}}],[\"主线程先发一个消息\",{\"1\":{\"29\":1}}],[\"主线程通过\",{\"1\":{\"29\":1}}],[\"主线程新建了一个\",{\"1\":{\"29\":1}}],[\"主线程\",{\"1\":{\"29\":5,\"30\":2,\"32\":2}}],[\"阻止新玩家进入游戏\",{\"1\":{\"188\":1}}],[\"兆\",{\"1\":{\"187\":1}}],[\"服务器提供图片压缩等耗时任务\",{\"1\":{\"356\":1}}],[\"服务器重连\",{\"0\":{\"282\":1}}],[\"服务器完成关闭\",{\"1\":{\"262\":1}}],[\"服务器应该监听的端口等信息\",{\"1\":{\"262\":1}}],[\"服务器的管理和监控由master服务器加载的master\",{\"1\":{\"272\":1}}],[\"服务器的类型\",{\"1\":{\"262\":1}}],[\"服务器的host\",{\"1\":{\"261\":1}}],[\"服务器的服务器id\",{\"1\":{\"261\":1}}],[\"服务器的配置主要由configure\",{\"1\":{\"257\":1,\"267\":1}}],[\"服务器的servertype\",{\"1\":{\"187\":1}}],[\"服务器的serverid\",{\"1\":{\"187\":1}}],[\"服务器端处理后会给其返回响应response\",{\"1\":{\"249\":1}}],[\"服务器端口号\",{\"1\":{\"189\":1}}],[\"服务器名字\",{\"1\":{\"234\":1}}],[\"服务器id等\",{\"1\":{\"233\":1}}],[\"服务器主动断开\",{\"0\":{\"226\":1}}],[\"服务器主动断开连接通知\",{\"1\":{\"222\":1}}],[\"服务器检测到心跳超时并不会主动断开客户端的连接\",{\"1\":{\"224\":1}}],[\"服务器检验握手数据后\",{\"1\":{\"223\":1}}],[\"服务器和客户端收到心跳包后\",{\"1\":{\"224\":1}}],[\"服务器可以配置心跳时间间隔\",{\"1\":{\"224\":1}}],[\"服务器可以由此来判断当前客户端是否合适与服务器通讯\",{\"1\":{\"223\":1}}],[\"服务器类型\",{\"1\":{\"189\":1,\"232\":1,\"257\":1,\"267\":1}}],[\"服务器标识\",{\"1\":{\"189\":1}}],[\"服务器对应的进程pid\",{\"1\":{\"187\":1}}],[\"服务器状态可以查看6种状态信息\",{\"1\":{\"187\":1}}],[\"服务器状态查看\",{\"0\":{\"187\":1}}],[\"服务器通过\",{\"1\":{\"25\":1}}],[\"环境配置\",{\"0\":{\"360\":1,\"361\":1}}],[\"环境直接写\",{\"1\":{\"356\":1,\"357\":1}}],[\"环境的一些参数\",{\"1\":{\"356\":1,\"357\":1}}],[\"环境是隔离的\",{\"1\":{\"356\":1,\"357\":1}}],[\"环境变量配置\",{\"0\":{\"290\":1}}],[\"环境变量是否设置\",{\"1\":{\"236\":1}}],[\"环境\",{\"1\":{\"185\":2}}],[\"环境和包\",{\"1\":{\"103\":1}}],[\"免token构建\",{\"1\":{\"180\":1}}],[\"元气骑士动漫游戏周边衣服男女春秋装高领连帽卫衣韩版淘宝¥\",{\"1\":{\"550\":1}}],[\"元气骑士\",{\"0\":{\"550\":1}}],[\"元字符\",{\"0\":{\"174\":1}}],[\"元素\",{\"1\":{\"365\":1}}],[\"元素之中\",{\"1\":{\"29\":1}}],[\"元素的专有类型\",{\"1\":{\"26\":1}}],[\"元素输出的二进制像素数据\",{\"1\":{\"26\":1}}],[\"次\",{\"1\":{\"173\":3}}],[\"限定符\",{\"0\":{\"173\":1}}],[\"启用\",{\"1\":{\"366\":1}}],[\"启用实验性的es装饰器\",{\"1\":{\"137\":1}}],[\"启动服务\",{\"0\":{\"438\":1}}],[\"启动所配置的服务器集群\",{\"1\":{\"244\":1}}],[\"启动完成后事件\",{\"0\":{\"238\":1}}],[\"启动时长\",{\"1\":{\"232\":1}}],[\"启动应用及服务器\",{\"1\":{\"232\":1}}],[\"启动了master服务器\",{\"1\":{\"203\":1}}],[\"启动game\",{\"1\":{\"186\":1}}],[\"启动项目\",{\"0\":{\"186\":1}}],[\"启动实时刷新\",{\"1\":{\"171\":1}}],[\"启动一个服务器\",{\"1\":{\"171\":1}}],[\"复杂感人的剧情都可成为游戏卖点\",{\"1\":{\"542\":1}}],[\"复杂的例子\",{\"0\":{\"409\":1}}],[\"复仇\",{\"0\":{\"516\":1}}],[\"复制所有文件\",{\"1\":{\"170\":1}}],[\"复制仅img目录下所有png图片\",{\"1\":{\"170\":1}}],[\"复制图片\",{\"1\":{\"170\":1}}],[\"复合视图\",{\"1\":{\"22\":1}}],[\"管道\",{\"1\":{\"169\":1}}],[\"管理操作应用服务器群\",{\"1\":{\"272\":1}}],[\"管理精细化\",{\"1\":{\"162\":1}}],[\"管理用例\",{\"0\":{\"162\":1}}],[\"监视变量\",{\"1\":{\"343\":1}}],[\"监控管理模型大致可以分为两类\",{\"1\":{\"273\":1}}],[\"监控内存\",{\"0\":{\"36\":1}}],[\"监听所有\",{\"0\":{\"238\":1}}],[\"监听\",{\"1\":{\"170\":1}}],[\"监听文件变化\",{\"1\":{\"167\":1}}],[\"检查文件路径是否正确\",{\"1\":{\"345\":1}}],[\"检查当前玩家是否已登录\",{\"1\":{\"250\":1}}],[\"检查窗口下方的debugger\",{\"1\":{\"213\":1}}],[\"检查\",{\"1\":{\"167\":1}}],[\"检查一下\",{\"1\":{\"34\":1}}],[\"压缩级别是\",{\"1\":{\"488\":1}}],[\"压缩多个文件到一个文件\",{\"0\":{\"302\":1}}],[\"压缩js文件\",{\"1\":{\"171\":1}}],[\"压缩\",{\"1\":{\"167\":1,\"299\":1,\"301\":1}}],[\"介绍了在app\",{\"1\":{\"261\":1}}],[\"介绍了pinus提供的hybridconnector的线上协议\",{\"1\":{\"229\":1}}],[\"介绍了前端服务器与客户端的通信的相关内容\",{\"1\":{\"201\":1}}],[\"介绍\",{\"0\":{\"167\":1,\"304\":1,\"317\":1,\"322\":1}}],[\"​\",{\"1\":{\"165\":1}}],[\"​​用途​​\",{\"1\":{\"45\":1}}],[\"​​与\",{\"1\":{\"44\":1}}],[\"​​输出结构​​\",{\"1\":{\"43\":1}}],[\"​​适用场景​​\",{\"1\":{\"42\":1}}],[\"​​核心逻辑​​\",{\"1\":{\"41\":1}}],[\"​​特点​​\",{\"1\":{\"40\":1}}],[\"​​场景​​\",{\"1\":{\"39\":1}}],[\"中随便设置一个签名\",{\"1\":{\"638\":1}}],[\"中mediump\",{\"1\":{\"623\":1}}],[\"中毒\",{\"1\":{\"596\":1}}],[\"中小学生周边文具盒大容量钢笔铅淘宝¥\",{\"1\":{\"559\":1}}],[\"中搜到\",{\"1\":{\"530\":1}}],[\"中体验\",{\"1\":{\"524\":1}}],[\"中有很多建筑物\",{\"1\":{\"484\":1}}],[\"中设置的宽高\",{\"1\":{\"475\":1}}],[\"中删除\",{\"1\":{\"461\":1}}],[\"中需要的\",{\"1\":{\"461\":1}}],[\"中文设置\",{\"1\":{\"442\":1}}],[\"中代码的插入也可以分为行内和块间两种\",{\"1\":{\"430\":1}}],[\"中篇介绍如何从ps中获取信息\",{\"1\":{\"397\":1}}],[\"中运行\",{\"1\":{\"391\":1}}],[\"中隐藏函数属性\",{\"1\":{\"370\":1}}],[\"中添加下面两个别名\",{\"1\":{\"360\":1}}],[\"中所有的相对路径都是相对于插件的根路径\",{\"1\":{\"356\":1}}],[\"中手动映射\",{\"1\":{\"345\":1}}],[\"中调试\",{\"1\":{\"344\":1}}],[\"中启用\",{\"1\":{\"341\":1}}],[\"中的图块菱形方块\",{\"1\":{\"474\":1}}],[\"中的一个常见元素\",{\"1\":{\"471\":1}}],[\"中的\",{\"1\":{\"358\":1,\"447\":1,\"488\":1}}],[\"中的各种信息\",{\"1\":{\"358\":1}}],[\"中的字符串\",{\"1\":{\"307\":1}}],[\"中的断点\",{\"1\":{\"214\":1}}],[\"中\",{\"1\":{\"163\":1,\"343\":1,\"356\":1,\"358\":1,\"389\":1,\"469\":1,\"483\":1,\"487\":1,\"536\":2}}],[\"中间使用\",{\"1\":{\"83\":1}}],[\"中间所有变动合并至当前分支\",{\"1\":{\"83\":1}}],[\"中间\",{\"1\":{\"64\":1}}],[\"中间不会被打断\",{\"1\":{\"29\":1}}],[\"密屋逃脱\",{\"1\":{\"549\":1}}],[\"密码的信息放在请求的\",{\"1\":{\"163\":1}}],[\"密钥加密等\",{\"1\":{\"151\":1}}],[\"密钥长度的最少支持为128\",{\"1\":{\"146\":1}}],[\"身份验证authentication\",{\"0\":{\"163\":1}}],[\"七\",{\"0\":{\"163\":1}}],[\"保护最后一颗\",{\"1\":{\"529\":1}}],[\"保存字符串内容到文件\",{\"1\":{\"491\":1}}],[\"保存为文件\",{\"1\":{\"308\":1}}],[\"保存好之后就可以在这里看到啦\",{\"1\":{\"162\":1}}],[\"保持master与各个服务器的心跳连接\",{\"1\":{\"271\":1,\"285\":1}}],[\"保留兼容性\",{\"1\":{\"221\":1}}],[\"保证自身颜色与路面相同\",{\"1\":{\"583\":1}}],[\"保证数据的完整性\",{\"1\":{\"188\":1}}],[\"保证游戏逻辑正常\",{\"1\":{\"188\":1}}],[\"保证所有共享内存的操作都是\",{\"1\":{\"29\":1}}],[\"什么动物都有\",{\"1\":{\"566\":1}}],[\"什么都搜不到\",{\"1\":{\"389\":1}}],[\"什么样的接口请求可以放在同一个collection里\",{\"1\":{\"162\":1}}],[\"什么叫\",{\"1\":{\"29\":1}}],[\"六级标题\",{\"1\":{\"416\":1}}],[\"六\",{\"0\":{\"162\":1}}],[\"差不多\",{\"1\":{\"161\":1}}],[\"朋友们可以自行去查看\",{\"1\":{\"161\":1}}],[\"举例\",{\"1\":{\"355\":1}}],[\"举例了\",{\"1\":{\"161\":1}}],[\"举例来说\",{\"1\":{\"26\":1}}],[\"表现在顶部到胶囊按钮之间的距离差了6pt\",{\"1\":{\"497\":1}}],[\"表格\",{\"0\":{\"431\":1},\"1\":{\"431\":1}}],[\"表头\",{\"1\":{\"421\":2}}],[\"表单提交\",{\"1\":{\"161\":1}}],[\"表示当前选中的工具的选项部分配置\",{\"1\":{\"409\":1}}],[\"表示你我只要获取targetlayersids属性的值\",{\"1\":{\"399\":1}}],[\"表示我要对某个对象做动作\",{\"1\":{\"398\":1}}],[\"表示的显示show的含义\",{\"1\":{\"393\":1}}],[\"表示的是图层layer的意思\",{\"1\":{\"393\":1}}],[\"表示10英寸\",{\"1\":{\"380\":1}}],[\"表示70像素\",{\"1\":{\"380\":1}}],[\"表示将添加随机废代码到被混淆代码中\",{\"1\":{\"307\":1}}],[\"表示代码控制流展平的概率\",{\"1\":{\"307\":1}}],[\"表示开启代码控制流展平\",{\"1\":{\"307\":1}}],[\"表示用户目录\",{\"1\":{\"291\":1}}],[\"表示未压缩的route\",{\"1\":{\"229\":1}}],[\"表示不影响消息类型的bit位\",{\"1\":{\"228\":1}}],[\"表示剔除某个文件\",{\"1\":{\"170\":1,\"171\":1}}],[\"表示全部取最新\",{\"1\":{\"102\":1}}],[\"表示过了这个时间以后\",{\"1\":{\"32\":1}}],[\"表示使用小端字节序写入\",{\"1\":{\"24\":1}}],[\"表示使用大端字节序写入\",{\"1\":{\"24\":1}}],[\"表示倒数第二个位置\",{\"1\":{\"20\":1}}],[\"表示原数组的具体位置\",{\"1\":{\"20\":1}}],[\"表示从哪个字节开始写入\",{\"1\":{\"24\":1}}],[\"表示从哪个字节开始读取\",{\"1\":{\"23\":1}}],[\"表示从\",{\"1\":{\"18\":1}}],[\"表示\",{\"1\":{\"14\":1,\"34\":1,\"173\":3}}],[\"表示这种数据类型占据的字节数\",{\"1\":{\"12\":1}}],[\"表示参数是否为\",{\"1\":{\"7\":1}}],[\"百度\",{\"1\":{\"161\":1}}],[\"响应的是\",{\"1\":{\"161\":1}}],[\"响应的格式可以有多种\",{\"1\":{\"161\":1}}],[\"响应体示例\",{\"1\":{\"161\":1}}],[\"响应时间\",{\"1\":{\"161\":1}}],[\"响应\",{\"1\":{\"161\":1}}],[\"五级标题\",{\"1\":{\"416\":1}}],[\"五\",{\"0\":{\"161\":1}}],[\"四指抽搐\",{\"1\":{\"525\":1}}],[\"四级标题\",{\"1\":{\"416\":1}}],[\"四个参数中\",{\"1\":{\"234\":1}}],[\"四\",{\"0\":{\"160\":1}}],[\"我从来没有这么喜欢广告过\",{\"1\":{\"601\":1}}],[\"我自奔月去\",{\"1\":{\"587\":1}}],[\"我自己可以登录到聊天界面\",{\"1\":{\"218\":1}}],[\"我第一次这么喜欢柜子\",{\"1\":{\"564\":1}}],[\"我的世界末影龙笔袋\",{\"1\":{\"559\":1}}],[\"我的世界\",{\"0\":{\"559\":1}}],[\"我的狗窝\",{\"1\":{\"442\":1}}],[\"我相信\",{\"1\":{\"558\":1}}],[\"我永不孤单\",{\"1\":{\"551\":1}}],[\"我还喜欢游戏的插画式画风\",{\"1\":{\"546\":1}}],[\"我将与你同生共死\",{\"1\":{\"542\":1}}],[\"我将这些中比较好用的也分享给大家\",{\"1\":{\"400\":1}}],[\"我是谁\",{\"1\":{\"532\":1}}],[\"我最喜欢的还是游戏那些唯美长情的bgm\",{\"1\":{\"530\":1}}],[\"我只想活下去\",{\"1\":{\"527\":1}}],[\"我现在只想知道那个爱说鸡汤话的npc和变蓝的门腾哥后来怎么样了\",{\"1\":{\"507\":1}}],[\"我现在只学会了抄作业\",{\"1\":{\"396\":1}}],[\"我得到如下信息\",{\"1\":{\"497\":1}}],[\"我特意找了一张图片来\",{\"1\":{\"497\":1}}],[\"我先去翻了官方文档\",{\"1\":{\"497\":1}}],[\"我如果要修改这个图层的名称为abc\",{\"1\":{\"408\":1}}],[\"我上面例子只输出了基础类型的属性值\",{\"1\":{\"398\":1}}],[\"我在7年后等着你\",{\"0\":{\"558\":1}}],[\"我在前些年将这些am脚本做了封装和抽象\",{\"1\":{\"395\":1}}],[\"我在日常开发插件产品的时候\",{\"1\":{\"348\":1}}],[\"我能猜到open是打开的意思\",{\"1\":{\"392\":1}}],[\"我写了一个typescript的typings\",{\"1\":{\"392\":1}}],[\"我已经打包好了放在下面的链接当中\",{\"1\":{\"391\":1}}],[\"我会努力将这套方法一点点剖析出来\",{\"1\":{\"406\":1}}],[\"我会讲述一个更好的办法\",{\"1\":{\"393\":1}}],[\"我会通过上\",{\"1\":{\"389\":1}}],[\"我会随着日常开发不断往里面迭代功能\",{\"1\":{\"348\":1}}],[\"我对这个dom树做了一些归类\",{\"1\":{\"377\":1}}],[\"我就会死\",{\"1\":{\"573\":1}}],[\"我就可以通过ad获取到当前输入文字的样式\",{\"1\":{\"400\":1}}],[\"我就不再一一介绍了\",{\"1\":{\"386\":1}}],[\"我就不展开介绍了\",{\"1\":{\"376\":1}}],[\"我就贴一下最常用的\",{\"1\":{\"370\":1}}],[\"我希望读者能够意识到\",{\"1\":{\"374\":1}}],[\"我也是这么想的\",{\"1\":{\"220\":1}}],[\"我可以在浏览器里打开http\",{\"1\":{\"217\":1}}],[\"我这里弄了一份\",{\"1\":{\"387\":1}}],[\"我这里就不一一介绍了\",{\"1\":{\"377\":1}}],[\"我这里把这几个注册表都导出来了\",{\"1\":{\"361\":1}}],[\"我这里的地址是192\",{\"1\":{\"217\":1}}],[\"我这里用32312\",{\"1\":{\"209\":1}}],[\"我这里由于请求的是\",{\"1\":{\"161\":1}}],[\"我没有试过\",{\"1\":{\"159\":1}}],[\"我们能否通过后天的选择改变命运\",{\"1\":{\"599\":1}}],[\"我们享受的也是休闲的制作环境和制作完成后满满的成就感\",{\"1\":{\"598\":1}}],[\"我们甚至能看清棱镜的每一面纹理\",{\"1\":{\"581\":1}}],[\"我们究竟该扮演游戏中的哪个人物呢\",{\"1\":{\"540\":1}}],[\"我们该如何看待信任以在社会立足\",{\"1\":{\"540\":1}}],[\"我们写一个状态栏\",{\"1\":{\"498\":1}}],[\"我们遇到了以下的问题\",{\"1\":{\"495\":1}}],[\"我们看到在现场演示时\",{\"1\":{\"489\":1}}],[\"我们看到的open\",{\"1\":{\"393\":1}}],[\"我们通常先从远程服务器下载到本地缓存\",{\"1\":{\"487\":1}}],[\"我们通过伪代码来简单讲解一下\",{\"1\":{\"487\":1}}],[\"我们通过actiondescriptor\",{\"1\":{\"406\":1}}],[\"我们通过给actionreference设置了一个名称是recntangle的目标对象\",{\"1\":{\"399\":1}}],[\"我们让建筑物移动\",{\"1\":{\"484\":1}}],[\"我们让monitor每隔5秒钟向master上报一下自己的当前时间\",{\"1\":{\"272\":1}}],[\"我们主要来说一下经过拓展的新功能\",{\"1\":{\"474\":1}}],[\"我们采用了\",{\"1\":{\"467\":1,\"471\":1}}],[\"我们做了以下工作\",{\"1\":{\"465\":1}}],[\"我们做一下简化\",{\"1\":{\"394\":1}}],[\"我们最后将包体压缩到\",{\"1\":{\"465\":1}}],[\"我们开始逆向设置它\",{\"1\":{\"409\":1}}],[\"我们开始介绍am三部曲的最后一篇\",{\"1\":{\"406\":1}}],[\"我们开始介绍am实战部分\",{\"1\":{\"397\":1}}],[\"我们发现这样会导致\",{\"1\":{\"469\":1}}],[\"我们发现字体的属性在textstyle下面\",{\"1\":{\"409\":1}}],[\"我们发现scriptlistener输出的代码\",{\"1\":{\"396\":1}}],[\"我们按照逆向get的方法来完成这个操作\",{\"1\":{\"409\":1}}],[\"我们大体可以将反向设置的树形图画出来\",{\"1\":{\"409\":1}}],[\"我们大体就可以看清晰它的脉络\",{\"1\":{\"392\":1}}],[\"我们大概需要设置一下文字工具的一些属性项\",{\"1\":{\"409\":1}}],[\"我们现在来看一个复杂一些的情况\",{\"1\":{\"409\":1}}],[\"我们现在以获取图层属性为例子\",{\"1\":{\"398\":1}}],[\"我们用scriptlistener插件\",{\"1\":{\"408\":1}}],[\"我们用ps打开一个文件\",{\"1\":{\"392\":1}}],[\"我们先最底层开始\",{\"1\":{\"409\":1}}],[\"我们先通过一个简单的例子来展开\",{\"1\":{\"408\":1}}],[\"我们先从选中某个图层为入口\",{\"1\":{\"398\":1}}],[\"我们上一篇介绍的获取数据\",{\"1\":{\"407\":1}}],[\"我们深入讲解了actiondescriptor的组织结构和使用逻辑\",{\"1\":{\"406\":1}}],[\"我们创建一个actionreference\",{\"1\":{\"399\":1}}],[\"我们给这个函数取名adtojson吧\",{\"1\":{\"398\":1}}],[\"我们给整个ad对象设置了一堆参数\",{\"1\":{\"394\":1}}],[\"我们以object类型为例介绍一下\",{\"1\":{\"398\":1}}],[\"我们以命令行工具的list命令为例子来说明\",{\"1\":{\"282\":1}}],[\"我们成功的输出了当前图层的名称\",{\"1\":{\"398\":1}}],[\"我们成功的看到了这个图层的各种属性了\",{\"1\":{\"398\":1}}],[\"我们需要将游戏资源进行合理的压缩\",{\"1\":{\"476\":1}}],[\"我们需要根据某些特定的条件来操作\",{\"1\":{\"408\":1}}],[\"我们需要操作其它目标对象\",{\"1\":{\"400\":1}}],[\"我们需要逐个进去分析\",{\"1\":{\"398\":1}}],[\"我们需要先判断它的属性类型\",{\"1\":{\"398\":1}}],[\"我们需要牢记两点\",{\"1\":{\"51\":1,\"54\":1}}],[\"我们也可以想办法遍历出来那个actiondescriptor对象里头都包含了哪些属性和值\",{\"1\":{\"398\":1}}],[\"我们也可以自己定制实现相应的scheduler\",{\"1\":{\"195\":1}}],[\"我们如果拿到一个未知的js对象\",{\"1\":{\"398\":1}}],[\"我们如何去获取它的属性和值呢\",{\"1\":{\"398\":1}}],[\"我们把这段代码的结构用脑图来表示\",{\"1\":{\"398\":1}}],[\"我们把它按照属性分别拆开\",{\"1\":{\"51\":1}}],[\"我们分为两篇文章分别介绍\",{\"1\":{\"397\":1}}],[\"我们分为三种安装模式介绍\",{\"1\":{\"159\":1}}],[\"我们继续扩展一下上面的例子\",{\"1\":{\"408\":1}}],[\"我们继续解读这断代码\",{\"1\":{\"394\":1}}],[\"我们继续讨论与用户请求相关的内容\",{\"1\":{\"230\":1}}],[\"我们对ps的诉求\",{\"1\":{\"396\":1}}],[\"我们对这个命令做一下拆解\",{\"1\":{\"394\":1}}],[\"我们对gate服务器的负载分配原理产生了兴趣\",{\"1\":{\"206\":1}}],[\"我们应从下往上看\",{\"1\":{\"394\":1}}],[\"我们再来看一个稍微复杂一点点的例子\",{\"1\":{\"394\":1}}],[\"我们再增加一个\",{\"1\":{\"357\":1}}],[\"我们还会经常涉及到这块的知识\",{\"1\":{\"411\":1}}],[\"我们还没有回答上面一个问题\",{\"1\":{\"393\":1}}],[\"我们还可以看到charidtotypeid\",{\"1\":{\"393\":1}}],[\"我们面临的问题还有很多\",{\"1\":{\"392\":1}}],[\"我们传进去一个可变的路径参数\",{\"1\":{\"392\":1}}],[\"我们前面文章讲到的事件机制就来此于此\",{\"1\":{\"390\":1}}],[\"我们有一个特别注意的地方是\",{\"1\":{\"379\":1}}],[\"我们有配置插件面板的\",{\"1\":{\"357\":1}}],[\"我们就顺利的将一个图层对象的所有属性和属性\",{\"1\":{\"398\":1}}],[\"我们就可以按照这个树形结构来编写am代码了\",{\"1\":{\"409\":1}}],[\"我们就可以拿到选中图层列表的所有信息了\",{\"1\":{\"399\":1}}],[\"我们就可以通过getstring方法来获取它的值\",{\"1\":{\"398\":1}}],[\"我们就可以通过actiondescriptor提供的getxxx方法来拿到它的属性值了\",{\"1\":{\"398\":1}}],[\"我们就可以猜出来\",{\"1\":{\"394\":1}}],[\"我们就拿到了每个属性和它的属性类型了\",{\"1\":{\"398\":1}}],[\"我们就需要判断当前图层是否是图层组\",{\"1\":{\"378\":1}}],[\"我们就是使用了这样的两个参数值\",{\"1\":{\"272\":1}}],[\"我们找到可以针对ps编程需要的一些接口api\",{\"1\":{\"377\":1}}],[\"我们依然可以用最新的语言集合来编码\",{\"1\":{\"376\":1}}],[\"我们目前基于chrome的web开发\",{\"1\":{\"376\":1}}],[\"我们添加\",{\"1\":{\"366\":1}}],[\"我们\",{\"1\":{\"366\":1}}],[\"我们会将长度或者宽度特别大的图片进行裁剪\",{\"1\":{\"468\":1}}],[\"我们会在中篇介绍如何从ps中获取想要的信息\",{\"1\":{\"396\":1}}],[\"我们会在插件加载的时候\",{\"1\":{\"383\":1}}],[\"我们会在game\",{\"1\":{\"262\":1}}],[\"我们会发现\",{\"1\":{\"365\":1,\"393\":1}}],[\"我们便可以在不签名的情况下加载\",{\"1\":{\"365\":1}}],[\"我们可以设置不同的缩放比例\",{\"1\":{\"477\":1}}],[\"我们可以一点点的找到每个层级的属性\",{\"1\":{\"409\":1}}],[\"我们可以在解谜过程中同时看到不同人生阶段的男生\",{\"1\":{\"586\":1}}],[\"我们可以在application对象的属性中找到一个叫currenttooloptions的key\",{\"1\":{\"409\":1}}],[\"我们可以在官方文档里头找到它的接口api\",{\"1\":{\"392\":1}}],[\"我们可以根据项目的实际需要\",{\"1\":{\"473\":1}}],[\"我们可以根据上面学习到的方法\",{\"1\":{\"400\":1}}],[\"我们可以根据类型来做判断\",{\"1\":{\"398\":1}}],[\"我们可以从界面交互的角度去看看都有哪些\",{\"1\":{\"400\":1}}],[\"我们可以从文档\",{\"1\":{\"399\":1}}],[\"我们可以查看网页dom的层次结构\",{\"1\":{\"400\":1}}],[\"我们可以把它传给很多地方\",{\"1\":{\"398\":1}}],[\"我们可以把里头的局部变量做一下优化\",{\"1\":{\"392\":1}}],[\"我们可以通过打印发现targetlayersids是一个list类型\",{\"1\":{\"399\":1}}],[\"我们可以通过ref1设置对应的typeid来达到目的\",{\"1\":{\"399\":1}}],[\"我们可以通过getobjectvalue方法去获取它的属性值\",{\"1\":{\"398\":1}}],[\"我们可以通过typeidtostringid这个函数将数值反射为字符串\",{\"1\":{\"398\":1}}],[\"我们可以通过这个工具来进行代码优化\",{\"1\":{\"395\":1}}],[\"我们可以通过layers\",{\"1\":{\"377\":1}}],[\"我们可以发现am的代码组织是有对应的层次结构的\",{\"1\":{\"394\":1}}],[\"我们可以很好理解他是自由变换\",{\"1\":{\"394\":1}}],[\"我们可以很暴力地使用ctrl+c直接结束掉所有的进程\",{\"1\":{\"262\":1}}],[\"我们可以将缩写命令和完整命令之间进行转换\",{\"1\":{\"393\":1}}],[\"我们可以做更多的事情\",{\"1\":{\"387\":1}}],[\"我们可以比较方便的解析xml格式文件\",{\"1\":{\"385\":1}}],[\"我们可以看到key的输出是一连串的数字\",{\"1\":{\"398\":1}}],[\"我们可以看到对象提供了许多方法\",{\"1\":{\"379\":1}}],[\"我们可以看到如下几个特征\",{\"1\":{\"378\":1}}],[\"我们可以对宿主做一些基本操作\",{\"1\":{\"387\":1}}],[\"我们可以对\",{\"1\":{\"362\":1}}],[\"我们可以配置\",{\"1\":{\"356\":1}}],[\"我们可以随意修改这个文件夹内的内容\",{\"1\":{\"354\":1}}],[\"我们基本上就介绍完了pinus的所有基本功能\",{\"1\":{\"272\":1}}],[\"我们使用了pinus提供的监控管理框架完成了monitor向master上报其本地时间的功能\",{\"1\":{\"272\":1}}],[\"我们这里不再对client做过多的介绍\",{\"1\":{\"272\":1}}],[\"我们例子中使用的是方式通过opts传入\",{\"1\":{\"272\":1}}],[\"我们指定的moduleid是timereport\",{\"1\":{\"272\":1}}],[\"我们将大部分的建筑缩放到原来的\",{\"1\":{\"477\":1}}],[\"我们将不同的类型的资源\",{\"1\":{\"471\":1}}],[\"我们将原有的\",{\"1\":{\"470\":1}}],[\"我们将它的层次结构图画出来\",{\"1\":{\"408\":1}}],[\"我们将在后面两篇文章中详细道来\",{\"1\":{\"396\":1}}],[\"我们将拷贝出来的am代码包装成一个函数\",{\"1\":{\"395\":1}}],[\"我们将上面的结构用伪json来表示\",{\"1\":{\"394\":1}}],[\"我们将优化后的代码做了缩进\",{\"1\":{\"394\":1}}],[\"我们将给聊天应用增加一个监控模块\",{\"1\":{\"272\":1}}],[\"我们将服务器数目缩减至每功能1个运行实例\",{\"1\":{\"205\":1}}],[\"我们在每次构建前\",{\"1\":{\"488\":1}}],[\"我们在\",{\"1\":{\"474\":1}}],[\"我们在ps中通过图层的自由变换\",{\"1\":{\"394\":1}}],[\"我们在脚本开发的时候\",{\"1\":{\"380\":1}}],[\"我们在后面讲动作管理器的时候还会提到\",{\"1\":{\"378\":1}}],[\"我们在前面的教程里实现的timereport\",{\"1\":{\"282\":1}}],[\"我们在前一个例子中\",{\"1\":{\"234\":1}}],[\"我们在这里阐述了pinus应用从启动到关闭的整个流程\",{\"1\":{\"262\":1}}],[\"我们在app目录下建立文件modules\",{\"1\":{\"272\":1}}],[\"我们在app\",{\"1\":{\"262\":1}}],[\"我们仅仅使用了pinus\",{\"1\":{\"262\":1}}],[\"我们仅仅介绍如何在game\",{\"1\":{\"257\":1}}],[\"我们仅仅介绍与前端服务器相关的组件\",{\"1\":{\"192\":1}}],[\"我们从图上可以清楚地看出\",{\"1\":{\"262\":1}}],[\"我们一个个来\",{\"1\":{\"392\":1}}],[\"我们一直关注的是给框架填入相应的回调\",{\"1\":{\"262\":1}}],[\"我们一般都要自己实现router\",{\"1\":{\"234\":1}}],[\"我们来把文字工具的各种属性给挖掘出来\",{\"1\":{\"409\":1}}],[\"我们来试一下代码\",{\"1\":{\"399\":1}}],[\"我们来介绍如何配置框架\",{\"1\":{\"257\":1}}],[\"我们来看一下\",{\"1\":{\"53\":1,\"408\":1}}],[\"我们实现了对服务器的扩充\",{\"1\":{\"234\":1}}],[\"我们chat的例子中\",{\"1\":{\"234\":1}}],[\"我们知道获取选中图层名称的代码大体是这样\",{\"1\":{\"408\":1}}],[\"我们知道它是application的tool属性\",{\"1\":{\"400\":1}}],[\"我们知道ps的图层结构\",{\"1\":{\"378\":1}}],[\"我们知道pinus支持动态地增加以及删除某一个服务器\",{\"1\":{\"273\":1}}],[\"我们知道对于服务器配置的静态信息可以从配置文件中直接读取\",{\"1\":{\"278\":1}}],[\"我们知道在pinus中\",{\"1\":{\"257\":1}}],[\"我们知道\",{\"1\":{\"230\":1,\"262\":1}}],[\"我们只需要在\",{\"1\":{\"206\":1}}],[\"我们自定义接口的话是\",{\"1\":{\"161\":1}}],[\"三代游戏的目标是一致的\",{\"1\":{\"545\":1}}],[\"三级\",{\"1\":{\"425\":1}}],[\"三级标题\",{\"1\":{\"416\":1}}],[\"三\",{\"0\":{\"159\":1,\"214\":1}}],[\"三个部分\",{\"1\":{\"628\":1}}],[\"三个视图表示对同一段内存数据的不同操作方式\",{\"1\":{\"9\":1}}],[\"三个字节是\",{\"1\":{\"3\":1}}],[\"浏览器来调试\",{\"1\":{\"367\":1}}],[\"浏览器环境的代码或者查看网页的\",{\"1\":{\"365\":1}}],[\"浏览器环境代码采用的是\",{\"1\":{\"366\":1}}],[\"浏览器环境代码\",{\"0\":{\"364\":1}}],[\"浏览器环境是没办法直接获取宿主信息的\",{\"1\":{\"358\":1}}],[\"浏览器环境和\",{\"1\":{\"356\":1,\"357\":1}}],[\"浏览器代码和\",{\"1\":{\"358\":1}}],[\"浏览器代码\",{\"0\":{\"357\":1},\"1\":{\"366\":1}}],[\"浏览器\",{\"1\":{\"343\":1,\"491\":1}}],[\"浏览器中的\",{\"1\":{\"370\":1}}],[\"浏览器中打开\",{\"1\":{\"215\":1}}],[\"浏览器中访问\",{\"1\":{\"190\":1}}],[\"浏览器自动刷新\",{\"1\":{\"167\":1}}],[\"浏览器扩展程序\",{\"1\":{\"158\":1}}],[\"浏览器的主线程不宜设置休眠\",{\"1\":{\"32\":1}}],[\"二重奏\",{\"0\":{\"544\":1}}],[\"二次元\",{\"1\":{\"518\":1}}],[\"二级标题\",{\"1\":{\"416\":1}}],[\"二进制的传输内容\",{\"1\":{\"222\":1}}],[\"二进制文件提交\",{\"1\":{\"161\":1}}],[\"二进制数组并不是真正的数组\",{\"1\":{\"3\":1}}],[\"二进制数组由三类对象组成\",{\"1\":{\"0\":1}}],[\"二\",{\"0\":{\"158\":1,\"206\":1,\"209\":1,\"213\":1}}],[\"今天给大家介绍的这款网页调试工具不仅可以调试简单的css\",{\"1\":{\"157\":1}}],[\"单机游戏\",{\"1\":{\"527\":1}}],[\"单独借用主人公的回忆就能完整理解发生了什么以及自己的目标是什么\",{\"1\":{\"511\":1}}],[\"单元格\",{\"1\":{\"421\":4}}],[\"单步执行\",{\"1\":{\"343\":1}}],[\"单文件\",{\"1\":{\"287\":1}}],[\"单向散列函数一般用于产生消息摘要\",{\"1\":{\"151\":1}}],[\"单位里头找到\",{\"1\":{\"380\":1}}],[\"单位为秒\",{\"1\":{\"223\":1}}],[\"单位为字节\",{\"1\":{\"16\":1}}],[\"单位\",{\"0\":{\"380\":1},\"1\":{\"187\":2}}],[\"单位毫秒\",{\"1\":{\"32\":1}}],[\"单位位\",{\"1\":{\"9\":1}}],[\"单位字节\",{\"1\":{\"4\":1,\"9\":1}}],[\"具有较高的效果的同时又具有较好的性能\",{\"1\":{\"482\":1}}],[\"具有以下特点\",{\"1\":{\"188\":1}}],[\"具有这些特性的散列结果就可以用于验证信息是否被修改\",{\"1\":{\"151\":1}}],[\"具体操作方式请阅读\",{\"1\":{\"628\":1}}],[\"具体更多代码实现和使用demo请移步下方代码仓库\",{\"1\":{\"500\":1}}],[\"具体使用参考官方的javascript\",{\"1\":{\"380\":1}}],[\"具体每个对象具备的接口和使用方法\",{\"1\":{\"377\":1}}],[\"具体每个文件头的格式和定义\",{\"1\":{\"29\":1}}],[\"具体组件的说明如下\",{\"1\":{\"285\":1}}],[\"具体行为跟前面的服务器加入和离开类似\",{\"1\":{\"282\":1}}],[\"具体代码如下\",{\"1\":{\"267\":3}}],[\"具体命令格式如下\",{\"1\":{\"233\":1}}],[\"具体方式同list和stop\",{\"1\":{\"233\":1}}],[\"具体内容见pinus压缩协议\",{\"1\":{\"229\":1}}],[\"具体格式如下\",{\"1\":{\"222\":1}}],[\"具体的操作为list命令\",{\"1\":{\"282\":1}}],[\"具体的客户端验证的配置文件为config\",{\"1\":{\"276\":1}}],[\"具体的代码在分支tutorial\",{\"1\":{\"272\":1}}],[\"具体的配置使用调用app\",{\"1\":{\"261\":1}}],[\"具体的配置格式可以参考pinus\",{\"1\":{\"233\":1}}],[\"具体的初始化操作\",{\"1\":{\"257\":1,\"267\":1}}],[\"具体的分配策略一般是根据客户端的某一个key做hash得到connector的id\",{\"1\":{\"241\":1}}],[\"具体的调用方法等信息\",{\"1\":{\"234\":1}}],[\"具体的请求处理逻辑需要给其他用户推送消息\",{\"1\":{\"230\":1}}],[\"具体的参数意义跟上面的一样\",{\"1\":{\"197\":1}}],[\"具体的签名为\",{\"1\":{\"197\":1}}],[\"具体的响应已经发送给了客户端\",{\"1\":{\"197\":1}}],[\"具体的处理步骤\",{\"1\":{\"29\":1}}],[\"具体handler的签名一般为\",{\"1\":{\"197\":1}}],[\"具体可以参考lordofpinus源码\",{\"1\":{\"190\":1}}],[\"具体实现是由浏览器代理自己实现\",{\"1\":{\"50\":1}}],[\"具体处理图像数据时\",{\"1\":{\"29\":1}}],[\"哪怕仅一位\",{\"1\":{\"151\":1}}],[\"且越到后面时间消耗得越快\",{\"1\":{\"545\":1}}],[\"且type的值为\",{\"1\":{\"274\":1}}],[\"且为一个固定长度\",{\"1\":{\"151\":1}}],[\"且改变文件内容\",{\"1\":{\"80\":1}}],[\"散列还应该是防冲突的\",{\"1\":{\"151\":1}}],[\"散列是信息的提炼\",{\"1\":{\"151\":1}}],[\"散列算法\",{\"0\":{\"151\":1}}],[\"椭圆曲线密码编码学\",{\"1\":{\"150\":1}}],[\"公司发明\",{\"1\":{\"148\":1}}],[\"已经在房间内\",{\"1\":{\"612\":2}}],[\"已经对其进行了调度\",{\"1\":{\"277\":1}}],[\"已经启动的应用服务器是怎么知道新增加了一个服务器的\",{\"1\":{\"273\":1}}],[\"已经携带了前端服务器id等信息\",{\"1\":{\"230\":1}}],[\"已经被多方分析且广为全世界所使用\",{\"1\":{\"146\":1}}],[\"已弃用\",{\"1\":{\"124\":1}}],[\"安卓完整版淘宝¥\",{\"1\":{\"509\":1}}],[\"安卓手机输入框文字飞出解决办法\",{\"1\":{\"500\":1}}],[\"安卓大部分都是7和8\",{\"1\":{\"498\":1}}],[\"安卓title的显示不居中\",{\"1\":{\"495\":1}}],[\"安全性低\",{\"1\":{\"188\":1}}],[\"安全级别高\",{\"1\":{\"146\":1}}],[\"安装依赖的模块\",{\"1\":{\"632\":1}}],[\"安装依赖包\",{\"1\":{\"185\":1}}],[\"安装编译依赖\",{\"0\":{\"632\":1},\"1\":{\"636\":1}}],[\"安装完成之后\",{\"1\":{\"391\":1}}],[\"安装nrm\",{\"0\":{\"330\":1}}],[\"安装14\",{\"1\":{\"297\":1}}],[\"安装最新\",{\"1\":{\"288\":1}}],[\"安装最新版本node\",{\"1\":{\"297\":1}}],[\"安装最新版本\",{\"1\":{\"288\":1}}],[\"安装管理控制台\",{\"0\":{\"190\":1}}],[\"安装模块\",{\"0\":{\"129\":1}}],[\"安装一个\",{\"1\":{\"124\":1}}],[\"安装直接运行所需依赖包\",{\"1\":{\"122\":1}}],[\"安装ts\",{\"1\":{\"122\":1}}],[\"安装包\",{\"1\":{\"103\":1}}],[\"安装指定版本nodejs\",{\"1\":{\"297\":1}}],[\"安装指定版本\",{\"1\":{\"102\":1}}],[\"安装\",{\"0\":{\"125\":1,\"133\":1,\"168\":1,\"182\":1,\"300\":1,\"305\":1,\"315\":1,\"318\":1,\"323\":1,\"327\":1,\"338\":1,\"434\":1},\"1\":{\"102\":1,\"288\":1,\"632\":1,\"636\":1}}],[\"速度更快\",{\"1\":{\"399\":1}}],[\"速度快\",{\"1\":{\"146\":1}}],[\"速度较快\",{\"1\":{\"144\":1}}],[\"加上轻盈的钢琴音\",{\"1\":{\"592\":1}}],[\"加上剧情中一些搞笑逗趣的元素\",{\"1\":{\"590\":1}}],[\"加上许多不同的游戏场景\",{\"1\":{\"513\":1}}],[\"加\",{\"1\":{\"506\":1}}],[\"加粗\",{\"1\":{\"417\":1}}],[\"加载图片时\",{\"1\":{\"487\":1}}],[\"加载\",{\"1\":{\"365\":1}}],[\"加载插件的时候报插件内容和签名不一致的问题\",{\"1\":{\"353\":1}}],[\"加载插件使用app\",{\"1\":{\"261\":1}}],[\"加载到\",{\"1\":{\"351\":2}}],[\"加载到框架\",{\"1\":{\"261\":1}}],[\"加载watchdog这个module的时候\",{\"1\":{\"280\":1}}],[\"加载注册module\",{\"1\":{\"275\":1}}],[\"加载注册module到masterconsoleservice\",{\"1\":{\"274\":1}}],[\"加载后文件中的参数将直接挂载到application对象上\",{\"1\":{\"267\":1}}],[\"加载后文件中的参数将直接挂载到app对象上\",{\"1\":{\"261\":1}}],[\"加载一些配置信息\",{\"1\":{\"262\":1}}],[\"加载master组件\",{\"1\":{\"262\":1}}],[\"加载完成后\",{\"1\":{\"261\":1}}],[\"加载配置信息等等操作\",{\"1\":{\"257\":1}}],[\"加载配置文件\",{\"1\":{\"257\":1}}],[\"加密性强的散列一定是不可逆的\",{\"1\":{\"151\":1}}],[\"加密的密文数据\",{\"1\":{\"144\":1}}],[\"加密解密用同一算法\",{\"1\":{\"144\":1}}],[\"加到\",{\"1\":{\"33\":1}}],[\"选中的工具等等\",{\"1\":{\"399\":1}}],[\"选中的通道\",{\"1\":{\"399\":1}}],[\"选中图层用那段代码这样的片段\",{\"1\":{\"396\":1}}],[\"选择\",{\"1\":{\"637\":1}}],[\"选择版本\",{\"1\":{\"461\":1}}],[\"选择ps版本\",{\"1\":{\"346\":2}}],[\"选择目标应用\",{\"1\":{\"346\":3}}],[\"选择上报时间还是可取的\",{\"1\":{\"272\":1}}],[\"选择某一后端服务器\",{\"1\":{\"230\":1}}],[\"选择showsheetdialog\",{\"1\":{\"140\":1}}],[\"选取典型的用例行为\",{\"1\":{\"192\":1}}],[\"选项卡\",{\"1\":{\"631\":1}}],[\"选项了\",{\"1\":{\"209\":1}}],[\"选项\",{\"1\":{\"62\":1,\"140\":1}}],[\"属于手动一个个指定文件\",{\"1\":{\"137\":1}}],[\"属于自动指定该路径下的所有ts相关文件\",{\"1\":{\"137\":1}}],[\"属性列表\",{\"1\":{\"619\":1}}],[\"属性文本\",{\"1\":{\"420\":2}}],[\"属性操作\",{\"0\":{\"379\":1}}],[\"属性对应\",{\"1\":{\"356\":1}}],[\"属性将对象连接起来的这条链路即我们所谓的原型链\",{\"1\":{\"54\":1}}],[\"属性的类型还有一些其它的\",{\"1\":{\"398\":1}}],[\"属性的终点null\",{\"1\":{\"54\":1}}],[\"属性的作用就是当访问一个对象的属性时\",{\"1\":{\"54\":1}}],[\"属性的两边是各由两个下划线构成\",{\"1\":{\"50\":1}}],[\"属性查看会更清楚点\",{\"1\":{\"53\":1}}],[\"属性来连接对象直到null的一条链即为我们所谓的原型链\",{\"1\":{\"51\":1}}],[\"属性所指向的那个对象\",{\"1\":{\"51\":2,\"54\":1}}],[\"属性都是由一个对象指向一个对象\",{\"1\":{\"51\":1}}],[\"属性指向\",{\"1\":{\"50\":1}}],[\"属性上面取到数据\",{\"1\":{\"29\":1}}],[\"属性默认为\",{\"1\":{\"25\":1}}],[\"属性区分\",{\"1\":{\"17\":1}}],[\"属性和\",{\"1\":{\"17\":1}}],[\"属性表示\",{\"1\":{\"17\":1,\"398\":1}}],[\"属性返回\",{\"1\":{\"16\":2}}],[\"属性\",{\"0\":{\"12\":1,\"51\":1},\"1\":{\"5\":1,\"8\":2,\"12\":1,\"15\":1,\"51\":1,\"52\":1,\"53\":1}}],[\"语句\",{\"1\":{\"137\":1,\"370\":1}}],[\"语言中的效果并不好\",{\"1\":{\"479\":1}}],[\"语言描述\",{\"1\":{\"22\":1}}],[\"语言类型\",{\"1\":{\"3\":1}}],[\"查询自己是不是房主\",{\"1\":{\"612\":1}}],[\"查找别人是怎么做的\",{\"1\":{\"389\":1}}],[\"查找图层等\",{\"1\":{\"387\":1}}],[\"查找模块\",{\"0\":{\"128\":1}}],[\"查了半天才发现之所以没法\",{\"1\":{\"365\":1}}],[\"查看缩写命令和完整命令\",{\"1\":{\"393\":1}}],[\"查看所有的\",{\"1\":{\"370\":1}}],[\"查看所有文件状态\",{\"1\":{\"84\":1}}],[\"查看调用栈\",{\"1\":{\"343\":1}}],[\"查看系统上安装了哪些版本\",{\"1\":{\"288\":1}}],[\"查看系统配置\",{\"1\":{\"91\":1}}],[\"查看pinus命令行工具的帮助时\",{\"1\":{\"233\":1}}],[\"查看当前pinus的版本时\",{\"1\":{\"233\":1}}],[\"查看当前的配置信息\",{\"1\":{\"68\":1}}],[\"查看已安装的模块\",{\"1\":{\"102\":1}}],[\"查看进程\",{\"0\":{\"99\":1}}],[\"查看命令历史\",{\"1\":{\"97\":1}}],[\"查看用户全局配置\",{\"1\":{\"91\":1}}],[\"查看项目中的配置\",{\"1\":{\"91\":1}}],[\"查看配置\",{\"0\":{\"91\":1}}],[\"查看分支列表\",{\"1\":{\"87\":1}}],[\"查看版本\",{\"0\":{\"435\":1},\"1\":{\"84\":1,\"134\":1,\"168\":1,\"288\":1,\"306\":1}}],[\"查看指定文件状态\",{\"1\":{\"84\":1}}],[\"查看缓存记录\",{\"1\":{\"82\":1}}],[\"查看远程仓库\",{\"1\":{\"72\":1}}],[\"查看本地\",{\"1\":{\"69\":1}}],[\"你都能认识一个萌萌的新朋友\",{\"1\":{\"606\":1}}],[\"你都会看到这些函数\",{\"1\":{\"393\":1}}],[\"你操控下一辆车时\",{\"1\":{\"605\":1}}],[\"你能看到整个游戏的主旨\",{\"1\":{\"595\":1}}],[\"你停止操作\",{\"1\":{\"588\":1}}],[\"你将训练一个呆萌的忍者\",{\"1\":{\"567\":1}}],[\"你不仅能听完一首高质量的音乐\",{\"1\":{\"575\":1}}],[\"你不仅可以和画面背景元素交互\",{\"1\":{\"588\":1}}],[\"你不仅可以看到每个市民的行动\",{\"1\":{\"582\":1}}],[\"你不仅可以感受游戏独特的解谜乐趣\",{\"1\":{\"572\":1}}],[\"你不仅可以骑乘动物跑酷\",{\"1\":{\"566\":1}}],[\"你不能在jsx里头使用各种新的语言特性\",{\"1\":{\"376\":1}}],[\"你一定会做出和我一样的选择\",{\"1\":{\"558\":1}}],[\"你丢过几次命\",{\"1\":{\"552\":1}}],[\"你的每个选择都会改变你的属性值\",{\"1\":{\"599\":1}}],[\"你的每一次动作失败\",{\"1\":{\"595\":1}}],[\"你的每一个选择都直接影响剧情的发展甚至游戏的成败\",{\"1\":{\"524\":1}}],[\"你的名字\",{\"1\":{\"454\":1}}],[\"你的签名\",{\"1\":{\"454\":1}}],[\"你也可以直接换行开始写\",{\"1\":{\"430\":1}}],[\"你也可以靠自己的力量\",{\"1\":{\"389\":1}}],[\"你是无法直接给itemindex设置一个新的值来达到修改图层顺序的目的\",{\"1\":{\"408\":1}}],[\"你几乎不太需要使用dom的api了\",{\"1\":{\"405\":1}}],[\"你就可以通过上面的getlayerinfobyid取拿每个图层的信息了\",{\"1\":{\"399\":1}}],[\"你就背下来就好了\",{\"1\":{\"399\":1}}],[\"你就再也不用对它发怵了~~\",{\"1\":{\"398\":1}}],[\"你就会看到action\",{\"1\":{\"389\":1}}],[\"你还也可以用金币学技能来解锁更多酷炫连击姿势\",{\"1\":{\"595\":1}}],[\"你还能看到里面还有class\",{\"1\":{\"398\":1}}],[\"你还可以和你的朋友\",{\"1\":{\"559\":1}}],[\"你还可以和朋友们较量\",{\"1\":{\"531\":1}}],[\"你还可以在网上浏览大神们那些令人惊叹的作品\",{\"1\":{\"559\":1}}],[\"你还可以在你的编辑器中设置断点\",{\"1\":{\"346\":1}}],[\"你还可以根据我们上一篇学得到的知识\",{\"1\":{\"408\":1}}],[\"你还可以安装一些\",{\"1\":{\"346\":1}}],[\"你还可以通过该对象提供的as\",{\"1\":{\"380\":1}}],[\"你还可以通过\",{\"1\":{\"335\":1}}],[\"你看到那一坨am代码\",{\"1\":{\"396\":1}}],[\"你看到的id\",{\"1\":{\"203\":1}}],[\"你很难靠人肉去一个个看\",{\"1\":{\"393\":1}}],[\"你很容易就会发现\",{\"1\":{\"387\":1}}],[\"你实验执行一下\",{\"1\":{\"393\":1}}],[\"你把这一段段的代码拷贝出来\",{\"1\":{\"391\":1}}],[\"你依然可以在c++的sdk中看到它的影子\",{\"1\":{\"390\":1}}],[\"你想要的字体\",{\"1\":{\"409\":1}}],[\"你想要的参数\",{\"1\":{\"203\":1}}],[\"你想拿到当前选中的多个图层\",{\"1\":{\"389\":1}}],[\"你才可以设置它\",{\"1\":{\"379\":1}}],[\"你要增加一个图层非常简单\",{\"1\":{\"378\":1}}],[\"你要花很多额外的时间去将它和源码的逻辑对应起来\",{\"1\":{\"372\":1}}],[\"你只能吞噬比你小的蓝色星系\",{\"1\":{\"555\":1}}],[\"你只能一路var到底\",{\"1\":{\"376\":1}}],[\"你只需要在行内\",{\"1\":{\"431\":1}}],[\"你只依赖dom提供的api\",{\"1\":{\"387\":1}}],[\"你只有下载下面的压缩包\",{\"1\":{\"361\":1}}],[\"你会时不时听到尖叫声\",{\"1\":{\"564\":1}}],[\"你会感到不仅\",{\"1\":{\"539\":1}}],[\"你会感到非常\",{\"1\":{\"539\":1}}],[\"你会一边好奇\",{\"1\":{\"389\":1}}],[\"你会慢慢能理解下面这张图\",{\"1\":{\"362\":1}}],[\"你会发现由于颜色杂乱\",{\"1\":{\"592\":1}}],[\"你会发现dom里头都没有\",{\"1\":{\"387\":1}}],[\"你会发现index里头少了3\",{\"1\":{\"378\":1}}],[\"你会发现\",{\"1\":{\"359\":1,\"394\":1,\"405\":1}}],[\"你在ps的每个操作\",{\"1\":{\"390\":1}}],[\"你在\",{\"1\":{\"356\":1}}],[\"你通过\",{\"1\":{\"346\":1}}],[\"你可能会想到\",{\"1\":{\"389\":1}}],[\"你可能会问\",{\"1\":{\"234\":1}}],[\"你可能就会在一些论坛上看到别人贴出来的这样的一坨代码\",{\"1\":{\"389\":1}}],[\"你可以通过这款游戏\",{\"1\":{\"599\":1}}],[\"你可以通过如下方式获取到\",{\"1\":{\"399\":1}}],[\"你可以建造多种建筑或装饰物满足市民要求\",{\"1\":{\"582\":1}}],[\"你可以做任何事\",{\"1\":{\"578\":1}}],[\"你可以跟他进行花样百出的互动\",{\"1\":{\"567\":1}}],[\"你可以创造任何你心中的事物\",{\"1\":{\"559\":1}}],[\"你可以舒适地享受这美好旅途\",{\"1\":{\"554\":1}}],[\"你可以从哪跌倒就立刻从哪爬起来\",{\"1\":{\"554\":1}}],[\"你可以从中看到它通过传递多个layerid来完成选中的多图层的操作\",{\"1\":{\"410\":1}}],[\"你可以对陌生人做任何不人道的事\",{\"1\":{\"527\":1}}],[\"你可以继续试试修改图层的其它属性\",{\"1\":{\"408\":1}}],[\"你可以继续遍历它\",{\"1\":{\"400\":1}}],[\"你可以用am代码来写\",{\"1\":{\"405\":1}}],[\"你可以仔细观察该xml的格式结构\",{\"1\":{\"401\":1}}],[\"你可以进一步去看里头的内容\",{\"1\":{\"400\":1}}],[\"你可以把整个document的属性都dump出来\",{\"1\":{\"399\":1}}],[\"你可以去看看还有一些别的\",{\"1\":{\"399\":1}}],[\"你可以自己尝试着去设置其它不同工具的不同选项值\",{\"1\":{\"409\":1}}],[\"你可以自己实际运行一下代码看看各个属性值\",{\"1\":{\"398\":1}}],[\"你可以自己做一些array的扩展\",{\"1\":{\"376\":1}}],[\"你可以优先用dom\",{\"1\":{\"395\":1}}],[\"你可以直接下载到本地\",{\"1\":{\"356\":1}}],[\"你可以增加定制的源\",{\"1\":{\"333\":1}}],[\"你可以借助nodejs官方\",{\"1\":{\"220\":1}}],[\"你可以根据提示的报错信息google或者\",{\"1\":{\"212\":1}}],[\"你可以拖动文件到\",{\"1\":{\"159\":1}}],[\"你可以使用\",{\"1\":{\"103\":1}}],[\"你需要将每个关卡给出的众多杂乱的线条拼成一个或几个图形\",{\"1\":{\"608\":1}}],[\"你需要抛出铁球打碎阻拦你前进路上的障碍\",{\"1\":{\"596\":1}}],[\"你需要装备主武器\",{\"1\":{\"571\":1}}],[\"你需要用底下不断刷新的方块来填充中间的格子\",{\"1\":{\"568\":1}}],[\"你需要在树生长的过程中为它修剪\",{\"1\":{\"557\":1}}],[\"你需要通过不断吞噬其他星系来完成任务目标\",{\"1\":{\"555\":1}}],[\"你需要依靠自己的脚步制造的回声线判断该如何走出密室\",{\"1\":{\"543\":1}}],[\"你需要不断收集三叶草\",{\"1\":{\"602\":1}}],[\"你需要不断注意敌人的攻击前摇并快速躲开\",{\"1\":{\"570\":1}}],[\"你需要不断点触\",{\"1\":{\"547\":1}}],[\"你需要不断躲开红光并跳上突出的木桩\",{\"1\":{\"539\":1}}],[\"你需要不停的帮助主人公做出选择\",{\"1\":{\"524\":1}}],[\"你需要进行尽量少的步骤来完成任务\",{\"1\":{\"536\":1}}],[\"你需要扮演一个小男孩\",{\"1\":{\"512\":1}}],[\"你需要执行如下命令来切换到多服务器分支上\",{\"1\":{\"234\":1}}],[\"你需要去api提供者获取的\",{\"1\":{\"163\":1}}],[\"你需要独立安装这个类型定义\",{\"1\":{\"124\":1}}],[\"导弹以及底下的楼房\",{\"1\":{\"562\":1}}],[\"导演\",{\"1\":{\"521\":1}}],[\"导航栏高度\",{\"1\":{\"499\":1,\"500\":1}}],[\"导航栏分为状态栏和标题栏\",{\"1\":{\"499\":1}}],[\"导航栏元素\",{\"1\":{\"496\":1}}],[\"导航目录折叠\",{\"0\":{\"449\":1}}],[\"导致小女孩所在部落的粮食几乎中断供给\",{\"1\":{\"551\":1}}],[\"导致性能变差\",{\"1\":{\"469\":1}}],[\"导致打印出\",{\"1\":{\"29\":1}}],[\"导出\",{\"0\":{\"439\":1}}],[\"导出环境\",{\"1\":{\"103\":1}}],[\"搜着搜着\",{\"1\":{\"389\":1}}],[\"搜索等功能\",{\"1\":{\"458\":1}}],[\"搜索\",{\"1\":{\"220\":1,\"292\":1}}],[\"搜索sheet\",{\"1\":{\"140\":1}}],[\"搜索模块\",{\"0\":{\"127\":1}}],[\"搜索包\",{\"1\":{\"103\":1}}],[\"搜素的方式可以组合\",{\"1\":{\"58\":1}}],[\"搜素项目描述\",{\"1\":{\"58\":1}}],[\"搜素项目readme\",{\"1\":{\"58\":1}}],[\"搜素项目名\",{\"1\":{\"58\":1}}],[\"升级包\",{\"1\":{\"103\":1}}],[\"激活虚拟环境\",{\"1\":{\"103\":1}}],[\"登录页\",{\"1\":{\"215\":1}}],[\"登录\",{\"1\":{\"102\":1}}],[\"模板进行构建和编译\",{\"1\":{\"637\":1}}],[\"模型近处可见的精细纹理\",{\"1\":{\"596\":1}}],[\"模拟经营类游戏的卖点\",{\"1\":{\"599\":1}}],[\"模拟经营与跑酷的融合让这款游戏为玩家同时带来短期和长期快感\",{\"1\":{\"566\":1}}],[\"模拟山羊\",{\"0\":{\"563\":1}}],[\"模拟器使用得比较多\",{\"1\":{\"461\":1}}],[\"模糊后再放大\",{\"1\":{\"482\":1}}],[\"模糊的效果对比\",{\"1\":{\"482\":1}}],[\"模糊\",{\"1\":{\"482\":2}}],[\"模糊效果我们最常见的就是高斯模糊\",{\"1\":{\"482\":1}}],[\"模糊特效\",{\"0\":{\"482\":1}}],[\"模态面板主要是阻止用户在使用插件时和\",{\"1\":{\"356\":1}}],[\"模态框\",{\"1\":{\"356\":1}}],[\"模式即可\",{\"1\":{\"373\":1}}],[\"模式相当于建立一个持久连接\",{\"1\":{\"370\":1}}],[\"模式每次\",{\"1\":{\"370\":1}}],[\"模式性能可能会好点\",{\"1\":{\"369\":1}}],[\"模式后\",{\"1\":{\"361\":1,\"365\":1}}],[\"模式\",{\"0\":{\"359\":1,\"360\":1,\"361\":1},\"1\":{\"359\":2,\"360\":1,\"361\":1,\"368\":1,\"369\":1,\"477\":1}}],[\"模式配置文件\",{\"1\":{\"350\":1}}],[\"模式进行合并\",{\"1\":{\"76\":1}}],[\"模块名\",{\"1\":{\"102\":1}}],[\"卸载14\",{\"1\":{\"297\":1}}],[\"卸载16\",{\"1\":{\"288\":1}}],[\"卸载指定版本\",{\"1\":{\"297\":1}}],[\"卸载\",{\"1\":{\"102\":1,\"288\":1}}],[\"后的图片\",{\"1\":{\"478\":1}}],[\"后并输入语言名\",{\"1\":{\"430\":1}}],[\"后来随着ps的功能越来越多\",{\"1\":{\"393\":1}}],[\"后来\",{\"1\":{\"390\":1}}],[\"后续的篇章里头\",{\"1\":{\"411\":1}}],[\"后续当你看到一个actiondescriptor的时候\",{\"1\":{\"398\":1}}],[\"后续篇章会有讲持久化存储的\",{\"1\":{\"384\":1}}],[\"后续我还会写一些\",{\"1\":{\"374\":1}}],[\"后你应该就可以在菜单中找到并打开插件了\",{\"1\":{\"361\":1}}],[\"后回车\",{\"1\":{\"291\":1}}],[\"后面变成四个\",{\"1\":{\"527\":1}}],[\"后面我会介绍更快的办法\",{\"1\":{\"378\":1}}],[\"后面再单独出一篇教程吧\",{\"1\":{\"362\":1}}],[\"后面的参数用来指定master的位置\",{\"1\":{\"282\":1}}],[\"后面的参数是否指定了env等\",{\"1\":{\"262\":1}}],[\"后面没有跟任何其他参数\",{\"1\":{\"262\":1}}],[\"后面route则由一个uint8的byte\",{\"1\":{\"229\":1}}],[\"后面跟的是一个uint16表示的route字典编号\",{\"1\":{\"229\":1}}],[\"后面两位取最新的\",{\"1\":{\"102\":1}}],[\"后\",{\"1\":{\"203\":1,\"483\":1}}],[\"后端服务器不配置\",{\"1\":{\"261\":1}}],[\"后端服务器通过channel推送消息时对前端服务器发起的rpc调用\",{\"1\":{\"245\":1}}],[\"后端服务器通过redis即可查询channel中的uid信息\",{\"1\":{\"230\":1}}],[\"后端服务器向前端服务器请求session信息\",{\"1\":{\"245\":1}}],[\"后端服务器之间也会通过rpc调用而有相互之间的交互\",{\"1\":{\"243\":1}}],[\"后端服务器的coserver会启动filter\",{\"1\":{\"230\":1}}],[\"后端服务器的remote接收到请求后完成请求派发\",{\"1\":{\"230\":1}}],[\"后端服务器的所有请求都是从前端服务器的rpc请求中获得的\",{\"1\":{\"230\":1}}],[\"后端服务器的所有调用请求均来自前端服务器的rpc调用\",{\"1\":{\"230\":1}}],[\"后端服务器处理登录请求时\",{\"1\":{\"230\":1}}],[\"后端服务器中是用来处理用户请求的具体逻辑的地方\",{\"1\":{\"230\":1}}],[\"后端服务器接受到请求后\",{\"1\":{\"195\":1}}],[\"后端服务器在接收到rpc调用时\",{\"1\":{\"192\":1}}],[\"后者支持部分宿主\",{\"1\":{\"373\":1}}],[\"后者则是用来在客户端和服务器之间传输应用数据\",{\"1\":{\"221\":1}}],[\"后者是成员长度\",{\"1\":{\"17\":1}}],[\"后者的数组成员可以是不同的数据类型\",{\"1\":{\"8\":1}}],[\"^表示第一位版本号不变\",{\"1\":{\"102\":1}}],[\"^0\",{\"1\":{\"102\":1}}],[\"包装了一套类似dom\",{\"1\":{\"395\":1}}],[\"包装一个我们自己的文件打开函数\",{\"1\":{\"392\":1}}],[\"包含了gitbook\",{\"1\":{\"438\":1}}],[\"包含哪些部分\",{\"1\":{\"389\":1}}],[\"包含logs下的所有子目录和文件\",{\"1\":{\"65\":1}}],[\"包括\",{\"1\":{\"370\":1,\"488\":1}}],[\"包括操作符重载\",{\"1\":{\"370\":1}}],[\"包括watchserver等\",{\"1\":{\"282\":1}}],[\"包括pid\",{\"1\":{\"282\":1}}],[\"包括package层和message层\",{\"1\":{\"229\":1}}],[\"包括rpc调用前的filter及rpc调用后的filter\",{\"1\":{\"271\":1}}],[\"包括route和消息类型两部分\",{\"1\":{\"226\":1}}],[\"包括id\",{\"1\":{\"262\":1}}],[\"包括不可访问的字段\",{\"1\":{\"247\":1}}],[\"包括调用的服务器类型\",{\"1\":{\"234\":1}}],[\"包括服务器类型\",{\"1\":{\"233\":1}}],[\"包括服务器id\",{\"1\":{\"232\":1}}],[\"包括客户端和服务器的握手\",{\"1\":{\"221\":1}}],[\"包括session组件\",{\"1\":{\"192\":1}}],[\"包括加密和解密算法\",{\"1\":{\"144\":1}}],[\"包到最新版本\",{\"1\":{\"103\":1}}],[\"包\",{\"1\":{\"103\":3}}],[\"包名\",{\"1\":{\"102\":6}}],[\"命都可以不要\",{\"1\":{\"552\":1}}],[\"命令可以查看手机的\",{\"1\":{\"461\":1}}],[\"命令指定的实际执行的软件路径\",{\"1\":{\"295\":1}}],[\"命令切换时\",{\"1\":{\"295\":1}}],[\"命令提示符\",{\"1\":{\"292\":1}}],[\"命令行工具会创建一个adminclient\",{\"1\":{\"282\":1}}],[\"命令行工具是作为pinus管理框架中的client角色的\",{\"1\":{\"262\":1}}],[\"命令格式如下\",{\"1\":{\"233\":4}}],[\"命令如下\",{\"1\":{\"233\":1}}],[\"命令使用说明\",{\"0\":{\"233\":1}}],[\"命令介绍\",{\"0\":{\"232\":1}}],[\"命令来查看所有可用的命令和选项\",{\"1\":{\"103\":1}}],[\"命令\",{\"0\":{\"134\":1,\"306\":1},\"1\":{\"102\":1,\"103\":2,\"297\":4}}],[\"命名为\",{\"1\":{\"50\":1}}],[\"空格\",{\"1\":{\"98\":1,\"425\":3,\"426\":2}}],[\"空格不匹配任意文件\",{\"1\":{\"64\":1}}],[\"清理无用的\",{\"1\":{\"288\":1}}],[\"清屏\",{\"1\":{\"97\":1}}],[\"清除缓存\",{\"1\":{\"288\":1}}],[\"清除所有缓存\",{\"1\":{\"82\":1}}],[\"清除某次的缓存\",{\"1\":{\"82\":1}}],[\"移动\",{\"1\":{\"469\":1}}],[\"移动文件夹\",{\"1\":{\"97\":1}}],[\"移植到小游戏首先需要解决的就是\",{\"1\":{\"466\":1}}],[\"移除与远程仓库的管理\",{\"1\":{\"72\":1}}],[\"类似还有其他情况\",{\"1\":{\"484\":1}}],[\"类似浏览器环境中的\",{\"1\":{\"358\":1}}],[\"类似\",{\"1\":{\"350\":1}}],[\"类似于ls\",{\"1\":{\"97\":1}}],[\"类型声明文件的输出目录\",{\"1\":{\"137\":1}}],[\"类型确保将小于\",{\"1\":{\"26\":1}}],[\"类型对于大于\",{\"1\":{\"26\":1}}],[\"类型\",{\"1\":{\"26\":2,\"398\":1}}],[\"类型数组\",{\"1\":{\"8\":1}}],[\"构建发布\",{\"1\":{\"637\":2}}],[\"构建工具\",{\"1\":{\"632\":1,\"636\":1}}],[\"构建优化\",{\"0\":{\"488\":1}}],[\"构建后默认的\",{\"1\":{\"461\":1}}],[\"构建面板中按照自己的需求构建\",{\"1\":{\"461\":1}}],[\"构建的项目\",{\"1\":{\"461\":1}}],[\"构建结束\",{\"1\":{\"95\":1}}],[\"构造不同的视图\",{\"1\":{\"9\":1}}],[\"构造函数分配一段指定字节的内存空间\",{\"1\":{\"22\":1}}],[\"构造函数的参数也可以是一个普通数组\",{\"1\":{\"9\":1}}],[\"构造函数的参数是指包含数组成员的个数\",{\"1\":{\"9\":1}}],[\"构造函数的参数是所需要的内存大小\",{\"1\":{\"4\":1,\"9\":1}}],[\"构造函数接受一个\",{\"1\":{\"9\":1}}],[\"构造函数有多种用法\",{\"1\":{\"9\":1}}],[\"构造函数\",{\"0\":{\"9\":1},\"1\":{\"4\":3}}],[\"全屏幕的敲敲划划\",{\"1\":{\"518\":1}}],[\"全平台构建\",{\"1\":{\"488\":1}}],[\"全称\",{\"1\":{\"461\":1}}],[\"全网独一份\",{\"1\":{\"389\":1,\"397\":1,\"406\":1}}],[\"全给开了\",{\"1\":{\"360\":1}}],[\"全局生效\",{\"1\":{\"288\":1}}],[\"全局更新\",{\"1\":{\"102\":1}}],[\"全局安装nrm\",{\"1\":{\"330\":1}}],[\"全局安装\",{\"1\":{\"102\":1,\"168\":1}}],[\"全局包列表\",{\"1\":{\"95\":1}}],[\"全部都在\",{\"1\":{\"628\":1}}],[\"全部失败则整体失败\",{\"1\":{\"46\":1}}],[\"全部完成\",{\"1\":{\"46\":1}}],[\"全部成功时返回结果数组\",{\"1\":{\"41\":1}}],[\"验证\",{\"1\":{\"411\":1}}],[\"验证使用用户名和口令\",{\"1\":{\"282\":1}}],[\"验证通过后\",{\"1\":{\"273\":1}}],[\"验证环境\",{\"1\":{\"95\":1}}],[\"验证代码是否符合\",{\"1\":{\"74\":1}}],[\"显式加载\",{\"1\":{\"95\":1}}],[\"显示nvm版本\",{\"1\":{\"298\":1}}],[\"显示node是运行在32位还是64位系统上的\",{\"1\":{\"298\":1}}],[\"显示所有可以下载的版本\",{\"1\":{\"297\":1}}],[\"显示所有引用\",{\"0\":{\"131\":1}}],[\"显示已安装的版本\",{\"1\":{\"297\":2}}],[\"显示版本列表\",{\"1\":{\"297\":1}}],[\"显示\",{\"1\":{\"288\":1,\"482\":1}}],[\"显示当前代理\",{\"1\":{\"298\":1}}],[\"显示当前使用的\",{\"1\":{\"288\":1}}],[\"显示当前路径\",{\"1\":{\"97\":1}}],[\"显示文件详细信息\",{\"1\":{\"97\":1}}],[\"显示两个分支之间代码差异\",{\"1\":{\"85\":1}}],[\"显示暂存区和本地仓库间的代码差异\",{\"1\":{\"85\":1}}],[\"未上锁的房间3\",{\"0\":{\"510\":1}}],[\"未上锁的房间2\",{\"0\":{\"509\":1}}],[\"未上锁的房间1\",{\"0\":{\"508\":1},\"1\":{\"509\":1}}],[\"未加载\",{\"1\":{\"345\":1}}],[\"未命名文件\",{\"1\":{\"89\":1}}],[\"未冲突的\",{\"1\":{\"83\":1}}],[\"执行了动作select\",{\"1\":{\"398\":1}}],[\"执行了一个动作\",{\"1\":{\"394\":1}}],[\"执行一个open动作\",{\"1\":{\"392\":1}}],[\"执行你的代码\",{\"1\":{\"380\":1}}],[\"执行各种操作\",{\"1\":{\"358\":1}}],[\"执行混淆\",{\"1\":{\"308\":1}}],[\"执行watchdog的start\",{\"1\":{\"280\":1}}],[\"执行相应的逻辑\",{\"1\":{\"272\":1}}],[\"执行对应的操作\",{\"1\":{\"254\":1}}],[\"执行本命令时\",{\"1\":{\"233\":1}}],[\"执行命令nrm\",{\"1\":{\"331\":1}}],[\"执行命令\",{\"1\":{\"170\":2,\"332\":1,\"333\":1}}],[\"执行脚本\",{\"1\":{\"95\":1,\"102\":1}}],[\"执行\",{\"1\":{\"88\":1,\"373\":1}}],[\"拉取代码需要输入密码问题\",{\"1\":{\"88\":1}}],[\"拉取远程仓库并合并\",{\"0\":{\"76\":1}}],[\"删除\",{\"0\":{\"334\":1}}],[\"删除字符串文字并将其放置在特殊数组中\",{\"1\":{\"307\":1}}],[\"删除包\",{\"1\":{\"103\":1}}],[\"删除文件夹\",{\"1\":{\"97\":1}}],[\"删除文件\",{\"1\":{\"97\":1}}],[\"删除远程分支\",{\"1\":{\"87\":1}}],[\"删除分支\",{\"1\":{\"87\":1}}],[\"缓存池\",{\"1\":{\"483\":1}}],[\"缓存区和工作区的head指向\",{\"1\":{\"84\":1}}],[\"缓存代码时添加备注\",{\"1\":{\"82\":1}}],[\"缓存代码\",{\"0\":{\"82\":1}}],[\"带你了解游戏背后的民俗秘密~\",{\"1\":{\"604\":1}}],[\"带我们重温了世界文字样式的发展与造字过程\",{\"1\":{\"589\":1}}],[\"带我们展示了一个小女孩的蜕变之路\",{\"1\":{\"507\":1}}],[\"带给人一种唯美的意境\",{\"1\":{\"517\":1}}],[\"带着魔法伞完成一个个任务\",{\"1\":{\"562\":1}}],[\"带着主人公探索孤岛从而发现秘密\",{\"1\":{\"532\":1}}],[\"带着他近\",{\"1\":{\"464\":1}}],[\"带着这个猜测我们去翻一下actiondescriptor对象的api\",{\"1\":{\"407\":1}}],[\"带\",{\"1\":{\"331\":1}}],[\"带版本索引hash值的简洁显示方式\",{\"1\":{\"84\":1}}],[\"带符号的\",{\"1\":{\"9\":1}}],[\"简易清新的画面\",{\"1\":{\"603\":1}}],[\"简直就是设计者们为我们构造了一个全新的世界模型\",{\"1\":{\"511\":1}}],[\"简直要抓狂\",{\"1\":{\"496\":1}}],[\"简称ar\",{\"1\":{\"394\":1}}],[\"简介\",{\"0\":{\"184\":1,\"337\":1}}],[\"简洁的显示方式\",{\"1\":{\"84\":1}}],[\"简单与复杂的交融\",{\"1\":{\"537\":1}}],[\"简单与复杂交融\",{\"1\":{\"537\":1}}],[\"简单例子\",{\"0\":{\"408\":1}}],[\"简单来说\",{\"1\":{\"14\":1}}],[\"简单说\",{\"1\":{\"3\":1}}],[\"之类的话应该对\",{\"1\":{\"366\":1}}],[\"之前就在b站上看到大神玩家竟将\",{\"1\":{\"533\":1}}],[\"之前我就踩过这个坑\",{\"1\":{\"365\":1}}],[\"之前的状态\",{\"1\":{\"83\":1}}],[\"之后是通过utf8编码后的route字符串\",{\"1\":{\"229\":1}}],[\"之后点击\",{\"1\":{\"213\":1}}],[\"之后要再次调用时可以点击这里\",{\"1\":{\"162\":1}}],[\"之后\",{\"1\":{\"124\":1,\"639\":1}}],[\"之上\",{\"1\":{\"9\":1}}],[\"恢复镜像\",{\"1\":{\"102\":1}}],[\"恢复\",{\"1\":{\"83\":1}}],[\"完美适配所有手机\",{\"0\":{\"494\":1}}],[\"完整的\",{\"1\":{\"369\":1}}],[\"完整的项目代码我已经放到\",{\"1\":{\"349\":1}}],[\"完整的app\",{\"1\":{\"257\":1,\"267\":1}}],[\"完全没有可读性\",{\"1\":{\"304\":1}}],[\"完全放弃\",{\"1\":{\"83\":1}}],[\"完成一段治愈浪漫却又充满困难险阻的旅程\",{\"1\":{\"576\":1}}],[\"完成屏幕中出现的3种不同音符的操作\",{\"1\":{\"518\":1}}],[\"完成开启\",{\"1\":{\"272\":1}}],[\"完成应用服务器的消息处理\",{\"1\":{\"255\":1}}],[\"完成component的加载以及生命周期管理\",{\"1\":{\"253\":1}}],[\"完成对app的初始化\",{\"1\":{\"262\":1}}],[\"完成对master请求的处理\",{\"1\":{\"255\":1}}],[\"完成对客户端的消息发送\",{\"1\":{\"242\":1}}],[\"完成对应session的bind\",{\"1\":{\"230\":1}}],[\"完成整个消息处理流程\",{\"1\":{\"230\":1}}],[\"完成请求的处理\",{\"1\":{\"195\":1}}],[\"完成调用\",{\"1\":{\"192\":1}}],[\"完成\",{\"1\":{\"43\":1}}],[\"但可以在有限的时间\",{\"1\":{\"599\":1}}],[\"但总觉得它失去了2作格斗的美感\",{\"1\":{\"594\":1}}],[\"但空灵的音乐和文艺的画风还是吸引了一批玩家\",{\"1\":{\"587\":1}}],[\"但又让我们不自觉联想到与自己最亲密的人\",{\"1\":{\"576\":1}}],[\"但又因为自由度高也没有剧情要求\",{\"1\":{\"560\":1}}],[\"但多说一句都是剧透\",{\"1\":{\"558\":1}}],[\"但很多曲子疯狂数量的音符降落依然能让你双指\",{\"1\":{\"525\":1}}],[\"但更有趣\",{\"1\":{\"506\":1}}],[\"但成也脚本败也脚本\",{\"1\":{\"488\":1}}],[\"但这款游戏的重点不在操作技术\",{\"1\":{\"554\":1}}],[\"但这里我们要讲的不是寻路算法\",{\"1\":{\"480\":1}}],[\"但这离实际使用差了十万八千里\",{\"1\":{\"389\":1}}],[\"但单元格的边长应为\",{\"1\":{\"479\":1}}],[\"但在我们的优化下\",{\"1\":{\"472\":1}}],[\"但因为项目实际技术限制\",{\"1\":{\"471\":1}}],[\"但不会实现代码高亮\",{\"1\":{\"430\":1}}],[\"但不删除缓存\",{\"1\":{\"82\":1}}],[\"但不删除这次缓存\",{\"1\":{\"82\":1}}],[\"但离开它确实举步维艰\",{\"1\":{\"397\":1}}],[\"但凡项目逻辑复杂点\",{\"1\":{\"372\":1}}],[\"但同时也带来了较多的通讯冗余数据\",{\"1\":{\"221\":1}}],[\"但你或许在想\",{\"1\":{\"220\":1}}],[\"但我们都知道127\",{\"1\":{\"217\":1}}],[\"但最好选择明确易懂的\",{\"1\":{\"209\":1}}],[\"但依然停留在当前分支\",{\"1\":{\"87\":1}}],[\"但是其实每种排序算法其实他都有一个擅长的场景\",{\"1\":{\"485\":1}}],[\"但是建筑物是移动的\",{\"1\":{\"484\":1}}],[\"但是性能却较为一般\",{\"1\":{\"482\":1}}],[\"但是在\",{\"1\":{\"479\":1}}],[\"但是在项目中尝试之后\",{\"1\":{\"469\":1}}],[\"但是引擎默认的传递方式是矩形\",{\"1\":{\"474\":1}}],[\"但是实际测试效果并不差\",{\"1\":{\"469\":1}}],[\"但是关于它的知识点并没有结束\",{\"1\":{\"411\":1}}],[\"但是原理是一致的\",{\"1\":{\"409\":1}}],[\"但是方法不太一样\",{\"1\":{\"398\":1}}],[\"但是这篇文章并没有解决一个很实际又很重要的问题\",{\"1\":{\"396\":1}}],[\"但是可以通过括号里头的参数半猜半蒙\",{\"1\":{\"392\":1}}],[\"但是你实际使用过程中就会发现\",{\"1\":{\"389\":1}}],[\"但是你不能通过设置typename来把一个普通图层改成图层组\",{\"1\":{\"379\":1}}],[\"但是如果你选中了多个图层\",{\"1\":{\"387\":1}}],[\"但是它只能在第一个子图层层级用\",{\"1\":{\"387\":1}}],[\"但是它的index会做相应的调整\",{\"1\":{\"378\":1}}],[\"但是它的视图类型是一种针对\",{\"1\":{\"26\":1}}],[\"但是也还有另外一种方法\",{\"1\":{\"383\":1}}],[\"但是他们的index却是一维的\",{\"1\":{\"378\":1}}],[\"但是打开是空白的\",{\"1\":{\"359\":1}}],[\"但是我们可以用通过\",{\"1\":{\"358\":1}}],[\"但是我们并没有太多关心框架是如何做到这一点的\",{\"1\":{\"262\":1}}],[\"但是目前这个项目已经放弃维护\",{\"1\":{\"368\":1}}],[\"但是目前\",{\"1\":{\"346\":1}}],[\"但是由于服务器可以在运行时增加和停止\",{\"1\":{\"278\":1}}],[\"但是由于js中函数也是一种对象\",{\"1\":{\"51\":1}}],[\"但是当用户自定定义rpc的时候\",{\"1\":{\"234\":1}}],[\"但是随着用户的增加\",{\"1\":{\"234\":1}}],[\"但是没有设置请求头\",{\"1\":{\"161\":1}}],[\"但是找了一些参考资料\",{\"1\":{\"159\":1}}],[\"但是保留\",{\"1\":{\"81\":1}}],[\"但是不太好升级\",{\"1\":{\"636\":1}}],[\"但是不再以教程的形式来写\",{\"1\":{\"374\":1}}],[\"但是不能使用注释语法\",{\"1\":{\"365\":1}}],[\"但是不会取消掉\",{\"1\":{\"81\":1}}],[\"但是不匹配该文件\",{\"1\":{\"64\":1}}],[\"但是部分浏览器早已支持\",{\"1\":{\"54\":1}}],[\"但是\",{\"1\":{\"29\":1,\"220\":1,\"230\":1,\"387\":1,\"409\":1,\"467\":1}}],[\"活动功能\",{\"1\":{\"82\":1}}],[\"强节奏感的鼓点与梦幻柔和的配音女声也让玩家们更耐得住性子\",{\"1\":{\"544\":1}}],[\"强度更高\",{\"1\":{\"145\":1}}],[\"强制关闭所有服务器进程\",{\"1\":{\"233\":1}}],[\"强制关闭应用及服务器\",{\"1\":{\"232\":1}}],[\"强制使用指定版本\",{\"1\":{\"95\":1}}],[\"强制提交\",{\"1\":{\"75\":1}}],[\"强烈推荐这款恐怖生存解谜游戏\",{\"1\":{\"564\":1}}],[\"强烈推荐\",{\"1\":{\"82\":1}}],[\"把图层id传进去\",{\"1\":{\"410\":1}}],[\"把目标引用对象修改为图层名称是camera的图层\",{\"1\":{\"408\":1}}],[\"把设置放在最后来讲\",{\"1\":{\"406\":1}}],[\"把json数据输出到桌面文件\",{\"1\":{\"402\":1}}],[\"把ps根对象application的属性给dump出来\",{\"1\":{\"400\":1}}],[\"把当前文档作为属性设置进去\",{\"1\":{\"399\":1}}],[\"把一个actiondescrptor的属性值都拿出来\",{\"1\":{\"398\":1}}],[\"把上面的typeid作为参数\",{\"1\":{\"398\":2}}],[\"把它传给了一个选择动作的描述符\",{\"1\":{\"398\":1}}],[\"把这游戏当成个解压工具也不错\",{\"1\":{\"597\":1}}],[\"把这个对象传给这个动作\",{\"1\":{\"392\":1}}],[\"把这些jsx都加载进来\",{\"1\":{\"383\":1}}],[\"把默认单位都设置成像素\",{\"1\":{\"380\":1}}],[\"把本地的改动缓存起来\",{\"1\":{\"82\":1}}],[\"把每个字节解读为无符号的\",{\"1\":{\"26\":1}}],[\"记录成一个动作脚本\",{\"1\":{\"390\":1}}],[\"记录请求总耗时等\",{\"1\":{\"250\":1}}],[\"记录\",{\"1\":{\"81\":2}}],[\"记录进行覆盖\",{\"1\":{\"74\":1}}],[\"更改为\",{\"1\":{\"461\":2}}],[\"更改后\",{\"1\":{\"461\":2}}],[\"更改\",{\"1\":{\"461\":1}}],[\"更改的内容\",{\"1\":{\"81\":1}}],[\"更不好理解\",{\"1\":{\"406\":1}}],[\"更多翻译为\",{\"1\":{\"531\":1}}],[\"更多详解请参考\",{\"0\":{\"313\":1}}],[\"更多高级搜索\",{\"1\":{\"58\":1}}],[\"更容易抓住如何使用admin\",{\"1\":{\"272\":1}}],[\"更易于使用\",{\"1\":{\"167\":1}}],[\"更新路由信息等\",{\"1\":{\"261\":1,\"271\":1}}],[\"更新其服务器上下文\",{\"1\":{\"254\":1}}],[\"更新\",{\"1\":{\"102\":1}}],[\"更加简洁的显示方式\",{\"1\":{\"84\":1}}],[\"取值为0的情况\",{\"1\":{\"501\":1}}],[\"取值从0到1\",{\"1\":{\"307\":1}}],[\"取值如下\",{\"1\":{\"222\":1}}],[\"取出了master传来的参数\",{\"1\":{\"272\":1}}],[\"取出\",{\"1\":{\"82\":2}}],[\"取出上一次缓存的代码\",{\"1\":{\"82\":2}}],[\"取消某次\",{\"0\":{\"81\":1},\"1\":{\"80\":1,\"81\":1}}],[\"取消\",{\"1\":{\"79\":1,\"80\":3}}],[\"取消缓存\",{\"0\":{\"79\":1}}],[\"取回的数据\",{\"1\":{\"28\":1}}],[\"谨慎使用\",{\"1\":{\"77\":2}}],[\"危险操作\",{\"1\":{\"77\":2}}],[\"撤销发布\",{\"1\":{\"102\":1}}],[\"撤销工作区所有内容的修改\",{\"1\":{\"77\":1}}],[\"撤销工作区\",{\"1\":{\"77\":1}}],[\"撤销所有变化\",{\"1\":{\"62\":2}}],[\"校验不通过无法提交\",{\"1\":{\"74\":1}}],[\"修剪艺术\",{\"0\":{\"557\":1}}],[\"修改完成后\",{\"1\":{\"641\":1}}],[\"修改完成后打开编辑器\",{\"1\":{\"639\":1}}],[\"修改引擎\",{\"0\":{\"637\":1}}],[\"修改之后请在命令行中继续执行\",{\"1\":{\"633\":1}}],[\"修改actionreference所引用的目标对象来进行操作\",{\"1\":{\"408\":1}}],[\"修改选中图层名称\",{\"1\":{\"408\":1}}],[\"修改图层等等这些\",{\"1\":{\"405\":1}}],[\"修改一些信息\",{\"1\":{\"396\":1}}],[\"修改文档数据\",{\"1\":{\"356\":1}}],[\"修改了插件内容一般会导致\",{\"1\":{\"353\":1}}],[\"修改表达式\",{\"1\":{\"343\":1}}],[\"修改\",{\"0\":{\"631\":1},\"1\":{\"292\":1,\"361\":1,\"473\":1}}],[\"修改并保存\",{\"0\":{\"206\":1}}],[\"修改配置以启动带有调试模式的服务器\",{\"0\":{\"204\":1}}],[\"修改版本库和缓存区的head指向\",{\"1\":{\"84\":1}}],[\"修改的文件被还原\",{\"1\":{\"78\":1}}],[\"修改推送源\",{\"1\":{\"72\":1}}],[\"修复\",{\"1\":{\"54\":1}}],[\"关卡设计短小精悍\",{\"1\":{\"572\":1}}],[\"关键在于游戏新颖的题材激发了玩家们的兴趣\",{\"1\":{\"522\":1}}],[\"关于更多\",{\"1\":{\"628\":1}}],[\"关于更多的各种模糊的详细介绍\",{\"1\":{\"482\":1}}],[\"关于默认导航栏\",{\"1\":{\"495\":1}}],[\"关于am的系统性介绍就这三篇内容\",{\"1\":{\"411\":1}}],[\"关于actiondescriptor这个类\",{\"1\":{\"392\":1}}],[\"关于权限控制以及用户信息的配置\",{\"1\":{\"282\":1}}],[\"关于这种使用push方式并在monitorhandler中通过判断msg的值进行区分两种情况的实现方式\",{\"1\":{\"272\":1}}],[\"关于具体加载的一些组件的功能\",{\"1\":{\"262\":1}}],[\"关于应用服务器加载的组件的具体启动过程\",{\"1\":{\"262\":1}}],[\"关于客户端请求的路由\",{\"1\":{\"234\":1}}],[\"关于channel\",{\"1\":{\"230\":1}}],[\"关闭文档是close等等\",{\"1\":{\"410\":1}}],[\"关闭\",{\"1\":{\"369\":2}}],[\"关闭nodejs版本管理\",{\"1\":{\"298\":1}}],[\"关闭自身\",{\"1\":{\"273\":1}}],[\"关闭应用及服务器或者停止指定的服务器\",{\"1\":{\"232\":1}}],[\"关闭项目\",{\"0\":{\"188\":1}}],[\"关联的上游分支是\",{\"1\":{\"77\":1}}],[\"关联本地\",{\"1\":{\"72\":1}}],[\"关联远程仓库\",{\"0\":{\"72\":1}}],[\"关注首个完成的\",{\"1\":{\"44\":1}}],[\"粘贴到远端仓库\",{\"1\":{\"69\":1}}],[\"~~这是加删除线的文字~~\",{\"1\":{\"417\":1}}],[\"~表示前两位不变\",{\"1\":{\"102\":1}}],[\"~0\",{\"1\":{\"102\":1}}],[\"~\",{\"1\":{\"69\":1,\"354\":1,\"355\":1,\"382\":3,\"384\":1,\"385\":1,\"400\":1}}],[\"步\",{\"1\":{\"69\":1}}],[\"若遇到类似下方这样的报错\",{\"1\":{\"636\":2}}],[\"若想后台运行项目\",{\"1\":{\"186\":1}}],[\"若拉取并合并的远程分支和当前本地分支名称不一致\",{\"1\":{\"76\":1}}],[\"若拉取并合并的远程分支和当前本地分支名称一致\",{\"1\":{\"76\":1}}],[\"若当前本地分支\",{\"1\":{\"75\":1}}],[\"若已有直接到第\",{\"1\":{\"69\":1}}],[\"若全部失败则抛出聚合错误\",{\"1\":{\"44\":1}}],[\"例如进入游戏时的公告\",{\"1\":{\"487\":1}}],[\"例如这是一个原来的旗帜预制体\",{\"1\":{\"471\":1}}],[\"例如左图中的旗杆\",{\"1\":{\"468\":1}}],[\"例如启动一个\",{\"1\":{\"356\":1}}],[\"例如软件\",{\"1\":{\"352\":1}}],[\"例如图标\",{\"1\":{\"350\":1}}],[\"例如我开发的\",{\"1\":{\"346\":1}}],[\"例如前端服务器会加载统计客户端连接数量的connection组件\",{\"1\":{\"285\":1}}],[\"例如为chat服务器配置路由规则\",{\"1\":{\"271\":1}}],[\"例如要打开或者关闭应用的filter并查看其状态是否存在\",{\"1\":{\"267\":1}}],[\"例如要打开或者关闭应用的rpc\",{\"1\":{\"261\":1}}],[\"例如要存取server对象\",{\"1\":{\"267\":1}}],[\"例如需要加载mysql\",{\"1\":{\"261\":1,\"267\":1}}],[\"例如可以做一些初始化操作\",{\"1\":{\"261\":1}}],[\"例如在全局设置mysql参数\",{\"1\":{\"261\":1,\"271\":1}}],[\"例如\",{\"1\":{\"233\":1,\"246\":1,\"261\":2,\"271\":4,\"307\":1,\"356\":1,\"367\":1,\"373\":2,\"485\":1,\"628\":1}}],[\"例如当前本地分支为\",{\"1\":{\"76\":2}}],[\"例如用在代码回滚后内容\",{\"1\":{\"75\":1}}],[\"例如先执行\",{\"1\":{\"74\":2}}],[\"例如使用\",{\"1\":{\"68\":1}}],[\"例子程序里有相应的配置示例\",{\"1\":{\"276\":1}}],[\"例子如下\",{\"1\":{\"233\":1}}],[\"例子\",{\"1\":{\"22\":1}}],[\"代码库\",{\"0\":{\"503\":1}}],[\"代码中还会有输入框文字跳动解决办法\",{\"1\":{\"500\":1}}],[\"代码中设置\",{\"1\":{\"369\":1}}],[\"代码也很简单\",{\"1\":{\"467\":1}}],[\"代码复制\",{\"0\":{\"450\":1}}],[\"代码块\",{\"1\":{\"430\":1}}],[\"代码会以主题中设置的样式出现在行内\",{\"1\":{\"430\":1}}],[\"代码高亮\",{\"0\":{\"430\":1}}],[\"代码结构也不复杂\",{\"1\":{\"409\":1}}],[\"代码简单清晰\",{\"1\":{\"402\":1}}],[\"代码简化之后\",{\"1\":{\"392\":1}}],[\"代码如果被打了断点也能正常的被\",{\"1\":{\"373\":1}}],[\"代码如下\",{\"1\":{\"272\":1}}],[\"代码想要使用\",{\"1\":{\"372\":1}}],[\"代码一样使用\",{\"1\":{\"370\":1}}],[\"代码执行的宿主环境\",{\"1\":{\"370\":1}}],[\"代码没区别\",{\"1\":{\"370\":1}}],[\"代码而不是\",{\"1\":{\"365\":1}}],[\"代码映射为\",{\"1\":{\"365\":1}}],[\"代码映射回原始\",{\"1\":{\"341\":1}}],[\"代码的入口\",{\"1\":{\"358\":1}}],[\"代码访问宿主信息\",{\"1\":{\"358\":1}}],[\"代码交互\",{\"1\":{\"358\":1}}],[\"代码内容很简单\",{\"1\":{\"357\":1}}],[\"代码入口\",{\"1\":{\"350\":1}}],[\"代码开源\",{\"1\":{\"348\":1}}],[\"代码快照管理等功能\",{\"1\":{\"348\":1}}],[\"代码编辑器\",{\"1\":{\"346\":1}}],[\"代码自动运行\",{\"1\":{\"341\":1,\"342\":1}}],[\"代码\",{\"0\":{\"358\":1,\"368\":1},\"1\":{\"341\":1,\"350\":1,\"356\":1,\"357\":1,\"358\":1,\"362\":1,\"364\":1,\"373\":1,\"465\":1,\"638\":1}}],[\"代码体积增加约300\",{\"1\":{\"308\":1}}],[\"代码最小化\",{\"1\":{\"299\":1}}],[\"代码示例如下\",{\"1\":{\"258\":1}}],[\"代码解读复制代码\",{\"1\":{\"68\":1}}],[\"代替\",{\"1\":{\"68\":1}}],[\"代表和平的羽毛是否也代表着新生\",{\"1\":{\"562\":1}}],[\"代表socket\",{\"1\":{\"233\":1}}],[\"代表\",{\"1\":{\"233\":1}}],[\"代表不同的数据格式\",{\"1\":{\"4\":1}}],[\"代表内存之中的一段二进制数据\",{\"1\":{\"1\":1}}],[\"各种各样的武器\",{\"1\":{\"594\":1}}],[\"各种各样的动物让你眼花缭乱\",{\"1\":{\"566\":1}}],[\"各种尺寸的全面屏\",{\"1\":{\"496\":1}}],[\"各个运行时有个基本的了解\",{\"1\":{\"358\":1}}],[\"各个package类型的具体描述和控制流程如下\",{\"1\":{\"222\":1}}],[\"各服务器按顺序关闭自身的功能\",{\"1\":{\"188\":1}}],[\"各仓库图\",{\"0\":{\"67\":1}}],[\"各语言忽略文件参考\",{\"1\":{\"65\":1}}],[\"目镜比1作用得更频繁\",{\"1\":{\"509\":1}}],[\"目标就是稳定性\",{\"1\":{\"368\":1}}],[\"目标\",{\"1\":{\"292\":1}}],[\"目录大纲\",{\"1\":{\"458\":1}}],[\"目录\",{\"0\":{\"97\":1,\"265\":1,\"415\":1},\"1\":{\"94\":1,\"343\":1,\"636\":1}}],[\"目录下完成\",{\"1\":{\"640\":1}}],[\"目录下并重命名为\",{\"1\":{\"636\":1}}],[\"目录下\",{\"1\":{\"633\":1,\"639\":1}}],[\"目录下会多出一个文件\",{\"1\":{\"88\":1}}],[\"目录下的源码\",{\"1\":{\"639\":1}}],[\"目录下的\",{\"1\":{\"65\":1,\"639\":1,\"640\":1,\"641\":1}}],[\"目录的全部内容\",{\"1\":{\"65\":1}}],[\"目前只计划发布维护好这2种组件\",{\"1\":{\"503\":1}}],[\"目前只支持后端服务器的动态添加\",{\"1\":{\"189\":1}}],[\"目前主流的\",{\"1\":{\"461\":1}}],[\"目前还想写的主题有\",{\"1\":{\"374\":1}}],[\"目前官方的\",{\"1\":{\"372\":1}}],[\"目前插件来到了\",{\"1\":{\"368\":1}}],[\"目前该项目在持续维护升级当中\",{\"1\":{\"348\":1}}],[\"目前在最新版本的mac系统上已经无法安装了\",{\"1\":{\"347\":1}}],[\"目前工具pomleo\",{\"1\":{\"254\":1}}],[\"目前pinus中系统rpc调用有\",{\"1\":{\"245\":1}}],[\"目前pinus支持如下命令及选项\",{\"1\":{\"232\":1}}],[\"目前的取值\",{\"1\":{\"223\":1}}],[\"目前\",{\"1\":{\"8\":1,\"11\":1,\"367\":1}}],[\"忽略目录\",{\"1\":{\"443\":1}}],[\"忽略文件\",{\"0\":{\"443\":1},\"1\":{\"443\":1}}],[\"忽略第三个参数\",{\"1\":{\"273\":1}}],[\"忽略根目录下的logs\",{\"1\":{\"65\":1}}],[\"忽略根目录下的\",{\"1\":{\"65\":1}}],[\"忽略根目录下的bin文件\",{\"1\":{\"65\":1}}],[\"忽略当前路径下的logs目录\",{\"1\":{\"65\":1}}],[\"忽略当前路径下的bin文件夹\",{\"1\":{\"65\":1}}],[\"忽略当前路径的\",{\"1\":{\"65\":1}}],[\"忽略所有后缀为\",{\"1\":{\"65\":1}}],[\"忽略所有\",{\"1\":{\"65\":1}}],[\"忽略a\",{\"1\":{\"65\":1}}],[\"忽略\",{\"1\":{\"65\":3}}],[\"匹配队友\",{\"1\":{\"612\":1}}],[\"匹配示例\",{\"1\":{\"65\":1}}],[\"匹配多级目录\",{\"1\":{\"64\":1}}],[\"匹配规则\",{\"0\":{\"64\":1}}],[\"结构\",{\"0\":{\"619\":1}}],[\"结合简约的画风与清新的bgm\",{\"1\":{\"554\":1}}],[\"结合前面教程中关于module的例子\",{\"1\":{\"282\":1}}],[\"结局时\",{\"1\":{\"517\":1}}],[\"结尾有彩蛋\",{\"1\":{\"604\":1}}],[\"结尾处喜剧与悲剧结合的设定也将这场战争上升为人性的伟大\",{\"1\":{\"528\":1}}],[\"结尾处一句\",{\"1\":{\"517\":1}}],[\"结尾的小情节让我一度认为还会出续作\",{\"1\":{\"511\":1}}],[\"结尾4个结局也让整个游戏升华得更加诡异\",{\"1\":{\"510\":1}}],[\"结语\",{\"0\":{\"489\":1}}],[\"结束\",{\"1\":{\"64\":1}}],[\"结束的模式只匹配文件夹以及在该文件夹路径下的内容\",{\"1\":{\"64\":1}}],[\"结果输出到\",{\"1\":{\"308\":1}}],[\"结果数组\",{\"1\":{\"46\":1}}],[\"结果\",{\"1\":{\"42\":1}}],[\"结果顺序与输入顺序一致\",{\"1\":{\"41\":1}}],[\"结果等于当前数据类型的最大值减去余值的绝对值\",{\"1\":{\"14\":1}}],[\"结果等于当前数据类型的最小值加上余值\",{\"1\":{\"14\":1}}],[\"结果报错\",{\"1\":{\"9\":1}}],[\"结果得到\",{\"1\":{\"4\":1}}],[\"开膛手杰克\",{\"1\":{\"590\":1}}],[\"开源\",{\"1\":{\"478\":1}}],[\"开启wifi的情况下修复statusbarheight值获取不到\",{\"1\":{\"501\":1}}],[\"开启了\",{\"1\":{\"359\":1}}],[\"开启\",{\"1\":{\"356\":1,\"357\":1}}],[\"开启nodejs版本管理\",{\"1\":{\"298\":1}}],[\"开启监听后\",{\"1\":{\"274\":1}}],[\"开启masteragent的监听\",{\"1\":{\"262\":1}}],[\"开启一些功能选项\",{\"1\":{\"261\":1}}],[\"开启一个定时器\",{\"1\":{\"230\":1}}],[\"开启pinus的特性等等\",{\"1\":{\"257\":1}}],[\"开发工具中\",{\"1\":{\"501\":1}}],[\"开发工具中android和其他手机\",{\"1\":{\"501\":1}}],[\"开发工具中ios手机\",{\"1\":{\"501\":1}}],[\"开发体验\",{\"1\":{\"374\":1}}],[\"开发者是\",{\"1\":{\"368\":1}}],[\"开发插件的时候肯定是不会放这的\",{\"1\":{\"353\":1}}],[\"开发辅助的扩展\",{\"1\":{\"346\":1}}],[\"开发调试时\",{\"1\":{\"233\":1}}],[\"开发过程中\",{\"1\":{\"206\":1}}],[\"开发环境下可以使用\",{\"1\":{\"188\":1}}],[\"开发环境则选择development参数\",{\"1\":{\"186\":1}}],[\"开头的模式标识否定\",{\"1\":{\"64\":1}}],[\"开头的模式标识注释\",{\"1\":{\"64\":1}}],[\"开始写代码\",{\"1\":{\"430\":1}}],[\"开始调试\",{\"1\":{\"215\":1}}],[\"开始构建\",{\"1\":{\"95\":1}}],[\"开始的模式匹配项目跟目录\",{\"1\":{\"64\":1}}],[\"开始生成新数组\",{\"1\":{\"20\":1}}],[\"开始复制\",{\"1\":{\"18\":1}}],[\"开始于字节2\",{\"1\":{\"9\":2}}],[\"开始于字节0\",{\"1\":{\"9\":1}}],[\"开始\",{\"1\":{\"6\":1,\"9\":1,\"32\":2}}],[\"运用了高斯模糊的的画面很卡大概是每秒\",{\"1\":{\"482\":1}}],[\"运行以后有很多信息是原创作者的\",{\"1\":{\"454\":1}}],[\"运行脚本\",{\"1\":{\"346\":2}}],[\"运行环境\",{\"1\":{\"257\":1,\"267\":1,\"639\":1}}],[\"运行的环境\",{\"0\":{\"236\":1}}],[\"运行的脚本\",{\"1\":{\"62\":1}}],[\"运行时动态添加服务器\",{\"1\":{\"232\":1}}],[\"运行后\",{\"1\":{\"212\":1}}],[\"运行按钮\",{\"1\":{\"212\":1}}],[\"运行配置举例\",{\"1\":{\"210\":1}}],[\"运行配置方法跟一般的nodejs程序配置方法相同\",{\"1\":{\"210\":1}}],[\"运行配置\",{\"0\":{\"210\":1}}],[\"运行安装程序\",{\"1\":{\"159\":1}}],[\"运行任务\",{\"1\":{\"139\":1}}],[\"运行\",{\"1\":{\"102\":2,\"212\":1}}],[\"运算符的结果\",{\"1\":{\"14\":1}}],[\"添加以下内容\",{\"1\":{\"358\":1}}],[\"添加如下内容\",{\"1\":{\"357\":1}}],[\"添加插件配置文件\",{\"0\":{\"356\":1}}],[\"添加下面的代码\",{\"1\":{\"293\":1}}],[\"添加文件\",{\"1\":{\"292\":1}}],[\"添加servertype\",{\"0\":{\"264\":1}}],[\"添加一个新的配置\",{\"1\":{\"234\":1}}],[\"添加的参数必须包括服务器ip地址\",{\"1\":{\"189\":1}}],[\"添加子文件夹\",{\"1\":{\"162\":1}}],[\"添加本地模块到全局链接\",{\"1\":{\"102\":1}}],[\"添加镜像\",{\"1\":{\"102\":1}}],[\"添加用户\",{\"1\":{\"102\":1}}],[\"添加\",{\"1\":{\"62\":1,\"405\":1}}],[\"自带的一个库版本太低\",{\"1\":{\"636\":1}}],[\"自带的组件\",{\"1\":{\"474\":1}}],[\"自然的解谜游戏\",{\"1\":{\"529\":1}}],[\"自称泰勒还会有意外彩蛋\",{\"1\":{\"524\":1}}],[\"自己可以修改\",{\"1\":{\"454\":1}}],[\"自己简单改吧改吧凑合着用\",{\"1\":{\"397\":1}}],[\"自己稍作等待也调用app\",{\"1\":{\"262\":1}}],[\"自身能力的适配\",{\"1\":{\"368\":1}}],[\"自行分析pinus\",{\"1\":{\"282\":1}}],[\"自定义房间属性\",{\"1\":{\"612\":1}}],[\"自定义玩家信息\",{\"1\":{\"612\":1}}],[\"自定义玩家状态\",{\"1\":{\"612\":1}}],[\"自定义导航栏高度在不同机型始终无法达到视觉上的统一\",{\"1\":{\"496\":1}}],[\"自定义引擎\",{\"0\":{\"473\":1},\"1\":{\"631\":1}}],[\"自定义页面样式\",{\"1\":{\"442\":1}}],[\"自定义键盘\",{\"1\":{\"140\":1}}],[\"自定义功能区\",{\"1\":{\"140\":1}}],[\"自定义操作\",{\"1\":{\"62\":1}}],[\"自动合图与动态合图\",{\"1\":{\"462\":1}}],[\"自动化构建工具\",{\"1\":{\"322\":1}}],[\"自动从这里来获取模块的类型定义\",{\"1\":{\"124\":1}}],[\"自动变更\",{\"1\":{\"83\":1}}],[\"自动过滤溢出\",{\"1\":{\"3\":1}}],[\"注册表文件压缩包\",{\"1\":{\"361\":1}}],[\"注册一个面板\",{\"1\":{\"356\":1}}],[\"注册加载完成后\",{\"1\":{\"255\":1}}],[\"注释\",{\"1\":{\"65\":1,\"97\":1}}],[\"注\",{\"1\":{\"58\":1,\"233\":1,\"499\":1}}],[\"注意这里有一个陷阱\",{\"1\":{\"246\":1}}],[\"注意事项等\",{\"1\":{\"377\":1}}],[\"注意事项\",{\"0\":{\"230\":1}}],[\"注意被框的内容\",{\"1\":{\"210\":1}}],[\"注意将\",{\"1\":{\"17\":1}}],[\"注意\",{\"1\":{\"3\":1,\"9\":4,\"10\":1,\"13\":1,\"26\":1,\"32\":1,\"633\":1,\"636\":1,\"638\":1}}],[\"按tab键可转换为二级\",{\"1\":{\"425\":1}}],[\"按钮同时\",{\"1\":{\"370\":1}}],[\"按钮可以打开\",{\"1\":{\"366\":1}}],[\"按钮来配置\",{\"1\":{\"366\":1}}],[\"按钮\",{\"1\":{\"215\":1,\"343\":1}}],[\"按作者名搜索\",{\"1\":{\"58\":1}}],[\"按仓库大小搜索\",{\"1\":{\"58\":1}}],[\"按照加载的逆序分别调用每一个组件的stop回调方法\",{\"1\":{\"262\":1}}],[\"按照client发出的命令\",{\"1\":{\"254\":1}}],[\"按照用户配置的路由策略\",{\"1\":{\"242\":1}}],[\"按照我们上文介绍的那样\",{\"1\":{\"159\":1}}],[\"按照无符号的\",{\"1\":{\"14\":1}}],[\"按照本机操作系统设定的字节序读写数据\",{\"1\":{\"11\":1}}],[\">>飞机\",{\"1\":{\"497\":1}}],[\">>>>>>>>>>这是引用的内容\",{\"1\":{\"422\":1}}],[\">>这是引用的内容\",{\"1\":{\"422\":1}}],[\">这是引用的内容\",{\"1\":{\"422\":1}}],[\">layer\",{\"1\":{\"399\":1}}],[\">string的转换\",{\"1\":{\"398\":1}}],[\">标尺\",{\"1\":{\"380\":1}}],[\">刷新<\",{\"1\":{\"357\":1}}],[\"><\",{\"1\":{\"357\":1}}],[\">\",{\"1\":{\"103\":1,\"108\":1,\"110\":1,\"111\":1,\"112\":1,\"139\":1,\"140\":4,\"246\":3,\"333\":2,\"334\":1,\"355\":2,\"356\":39,\"357\":11,\"365\":8,\"399\":2,\"401\":17,\"408\":2,\"420\":1,\"621\":1,\"631\":1,\"636\":12}}],[\">=5000\",{\"1\":{\"58\":1}}],[\">10000\",{\"1\":{\"58\":1}}],[\">2020\",{\"1\":{\"58\":1}}],[\">5000\",{\"1\":{\"58\":1}}],[\"kawase\",{\"1\":{\"482\":3}}],[\"kb\",{\"1\":{\"464\":1,\"465\":2,\"467\":2,\"468\":1,\"469\":1,\"470\":3,\"471\":3,\"472\":2,\"474\":5,\"475\":1,\"477\":3,\"478\":1,\"479\":4,\"480\":1,\"482\":4,\"484\":1,\"485\":1,\"487\":4,\"488\":3}}],[\"kbrg\",{\"1\":{\"360\":1}}],[\"kpanelbrightnessmediumgray\",{\"1\":{\"400\":1}}],[\"kuibrightnesslevel\",{\"1\":{\"400\":1}}],[\"kick等操作\",{\"1\":{\"230\":1}}],[\"kick等操作时\",{\"1\":{\"230\":1}}],[\"kill\",{\"1\":{\"188\":1,\"206\":1,\"232\":1,\"233\":3}}],[\"known\",{\"1\":{\"130\":1}}],[\"keygen\",{\"1\":{\"69\":1,\"94\":1}}],[\"key\",{\"0\":{\"69\":1},\"1\":{\"69\":4,\"234\":2,\"319\":2,\"392\":46,\"398\":8,\"407\":11}}],[\"keystring\",{\"1\":{\"398\":2}}],[\"keys\",{\"1\":{\"10\":1,\"392\":1}}],[\"k\",{\"1\":{\"54\":5,\"292\":1}}],[\"小游戏\",{\"1\":{\"640\":1}}],[\"小游戏版本采用了\",{\"1\":{\"468\":1}}],[\"小3传奇\",{\"0\":{\"606\":1},\"1\":{\"606\":1}}],[\"小红帽就此踏上黑森林的冒险之旅\",{\"1\":{\"556\":1}}],[\"小红帽与\",{\"1\":{\"556\":1}}],[\"小怪\",{\"1\":{\"533\":1}}],[\"小程序自定义导航栏已开放许久>>了解一下\",{\"1\":{\"496\":1}}],[\"小彩蛋\",{\"1\":{\"54\":1}}],[\"小端字节序\",{\"1\":{\"23\":1}}],[\"小端字节序将最不重要的字节排在前面\",{\"1\":{\"11\":1}}],[\"父对象\",{\"1\":{\"54\":1}}],[\"②\",{\"1\":{\"54\":1}}],[\"①\",{\"1\":{\"54\":1}}],[\"总的来说这不像标签写的音乐游戏\",{\"1\":{\"607\":1}}],[\"总的来说游戏并不难\",{\"1\":{\"555\":1}}],[\"总会有一种淡淡的忧伤\",{\"1\":{\"602\":1}}],[\"总有一辆车是你避不开的\",{\"1\":{\"605\":1}}],[\"总有一个关卡能让你震撼\",{\"1\":{\"575\":1}}],[\"总有你喜欢的场景或玩法\",{\"1\":{\"570\":1}}],[\"总有人愿意牺牲自己\",{\"1\":{\"547\":1}}],[\"总是格外漫长\",{\"1\":{\"488\":1}}],[\"总体而言\",{\"1\":{\"396\":1,\"409\":1}}],[\"总体来说\",{\"1\":{\"346\":1,\"515\":1}}],[\"总结一下\",{\"1\":{\"54\":1}}],[\"总结\",{\"0\":{\"54\":1,\"89\":1,\"154\":1,\"362\":1,\"374\":1,\"387\":1,\"396\":1,\"405\":1,\"411\":1}}],[\"总之\",{\"1\":{\"11\":1}}],[\"找回那个复活所需的宝石\",{\"1\":{\"570\":1}}],[\"找到原因后\",{\"1\":{\"488\":1}}],[\"找到这个字体的属性之后\",{\"1\":{\"409\":1}}],[\"找到目的文件路径\",{\"1\":{\"169\":1}}],[\"找到源文件路径\",{\"1\":{\"169\":1}}],[\"找到对应的constructor\",{\"1\":{\"53\":1}}],[\"找一个目录\",{\"1\":{\"62\":1}}],[\"找不到了\",{\"1\":{\"51\":1}}],[\"任务配置中\",{\"1\":{\"180\":1}}],[\"任务执行完毕\",{\"1\":{\"170\":1}}],[\"任何一项数值消耗殆尽则游戏结束\",{\"1\":{\"574\":1}}],[\"任何小的标题需要清晰可见\",{\"1\":{\"444\":1}}],[\"任何输入信息的变化\",{\"1\":{\"151\":1}}],[\"任何函数在创建的时候\",{\"1\":{\"52\":1}}],[\"任一失败则整体失败\",{\"1\":{\"46\":1}}],[\"任一失败则立即拒绝\",{\"1\":{\"41\":1}}],[\"那你可以试试玩这个\",{\"1\":{\"602\":1}}],[\"那你玩这款游戏就非常容易上手\",{\"1\":{\"525\":1}}],[\"那岂不是一个角色在哪里走\",{\"1\":{\"480\":1}}],[\"那个二维码可以在文件中找到qrcode改成自己的\",{\"1\":{\"454\":1}}],[\"那它本质上就是reference所引用的目标对象不同而已\",{\"1\":{\"408\":1}}],[\"那反过来\",{\"1\":{\"408\":1}}],[\"那如果现在要修改这些值\",{\"1\":{\"407\":1}}],[\"那如果我想get一些数据\",{\"1\":{\"396\":1}}],[\"那这款就是一部当之无愧的塔防经典\",{\"1\":{\"513\":1}}],[\"那这个返回的actiondescriptor就会很大\",{\"1\":{\"399\":1}}],[\"那这里面的stringidtotypeid是啥意思\",{\"1\":{\"392\":1}}],[\"那结合前面我们介绍的内容\",{\"1\":{\"399\":1}}],[\"那除了通过名称之外\",{\"1\":{\"399\":1}}],[\"那该怎么办呢\",{\"1\":{\"396\":1}}],[\"那目标对象的代码在哪里呢\",{\"1\":{\"394\":1}}],[\"那复制呢\",{\"1\":{\"392\":1}}],[\"那关闭难道是close\",{\"1\":{\"392\":1}}],[\"那怎么办呢\",{\"1\":{\"387\":1}}],[\"那我怎么拿到选中的图层列表呢\",{\"1\":{\"387\":1}}],[\"那使用\",{\"1\":{\"373\":1}}],[\"那就自己添加一个\",{\"1\":{\"361\":1}}],[\"那就表示一个uid只允许一个session登录\",{\"1\":{\"230\":1}}],[\"那是差的不是一两个时代\",{\"1\":{\"376\":1}}],[\"那是一个更强大的交互式命令行工具\",{\"1\":{\"282\":1}}],[\"那是因为如果我们不定义router的话\",{\"1\":{\"234\":1}}],[\"那样的话\",{\"1\":{\"262\":1}}],[\"那里使用了redis来维护channel信息\",{\"1\":{\"230\":1}}],[\"那prototype属性的作用又是什么呢\",{\"1\":{\"52\":1}}],[\"那么您只要按照下面的流程修改\",{\"1\":{\"629\":1}}],[\"那么用什么方法确定哪些物体是可见的呢\",{\"1\":{\"479\":1}}],[\"那么将插件安装到这就是需要\",{\"1\":{\"353\":1}}],[\"那么将会转向错误处理\",{\"1\":{\"197\":1}}],[\"那么在当今社会\",{\"1\":{\"540\":1}}],[\"那么在\",{\"1\":{\"352\":1}}],[\"那么当客户端发出请求时\",{\"1\":{\"282\":1}}],[\"那么每隔interval秒\",{\"1\":{\"277\":1}}],[\"那么客户端就在master上注册成功\",{\"1\":{\"276\":1}}],[\"那么monitor将会遇到两种情况\",{\"1\":{\"272\":1}}],[\"那么表示将变量attach到app对象上\",{\"1\":{\"261\":1}}],[\"那么id\",{\"1\":{\"247\":1}}],[\"那么pinus总会把所有的对其的请求路由给这个服务器\",{\"1\":{\"234\":1}}],[\"那么以后当需要扩充服务器的时候\",{\"1\":{\"234\":1}}],[\"那么只需在servers\",{\"1\":{\"234\":1}}],[\"那么进程将转入后台运行\",{\"1\":{\"233\":1}}],[\"那么这样的话\",{\"1\":{\"230\":1}}],[\"那么这个属性的作用是什么呢\",{\"1\":{\"51\":1}}],[\"那么对backendsession的属性的修改\",{\"1\":{\"230\":1}}],[\"那么仅仅通过rpc的回调返回具体的响应即可\",{\"1\":{\"230\":1}}],[\"那么前端服务器就会根据路由策略配置\",{\"1\":{\"230\":1}}],[\"那么前端服务器会根据用户配置的router\",{\"1\":{\"192\":1}}],[\"那么前端服务器会使用filter\",{\"1\":{\"192\":1}}],[\"那么toobusy的filter中将终止此请求处理链\",{\"1\":{\"201\":1}}],[\"那么就可以使用app\",{\"1\":{\"261\":1}}],[\"那么就调用app\",{\"1\":{\"261\":1}}],[\"那么就直接调用next\",{\"1\":{\"197\":1}}],[\"那么就会去它的\",{\"1\":{\"51\":1,\"54\":1}}],[\"那么就会大大提高效率\",{\"1\":{\"29\":1}}],[\"那么coserver的dofoward将会发起sys\",{\"1\":{\"195\":1}}],[\"那么coserver的dohandle中将会发起其filter\",{\"1\":{\"195\":1}}],[\"那么\",{\"1\":{\"124\":1}}],[\"那么麻烦\",{\"1\":{\"29\":1}}],[\"那么乘以一个\",{\"1\":{\"26\":1}}],[\"别忘了一点\",{\"1\":{\"52\":1}}],[\"函数声明如下\",{\"1\":{\"252\":1}}],[\"函数方法等都是靠\",{\"1\":{\"51\":1}}],[\"函数被调用\",{\"1\":{\"50\":1}}],[\"其余的诸如魔法少女\",{\"1\":{\"524\":1}}],[\"其余的由用户自定义的rpc调用属于user\",{\"1\":{\"245\":1}}],[\"其单位在各种手机中都为px\",{\"1\":{\"499\":1}}],[\"其原理是将传统的判断是否在同一张图集\",{\"1\":{\"467\":1}}],[\"其依赖的\",{\"1\":{\"461\":1}}],[\"其console\",{\"1\":{\"282\":2}}],[\"其chat\",{\"1\":{\"262\":1}}],[\"其具体的参数以及参数默认值\",{\"1\":{\"282\":1}}],[\"其事件是由底层socket连接来激发的\",{\"1\":{\"282\":1}}],[\"其monitorhandler被回调\",{\"1\":{\"280\":1}}],[\"其行为为通过masteragent广播新增服务器的notify到所有已经订阅注册的服务器\",{\"1\":{\"280\":1}}],[\"其主要功能如下\",{\"1\":{\"271\":1}}],[\"其主要内容如下\",{\"1\":{\"267\":1}}],[\"其所依赖的组件已经完成初始化\",{\"1\":{\"262\":1}}],[\"其加载的默认组件为master组件和monitor组件\",{\"1\":{\"262\":1}}],[\"其node\",{\"1\":{\"262\":1}}],[\"其next语义与前面的beforefilter中的next语义一致\",{\"1\":{\"197\":1}}],[\"其配置字段如下\",{\"1\":{\"261\":1}}],[\"其签名应该是\",{\"1\":{\"274\":1}}],[\"其签名为\",{\"1\":{\"261\":1}}],[\"其签名是next\",{\"1\":{\"197\":1}}],[\"其数据字段跟frontendsession基本一致\",{\"1\":{\"247\":1}}],[\"其作用\",{\"1\":{\"247\":1}}],[\"其路由一般形式为onxxx\",{\"1\":{\"246\":1}}],[\"其形式一般是<\",{\"1\":{\"246\":1}}],[\"其它命令\",{\"0\":{\"410\":1}}],[\"其它属性可以通过我们之前学习的到遍历属性的方法拿到\",{\"1\":{\"408\":1}}],[\"其它的不要给我返回了\",{\"1\":{\"399\":1}}],[\"其它类型大家下来自己尝试\",{\"1\":{\"398\":1}}],[\"其它\",{\"0\":{\"386\":1}}],[\"其它事件\",{\"1\":{\"238\":1}}],[\"其它请求方式如put\",{\"1\":{\"161\":1}}],[\"其对应关系\",{\"1\":{\"461\":1}}],[\"其对应关系以及相应的消息头如下图\",{\"1\":{\"228\":1}}],[\"其对应的monitorhandler也同样会被回调\",{\"1\":{\"278\":1}}],[\"其对应的monitorhandler将会被回调\",{\"1\":{\"278\":1}}],[\"其对应的masterhandler将会被回调\",{\"1\":{\"277\":1}}],[\"其对应的连接事件会触发\",{\"1\":{\"230\":1}}],[\"其类型均是backendsession\",{\"1\":{\"230\":1}}],[\"其聊天的所有内容都需要推送给同一房间的其他用户\",{\"1\":{\"230\":1}}],[\"其长度就是前面一位byte的uint8的值\",{\"1\":{\"229\":1}}],[\"其格式如下图\",{\"1\":{\"229\":1}}],[\"其内容如下\",{\"1\":{\"227\":1}}],[\"其次\",{\"1\":{\"203\":1}}],[\"其方法签名为\",{\"1\":{\"197\":2}}],[\"其运算次数为256\",{\"1\":{\"144\":1}}],[\"其中比较有意思的是\",{\"1\":{\"471\":1}}],[\"其中第7行\",{\"1\":{\"408\":1}}],[\"其中第二个参数目标值的单位或者属性类型\",{\"1\":{\"394\":1}}],[\"其中artlayer是一般图层\",{\"1\":{\"378\":1}}],[\"其中app是一切的入口\",{\"1\":{\"377\":1}}],[\"其中app\",{\"1\":{\"262\":1}}],[\"其中reigstry为源名\",{\"1\":{\"333\":1}}],[\"其中resp是由前面产生错误的next\",{\"1\":{\"197\":1}}],[\"其中level\",{\"1\":{\"282\":1}}],[\"其中opts是用户调用app\",{\"1\":{\"274\":1}}],[\"其中有两个很重要的服务器配置文件servers\",{\"1\":{\"261\":1}}],[\"其中有一个\",{\"1\":{\"23\":1}}],[\"其中game\",{\"1\":{\"257\":1}}],[\"其中clientport用来监听客户端的连接\",{\"1\":{\"242\":1}}],[\"其中chatroute就是路由函数\",{\"1\":{\"234\":1}}],[\"其中master可以认为对应于master服务器的master组件\",{\"1\":{\"273\":1}}],[\"其中monitorhandler是monitor收到master的请求或者通知时由monitor回调\",{\"1\":{\"272\":1}}],[\"其中message\",{\"1\":{\"226\":1}}],[\"其中msg是请求\",{\"1\":{\"197\":1}}],[\"其中sioconnector基于socket\",{\"1\":{\"221\":1}}],[\"其中\",{\"1\":{\"203\":1,\"226\":1,\"227\":1,\"233\":1,\"236\":1,\"252\":1,\"331\":1,\"447\":1,\"465\":1,\"543\":1}}],[\"其中包含了函数的每个参数类型\",{\"1\":{\"114\":1}}],[\"其他都不可以\",{\"1\":{\"606\":1}}],[\"其他组件请自行修改代码\",{\"1\":{\"503\":1}}],[\"其他优化\",{\"0\":{\"486\":1}}],[\"其他对象都在那边等着\",{\"1\":{\"480\":1}}],[\"其他命令\",{\"0\":{\"298\":1}}],[\"其他level的权限的控制权限受到限制\",{\"1\":{\"282\":1}}],[\"其他服务器又是怎样获知这些消息\",{\"1\":{\"273\":1}}],[\"其他的服务器收到此notify后\",{\"1\":{\"281\":1}}],[\"其他的参数并没有指定\",{\"1\":{\"262\":1}}],[\"其他的命令行参数类似于pinus\",{\"1\":{\"233\":1}}],[\"其他参数与前面的handler一样\",{\"1\":{\"252\":1}}],[\"其他数据源安装\",{\"1\":{\"130\":1}}],[\"其他\",{\"0\":{\"88\":1,\"648\":1},\"1\":{\"233\":1,\"288\":1}}],[\"其实是因为越到后面越难hhhh\",{\"1\":{\"603\":1}}],[\"其实画质还可以\",{\"1\":{\"582\":1}}],[\"其实真正在游戏里不会有这种奇怪的表现\",{\"1\":{\"480\":1}}],[\"其实null的含义就是target\",{\"1\":{\"394\":1}}],[\"其实就是疯狂虐他\",{\"1\":{\"567\":1}}],[\"其实就是我上面介绍的如何遍历分析actiondescriptor对象\",{\"1\":{\"402\":1}}],[\"其实就是\",{\"1\":{\"357\":1}}],[\"其实会默认同时创建该函数的prototype对象\",{\"1\":{\"52\":1}}],[\"其实所有函数都可以作为构造函数\",{\"1\":{\"52\":1}}],[\"其实我们平时调用的字符串方法\",{\"1\":{\"51\":1}}],[\"人物不再暗影风格\",{\"1\":{\"594\":1}}],[\"人们为了预知未来而冒风险进入另一个世界\",{\"1\":{\"604\":1}}],[\"人们\",{\"1\":{\"574\":1}}],[\"人们预先建立的避难所派上了用场\",{\"1\":{\"535\":1}}],[\"人肉\",{\"1\":{\"372\":1}}],[\"人\",{\"1\":{\"51\":1}}],[\"里一个答案都没给\",{\"1\":{\"604\":1}}],[\"里奥开启了一段充满危险与汗水的旅程\",{\"1\":{\"552\":1}}],[\"里奥的财富\",{\"0\":{\"552\":1}}],[\"里头有一项功能\",{\"1\":{\"403\":1}}],[\"里头有一个inspector\",{\"1\":{\"400\":1}}],[\"里头\",{\"1\":{\"392\":1}}],[\"里找\",{\"1\":{\"51\":2,\"54\":1}}],[\"里面都是按钮部分\",{\"1\":{\"472\":1}}],[\"里面很多配置项的功能我都以注释的形式说明了\",{\"1\":{\"356\":1}}],[\"里面原来那个值是否发生变化\",{\"1\":{\"34\":1}}],[\"里面的\",{\"1\":{\"14\":1}}],[\"里面\",{\"1\":{\"8\":1,\"209\":1}}],[\"里面没有任何成员\",{\"1\":{\"8\":1}}],[\"上通过\",{\"1\":{\"638\":1}}],[\"上开源\",{\"1\":{\"628\":1}}],[\"上方2种组件在最下方30多款手机测试情况表现良好\",{\"1\":{\"504\":1}}],[\"上传游戏平台\",{\"1\":{\"488\":1}}],[\"上传文件\",{\"1\":{\"97\":1}}],[\"上升\",{\"1\":{\"469\":1}}],[\"上线前期还有部分用户反映游戏运行时手机发热严重\",{\"1\":{\"465\":1}}],[\"上一篇文章我们讲过\",{\"1\":{\"398\":1}}],[\"上篇文章相当于是基础知识的介绍\",{\"1\":{\"397\":1}}],[\"上篇文章我们介绍了如何使用action\",{\"1\":{\"406\":1}}],[\"上篇文章我们介绍了action\",{\"1\":{\"397\":1}}],[\"上篇文章我们介绍了jsx的脚本核心\",{\"1\":{\"389\":1}}],[\"上修改这个文件夹是需要\",{\"1\":{\"352\":1}}],[\"上了\",{\"1\":{\"349\":1}}],[\"上用于\",{\"1\":{\"346\":1}}],[\"上报自己的时间信息的话\",{\"1\":{\"272\":1}}],[\"上报周期为5秒\",{\"1\":{\"272\":1}}],[\"上报时间没有太多的实际意义\",{\"1\":{\"272\":1}}],[\"上下文对象app提供了设置和获取应用变量的方法\",{\"1\":{\"261\":1}}],[\"上图只是截取的一部分\",{\"1\":{\"398\":1}}],[\"上图是不同的flag标志对应的route字段的内容\",{\"1\":{\"229\":1}}],[\"上图有点复杂\",{\"1\":{\"51\":1}}],[\"上的pinus数据包\",{\"1\":{\"221\":1}}],[\"上的方法\",{\"1\":{\"54\":1}}],[\"上的静态属性和方法拷贝一份到\",{\"1\":{\"54\":1}}],[\"上\",{\"0\":{\"630\":1},\"1\":{\"54\":1,\"482\":1}}],[\"上面是一个简单的例子\",{\"1\":{\"409\":1}}],[\"上面链接是我修复后的版本\",{\"1\":{\"402\":1}}],[\"上面这段代码\",{\"1\":{\"404\":1}}],[\"上面这行代码也很重要\",{\"1\":{\"399\":1}}],[\"上面这几种方法\",{\"1\":{\"399\":1}}],[\"上面两个方法就用不上了\",{\"1\":{\"399\":1}}],[\"上面两个命令的整合\",{\"1\":{\"87\":1}}],[\"上面actionreference的方法putindex\",{\"1\":{\"399\":1}}],[\"上面我们讲历时背景的时候提到了\",{\"1\":{\"393\":1}}],[\"上面命令表示\",{\"1\":{\"308\":1}}],[\"上面简要地介绍了pinus中的一些术语\",{\"1\":{\"256\":1}}],[\"上面选取了客户端与服务器交互的几个典型行为\",{\"1\":{\"197\":1}}],[\"上面例子中\",{\"1\":{\"14\":2}}],[\"上面的代码理解为我要引用一个名称是rectangle的图层\",{\"1\":{\"398\":1}}],[\"上面的代码定义了一个actionreference\",{\"1\":{\"394\":1}}],[\"上面的code\",{\"1\":{\"393\":1}}],[\"上面的例子我们介绍的是修改某个目标对象的属性\",{\"1\":{\"410\":1}}],[\"上面的例子只针对选中的图层进行操作\",{\"1\":{\"408\":1}}],[\"上面的例子\",{\"1\":{\"378\":1,\"399\":1}}],[\"上面的例子中\",{\"1\":{\"22\":1}}],[\"上面的2款工具\",{\"1\":{\"348\":1}}],[\"上面的输出表明当前源是官方源\",{\"1\":{\"331\":1}}],[\"上面的图中展示了后端服务器中的调用流程\",{\"1\":{\"230\":1}}],[\"上面的\",{\"1\":{\"14\":1,\"228\":1}}],[\"上面所有方法的用法\",{\"1\":{\"10\":1}}],[\"上面代码就不是根据选中的图层来进行修改操作了\",{\"1\":{\"408\":1}}],[\"上面代码将共享内存的偶数位置的值改成\",{\"1\":{\"31\":1}}],[\"上面代码将一个\",{\"1\":{\"22\":1}}],[\"上面代码读取了\",{\"1\":{\"23\":1}}],[\"上面代码复制\",{\"1\":{\"18\":1}}],[\"上面代码的\",{\"1\":{\"15\":1,\"18\":1,\"19\":1,\"26\":1}}],[\"上面代码从一个普通的数组\",{\"1\":{\"9\":1}}],[\"上面代码生成一个\",{\"1\":{\"9\":1,\"11\":1}}],[\"上面代码生成了一段\",{\"1\":{\"4\":1}}],[\"上面代码中\",{\"1\":{\"9\":3,\"14\":2,\"20\":1,\"29\":5,\"30\":2,\"32\":2}}],[\"上面代码在一段长度为\",{\"1\":{\"9\":1}}],[\"上面代码拷贝\",{\"1\":{\"6\":1}}],[\"上面代码使用\",{\"1\":{\"4\":1}}],[\"上面代码对同一段内存\",{\"1\":{\"4\":1}}],[\"上面代码对一段\",{\"1\":{\"4\":1}}],[\"棕色虚线箭头表示继承而来的constructor属性的指向\",{\"1\":{\"50\":1}}],[\"棕色实线箭头表示本身具有的constructor属性的指向\",{\"1\":{\"50\":1}}],[\"绿色箭头表示prototype属性的指向\",{\"1\":{\"50\":1}}],[\"彻底搞懂它们\",{\"1\":{\"50\":1}}],[\"彻底搞懂js中的prototype\",{\"0\":{\"49\":1}}],[\"然而游戏的防御塔个数比前作增加了许多\",{\"1\":{\"516\":1}}],[\"然而有这样一个集合\",{\"1\":{\"393\":1}}],[\"然而\",{\"1\":{\"346\":2,\"347\":2,\"563\":1}}],[\"然而它们背后的关系却是错综复杂的\",{\"1\":{\"50\":1}}],[\"然后再重新运行\",{\"1\":{\"636\":1}}],[\"然后再断开连接\",{\"1\":{\"226\":1}}],[\"然后随着车数增多\",{\"1\":{\"605\":1}}],[\"然后接触封印的故事\",{\"1\":{\"593\":1}}],[\"然后有些生成的元素还会在画面中显示\",{\"1\":{\"560\":1}}],[\"然后你需要不断将它们合成以创造新元素\",{\"1\":{\"560\":1}}],[\"然后做个好梦\",{\"1\":{\"530\":1}}],[\"然后我们再根据建筑物的坐标\",{\"1\":{\"479\":1}}],[\"然后和游戏里的层级对应起来\",{\"1\":{\"472\":1}}],[\"然后总结\",{\"1\":{\"411\":1}}],[\"然后逐级往上\",{\"1\":{\"409\":1}}],[\"然后逐一关闭所有服务器\",{\"1\":{\"233\":1}}],[\"然后给它传递一个actiondescriptor\",{\"1\":{\"408\":1}}],[\"然后会发现它的功能针对比官方提供的dom\",{\"1\":{\"406\":1}}],[\"然后会设置应用的名称\",{\"1\":{\"267\":1}}],[\"然后反向获取到它的actiondescriptor\",{\"1\":{\"399\":1}}],[\"然后获取到了该图层的actiondescriptor\",{\"1\":{\"399\":1}}],[\"然后发现它返回的也是一个actiondescriptor对象\",{\"1\":{\"398\":1}}],[\"然后发起rpc调用\",{\"1\":{\"192\":1}}],[\"然后从中获取到这个对象的属性信息\",{\"1\":{\"398\":1}}],[\"然后把里头可变的值作为参数传进去\",{\"1\":{\"395\":1}}],[\"然后把这个引用对象复制给desc1\",{\"1\":{\"394\":1}}],[\"然后是需要设置的一些属性\",{\"1\":{\"394\":1}}],[\"然后是一些通过app这个上下文对框架的一些配置以及一些初始化操作\",{\"1\":{\"257\":1}}],[\"然后typeidtocharid\",{\"1\":{\"393\":1}}],[\"然后对应的文件路径在\",{\"1\":{\"392\":1}}],[\"然后对该值进行某个操作\",{\"1\":{\"34\":1}}],[\"然后类似录像机一样把你的动作记录下来之后进行重放\",{\"1\":{\"390\":1}}],[\"然后文档也告诉我们dom的顶级层级是app\",{\"1\":{\"377\":1}}],[\"然后双击里面的reg文件\",{\"1\":{\"361\":1}}],[\"然后直接用本地文件路径\",{\"1\":{\"356\":1}}],[\"然后直接生成\",{\"1\":{\"9\":1}}],[\"然后向master发出注册请求\",{\"1\":{\"282\":1}}],[\"然后通知给master\",{\"1\":{\"272\":1}}],[\"然后通过putxxx修改该属性的值\",{\"1\":{\"409\":1}}],[\"然后通过该属性的类型\",{\"1\":{\"408\":1}}],[\"然后通过webpack\",{\"1\":{\"376\":1}}],[\"然后通过编译工具生成目标语言\",{\"1\":{\"376\":1}}],[\"然后通过\",{\"1\":{\"295\":1}}],[\"然后通过此连接与master端通信\",{\"1\":{\"273\":1}}],[\"然后通过对参数进行分析\",{\"1\":{\"272\":1}}],[\"然后通过对master发出请求或者命令\",{\"1\":{\"254\":1}}],[\"然后通过registeradmin调用\",{\"1\":{\"261\":1}}],[\"然后通过app\",{\"1\":{\"261\":1}}],[\"然后通过调用frontendsession的push方法\",{\"1\":{\"247\":1}}],[\"然后通过socket将消息发送出去\",{\"1\":{\"230\":1}}],[\"然后通过视图读写\",{\"1\":{\"6\":1,\"29\":1}}],[\"然后进入相应的回调\",{\"1\":{\"262\":1}}],[\"然后进行配置即可\",{\"1\":{\"261\":1}}],[\"然后进行分析\",{\"1\":{\"51\":1}}],[\"然后这个子进程又会创建很多子进程\",{\"1\":{\"262\":1}}],[\"然后就启动了node\",{\"1\":{\"262\":1}}],[\"然后就能看到很多log信息\",{\"1\":{\"262\":1}}],[\"然后就可以向master发送request\",{\"1\":{\"273\":1}}],[\"然后就可以发起调用了\",{\"1\":{\"230\":1}}],[\"然后就可以接受用户的连接了\",{\"1\":{\"193\":1}}],[\"然后用这个校验码作为key\",{\"1\":{\"246\":1}}],[\"然后coconnector会将后端的响应或者后端推送的消息调度给copushscheduler\",{\"1\":{\"230\":1}}],[\"然后分派给coserver\",{\"1\":{\"230\":1}}],[\"然后选中single\",{\"1\":{\"209\":1}}],[\"然后其先读取配置文件\",{\"1\":{\"203\":1}}],[\"然后记录日志\",{\"1\":{\"200\":1}}],[\"然后两个时间戳相减\",{\"1\":{\"200\":1}}],[\"然后将其\",{\"1\":{\"482\":1}}],[\"然后将module注册到自己的module仓库中\",{\"1\":{\"262\":1}}],[\"然后将要推送的数据通过session维护的socket连接发送到客户端\",{\"1\":{\"195\":1}}],[\"然后将响应返回给前端服务器\",{\"1\":{\"195\":1}}],[\"然后将请求交给coserver处理\",{\"1\":{\"195\":1}}],[\"然后将处理后的结果返回\",{\"1\":{\"192\":1}}],[\"然后创建session\",{\"1\":{\"194\":1}}],[\"然后新创建一个对象\",{\"1\":{\"50\":1}}],[\"然后使用\",{\"1\":{\"32\":1}}],[\"然后线程安全问题也就随之而来\",{\"1\":{\"29\":1}}],[\"然后加\",{\"1\":{\"14\":1}}],[\"然后按照视图类型进行解释\",{\"1\":{\"14\":1}}],[\"然后\",{\"1\":{\"11\":1,\"29\":1,\"261\":1,\"262\":1}}],[\"然后在文档的结尾为变量赋值\",{\"1\":{\"418\":1}}],[\"然后在app\",{\"1\":{\"271\":1}}],[\"然后在监听到\",{\"1\":{\"29\":1}}],[\"然后在它的基础上\",{\"1\":{\"11\":1}}],[\"然后在这个对象的第一个字节\",{\"1\":{\"9\":1}}],[\"然后依次对每个成员赋值\",{\"1\":{\"9\":1}}],[\"然后以不带符号的\",{\"1\":{\"4\":1}}],[\"详见\",{\"1\":{\"638\":1}}],[\"详情见\",{\"1\":{\"395\":1}}],[\"详解javascript中的new操作符\",{\"1\":{\"50\":1}}],[\"详细请看\",{\"1\":{\"50\":1}}],[\"让水族馆充满生命力\",{\"1\":{\"601\":1}}],[\"让格斗也变得唯美起来\",{\"1\":{\"594\":1}}],[\"让这个悬疑故事不再那么恐怖\",{\"1\":{\"590\":1}}],[\"让这款跑酷游戏极具节奏感与打击感\",{\"1\":{\"583\":1}}],[\"让这款游戏非常适合女生体验\",{\"1\":{\"549\":1}}],[\"让这款游戏名副其实地成为一部恐怖类型的经典解谜作品\",{\"1\":{\"512\":1}}],[\"让他成为一个优秀的忍者\",{\"1\":{\"567\":1}}],[\"让内心的世界得到安置\",{\"1\":{\"559\":1}}],[\"让人泪目\",{\"1\":{\"553\":1}}],[\"让人忍不住仔细欣赏每个人物与防御塔的卡通模型\",{\"1\":{\"516\":1}}],[\"让你玩得根本停不下来\",{\"1\":{\"550\":1}}],[\"让你的理解更清晰一些\",{\"1\":{\"247\":1}}],[\"让大神玩家的粉丝们不禁连连感慨\",{\"1\":{\"519\":1}}],[\"让大家能够对这种不常见的语法结构做一些了解\",{\"1\":{\"396\":1}}],[\"让手与屏幕的接触迸发出动力十足的爆炸感\",{\"1\":{\"519\":1}}],[\"让道路不需要用之前提到的材质进行渲染\",{\"1\":{\"475\":1}}],[\"让\",{\"1\":{\"358\":1}}],[\"让master主动拉数据\",{\"1\":{\"272\":1}}],[\"让客户端和服务器在连接建立后\",{\"1\":{\"223\":1}}],[\"让我们每个人心中的世界都得到了安置\",{\"1\":{\"559\":1}}],[\"让我们不禁思索关于人生的修剪艺术\",{\"1\":{\"557\":1}}],[\"让我们不自觉猜测那位武士藏匿着的\",{\"1\":{\"517\":1}}],[\"让我们一览20多年rpg游戏的发展变革\",{\"1\":{\"553\":1}}],[\"让我们一步步剖析\",{\"1\":{\"50\":1}}],[\"让我们体会到技能衔接的流畅与酷炫\",{\"1\":{\"542\":1}}],[\"让我们深深体会到战争为人们带来的国破家亡\",{\"1\":{\"527\":1}}],[\"让我们开始吧\",{\"1\":{\"406\":1}}],[\"让我们可以通过引用拿到它的描述符\",{\"1\":{\"398\":1}}],[\"让我们马上开始吧~\",{\"1\":{\"397\":1}}],[\"让我们自己也可以顺藤摸瓜的开始自己写am代码\",{\"1\":{\"397\":1}}],[\"让我们从如下一个简单的例子展开讨论\",{\"1\":{\"50\":1}}],[\"让其他线程改写内存上面的值\",{\"1\":{\"33\":1}}],[\"让其他线程休眠\",{\"1\":{\"32\":1}}],[\"现在游戏的\",{\"1\":{\"472\":1}}],[\"现在只拿到了它的属性key\",{\"1\":{\"398\":1}}],[\"现在只用到了其中的4个bit\",{\"1\":{\"227\":1}}],[\"现在我们明白了原理\",{\"1\":{\"500\":1}}],[\"现在我们来把目标对象换成当前文档\",{\"1\":{\"399\":1}}],[\"现在我们的目标是想要获取到这个图层的属性\",{\"1\":{\"398\":1}}],[\"现在我们可以做一些简单的解释了\",{\"1\":{\"262\":1}}],[\"现在有了一个学霸同桌\",{\"1\":{\"392\":1}}],[\"现在插件肯定还是运行不起来的\",{\"1\":{\"357\":1}}],[\"现在消息共有四类\",{\"1\":{\"227\":1}}],[\"现在就可以从运行\",{\"1\":{\"212\":1}}],[\"现在正式开始\",{\"1\":{\"50\":1}}],[\"现代编程语言中\",{\"1\":{\"29\":1}}],[\"名字有所差异\",{\"1\":{\"50\":1}}],[\"谷歌浏览器的实现就是将\",{\"1\":{\"50\":1}}],[\"实用性强的一套逻辑方法\",{\"1\":{\"411\":1}}],[\"实测在\",{\"1\":{\"367\":1}}],[\"实际使用中\",{\"1\":{\"272\":1}}],[\"实际应用中可以使用更复杂的更有实际意义的参数\",{\"1\":{\"272\":1}}],[\"实际应用中\",{\"1\":{\"234\":1,\"272\":2}}],[\"实际上就是我们的master服务器进程\",{\"1\":{\"262\":1}}],[\"实际上都涉及到与客户端的通信\",{\"1\":{\"230\":1}}],[\"实际上\",{\"1\":{\"50\":1,\"257\":1,\"262\":2,\"272\":2,\"273\":1}}],[\"实现想要的功能\",{\"1\":{\"397\":1}}],[\"实现无界面面板\",{\"1\":{\"356\":1}}],[\"实现用户自己定制的监控管理功能\",{\"1\":{\"255\":1}}],[\"实现所有的路由选择函数的话\",{\"1\":{\"234\":1}}],[\"实现继承\",{\"1\":{\"54\":1}}],[\"实践\",{\"0\":{\"215\":1}}],[\"实例三\",{\"0\":{\"260\":1,\"270\":1}}],[\"实例二\",{\"0\":{\"259\":1,\"269\":1}}],[\"实例一\",{\"0\":{\"258\":1,\"268\":1}}],[\"实例提供\",{\"1\":{\"23\":1}}],[\"实例有以下属性\",{\"1\":{\"22\":1}}],[\"实例有一个\",{\"1\":{\"6\":1}}],[\"实例上也能获取\",{\"1\":{\"12\":1}}],[\"实例或\",{\"1\":{\"7\":1}}],[\"实例的同名方法相同\",{\"1\":{\"22\":1}}],[\"实例的\",{\"1\":{\"5\":1,\"15\":1,\"20\":1}}],[\"实例\",{\"1\":{\"4\":1,\"7\":1,\"9\":2,\"20\":1,\"21\":1,\"22\":2}}],[\"实例作为参数\",{\"1\":{\"4\":1,\"9\":2}}],[\"读者可以按照前面的分析方式\",{\"1\":{\"282\":1}}],[\"读者可以结合源码自行分析\",{\"1\":{\"282\":1}}],[\"读者可以自行尝试\",{\"1\":{\"272\":1}}],[\"读作\",{\"1\":{\"50\":1}}],[\"读取图层信息\",{\"1\":{\"348\":1}}],[\"读取一个值\",{\"1\":{\"34\":1}}],[\"读取\",{\"1\":{\"23\":8}}],[\"图书馆\",{\"1\":{\"524\":1}}],[\"图腾等元素的出现\",{\"1\":{\"506\":1}}],[\"图片进行批量压缩\",{\"1\":{\"478\":1}}],[\"图片减色\",{\"0\":{\"478\":1},\"1\":{\"488\":1}}],[\"图片缩放\",{\"0\":{\"477\":1}}],[\"图片\",{\"1\":{\"461\":9}}],[\"图片地址\",{\"1\":{\"420\":2}}],[\"图层id或者图层名称来做修改操作\",{\"1\":{\"408\":1}}],[\"图层切换\",{\"1\":{\"403\":1}}],[\"图层数量等\",{\"1\":{\"399\":1}}],[\"图层顺序来锁定目标图层呢\",{\"1\":{\"399\":1}}],[\"图层名称\",{\"1\":{\"398\":1}}],[\"图层的id是不会发生变化的\",{\"1\":{\"378\":1}}],[\"图层位于越上面的\",{\"1\":{\"378\":1}}],[\"图层操作\",{\"0\":{\"378\":1}}],[\"图标等\",{\"1\":{\"496\":1}}],[\"图标\",{\"1\":{\"350\":1,\"420\":2}}],[\"图中所示的用例为一般情况下\",{\"1\":{\"282\":1}}],[\"图中的其他函数同理\",{\"1\":{\"50\":1}}],[\"图的最左边即为例子代码\",{\"1\":{\"50\":1}}],[\"图的中间部分即为它们之间的联系\",{\"1\":{\"50\":1}}],[\"图的说明\",{\"1\":{\"50\":1}}],[\"图解\",{\"0\":{\"49\":1}}],[\"图像文件的数据全部处理完成\",{\"1\":{\"29\":1}}],[\"尚未标准化\",{\"1\":{\"47\":1}}],[\"至于在dom下\",{\"1\":{\"378\":1}}],[\"至于什么时候写\",{\"1\":{\"374\":1}}],[\"至少一个成功\",{\"1\":{\"46\":1}}],[\"至此\",{\"1\":{\"29\":1}}],[\"首尾呼应的羽毛更是发人深省\",{\"1\":{\"562\":1}}],[\"首页路径\",{\"1\":{\"356\":1,\"357\":1}}],[\"首先您需要从\",{\"0\":{\"630\":1}}],[\"首先每个角色寻路的起始和结束时间都不一样\",{\"1\":{\"480\":1}}],[\"首先找到这些属性的项是什么\",{\"1\":{\"409\":1}}],[\"首先下载插件\",{\"1\":{\"391\":1}}],[\"首先要做的便是配置\",{\"1\":{\"365\":1}}],[\"首先根据pinus创建一个应用\",{\"1\":{\"267\":1}}],[\"首先app\",{\"1\":{\"262\":1}}],[\"首先我们使用pinus\",{\"1\":{\"262\":1}}],[\"首先我们需要知道\",{\"1\":{\"203\":1}}],[\"首先看下图\",{\"1\":{\"262\":1}}],[\"首先会加载默认组件\",{\"1\":{\"262\":1}}],[\"首先会加载默认的组件\",{\"1\":{\"262\":1}}],[\"首先会创建一个app实例\",{\"1\":{\"257\":1}}],[\"首先会创建一个app的实例\",{\"1\":{\"257\":1}}],[\"首先会对message事件所携带的包进行解包\",{\"1\":{\"195\":1}}],[\"首先\",{\"1\":{\"51\":1,\"272\":1}}],[\"首先读取文件\",{\"1\":{\"29\":2}}],[\"首个成功值或错误集合\",{\"1\":{\"46\":1}}],[\"首个成功的\",{\"1\":{\"46\":1}}],[\"首个失败的\",{\"1\":{\"46\":1}}],[\"首个完成的结果或错误\",{\"1\":{\"46\":1}}],[\"首个完成\",{\"1\":{\"46\":1}}],[\"状态栏高度\",{\"1\":{\"499\":1}}],[\"状态栏到胶囊按钮间距\",{\"1\":{\"499\":1}}],[\"状态对象数组\",{\"1\":{\"46\":1}}],[\"状态的\",{\"1\":{\"41\":1}}],[\"解开诅咒以拯救村庄\",{\"1\":{\"547\":1}}],[\"解开一个个谜题\",{\"1\":{\"523\":1}}],[\"解谜依然由探索以及各种老式小游戏构成\",{\"1\":{\"593\":1}}],[\"解谜等内容融合起来\",{\"1\":{\"580\":1}}],[\"解谜等多种游戏类型元素\",{\"1\":{\"541\":1}}],[\"解谜的元素融合起来\",{\"1\":{\"528\":1}}],[\"解谜的格局越来越大\",{\"1\":{\"510\":1}}],[\"解谜所考虑的元素散播得更广了\",{\"1\":{\"509\":1}}],[\"解压\",{\"1\":{\"361\":1}}],[\"解绑uid的\",{\"1\":{\"247\":1}}],[\"解绑uid绑定使用unbind\",{\"1\":{\"230\":1}}],[\"解绑用户\",{\"0\":{\"196\":1}}],[\"解决问题\",{\"0\":{\"219\":1,\"500\":1}}],[\"解决\",{\"1\":{\"88\":1}}],[\"解析失败\",{\"1\":{\"45\":1}}],[\"解除锁\",{\"1\":{\"32\":1}}],[\"假如能重来\",{\"1\":{\"585\":1}}],[\"假如使用的不是pull方式\",{\"1\":{\"272\":1}}],[\"假设已支持\",{\"1\":{\"45\":1}}],[\"假定\",{\"1\":{\"29\":2}}],[\"假定字符串采用\",{\"1\":{\"13\":1}}],[\"假定某段buffer包含如下字节\",{\"1\":{\"11\":1}}],[\"统计错误信息\",{\"1\":{\"252\":1}}],[\"统一同步\",{\"1\":{\"45\":1}}],[\"统称为\",{\"1\":{\"8\":1}}],[\"仅用了\",{\"1\":{\"465\":1}}],[\"仅仅有console和watchdog会被默认注册\",{\"1\":{\"282\":1}}],[\"仅仅有clientport字段\",{\"1\":{\"241\":1}}],[\"仅仅是为了示例\",{\"1\":{\"272\":1}}],[\"仅仅给客户端返回可以连接的前端服务器的地址信息的话\",{\"1\":{\"261\":1}}],[\"仅代表是函数\",{\"1\":{\"50\":1}}],[\"仅关注首个成功的\",{\"1\":{\"44\":1}}],[\"仅需最快结果\",{\"1\":{\"42\":1}}],[\"或只需要修改纯\",{\"1\":{\"629\":1}}],[\"或尝试在\",{\"1\":{\"345\":1}}],[\"或手动添加连接地址\",{\"1\":{\"343\":1}}],[\"或packages\",{\"1\":{\"289\":1}}],[\"或\",{\"1\":{\"43\":2,\"102\":1,\"103\":1,\"237\":1,\"289\":1,\"430\":1,\"536\":1}}],[\"或者克隆\",{\"0\":{\"630\":1}}],[\"或者直接在家当条咸鱼\",{\"1\":{\"578\":1}}],[\"或者直接把所有的efaultoption\",{\"1\":{\"454\":1}}],[\"或者target\",{\"1\":{\"408\":1}}],[\"或者你想获取到图层的图层叠加效果等等\",{\"1\":{\"389\":1}}],[\"或者从本地读取\",{\"1\":{\"384\":1}}],[\"或者从工具栏中选择run\",{\"1\":{\"208\":1}}],[\"或者就是乖乖的用for去遍历\",{\"1\":{\"376\":1}}],[\"或者在需要断点的地方写\",{\"1\":{\"370\":1}}],[\"或者整个服务器群的运行状态\",{\"1\":{\"273\":1}}],[\"或者给master发指令\",{\"1\":{\"272\":1}}],[\"或者还有一些需要等待全局就绪的工作也可以放到这里来做\",{\"1\":{\"262\":1}}],[\"或者下载客户端版本\",{\"1\":{\"159\":1}}],[\"或者说宿主\",{\"1\":{\"352\":1}}],[\"或者说\",{\"1\":{\"29\":1,\"606\":1}}],[\"或者展示在\",{\"1\":{\"29\":1}}],[\"或者转换格式\",{\"1\":{\"29\":1}}],[\"或者\",{\"1\":{\"24\":1,\"341\":1,\"373\":1,\"418\":1,\"637\":1}}],[\"或者字符串转为\",{\"1\":{\"13\":1}}],[\"或者更准确的说\",{\"1\":{\"11\":1}}],[\"竞速处理多个异步任务\",{\"1\":{\"42\":1}}],[\"如格斗\",{\"1\":{\"553\":1}}],[\"如有问题可以下方留言讨论\",{\"1\":{\"504\":1}}],[\"如有侵权请联系本人修改或删除\",{\"1\":{\"504\":1}}],[\"如有需要返回给客户端的响应\",{\"1\":{\"251\":1}}],[\"如右图所示\",{\"1\":{\"468\":1}}],[\"如extend\",{\"1\":{\"391\":1}}],[\"如此反复\",{\"1\":{\"378\":1}}],[\"如webpack\",{\"1\":{\"304\":1}}],[\"如我们在上面进程树图中看到的那样\",{\"1\":{\"262\":1}}],[\"如你可以配置\",{\"1\":{\"261\":1}}],[\"如backendsessionservice\",{\"1\":{\"261\":1}}],[\"如上面的时序图所示\",{\"1\":{\"262\":2}}],[\"如上\",{\"1\":{\"261\":1}}],[\"如查询整个服务器群的状态\",{\"1\":{\"254\":1}}],[\"如production\",{\"1\":{\"233\":1}}],[\"如\",{\"1\":{\"221\":1,\"226\":1,\"250\":2,\"252\":1,\"629\":1,\"639\":1}}],[\"如何向\",{\"1\":{\"628\":1}}],[\"如何计算\",{\"0\":{\"499\":1}}],[\"如何快速便捷算出这个高度\",{\"1\":{\"498\":1}}],[\"如何将它搬到小游戏平台\",{\"1\":{\"464\":1}}],[\"如何对宿主进行设置操作\",{\"1\":{\"406\":1}}],[\"如何能够获取到所有被选中的图层信息呢\",{\"1\":{\"399\":1}}],[\"如何能够像论坛里头那些大神一样可以写出来自己完全无法理解的代码\",{\"1\":{\"389\":1}}],[\"如何选定目标对象\",{\"0\":{\"399\":1}}],[\"如何去使用它\",{\"1\":{\"389\":1}}],[\"如何文件不存在\",{\"1\":{\"169\":1}}],[\"如何给wps的切换工作表设置快捷键\",{\"1\":{\"140\":1}}],[\"如何提高github\",{\"0\":{\"60\":1}}],[\"如何提高github的搜索效率\",{\"0\":{\"58\":1}}],[\"如下位置\",{\"1\":{\"393\":1}}],[\"如下图\",{\"1\":{\"377\":1,\"391\":1}}],[\"如下图所示\",{\"1\":{\"50\":1,\"53\":1,\"226\":1,\"479\":1,\"482\":1}}],[\"如下所示\",{\"1\":{\"261\":1}}],[\"如下下面所示\",{\"1\":{\"234\":1}}],[\"如下\",{\"1\":{\"53\":1,\"262\":1,\"393\":1,\"394\":1,\"399\":1}}],[\"如请求超时则返回错误\",{\"1\":{\"42\":1}}],[\"如果遇到类似下方这样的报错\",{\"1\":{\"636\":1}}],[\"如果遇到kill之后还有服务器进程没有关闭的情况\",{\"1\":{\"233\":1}}],[\"如果您需要定制和原生平台相关的引擎功能\",{\"1\":{\"634\":1}}],[\"如果您只需要定制\",{\"1\":{\"629\":1}}],[\"如果找不到的话\",{\"1\":{\"628\":1}}],[\"如果能优化这两点\",{\"1\":{\"598\":1}}],[\"如果能成功\",{\"1\":{\"409\":1}}],[\"如果迷路\",{\"1\":{\"561\":1}}],[\"如果说推荐的前几款游戏都是解谜经典\",{\"1\":{\"513\":1}}],[\"如果运行环境是浏览器\",{\"1\":{\"491\":1}}],[\"如果对\",{\"1\":{\"478\":1}}],[\"如果对请求路由检查发现请求是发向到后端服务器的\",{\"1\":{\"192\":1}}],[\"如果当作普通建筑物资源来用之前的材质进行渲染\",{\"1\":{\"475\":1}}],[\"如果当前图层是图层组\",{\"1\":{\"378\":1}}],[\"如果当前的header已经存在\",{\"1\":{\"163\":1}}],[\"如果强行放在一起\",{\"1\":{\"471\":1}}],[\"如果玩家使用的资源分别在不同的图集上\",{\"1\":{\"467\":1}}],[\"如果看着不习惯\",{\"1\":{\"399\":1}}],[\"如果属性类型是descvaluetype\",{\"1\":{\"398\":1}}],[\"如果ps没有输出\",{\"1\":{\"397\":1}}],[\"如果发现某个需求没有相应的api\",{\"1\":{\"395\":1}}],[\"如果发生负向溢出\",{\"1\":{\"14\":1}}],[\"如果进行文件引用会成为一个问题\",{\"1\":{\"383\":1}}],[\"如果大家想要反馈插件问题可以去他发布的插件更新帖子下面评论\",{\"1\":{\"368\":1}}],[\"如果这个时候我们查看一下\",{\"1\":{\"365\":1}}],[\"如果代码执行有错误\",{\"1\":{\"348\":1}}],[\"如果更喜欢在\",{\"1\":{\"344\":1}}],[\"如果未自动出现\",{\"1\":{\"343\":1}}],[\"如果未设置\",{\"1\":{\"298\":1}}],[\"如果要使用自定义的封面\",{\"1\":{\"444\":1}}],[\"如果要切换到taobao源\",{\"1\":{\"332\":1}}],[\"如果要分配的内存区域很大\",{\"1\":{\"5\":1}}],[\"如果为0等同于\",{\"1\":{\"307\":2}}],[\"如果安装node后命令仍然无法识别\",{\"1\":{\"291\":1}}],[\"如果配置了周期性地由master去拉取或者由monitor主动推送消息的话\",{\"1\":{\"282\":1}}],[\"如果配置的type为\",{\"1\":{\"277\":1}}],[\"如果master提供的用户名和密码\",{\"1\":{\"276\":1}}],[\"如果导出工厂函数的话\",{\"1\":{\"274\":1}}],[\"如果查看整个服务器群的信息\",{\"1\":{\"273\":1}}],[\"如果opts中没有配置的话\",{\"1\":{\"272\":1}}],[\"如果超时就给出警告\",{\"1\":{\"271\":1}}],[\"如果超过了这个连接数\",{\"1\":{\"261\":1}}],[\"如果有小伙伴用得上\",{\"1\":{\"348\":1}}],[\"如果有module配置了周期性地推送监控数据到master的话\",{\"1\":{\"275\":1}}],[\"如果有module定义了start方法的话\",{\"1\":{\"262\":1}}],[\"如果有任意一个beforefilter的next调用中传递了err的话\",{\"1\":{\"197\":1}}],[\"如果使用了周期性的触发的话\",{\"1\":{\"262\":1}}],[\"如果启动的是应用服务器的话\",{\"1\":{\"262\":1}}],[\"如果启动后发现有报addrinuse\",{\"1\":{\"206\":1}}],[\"如果各个进程分布在不同的物理主机上的话\",{\"1\":{\"262\":1}}],[\"如果既定义了before\",{\"1\":{\"261\":1}}],[\"如果isattach设置为true的话\",{\"1\":{\"261\":1}}],[\"如果没有找到\",{\"1\":{\"361\":1}}],[\"如果没有则默认为\",{\"1\":{\"236\":1}}],[\"如果没有改写过\",{\"1\":{\"34\":1}}],[\"如果我们一开始实现时就考虑以后的扩充\",{\"1\":{\"234\":1}}],[\"如果我们还想继续扩充我们的服务器\",{\"1\":{\"234\":1}}],[\"如果添加了新的服务器类型\",{\"1\":{\"234\":1}}],[\"如果指定了服务器serverid的话\",{\"1\":{\"233\":1}}],[\"如果指定空数组\",{\"1\":{\"137\":1}}],[\"如果开启了daemon\",{\"1\":{\"233\":1}}],[\"如果设置为true的话\",{\"1\":{\"230\":1}}],[\"如果仅仅像gate服务器那样\",{\"1\":{\"261\":1}}],[\"如果仅仅是before\",{\"1\":{\"261\":1}}],[\"如果仅仅调用了backendsession的set\",{\"1\":{\"230\":1}}],[\"如果仅仅需要给用户端响应\",{\"1\":{\"230\":1}}],[\"如果握手成功\",{\"1\":{\"223\":1}}],[\"如果真正要跟其他人\",{\"1\":{\"217\":1}}],[\"如果出现红字\",{\"1\":{\"212\":1}}],[\"如果你愿意帮助\",{\"1\":{\"628\":1}}],[\"如果你愿意的话\",{\"1\":{\"399\":1}}],[\"如果你害怕其它手机游戏耽误你时间\",{\"1\":{\"602\":1}}],[\"如果你玩过\",{\"1\":{\"525\":1}}],[\"如果你试了就会发现\",{\"1\":{\"408\":1}}],[\"如果你仔细研读该文章\",{\"1\":{\"406\":1}}],[\"如果你仔细观察输出的结果\",{\"1\":{\"378\":1}}],[\"如果你想找一款耐玩的游戏\",{\"1\":{\"548\":1}}],[\"如果你想要学习的话\",{\"1\":{\"411\":1}}],[\"如果你想要获取当前选中的图层\",{\"1\":{\"399\":1}}],[\"如果你想点一次\",{\"1\":{\"370\":1}}],[\"如果你还记得上一篇文章讲过的内容\",{\"1\":{\"398\":1}}],[\"如果你查阅官方文档\",{\"1\":{\"398\":1}}],[\"如果你调整了一些图层的顺序再执行上面的代码\",{\"1\":{\"378\":1}}],[\"如果你要调试\",{\"1\":{\"373\":1}}],[\"如果你是使用\",{\"1\":{\"367\":1}}],[\"如果你以前有开发过移动端网页\",{\"1\":{\"366\":1}}],[\"如果你实在搞不清楚那就直接把\",{\"1\":{\"360\":1}}],[\"如果你重启\",{\"1\":{\"359\":1}}],[\"如果你的脚本执行有错误\",{\"1\":{\"346\":1}}],[\"如果你的linux系统未安装sysstat\",{\"1\":{\"190\":1}}],[\"如果你有做过运行chat和web服务器的配置\",{\"1\":{\"212\":1}}],[\"如果你更喜欢\",{\"1\":{\"202\":1}}],[\"如果定时器超时时\",{\"1\":{\"199\":1}}],[\"如果taskmanager还有未处理的请求\",{\"1\":{\"198\":1}}],[\"如果处理产生错误\",{\"1\":{\"197\":1}}],[\"如果在编译过程中出现\",{\"1\":{\"633\":1}}],[\"如果在远程启动的话\",{\"1\":{\"262\":1}}],[\"如果在本地启动的话\",{\"1\":{\"262\":1}}],[\"如果在handler\",{\"1\":{\"230\":1}}],[\"如果在其定时器时间内\",{\"1\":{\"199\":1}}],[\"如果在具体的filter上没有错误的话\",{\"1\":{\"197\":1}}],[\"如果在这段数据上接着建立一个\",{\"1\":{\"11\":1}}],[\"如果请求的路由不是前端服务器的\",{\"1\":{\"195\":1}}],[\"如果请求的是前端服务器的handler\",{\"1\":{\"195\":1}}],[\"如果前端服务器定义了相应的handler\",{\"1\":{\"192\":1}}],[\"如果游戏服务器各进程运行在多服务器上\",{\"1\":{\"191\":1}}],[\"如果需要在\",{\"1\":{\"638\":1}}],[\"如果需要在所有服务器启动完成后\",{\"1\":{\"238\":1}}],[\"如果需要\",{\"1\":{\"365\":1}}],[\"如果需要向官方反馈这个插件的问题请去\",{\"1\":{\"346\":1}}],[\"如果需要可以通过\",{\"1\":{\"252\":1}}],[\"如果需要给客户端响应的话\",{\"1\":{\"197\":1}}],[\"如果需要开启可以在game\",{\"1\":{\"190\":1}}],[\"如果需要使用小端字节序解读\",{\"1\":{\"23\":1}}],[\"如果端口有冲突\",{\"1\":{\"190\":1}}],[\"如果还有残留进程杀不干净可使用\",{\"1\":{\"188\":1}}],[\"如果还没找到\",{\"1\":{\"51\":1}}],[\"如果用户目录没有\",{\"1\":{\"293\":1}}],[\"如果用户自定义了module\",{\"1\":{\"262\":1}}],[\"如果用户需要自己设置一些自己的自定义变量\",{\"1\":{\"261\":1}}],[\"如果用户没有配置全局的errorhandler的话\",{\"1\":{\"197\":1}}],[\"如果用户不配置的话\",{\"1\":{\"195\":1}}],[\"如果用穷举法来进行搜索的话\",{\"1\":{\"144\":1}}],[\"如果用在主线程\",{\"1\":{\"32\":1}}],[\"如果该状态存在则返回true\",{\"1\":{\"261\":1,\"267\":1}}],[\"如果该模式不在\",{\"1\":{\"64\":1}}],[\"如果该对象内部不存在这个属性\",{\"1\":{\"51\":1,\"54\":1}}],[\"如果排除了该文件的父级目录\",{\"1\":{\"64\":1}}],[\"如果父对象也不存在这个属性\",{\"1\":{\"51\":1}}],[\"如果因为超时唤醒\",{\"1\":{\"32\":1}}],[\"如果\",{\"1\":{\"32\":2,\"34\":1,\"461\":1,\"484\":1}}],[\"如果是从编辑器拷贝出来的内置\",{\"1\":{\"636\":1}}],[\"如果是图层组\",{\"1\":{\"378\":1}}],[\"如果是请求的话\",{\"1\":{\"273\":1}}],[\"如果是monitor在收到master的通知后\",{\"1\":{\"272\":1}}],[\"如果是定时器产生的周期性的拉数据事件导致的回调\",{\"1\":{\"272\":1}}],[\"如果是两个参数的话\",{\"1\":{\"272\":1}}],[\"如果是三个参数的话\",{\"1\":{\"272\":1}}],[\"如果是after\",{\"1\":{\"261\":1}}],[\"如果是通过\",{\"1\":{\"236\":1}}],[\"如果是用户的notify\",{\"1\":{\"230\":1}}],[\"如果是产品环境则必须选择production参数\",{\"1\":{\"186\":1}}],[\"如果是\",{\"1\":{\"154\":1}}],[\"如果是单线程运行\",{\"1\":{\"29\":1}}],[\"如果是大型二进制数组\",{\"1\":{\"13\":1}}],[\"如果数据量比较大\",{\"1\":{\"29\":1}}],[\"如果知道一个文件的二进制数据类型\",{\"1\":{\"29\":1}}],[\"如果知道传回来的是\",{\"1\":{\"25\":1}}],[\"如果将颜色值设为\",{\"1\":{\"26\":1}}],[\"如果把像素的颜色值设为\",{\"1\":{\"26\":1}}],[\"如果不需要颜色数据就可以勾选\",{\"1\":{\"474\":1}}],[\"如果不进行设置\",{\"1\":{\"380\":1}}],[\"如果不写url\",{\"1\":{\"298\":2}}],[\"如果不配置的话\",{\"1\":{\"246\":1}}],[\"如果不知道\",{\"1\":{\"25\":1}}],[\"如果不确定正在使用的计算机的字节序\",{\"1\":{\"24\":1}}],[\"如果明确知道返回的二进制数据类型\",{\"1\":{\"25\":1}}],[\"如果返回\",{\"1\":{\"24\":2,\"34\":1}}],[\"如果一头雾水\",{\"1\":{\"604\":1}}],[\"如果一个模式不包含斜杠\",{\"1\":{\"64\":1}}],[\"如果一次读取两个或两个以上字节\",{\"1\":{\"23\":1}}],[\"如果一段数据包括多种类型\",{\"1\":{\"22\":1}}],[\"如果一段数据是大端字节序\",{\"1\":{\"11\":1}}],[\"如果省略的话\",{\"1\":{\"261\":1}}],[\"如果省略则包含剩余的全部成员\",{\"1\":{\"19\":1}}],[\"如果省略第二个参数\",{\"1\":{\"6\":1}}],[\"如果放入一个\",{\"1\":{\"14\":1}}],[\"如果想要缩略图可以放置\",{\"1\":{\"444\":1}}],[\"如果想要合并多个\",{\"1\":{\"10\":1}}],[\"如果想制定宽度和高度\",{\"1\":{\"420\":1}}],[\"如果想使用buffer的方式\",{\"1\":{\"195\":1}}],[\"如果想基于同一段内存\",{\"1\":{\"9\":1}}],[\"如果想从任意字节开始解读\",{\"1\":{\"9\":1}}],[\"设计者们还很重视对游戏意境的渲染\",{\"1\":{\"589\":1}}],[\"设备使用该架构\",{\"1\":{\"461\":2}}],[\"设备使用不同的\",{\"1\":{\"461\":1}}],[\"设置需要定制的\",{\"1\":{\"631\":1}}],[\"设置不同的缩放比例\",{\"1\":{\"477\":1}}],[\"设置宿主的一些状态\",{\"1\":{\"397\":1}}],[\"设置一些属性\",{\"1\":{\"394\":1}}],[\"设置一些全局变量\",{\"1\":{\"257\":1}}],[\"设置打开插件显示面板界面\",{\"1\":{\"356\":1}}],[\"设置存储不同版本node的目录\",{\"1\":{\"298\":1}}],[\"设置npm镜像\",{\"1\":{\"298\":1}}],[\"设置node镜像\",{\"1\":{\"298\":1}}],[\"设置后可至安装目录settings\",{\"1\":{\"298\":2}}],[\"设置下载代理\",{\"1\":{\"298\":1}}],[\"设置\",{\"1\":{\"288\":1}}],[\"设置默认版本\",{\"1\":{\"288\":1}}],[\"设置afterstart方法的原因是\",{\"1\":{\"262\":1}}],[\"设置了这个参数只会对当前参数类型服务器做初始化\",{\"1\":{\"257\":1,\"267\":1}}],[\"设置断点并调试\",{\"1\":{\"343\":1}}],[\"设置断点\",{\"0\":{\"214\":1}}],[\"设置根目录\",{\"1\":{\"171\":1}}],[\"设置超时机制\",{\"1\":{\"42\":1}}],[\"设为true\",{\"1\":{\"307\":1}}],[\"设为\",{\"1\":{\"25\":1,\"307\":1}}],[\"值大部分为\",{\"1\":{\"501\":1}}],[\"值类型选择字符串\",{\"1\":{\"361\":1}}],[\"值范围是从0到1\",{\"1\":{\"307\":1}}],[\"值的范围是0～3\",{\"1\":{\"227\":1}}],[\"值的时候\",{\"1\":{\"26\":1}}],[\"值会被自动转换为\",{\"1\":{\"41\":1}}],[\"非商业转载请注明出处\",{\"1\":{\"505\":1}}],[\"非模态的\",{\"1\":{\"356\":1}}],[\"非常文艺的休闲益智类游戏\",{\"1\":{\"587\":1}}],[\"非常适合喜欢侦探推理的玩家\",{\"1\":{\"569\":1}}],[\"非常用语法\",{\"0\":{\"424\":1}}],[\"非常方便\",{\"1\":{\"348\":1}}],[\"非常好用\",{\"1\":{\"346\":1}}],[\"非可逆\",{\"1\":{\"152\":1}}],[\"非对称加密\",{\"0\":{\"147\":1}}],[\"非\",{\"1\":{\"41\":1}}],[\"始终返回状态为\",{\"1\":{\"40\":1}}],[\"示例代码如下\",{\"1\":{\"261\":9}}],[\"示例如下\",{\"1\":{\"233\":1,\"234\":1}}],[\"示例demo\",{\"1\":{\"162\":1}}],[\"示例\",{\"0\":{\"170\":1,\"308\":1,\"319\":1},\"1\":{\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"161\":1}}],[\"无限循环系列\",{\"0\":{\"608\":1}}],[\"无时无刻不散发着真实感\",{\"1\":{\"551\":1}}],[\"无游戏顺序要求\",{\"1\":{\"524\":1}}],[\"无非就是希望从宿主获取一些信息\",{\"1\":{\"397\":1}}],[\"无非就是get\",{\"1\":{\"396\":1}}],[\"无法用正常眼光来看待这款游戏\",{\"1\":{\"563\":1}}],[\"无法将一个旗帜制作在一个完整龙骨动画中\",{\"1\":{\"471\":1}}],[\"无法拿到所有选中的图层\",{\"1\":{\"389\":1}}],[\"无法识别它为\",{\"1\":{\"365\":1}}],[\"无法推出任何部分的原始信息\",{\"1\":{\"151\":1}}],[\"无界面面板你可以作为后台服务来用\",{\"1\":{\"356\":1}}],[\"无需编译\",{\"1\":{\"341\":1}}],[\"无参数的构建链接\",{\"1\":{\"180\":1}}],[\"无\",{\"1\":{\"46\":2}}],[\"无论你看到的代码多复杂\",{\"1\":{\"394\":1}}],[\"无论是人物还是建筑\",{\"1\":{\"469\":1}}],[\"无论是给session绑定id\",{\"1\":{\"230\":1}}],[\"无论是否有err\",{\"1\":{\"197\":1}}],[\"无论成败\",{\"1\":{\"46\":2}}],[\"无论成功或失败\",{\"1\":{\"42\":1,\"43\":1}}],[\"无论参数类型如何\",{\"1\":{\"40\":1}}],[\"无额外包装\",{\"1\":{\"39\":1}}],[\"无符号\",{\"1\":{\"2\":1,\"3\":1}}],[\"功能增加插件\",{\"1\":{\"458\":1}}],[\"功能写出来\",{\"1\":{\"396\":1}}],[\"功能很简单\",{\"1\":{\"349\":1}}],[\"功能不太多\",{\"1\":{\"347\":1}}],[\"功能支持\",{\"1\":{\"343\":1}}],[\"功能是一样的\",{\"1\":{\"50\":1}}],[\"功能\",{\"1\":{\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1}}],[\"功能类似\",{\"1\":{\"22\":1}}],[\"qzone\",{\"1\":{\"442\":2,\"453\":2}}],[\"qcsaverage\",{\"1\":{\"394\":3,\"395\":1}}],[\"q=git\",{\"1\":{\"293\":1}}],[\"qianmosolo\",{\"1\":{\"159\":1}}],[\"qingker\",{\"1\":{\"95\":2}}],[\"q\",{\"1\":{\"98\":1}}],[\"quadcenterstate\",{\"1\":{\"394\":2,\"395\":1}}],[\"question\",{\"1\":{\"505\":1,\"608\":1}}],[\"queryselector\",{\"1\":{\"357\":2}}],[\"queryentry\",{\"1\":{\"234\":1}}],[\"queryentry最后跑到了\",{\"1\":{\"218\":1}}],[\"queuepos\",{\"1\":{\"32\":2}}],[\"quit\",{\"1\":{\"83\":1}}],[\"qq\",{\"1\":{\"36\":1,\"442\":2,\"453\":2,\"461\":1,\"504\":1,\"616\":1,\"625\":1,\"626\":2,\"627\":1}}],[\"||\",{\"1\":{\"234\":1,\"236\":2,\"272\":2,\"293\":1,\"612\":1}}],[\"|\",{\"0\":{\"36\":1,\"616\":1},\"1\":{\"99\":1,\"108\":1,\"109\":2,\"110\":3,\"111\":5,\"113\":4,\"118\":4,\"119\":4,\"120\":4,\"121\":4,\"186\":1,\"291\":2,\"293\":1,\"421\":12,\"626\":1}}],[\"参考这里\",{\"1\":{\"159\":1}}],[\"参考\",{\"0\":{\"320\":1,\"324\":1},\"1\":{\"34\":1,\"504\":1,\"623\":1}}],[\"参数先修改为\",{\"1\":{\"488\":1}}],[\"参数类型对应的是一个xxxtype这样\",{\"1\":{\"394\":1}}],[\"参数类型是ps提供的数值类型unitvalue\",{\"1\":{\"394\":1}}],[\"参数部分指定了moduleid和具体要做的操作\",{\"1\":{\"282\":1}}],[\"参数moduleid使用来区分到底是哪个监控模块\",{\"1\":{\"272\":1}}],[\"参数含义与before\",{\"1\":{\"251\":1}}],[\"参数名=参数值\",{\"1\":{\"180\":1}}],[\"参数时时\",{\"1\":{\"80\":1}}],[\"参数\",{\"1\":{\"62\":1,\"236\":1}}],[\"参数为非\",{\"1\":{\"39\":1}}],[\"参数为字符串\",{\"1\":{\"13\":1}}],[\"参数为\",{\"1\":{\"13\":1,\"39\":2}}],[\"参数必须能够被\",{\"1\":{\"9\":1}}],[\"参数表示读取的起始位置\",{\"1\":{\"4\":1}}],[\"旧的值\",{\"1\":{\"33\":2}}],[\"指不定我哪天被裁了\",{\"1\":{\"374\":1}}],[\"指的是当前target\",{\"1\":{\"399\":1}}],[\"指的是兼容\",{\"1\":{\"356\":1}}],[\"指的是\",{\"1\":{\"356\":1}}],[\"指定使用的\",{\"1\":{\"442\":1}}],[\"指定端口\",{\"1\":{\"438\":1}}],[\"指定执行的入口文件为当前打开的文件\",{\"1\":{\"370\":1}}],[\"指定后就不用每次\",{\"1\":{\"370\":1}}],[\"指定后可以在文件之直接\",{\"1\":{\"137\":1}}],[\"指定其他端口\",{\"1\":{\"345\":1}}],[\"指定\",{\"1\":{\"229\":1,\"370\":1,\"442\":1}}],[\"指定哪些文件使用该配置\",{\"1\":{\"137\":1}}],[\"指定一个排除列表\",{\"1\":{\"137\":1}}],[\"指定一个匹配列表\",{\"1\":{\"137\":1}}],[\"指定模块的路径\",{\"1\":{\"137\":1}}],[\"指定引入的类型声明文件\",{\"1\":{\"137\":1}}],[\"指定生成哪个模块系统代码\",{\"1\":{\"137\":1}}],[\"指定只要\",{\"1\":{\"32\":1}}],[\"指向字节\",{\"1\":{\"9\":3}}],[\"否则宣告游戏结束\",{\"1\":{\"539\":1}}],[\"否则的话\",{\"1\":{\"273\":1}}],[\"否则可以使用next\",{\"1\":{\"197\":1}}],[\"否则将打断整个处理链\",{\"1\":{\"197\":1}}],[\"否则\",{\"1\":{\"197\":2,\"230\":1,\"282\":1}}],[\"否则读取新的值\",{\"1\":{\"34\":1}}],[\"否则就进入休眠\",{\"1\":{\"32\":1}}],[\"否则会报错\",{\"1\":{\"9\":1,\"23\":1}}],[\"整体上讲\",{\"1\":{\"514\":1}}],[\"整体是get的一个逆向过程\",{\"1\":{\"407\":1}}],[\"整部游戏预计花费3\",{\"1\":{\"530\":1}}],[\"整部游戏不靠任何文字\",{\"1\":{\"511\":1}}],[\"整部具有机械制造感的画风和音效一下子就吸引住了我\",{\"1\":{\"511\":1}}],[\"整个世界由像素积木块构成\",{\"1\":{\"559\":1}}],[\"整个宇宙都将在我面前黯然失色\",{\"1\":{\"555\":1}}],[\"整个游戏系列以解谜\",{\"1\":{\"523\":1}}],[\"整个游戏倒像是1作的大号dlc\",{\"1\":{\"507\":1}}],[\"整个查找属性的过程代码如下\",{\"1\":{\"409\":1}}],[\"整个pinus框架可以看作是一个component容器\",{\"1\":{\"253\":1}}],[\"整个请求处理链的大致流程如下\",{\"1\":{\"197\":1}}],[\"整个afterfilter链都会执行完毕\",{\"1\":{\"197\":1}}],[\"整个处理流程如下如所示\",{\"1\":{\"192\":1}}],[\"整理html文件\",{\"1\":{\"170\":1}}],[\"整数\",{\"1\":{\"32\":1}}],[\"整除\",{\"1\":{\"9\":1}}],[\"等评价\",{\"1\":{\"536\":1}}],[\"等\",{\"1\":{\"488\":1,\"639\":1}}],[\"等问题\",{\"1\":{\"466\":1}}],[\"等待你去挖掘\",{\"1\":{\"400\":1}}],[\"等待调试器连接\",{\"1\":{\"341\":1,\"342\":1}}],[\"等待所有\",{\"1\":{\"43\":1}}],[\"等其他ide\",{\"1\":{\"202\":1}}],[\"等规则\",{\"1\":{\"74\":1}}],[\"等陈旧浏览器\",{\"1\":{\"54\":1}}],[\"等于\",{\"1\":{\"32\":1,\"34\":1}}],[\"等到操作结束\",{\"1\":{\"32\":1}}],[\"等等\",{\"1\":{\"3\":1,\"376\":1,\"394\":1,\"507\":1}}],[\"两枚小球交相呼应\",{\"1\":{\"576\":1}}],[\"两只兔子每次相遇可以回血\",{\"1\":{\"573\":1}}],[\"两只小兔子绕着大球转圈\",{\"1\":{\"573\":1}}],[\"两作都是通过解开一个个小谜题\",{\"1\":{\"532\":1}}],[\"两种工具之后\",{\"1\":{\"478\":1}}],[\"两套机制来响应每个操作\",{\"1\":{\"398\":1}}],[\"两个方法用于等待通知\",{\"1\":{\"32\":1}}],[\"两方都可以读写\",{\"1\":{\"29\":1}}],[\"循环等待主线程的通知\",{\"1\":{\"32\":1}}],[\"`````\",{\"1\":{\"430\":1}}],[\"`node\",{\"1\":{\"262\":2}}],[\"`app\",{\"1\":{\"258\":1}}],[\"`所有服务启动完成了`\",{\"1\":{\"238\":1}}],[\"`hello\",{\"1\":{\"114\":1}}],[\"`\",{\"1\":{\"30\":1,\"31\":1,\"114\":1,\"262\":1}}],[\"`the\",{\"1\":{\"30\":1,\"31\":2}}],[\"$对象\",{\"0\":{\"382\":1}}],[\"$path\",{\"1\":{\"293\":1}}],[\"$fnm\",{\"1\":{\"293\":1}}],[\"$nvm\",{\"1\":{\"95\":2}}],[\"$repo\",{\"1\":{\"62\":1}}],[\"$\",{\"1\":{\"30\":2,\"31\":4,\"95\":3,\"114\":2,\"234\":1,\"272\":1,\"293\":1,\"344\":2,\"346\":2,\"358\":2,\"369\":3,\"370\":3,\"378\":2,\"382\":17,\"384\":1,\"398\":4,\"399\":2,\"402\":1,\"408\":1,\"409\":1}}],[\"号位置\",{\"1\":{\"32\":1}}],[\"号位置的取值\",{\"1\":{\"30\":1}}],[\"号位置的赋值\",{\"1\":{\"30\":1}}],[\"号位置和\",{\"1\":{\"30\":1}}],[\"号位置等于\",{\"1\":{\"30\":1,\"32\":1}}],[\"号位置赋值\",{\"1\":{\"29\":4}}],[\"多线性结局也是这款游戏的特色\",{\"1\":{\"556\":1}}],[\"多线程环境并且共享内存时\",{\"1\":{\"29\":1}}],[\"多线程共享内存\",{\"1\":{\"29\":1}}],[\"多样的场景切换与简易流畅的操作体验深受玩家们吹捧\",{\"1\":{\"552\":1}}],[\"多年前很有创意的小游戏\",{\"1\":{\"543\":1}}],[\"多首隐藏音乐\",{\"1\":{\"519\":1}}],[\"多种类型的防御塔与敌人保持了系列一贯的丰富多样\",{\"1\":{\"516\":1}}],[\"多种不同类型的防御单位与属性多样的敌军\",{\"1\":{\"513\":1}}],[\"多边形检测区域\",{\"1\":{\"484\":4}}],[\"多添几台服务器配置就行了\",{\"1\":{\"234\":1}}],[\"多服务器版本的聊天应用在分支tutorial\",{\"1\":{\"234\":1}}],[\"多个设备就可以同时在线\",{\"1\":{\"230\":1}}],[\"多个线程使用共享内存的某个位置作为开关\",{\"1\":{\"30\":1}}],[\"多半表示启动失败\",{\"1\":{\"212\":1}}],[\"多\",{\"1\":{\"173\":2}}],[\"多屏显示控制方式\",{\"0\":{\"98\":1}}],[\"多次\",{\"1\":{\"83\":1}}],[\"要在模拟器中预览您的引擎修改\",{\"1\":{\"638\":1}}],[\"要能再加强一下剧情的设计\",{\"1\":{\"537\":1}}],[\"要保存的文件名\",{\"1\":{\"491\":1}}],[\"要保存的文件内容\",{\"1\":{\"491\":1}}],[\"要保持耐心\",{\"1\":{\"397\":1,\"406\":1}}],[\"要修改目标对象的属性值\",{\"1\":{\"407\":1}}],[\"要更难\",{\"1\":{\"406\":1}}],[\"要把key拿出来\",{\"1\":{\"398\":1}}],[\"要理解am的代码结构\",{\"1\":{\"394\":1}}],[\"要求使用一个用户名和口令主动发起到master的连接及注册\",{\"1\":{\"273\":1}}],[\"要比basic\",{\"1\":{\"163\":1}}],[\"要拉取并合并\",{\"1\":{\"76\":2}}],[\"要改写成\",{\"1\":{\"29\":1}}],[\"要获取底层对象必须使用\",{\"1\":{\"8\":1}}],[\"提升了\",{\"1\":{\"488\":1}}],[\"提升性能\",{\"1\":{\"479\":1}}],[\"提升\",{\"1\":{\"374\":1}}],[\"提示\",{\"1\":{\"291\":1}}],[\"提高了游戏耐玩性\",{\"1\":{\"575\":1}}],[\"提高了这款游戏的耐玩性与趣味性\",{\"1\":{\"548\":1}}],[\"提高了操作特效的水准\",{\"1\":{\"519\":1}}],[\"提高到80\",{\"1\":{\"391\":1}}],[\"提高带宽利用率\",{\"1\":{\"221\":1}}],[\"提高多线程共享内存时的操作安全\",{\"1\":{\"29\":1}}],[\"提交代码\",{\"1\":{\"628\":1}}],[\"提交你的修改\",{\"1\":{\"628\":1}}],[\"提交issue\",{\"1\":{\"212\":1}}],[\"提交文件b\",{\"1\":{\"74\":2}}],[\"提交了文件a\",{\"1\":{\"74\":2}}],[\"提交到远程仓库\",{\"0\":{\"75\":1}}],[\"提交到本地仓库\",{\"0\":{\"74\":1}}],[\"提交到暂存区\",{\"0\":{\"73\":1},\"1\":{\"73\":1}}],[\"提案阶段\",{\"1\":{\"47\":1}}],[\"提供一个json的字符串key\",{\"1\":{\"404\":1}}],[\"提供了js的api\",{\"1\":{\"390\":1}}],[\"提供了可以通过js\",{\"1\":{\"389\":1}}],[\"提供了代码快照功能\",{\"1\":{\"348\":1}}],[\"提供了监控管理框架\",{\"1\":{\"261\":1}}],[\"提供来自express的自动生成的swagger\",{\"1\":{\"337\":1}}],[\"提供服务给客户端\",{\"1\":{\"243\":1}}],[\"提供\",{\"1\":{\"29\":1}}],[\"正因如此\",{\"1\":{\"595\":1}}],[\"正确\",{\"1\":{\"29\":1}}],[\"正向溢出时都返回\",{\"1\":{\"14\":1}}],[\"正向溢出\",{\"1\":{\"14\":1}}],[\"错误提示\",{\"1\":{\"346\":2}}],[\"错误原因可以是任意值\",{\"1\":{\"40\":1}}],[\"错误\",{\"1\":{\"29\":1}}],[\"编辑器会在启动时自动编译这部分源码\",{\"1\":{\"639\":1}}],[\"编写就没法在源码中调试\",{\"1\":{\"372\":1}}],[\"编译模拟器\",{\"0\":{\"638\":1}}],[\"编译报错\",{\"1\":{\"461\":1}}],[\"编译后\",{\"1\":{\"372\":1}}],[\"编译前\",{\"1\":{\"372\":1}}],[\"编译并监视\",{\"1\":{\"138\":1}}],[\"编译\",{\"0\":{\"138\":1,\"437\":1},\"1\":{\"138\":1}}],[\"编译过程中需要引入的库文件的列表\",{\"1\":{\"137\":1}}],[\"编译的目标是什么版本的\",{\"1\":{\"137\":1}}],[\"编译器不会为了优化\",{\"1\":{\"30\":1}}],[\"编译器和\",{\"1\":{\"29\":1}}],[\"编程语言\",{\"1\":{\"58\":1}}],[\"编码\",{\"1\":{\"13\":1}}],[\"原来还能这么死\",{\"1\":{\"545\":1}}],[\"原来我一直在试图回到那个没有你的世界\",{\"1\":{\"525\":1}}],[\"原来的值是\",{\"1\":{\"32\":1}}],[\"原因在于2作并没有像玩家们期待的那样在玩法等方面增添新元素\",{\"1\":{\"507\":1}}],[\"原因是每次平台构建时\",{\"1\":{\"488\":1}}],[\"原有的\",{\"1\":{\"474\":1}}],[\"原本在显示范围外的图片将从水墨色变为彩色\",{\"1\":{\"469\":1}}],[\"原生组件简易版github地址详细用法请参考readme\",{\"1\":{\"503\":1}}],[\"原生组件npm构建版本github地址详细用法请参考readme\",{\"1\":{\"503\":1}}],[\"原生版本的\",{\"1\":{\"466\":1}}],[\"原生支持许多编程语言代码块的语法高亮\",{\"1\":{\"430\":1}}],[\"原生支持\",{\"1\":{\"47\":1}}],[\"原代码有几处bug\",{\"1\":{\"402\":1}}],[\"原文地址\",{\"1\":{\"54\":1}}],[\"原先的值是\",{\"1\":{\"30\":1}}],[\"原先的值\",{\"1\":{\"29\":2,\"30\":1}}],[\"原子性操作\",{\"1\":{\"29\":1}}],[\"原子性\",{\"1\":{\"29\":1}}],[\"呢\",{\"1\":{\"29\":1}}],[\"输入地址栏\",{\"1\":{\"343\":1}}],[\"输入\",{\"1\":{\"308\":1,\"361\":1,\"430\":1}}],[\"输入name\",{\"1\":{\"162\":1}}],[\"输入参数及value\",{\"1\":{\"161\":1}}],[\"输入一次正确的帐号密码之后就不用再输入了\",{\"1\":{\"88\":1}}],[\"输入要求\",{\"1\":{\"46\":1}}],[\"输入为\",{\"1\":{\"41\":1}}],[\"输入值为\",{\"1\":{\"14\":2}}],[\"输出窗口会显示报错的行和一些基本的错误提示\",{\"1\":{\"348\":1}}],[\"输出目录\",{\"1\":{\"137\":1}}],[\"输出结构\",{\"1\":{\"46\":1}}],[\"输出\",{\"1\":{\"29\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"301\":1}}],[\"万个质数\",{\"1\":{\"29\":1}}],[\"万个\",{\"1\":{\"29\":1}}],[\"发发羊癫疯什么的\",{\"1\":{\"563\":1}}],[\"发现病毒穿越的原因\",{\"1\":{\"546\":1}}],[\"发现问题\",{\"0\":{\"218\":1},\"1\":{\"202\":1}}],[\"发布相关\",{\"1\":{\"376\":1}}],[\"发布包\",{\"1\":{\"102\":1}}],[\"发起广播通知有服务器重连的消息\",{\"1\":{\"279\":1}}],[\"发起广播通知有服务器离开的消息\",{\"1\":{\"279\":1}}],[\"发起广播通知增加的服务器信息\",{\"1\":{\"279\":1}}],[\"发起rpc调用\",{\"1\":{\"230\":1}}],[\"发起filter\",{\"1\":{\"192\":1}}],[\"发给主线程\",{\"1\":{\"29\":1}}],[\"发送或接收二进制数据\",{\"1\":{\"27\":1}}],[\"方面我们也是做了分层\",{\"1\":{\"472\":1}}],[\"方式其实和一般我们\",{\"1\":{\"370\":1}}],[\"方式启动时如果没有传入\",{\"1\":{\"236\":1}}],[\"方式2\",{\"1\":{\"188\":1}}],[\"方式1\",{\"1\":{\"188\":1}}],[\"方便调整参数\",{\"1\":{\"478\":1}}],[\"方便了协议的定制和修改\",{\"1\":{\"221\":1}}],[\"方便快捷有木有\",{\"1\":{\"162\":1}}],[\"方便读写\",{\"1\":{\"29\":1}}],[\"方法完成\",{\"1\":{\"257\":1,\"267\":1}}],[\"方法唤醒\",{\"1\":{\"32\":2}}],[\"方法才能唤醒\",{\"1\":{\"32\":1}}],[\"方法等同于告诉\",{\"1\":{\"32\":1}}],[\"方法读取数据\",{\"1\":{\"30\":1}}],[\"方法写入数据\",{\"1\":{\"30\":1}}],[\"方法只接受两个参数\",{\"1\":{\"30\":1}}],[\"方法接受三个参数\",{\"1\":{\"30\":1}}],[\"方法接受两个参数\",{\"1\":{\"6\":1}}],[\"方法就能做到这一点\",{\"1\":{\"30\":1}}],[\"方法和\",{\"1\":{\"30\":1}}],[\"方法用来从共享内存读出数据\",{\"1\":{\"30\":1}}],[\"方法用来向共享内存写入数据\",{\"1\":{\"30\":1}}],[\"方法用于复制数组\",{\"1\":{\"18\":1}}],[\"方法交给另一个进程\",{\"1\":{\"29\":1}}],[\"方法使用大端字节序解读数据\",{\"1\":{\"23\":1}}],[\"方法没有发生溢出\",{\"1\":{\"22\":1}}],[\"方法还可以接受一个函数\",{\"1\":{\"22\":1}}],[\"方法还可以接受第二个参数\",{\"1\":{\"18\":1}}],[\"方法三\",{\"1\":{\"21\":1}}],[\"方法二\",{\"1\":{\"21\":1}}],[\"方法一旦唤醒休眠的\",{\"1\":{\"32\":1}}],[\"方法一\",{\"1\":{\"21\":1}}],[\"方法的对象\",{\"1\":{\"39\":1}}],[\"方法的使用格式如下\",{\"1\":{\"32\":1}}],[\"方法的第二个参数指定\",{\"1\":{\"23\":1}}],[\"方法的第一个参数是起始的成员序号\",{\"1\":{\"19\":1}}],[\"方法的参数是\",{\"1\":{\"29\":1}}],[\"方法的参数都是一个字节序号\",{\"1\":{\"23\":1}}],[\"方法的参数\",{\"1\":{\"20\":1}}],[\"方法可以从当前视图之中\",{\"1\":{\"20\":1}}],[\"方法是对于\",{\"1\":{\"19\":1}}],[\"方法其实包含两步\",{\"1\":{\"6\":1}}],[\"方法\",{\"1\":{\"6\":2,\"10\":1,\"20\":1,\"22\":1,\"24\":1,\"31\":2,\"32\":2,\"39\":1,\"46\":1}}],[\"供写入数据\",{\"1\":{\"29\":1}}],[\"协作起来也会比较简单\",{\"1\":{\"29\":1}}],[\"由顶点shader\",{\"1\":{\"621\":1}}],[\"由一开始的跟随\",{\"1\":{\"507\":1}}],[\"由原作加\",{\"1\":{\"506\":1}}],[\"由masterconsoleservice捕捉后进行处理\",{\"1\":{\"279\":1}}],[\"由master进行回调的\",{\"1\":{\"272\":1}}],[\"由master进程进行回调处理客户端的请求\",{\"1\":{\"255\":1}}],[\"由应用服务器进行回调\",{\"1\":{\"255\":1}}],[\"由backendsessionservice根据前端服务器rpc的参数\",{\"1\":{\"247\":1}}],[\"由copushscheduler实现具体的消息发布调度\",{\"1\":{\"230\":1}}],[\"由flag的最后一位\",{\"1\":{\"229\":1}}],[\"由\",{\"1\":{\"148\":1}}],[\"由此可知\",{\"1\":{\"52\":1}}],[\"由以上这种通过\",{\"1\":{\"51\":1}}],[\"由主线程与\",{\"1\":{\"29\":1}}],[\"由于只有在\",{\"1\":{\"637\":1}}],[\"由于只有一个connector服务器\",{\"1\":{\"234\":1}}],[\"由于本人精力有限\",{\"1\":{\"503\":1}}],[\"由于胶囊按钮是原生组件\",{\"1\":{\"499\":1}}],[\"由于图片太长\",{\"1\":{\"468\":1}}],[\"由于单位的设置是在首选项里头进行的\",{\"1\":{\"380\":1}}],[\"由于这个文件的后缀名不是\",{\"1\":{\"365\":1}}],[\"由于是32位的程序\",{\"1\":{\"347\":1}}],[\"由于没有monitor给master发request\",{\"1\":{\"282\":1}}],[\"由于没有指定服务器类型\",{\"1\":{\"262\":1}}],[\"由于应用服务器是在master组件启动后期才创建\",{\"1\":{\"275\":1}}],[\"由于使用pull的方式\",{\"1\":{\"272\":1}}],[\"由于注册时没有传入任何关于type和interval的配置\",{\"1\":{\"272\":1}}],[\"由于对于具体的应用来说\",{\"1\":{\"272\":1}}],[\"由于系统中存在多个服务器进程\",{\"1\":{\"271\":1,\"285\":1}}],[\"由于其加载的组件开启了监听接口\",{\"1\":{\"262\":1}}],[\"由于涉及到其提供的功能细节\",{\"1\":{\"262\":1}}],[\"由于master方法没有定义afterstart方法\",{\"1\":{\"262\":1}}],[\"由于master组件是以工厂函数的方式导出的\",{\"1\":{\"262\":1}}],[\"由于每一个服务器一旦启动\",{\"1\":{\"262\":1}}],[\"由于每个人物的自身和背景的颜色\",{\"1\":{\"477\":1}}],[\"由于每个\",{\"1\":{\"11\":2}}],[\"由于我们已经进行过\",{\"1\":{\"488\":1}}],[\"由于我们在启动参数中仅仅指定了env\",{\"1\":{\"262\":1}}],[\"由于我们想调试gate服务器中\",{\"1\":{\"214\":1}}],[\"由于后端服务器不会跟客户端直接有连接\",{\"1\":{\"243\":1}}],[\"由于后端服务器是无法与客户端进行通信的\",{\"1\":{\"230\":1}}],[\"由于当执行此操作时\",{\"1\":{\"233\":1}}],[\"由于可能会有route压缩\",{\"1\":{\"226\":1}}],[\"由于在afterfilter中常做的是一些清理操作\",{\"1\":{\"197\":1}}],[\"由于同类型的后端服务器一般都有很多\",{\"1\":{\"195\":1}}],[\"由于关闭特定服务器会导致服务器状态信息等丢失\",{\"1\":{\"188\":1}}],[\"由于视图的构造函数可以指定起始位置和长度\",{\"1\":{\"22\":1}}],[\"由于\",{\"1\":{\"11\":1,\"348\":1,\"364\":1,\"470\":1,\"478\":1}}],[\"由于两个视图对应的是同一段内存\",{\"1\":{\"4\":1}}],[\"很容易让玩家沉浸其中\",{\"1\":{\"569\":1}}],[\"很容易想到\",{\"1\":{\"29\":1}}],[\"很难死掉\",{\"1\":{\"549\":1}}],[\"很意外\",{\"1\":{\"497\":1}}],[\"很熟悉了\",{\"1\":{\"366\":1}}],[\"很可能它们得到的结果都是不正确的\",{\"1\":{\"29\":1}}],[\"很多人把这只喜欢旅行的青蛙当自己儿子养\",{\"1\":{\"602\":1}}],[\"很多人会觉得一个普通的图片也用这么复杂的方案\",{\"1\":{\"469\":1}}],[\"很多玩家还会故意做错动作来调戏旁白君\",{\"1\":{\"595\":1}}],[\"很多解谜因素很平常但还是进行了很多文字描述\",{\"1\":{\"593\":1}}],[\"很多开发者在开发中都直接使用\",{\"1\":{\"485\":1}}],[\"很多功能也越来越完善\",{\"1\":{\"461\":1}}],[\"很多时候我们都没法先选中再操作\",{\"1\":{\"408\":1}}],[\"很多时候说明一个稍微比较深入的点需要写很多预备知识\",{\"1\":{\"374\":1}}],[\"很多\",{\"1\":{\"367\":1}}],[\"很多情况下\",{\"1\":{\"230\":1}}],[\"很多项目配置\",{\"1\":{\"74\":1}}],[\"很多网络设备和特定的操作系统采用的是大端字节序\",{\"1\":{\"11\":1}}],[\"很多浏览器操作的\",{\"1\":{\"3\":1}}],[\"来调试模拟器中的\",{\"1\":{\"638\":1}}],[\"来调试的\",{\"1\":{\"368\":1}}],[\"来自\",{\"1\":{\"608\":1}}],[\"来自上帝的泯灭\",{\"1\":{\"522\":1}}],[\"来当一波名侦探\",{\"1\":{\"569\":1}}],[\"来源\",{\"1\":{\"505\":1}}],[\"来\",{\"1\":{\"399\":1}}],[\"来保证视觉顺序\",{\"1\":{\"378\":1}}],[\"来配置插件的方方面面\",{\"1\":{\"362\":1}}],[\"来获取图层信息\",{\"1\":{\"399\":1}}],[\"来获取\",{\"1\":{\"356\":1}}],[\"来获取主线程发来的消息\",{\"1\":{\"29\":1}}],[\"来说明整个框架的控制流程\",{\"1\":{\"273\":1}}],[\"来确定module的回调触发方式\",{\"1\":{\"262\":1}}],[\"来梳理pinus的启动过程\",{\"1\":{\"262\":1}}],[\"来管理整个服务器群\",{\"1\":{\"254\":1}}],[\"来向pinus框架进行注册\",{\"1\":{\"252\":1}}],[\"来完成一个代理工具\",{\"1\":{\"220\":1}}],[\"来介绍框架的控制流程\",{\"1\":{\"192\":1}}],[\"来读写\",{\"1\":{\"4\":1}}],[\"事件的过程中\",{\"1\":{\"398\":1}}],[\"事件机制\",{\"1\":{\"390\":1}}],[\"事件代码时请关掉\",{\"1\":{\"367\":1}}],[\"事件等\",{\"1\":{\"367\":1}}],[\"事件会失效\",{\"1\":{\"367\":1}}],[\"事件来实现\",{\"1\":{\"238\":1}}],[\"事件\",{\"1\":{\"29\":1,\"367\":1}}],[\"事件监听\",{\"1\":{\"29\":1}}],[\"事实上\",{\"1\":{\"11\":1}}],[\"向monitor发送request\",{\"1\":{\"273\":1}}],[\"向master上报其服务器的信息\",{\"1\":{\"254\":1}}],[\"向后面传递错误信息\",{\"1\":{\"197\":1}}],[\"向后面传递具体的处理错误以及响应\",{\"1\":{\"197\":1}}],[\"向上翻页\",{\"1\":{\"98\":1}}],[\"向下翻页\",{\"1\":{\"98\":1}}],[\"向远端仓库提交代码时\",{\"1\":{\"69\":1}}],[\"向共享内存写入\",{\"1\":{\"30\":1}}],[\"向\",{\"1\":{\"29\":2,\"30\":1}}],[\"通篇大文尽然只有最下方的一张图片与这个问题有关\",{\"1\":{\"497\":1}}],[\"通常是因为该\",{\"1\":{\"636\":1}}],[\"通常建议使用和所用\",{\"1\":{\"628\":1}}],[\"通常你就会在网上进行搜索\",{\"1\":{\"389\":1}}],[\"通常\",{\"1\":{\"383\":1,\"395\":2}}],[\"通常我们用递归的方法来完成这样的操作\",{\"1\":{\"378\":1}}],[\"通常在框架初始化时载入\",{\"1\":{\"271\":1}}],[\"通常其长度要比信息小得多\",{\"1\":{\"151\":1}}],[\"通常再次修改后配合如下命令覆盖远程仓库的\",{\"1\":{\"80\":1}}],[\"通用匹配单个字符列表\",{\"1\":{\"64\":1}}],[\"通用匹配单个字符\",{\"1\":{\"64\":1}}],[\"通信层使用的socket\",{\"1\":{\"273\":1}}],[\"通信\",{\"1\":{\"29\":1}}],[\"通过制作各种各样的陶艺\",{\"1\":{\"598\":1}}],[\"通过手指滑动改变地形\",{\"1\":{\"588\":1}}],[\"通过触景生情的方式\",{\"1\":{\"585\":1}}],[\"通过凶杀案现场的诸多线索与疑点一步步还原案件真相\",{\"1\":{\"569\":1}}],[\"通过不断转动手机屏幕以改变方向\",{\"1\":{\"561\":1}}],[\"通过单一模型的旋转及多模型的配合才能找到本体\",{\"1\":{\"538\":1}}],[\"通过收集屏幕中出现的基因\",{\"1\":{\"522\":1}}],[\"通过改变框架的顺序来给主人公引路\",{\"1\":{\"520\":1}}],[\"通过长时间的开发和尝试\",{\"1\":{\"502\":1}}],[\"通过wx\",{\"1\":{\"498\":1}}],[\"通过工具类回收这些图片\",{\"1\":{\"487\":1}}],[\"通过工厂函数\",{\"1\":{\"262\":1}}],[\"通过上一篇文章\",{\"1\":{\"408\":1}}],[\"通过上面介绍的诸多方法和工具之后\",{\"1\":{\"405\":1}}],[\"通过上面的图\",{\"1\":{\"394\":1}}],[\"通过上面的代码进行测试\",{\"1\":{\"378\":1}}],[\"通过上面的代码我们可以递归遍历文档中的所有图层\",{\"1\":{\"378\":1}}],[\"通过上面的配置给我们的面板扩展指定了远程调式的端口号\",{\"1\":{\"366\":1}}],[\"通过下面的代码\",{\"1\":{\"400\":1}}],[\"通过该工具\",{\"1\":{\"400\":1}}],[\"通过getlist拿到一个数组\",{\"1\":{\"399\":1}}],[\"通过guides来操作参考线\",{\"1\":{\"377\":1}}],[\"通过设置图层id来定位图层\",{\"1\":{\"399\":1}}],[\"通过设置图层顺序来定位图层\",{\"1\":{\"399\":1}}],[\"通过遍历actiondescriptor的所有属性\",{\"1\":{\"398\":1}}],[\"通过反射获取到字符串的属性\",{\"1\":{\"398\":2}}],[\"通过传入索引序号\",{\"1\":{\"398\":1}}],[\"通过null\",{\"1\":{\"398\":1}}],[\"通过next传递给后面流程\",{\"1\":{\"251\":1}}],[\"通过一些前人的积累和经验\",{\"1\":{\"397\":1}}],[\"通过一步一步实现\",{\"1\":{\"362\":1}}],[\"通过介绍am的底层运作逻辑和一些辅助工具\",{\"1\":{\"396\":1}}],[\"通过实际验证我们发现am的脚本执行效率要比dom\",{\"1\":{\"395\":1}}],[\"通过typeidtostringid和typeidtocharid\",{\"1\":{\"393\":1}}],[\"通过命令字符串缩写来提供参数\",{\"1\":{\"393\":1}}],[\"通过它我们也能够更深刻的理解actiondescriptor的内部组织结构\",{\"1\":{\"398\":1}}],[\"通过它我们可以完成需要的一些工作\",{\"1\":{\"389\":1}}],[\"通过它我们可以操作本地系统的文件和文件夹\",{\"1\":{\"384\":1}}],[\"通过它我们可以引用其它jsx文件\",{\"1\":{\"383\":1}}],[\"通过它\",{\"1\":{\"387\":1}}],[\"通过dom提供的api\",{\"1\":{\"387\":1}}],[\"通过官方给出的文档给大家做一个初步的介绍\",{\"1\":{\"387\":1}}],[\"通过提供的xml对象\",{\"1\":{\"385\":1}}],[\"通过文档中的接口\",{\"1\":{\"377\":1}}],[\"通过在\",{\"1\":{\"369\":1}}],[\"通过左侧文件树导航到你的\",{\"1\":{\"343\":1}}],[\"通过将多个node\",{\"1\":{\"295\":1}}],[\"通过判断其操作是list\",{\"1\":{\"282\":1}}],[\"通过判断参数\",{\"1\":{\"281\":1}}],[\"通过检查参数\",{\"1\":{\"280\":1}}],[\"通过对masterhandler请求的参数进行判断就可以区分到底是周期性任务还是monitor请求\",{\"1\":{\"278\":1}}],[\"通过对这个框架进行扩展\",{\"1\":{\"273\":1}}],[\"通过了验证\",{\"1\":{\"276\":1}}],[\"通过定制自己的admin\",{\"1\":{\"272\":1}}],[\"通过给master发请求获得服务器群信息\",{\"1\":{\"272\":1}}],[\"通过char\",{\"1\":{\"398\":1}}],[\"通过channel进行消息推送等\",{\"1\":{\"285\":1}}],[\"通过channel的相应调用即可向客户端推送消息\",{\"1\":{\"230\":1}}],[\"通过console\",{\"1\":{\"262\":1}}],[\"通过最后的回调函数中返回服务器的id即可\",{\"1\":{\"261\":1}}],[\"通过frontendsession的bind调用\",{\"1\":{\"247\":1}}],[\"通过frontendsession可以对settings字段进行设置值\",{\"1\":{\"247\":1}}],[\"通过读取配置文件\",{\"1\":{\"244\":1}}],[\"通过修改服务器的配置文件\",{\"1\":{\"234\":1}}],[\"通过分析请求的路由\",{\"1\":{\"230\":1}}],[\"通过body字段传输\",{\"1\":{\"223\":1}}],[\"通过如下方式设置全局的errorhandler\",{\"1\":{\"197\":1}}],[\"通过application的configure等调用\",{\"1\":{\"261\":1}}],[\"通过app\",{\"1\":{\"195\":1,\"282\":1}}],[\"通过\",{\"1\":{\"29\":2,\"54\":1,\"68\":1,\"74\":1,\"341\":1,\"343\":1,\"345\":1,\"362\":1,\"389\":1,\"399\":1,\"461\":3,\"467\":1,\"631\":1,\"638\":1}}],[\"先看一个例子\",{\"1\":{\"392\":1}}],[\"先把用户原来的单位设置保存起来\",{\"1\":{\"380\":1}}],[\"先这样\",{\"1\":{\"378\":1}}],[\"先执行以下命令\",{\"1\":{\"190\":1}}],[\"先执行git\",{\"1\":{\"84\":1}}],[\"先切回要和合并的分支线上\",{\"1\":{\"87\":1}}],[\"先对\",{\"1\":{\"29\":1}}],[\"先处理\",{\"1\":{\"29\":1}}],[\"先在二进制数据之上建立一个\",{\"1\":{\"29\":1}}],[\"变换\",{\"1\":{\"581\":1}}],[\"变速\",{\"1\":{\"544\":1}}],[\"变成这样\",{\"1\":{\"392\":1}}],[\"变量\",{\"1\":{\"370\":1,\"374\":1}}],[\"变量的值以及一个可选的参数isattach\",{\"1\":{\"261\":1}}],[\"变量是一个指向\",{\"1\":{\"29\":2}}],[\"变动合并至当前分支\",{\"1\":{\"83\":1}}],[\"变动的时候\",{\"1\":{\"9\":1}}],[\"go\",{\"0\":{\"541\":1}}],[\"google\",{\"1\":{\"418\":2,\"442\":2,\"453\":2,\"461\":2}}],[\"gpu\",{\"1\":{\"470\":1}}],[\"glsl\",{\"0\":{\"623\":1}}],[\"glsl着色shader\",{\"0\":{\"622\":1}}],[\"glsl顶点shader\",{\"0\":{\"621\":1}}],[\"gl\",{\"1\":{\"467\":2}}],[\"glossary\",{\"1\":{\"442\":1}}],[\"glory\",{\"1\":{\"442\":2}}],[\"global则为项目配置\",{\"1\":{\"93\":1}}],[\"global全局\",{\"1\":{\"92\":1}}],[\"global\",{\"1\":{\"68\":4,\"88\":1,\"91\":1,\"93\":2,\"130\":8,\"358\":3,\"382\":2,\"612\":5}}],[\"gc\",{\"1\":{\"382\":1}}],[\"grid\",{\"1\":{\"479\":1}}],[\"gradle\",{\"1\":{\"461\":11}}],[\"group\",{\"1\":{\"378\":2}}],[\"grunt等都有相应的插件\",{\"1\":{\"304\":1}}],[\"greet>\",{\"1\":{\"114\":1}}],[\"greetparams\",{\"1\":{\"114\":1}}],[\"greet\",{\"1\":{\"114\":1}}],[\"grep\",{\"1\":{\"99\":1}}],[\"guide\",{\"1\":{\"380\":1,\"387\":2}}],[\"guard=autorunguard\",{\"1\":{\"292\":1}}],[\"guard\",{\"1\":{\"292\":2}}],[\"gulp简介\",{\"0\":{\"321\":1}}],[\"gulp\",{\"0\":{\"316\":1},\"1\":{\"168\":3,\"169\":5,\"170\":23,\"171\":9,\"304\":1,\"318\":1,\"319\":7,\"320\":1,\"324\":1,\"632\":2,\"633\":2,\"636\":6,\"638\":2}}],[\"gulp更高效\",{\"1\":{\"167\":1}}],[\"gap信息就是不同的手机其状态栏到胶囊按钮间距\",{\"1\":{\"500\":1}}],[\"gap\",{\"1\":{\"500\":2,\"501\":8}}],[\"garbage\",{\"1\":{\"382\":1}}],[\"gameid\",{\"1\":{\"612\":1}}],[\"gameinfopara\",{\"1\":{\"612\":1}}],[\"gameinfo\",{\"1\":{\"612\":2}}],[\"game1080×720\",{\"1\":{\"464\":1}}],[\"game\",{\"0\":{\"640\":1},\"1\":{\"210\":1,\"233\":1,\"461\":2,\"628\":1}}],[\"gamma\",{\"1\":{\"26\":3}}],[\"gate会给客户端分配具体的connector服务器\",{\"1\":{\"241\":1}}],[\"gate服务器和connector服务器又都被称作前端服务器\",{\"1\":{\"243\":1}}],[\"gate服务器\",{\"0\":{\"241\":1}}],[\"gate服务器调试配置\",{\"1\":{\"206\":1}}],[\"gatehandler\",{\"1\":{\"214\":2,\"234\":1}}],[\"gate\",{\"1\":{\"206\":1,\"209\":1,\"214\":1,\"234\":4,\"261\":2}}],[\"gen\",{\"1\":{\"638\":1}}],[\"gender\",{\"1\":{\"112\":2}}],[\"geometry>\",{\"1\":{\"356\":1}}],[\"getmenubuttonboundingclientrect\",{\"1\":{\"500\":3,\"501\":5}}],[\"getter\",{\"1\":{\"401\":2}}],[\"getterdemo\",{\"0\":{\"401\":1},\"1\":{\"401\":1}}],[\"gettype\",{\"1\":{\"392\":1,\"398\":3}}],[\"getlayerinfobyindex\",{\"1\":{\"399\":1}}],[\"getlayerinfobyid\",{\"1\":{\"399\":1}}],[\"getlist\",{\"1\":{\"392\":1,\"399\":2}}],[\"get其实要相对简单一些\",{\"1\":{\"397\":1}}],[\"get操作\",{\"1\":{\"397\":1}}],[\"getd\",{\"1\":{\"404\":1}}],[\"getdata\",{\"1\":{\"392\":1}}],[\"getdouble\",{\"1\":{\"392\":1,\"398\":1}}],[\"getunitdoublevalue\",{\"1\":{\"392\":1}}],[\"getunitdoubletype\",{\"1\":{\"392\":1}}],[\"getuint32\",{\"1\":{\"23\":1,\"29\":11}}],[\"getuint16\",{\"1\":{\"23\":4,\"29\":5}}],[\"getuint8\",{\"1\":{\"4\":1,\"23\":2}}],[\"getsysteminfosync\",{\"1\":{\"498\":1,\"500\":1}}],[\"getstring\",{\"1\":{\"392\":1,\"398\":2,\"400\":1,\"404\":1,\"408\":1,\"409\":3}}],[\"getserverid\",{\"1\":{\"272\":1}}],[\"getserversbytype\",{\"1\":{\"234\":2,\"261\":1,\"271\":1}}],[\"getreference\",{\"1\":{\"392\":1,\"399\":1}}],[\"getobjectvalue\",{\"1\":{\"392\":1,\"398\":1,\"400\":3,\"409\":3}}],[\"getobjecttype\",{\"1\":{\"392\":1}}],[\"getkey方法返回的是一个typeid数值\",{\"1\":{\"398\":2}}],[\"getkey函数\",{\"1\":{\"398\":1}}],[\"getkey\",{\"1\":{\"392\":1,\"398\":5}}],[\"getbyname\",{\"1\":{\"395\":1}}],[\"getboolean\",{\"1\":{\"392\":1,\"398\":1}}],[\"getbase\",{\"1\":{\"237\":1,\"261\":1,\"271\":1}}],[\"getenumerationvalue\",{\"1\":{\"392\":1}}],[\"getenumerationtype\",{\"1\":{\"392\":1}}],[\"getenv\",{\"1\":{\"382\":1}}],[\"getelementbyid\",{\"1\":{\"26\":1,\"29\":2}}],[\"getclass\",{\"1\":{\"392\":1}}],[\"getcurrentlayername\",{\"1\":{\"357\":1,\"358\":3}}],[\"getcurrentlayernamefromjsx\",{\"1\":{\"357\":2}}],[\"getcontext\",{\"1\":{\"26\":1}}],[\"get获得到pinus框架加载的服务\",{\"1\":{\"261\":1}}],[\"get请求的请求头与请求参数如在接口文档中无特别声明时\",{\"1\":{\"161\":1}}],[\"get请求\",{\"1\":{\"161\":1}}],[\"getparameter\",{\"1\":{\"467\":1}}],[\"getpath\",{\"1\":{\"392\":1}}],[\"getprop\",{\"1\":{\"461\":1}}],[\"getproperties\",{\"1\":{\"402\":1}}],[\"getprototypeof\",{\"1\":{\"50\":1}}],[\"getpostman\",{\"1\":{\"159\":1}}],[\"getplatformendianness\",{\"1\":{\"11\":1}}],[\"getidentifier\",{\"1\":{\"399\":1}}],[\"getimagedata\",{\"1\":{\"26\":1}}],[\"getinteger\",{\"1\":{\"392\":1,\"398\":1}}],[\"getint32\",{\"1\":{\"23\":1}}],[\"getint16\",{\"1\":{\"23\":3}}],[\"getint8\",{\"1\":{\"23\":1}}],[\"get\",{\"1\":{\"23\":3,\"25\":1,\"161\":1,\"190\":1,\"230\":1,\"234\":2,\"236\":1,\"237\":1,\"261\":5,\"267\":1,\"271\":1,\"272\":2,\"382\":1,\"392\":16,\"398\":2,\"399\":2}}],[\"getfloat64\",{\"1\":{\"23\":1}}],[\"getfloat32\",{\"1\":{\"23\":1}}],[\"gz\",{\"1\":{\"97\":1}}],[\"g\",{\"1\":{\"95\":1,\"102\":2,\"122\":2,\"125\":1,\"130\":2,\"133\":1,\"168\":1,\"182\":1,\"300\":1,\"305\":1,\"330\":1,\"382\":1,\"434\":1,\"632\":1,\"636\":1}}],[\"gitbook插件整理\",{\"1\":{\"456\":1}}],[\"gitbook\",{\"0\":{\"434\":1},\"1\":{\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":2,\"439\":3,\"441\":2,\"442\":2,\"443\":1,\"444\":1,\"446\":1,\"454\":1,\"456\":2}}],[\"gitbook命令\",{\"0\":{\"433\":1}}],[\"git安装目录下的gitconfig\",{\"1\":{\"92\":1}}],[\"git安装路径\",{\"1\":{\"92\":1}}],[\"git相关的配置文件\",{\"0\":{\"92\":1}}],[\"gitconfig\",{\"1\":{\"88\":1,\"92\":2}}],[\"gitignore\",{\"1\":{\"64\":2,\"65\":2,\"443\":1}}],[\"git\",{\"0\":{\"67\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"293\":1},\"1\":{\"62\":2,\"68\":6,\"70\":4,\"71\":3,\"72\":7,\"73\":3,\"74\":12,\"75\":3,\"76\":10,\"77\":7,\"78\":2,\"79\":3,\"80\":5,\"81\":3,\"82\":10,\"83\":8,\"84\":9,\"85\":6,\"86\":3,\"87\":10,\"88\":3,\"91\":3,\"93\":2,\"190\":2,\"234\":1,\"272\":1,\"293\":1,\"405\":1,\"636\":3}}],[\"githubusercontent\",{\"1\":{\"356\":2}}],[\"github地址\",{\"1\":{\"294\":1}}],[\"github\",{\"0\":{\"630\":1},\"1\":{\"58\":1,\"65\":2,\"76\":1,\"130\":2,\"131\":1,\"190\":1,\"294\":1,\"296\":1,\"298\":1,\"349\":1,\"395\":1,\"403\":1,\"405\":1,\"442\":5,\"456\":1,\"628\":10,\"635\":1,\"636\":3}}],[\"～\",{\"1\":{\"26\":1}}],[\"～字节\",{\"1\":{\"9\":2}}],[\"h5项目从开发到上线https\",{\"1\":{\"626\":1}}],[\"href\",{\"1\":{\"491\":2}}],[\"href=\",{\"1\":{\"357\":1}}],[\"hh\",{\"1\":{\"454\":1}}],[\"hstb\",{\"1\":{\"401\":2}}],[\"hkey\",{\"1\":{\"361\":1}}],[\"hybridconnector\",{\"1\":{\"261\":1}}],[\"hybridconnector则是使用了二进制版本通讯协议\",{\"1\":{\"221\":1}}],[\"hybridconnector则用于tcp\",{\"1\":{\"221\":1}}],[\"h\",{\"1\":{\"233\":4,\"393\":3}}],[\"hexadecimal\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"helloworld\",{\"1\":{\"356\":4,\"365\":1}}],[\"helloworldcomponent\",{\"1\":{\"261\":1}}],[\"hello\",{\"1\":{\"307\":2,\"349\":2,\"350\":1,\"355\":1,\"357\":1,\"359\":1,\"362\":1,\"372\":4,\"382\":1}}],[\"helen\",{\"1\":{\"290\":1}}],[\"help\",{\"1\":{\"103\":1,\"232\":1,\"233\":3,\"288\":1,\"628\":1}}],[\"helper让你签署支持oauth\",{\"1\":{\"163\":1}}],[\"helper\",{\"1\":{\"88\":1}}],[\"heap\",{\"1\":{\"633\":1}}],[\"heapused等信息响应给master\",{\"1\":{\"282\":1}}],[\"heartbeat\",{\"1\":{\"223\":3,\"224\":1,\"261\":1}}],[\"head>\",{\"1\":{\"357\":1}}],[\"headused\",{\"1\":{\"187\":1}}],[\"header描述package包的类型和包的长度\",{\"1\":{\"222\":1}}],[\"header\",{\"1\":{\"163\":2}}],[\"headers\",{\"1\":{\"161\":1}}],[\"head\",{\"1\":{\"84\":3,\"85\":1,\"226\":1,\"228\":1}}],[\"height=\",{\"1\":{\"420\":1}}],[\"height>\",{\"1\":{\"356\":3}}],[\"height\",{\"1\":{\"26\":1,\"394\":4,\"395\":3,\"500\":1,\"501\":1}}],[\"husky\",{\"1\":{\"74\":1}}],[\"harvey\",{\"1\":{\"523\":1}}],[\"hard\",{\"1\":{\"80\":1,\"84\":1}}],[\"hatenabookmark\",{\"1\":{\"442\":1}}],[\"haskey\",{\"1\":{\"392\":1}}],[\"hasownproperty\",{\"1\":{\"54\":1,\"398\":1}}],[\"have\",{\"1\":{\"370\":1}}],[\"hans\",{\"1\":{\"442\":2}}],[\"hansen\",{\"1\":{\"32\":1}}],[\"handshake\",{\"1\":{\"223\":1}}],[\"handlefunc\",{\"1\":{\"252\":1}}],[\"handle\",{\"1\":{\"197\":1}}],[\"handler组件主要负责加载前端服务器中的handler目录下的文件\",{\"1\":{\"271\":1}}],[\"handler函数是可选的\",{\"1\":{\"252\":1}}],[\"handler中对处理流程中发生的异常进行集中处理\",{\"1\":{\"252\":1}}],[\"handler是业务逻辑实现的地方\",{\"1\":{\"261\":1,\"271\":1}}],[\"handler是一个处理全局异常的地方\",{\"1\":{\"252\":1}}],[\"handler是实现具体业务逻辑的地方\",{\"1\":{\"251\":1}}],[\"handler处理完毕后\",{\"1\":{\"251\":1}}],[\"handler的接口声明如下\",{\"1\":{\"251\":1}}],[\"handlername\",{\"1\":{\"246\":1}}],[\"handler等做了较为详细的分析\",{\"1\":{\"201\":1}}],[\"handler\",{\"0\":{\"251\":1,\"252\":1},\"1\":{\"201\":1,\"214\":1,\"234\":1,\"251\":1,\"271\":2}}],[\"handlerfilter分为beforefilter和afterfilter\",{\"1\":{\"197\":1}}],[\"handler链处理后\",{\"1\":{\"230\":1}}],[\"handler链中的session参数\",{\"1\":{\"230\":1}}],[\"handler链\",{\"1\":{\"195\":2}}],[\"handler链对用户请求进行处理\",{\"1\":{\"230\":1}}],[\"handler链对前端服务器分派过来的请求进行处理时\",{\"1\":{\"230\":1}}],[\"handler链对请求进行处理\",{\"1\":{\"192\":1,\"230\":1}}],[\"handler链对其进行处理\",{\"1\":{\"192\":1}}],[\"html>\",{\"1\":{\"357\":2}}],[\"html<\",{\"1\":{\"356\":1,\"357\":1}}],[\"html了\",{\"1\":{\"217\":1}}],[\"html\",{\"1\":{\"34\":1,\"157\":1,\"161\":1,\"167\":1,\"170\":7,\"215\":1,\"217\":1,\"350\":2,\"356\":1,\"357\":4,\"365\":1,\"382\":1}}],[\"https\",{\"1\":{\"34\":1,\"36\":1,\"54\":1,\"58\":1,\"65\":1,\"102\":1,\"159\":3,\"190\":1,\"290\":1,\"293\":1,\"294\":1,\"296\":1,\"298\":2,\"313\":1,\"320\":1,\"324\":1,\"331\":2,\"356\":1,\"362\":1,\"370\":1,\"395\":1,\"403\":1,\"405\":1,\"412\":2,\"442\":2,\"456\":2,\"461\":2,\"504\":1,\"505\":1,\"608\":1,\"616\":1,\"623\":1,\"625\":2,\"636\":2}}],[\"http\",{\"1\":{\"22\":1,\"101\":1,\"131\":1,\"180\":2,\"190\":1,\"215\":1,\"331\":5,\"333\":1,\"356\":1,\"357\":1,\"418\":2,\"420\":3}}],[\"horizontal\",{\"1\":{\"394\":4,\"395\":1}}],[\"hotfolder\",{\"1\":{\"382\":2}}],[\"hover\",{\"1\":{\"367\":2}}],[\"hostappspecifier\",{\"1\":{\"370\":3}}],[\"hostlist>\",{\"1\":{\"356\":1,\"365\":1}}],[\"host>\",{\"1\":{\"233\":4}}],[\"host\",{\"1\":{\"189\":2,\"203\":1,\"218\":5,\"233\":5,\"234\":14,\"261\":6,\"266\":2,\"267\":3,\"360\":1}}],[\"host=127\",{\"1\":{\"233\":2,\"262\":1}}],[\"host=\",{\"1\":{\"189\":1}}],[\"how\",{\"1\":{\"159\":1}}],[\"hooks\",{\"1\":{\"74\":1}}],[\"ho\",{\"1\":{\"29\":1}}],[\"hierarchy1360×760\",{\"1\":{\"471\":1}}],[\"historybrushsource\",{\"1\":{\"401\":2}}],[\"histroy\",{\"1\":{\"97\":1}}],[\"highlightcoloroption\",{\"1\":{\"400\":1}}],[\"hiddentypes\",{\"1\":{\"370\":1}}],[\"hi\",{\"1\":{\"29\":2}}],[\"wx\",{\"1\":{\"500\":4}}],[\"writing\",{\"1\":{\"441\":2}}],[\"write的属性\",{\"1\":{\"379\":1}}],[\"writeln\",{\"1\":{\"378\":2,\"382\":1,\"384\":1,\"398\":4,\"399\":2,\"402\":1,\"408\":1,\"409\":1}}],[\"write\",{\"1\":{\"247\":2,\"346\":1,\"360\":3,\"379\":2,\"382\":3}}],[\"wtf\",{\"1\":{\"389\":2}}],[\"woc\",{\"1\":{\"512\":1}}],[\"won\",{\"1\":{\"382\":1}}],[\"world<\",{\"1\":{\"356\":1,\"357\":1}}],[\"world\",{\"1\":{\"307\":2,\"349\":2,\"350\":1,\"355\":1,\"359\":1,\"362\":1,\"382\":1}}],[\"work\",{\"1\":{\"382\":1}}],[\"works\",{\"1\":{\"382\":1}}],[\"workspaceroot\",{\"1\":{\"370\":2}}],[\"workspacefolder\",{\"1\":{\"344\":2,\"346\":1}}],[\"workspace\",{\"1\":{\"95\":1}}],[\"worker\",{\"1\":{\"29\":21,\"30\":9,\"31\":2,\"32\":9}}],[\"whatsapp\",{\"1\":{\"442\":1,\"453\":1}}],[\"whatever\",{\"1\":{\"370\":1}}],[\"when\",{\"1\":{\"382\":1}}],[\"where\",{\"1\":{\"382\":1}}],[\"which\",{\"1\":{\"376\":1}}],[\"white\",{\"1\":{\"357\":1}}],[\"while\",{\"1\":{\"30\":1,\"32\":1}}],[\"w3\",{\"1\":{\"356\":1}}],[\"wisdom\",{\"1\":{\"454\":1}}],[\"will\",{\"1\":{\"292\":1}}],[\"within\",{\"1\":{\"382\":1}}],[\"with\",{\"1\":{\"234\":1,\"382\":2,\"474\":1}}],[\"without\",{\"1\":{\"130\":1,\"382\":1,\"491\":1}}],[\"wiki\",{\"1\":{\"220\":1}}],[\"win\",{\"1\":{\"353\":1,\"354\":1,\"361\":1,\"391\":2}}],[\"windir\",{\"1\":{\"292\":1}}],[\"windowwidth\",{\"1\":{\"501\":2}}],[\"windowheight\",{\"1\":{\"501\":1}}],[\"windowspowershell为新建的目录\",{\"1\":{\"291\":1}}],[\"windowspowershell\",{\"1\":{\"291\":1}}],[\"windows版本\",{\"1\":{\"165\":1}}],[\"windows安装\",{\"1\":{\"159\":1}}],[\"windows\",{\"0\":{\"361\":1},\"1\":{\"158\":2,\"159\":2,\"185\":1,\"287\":1,\"296\":1,\"355\":1,\"361\":1,\"367\":1}}],[\"window\",{\"1\":{\"130\":1,\"357\":1,\"358\":2,\"373\":1,\"390\":2,\"491\":3}}],[\"winget\",{\"1\":{\"165\":1}}],[\"width=\",{\"1\":{\"420\":1}}],[\"width=device\",{\"1\":{\"357\":1}}],[\"width>\",{\"1\":{\"356\":3}}],[\"width\",{\"1\":{\"26\":1,\"357\":1,\"394\":4,\"395\":3,\"501\":7}}],[\"wechat\",{\"1\":{\"625\":1,\"626\":1}}],[\"wechatfcf178e3cfb6af9dc743dd61503c0a0f1000×562\",{\"1\":{\"467\":1}}],[\"wechat53065d81487f52e0255e074c84201dc31000×460\",{\"1\":{\"465\":1}}],[\"weibo\",{\"1\":{\"442\":2,\"453\":2}}],[\"weixin\",{\"1\":{\"36\":1,\"461\":1,\"504\":1,\"616\":1,\"625\":1,\"626\":2,\"627\":1}}],[\"well\",{\"1\":{\"382\":1}}],[\"we\",{\"1\":{\"292\":1,\"441\":1}}],[\"webkiturl\",{\"1\":{\"491\":2}}],[\"webroot\",{\"1\":{\"370\":1}}],[\"web都扮演了client角色\",{\"1\":{\"273\":1}}],[\"web服务器启动成功后我们可以看到它提示说可以访问http\",{\"1\":{\"217\":1}}],[\"website\",{\"1\":{\"442\":2}}],[\"webstorm找不到node路径的解决办法\",{\"0\":{\"294\":1}}],[\"webstorm\",{\"1\":{\"202\":1}}],[\"webstorm配置\",{\"1\":{\"139\":1}}],[\"websocket等协议以二进制数据的形式进行传输\",{\"1\":{\"221\":1}}],[\"websocket的通信\",{\"1\":{\"221\":1}}],[\"websocket\",{\"0\":{\"27\":1},\"1\":{\"27\":2,\"223\":1,\"233\":1}}],[\"websockets\",{\"1\":{\"3\":1}}],[\"web\",{\"1\":{\"24\":1,\"29\":1,\"190\":2,\"210\":1,\"282\":1,\"350\":1,\"356\":1,\"357\":3,\"454\":1,\"483\":1,\"629\":1}}],[\"www\",{\"1\":{\"34\":1,\"101\":1,\"159\":1,\"313\":1,\"320\":1,\"324\":1,\"356\":1,\"418\":2,\"456\":1,\"505\":1,\"608\":1,\"623\":1,\"625\":1}}],[\"watchdog和console的工作原理\",{\"1\":{\"282\":1}}],[\"watchdog是pinus内部很核心的一个module\",{\"1\":{\"282\":1}}],[\"watchdog的监听者列表里也会将这个服务器的信息删除\",{\"1\":{\"281\":1}}],[\"watchdog实现这一切的\",{\"1\":{\"278\":1}}],[\"watchdog\",{\"1\":{\"261\":1}}],[\"watch\",{\"1\":{\"138\":1,\"170\":4}}],[\"wake\",{\"1\":{\"32\":10}}],[\"was\",{\"1\":{\"31\":1}}],[\"wait\",{\"1\":{\"27\":1,\"32\":7}}],[\"w\",{\"1\":{\"29\":6}}],[\"ws\",{\"1\":{\"27\":1}}],[\"允许编译javascript文件\",{\"1\":{\"137\":1}}],[\"允许\",{\"1\":{\"29\":1}}],[\"允许服务器返回二进制数据\",{\"1\":{\"25\":1}}],[\"允许将内存区域的一部分\",{\"1\":{\"6\":1}}],[\"操作简单的游戏也透露着复杂\",{\"1\":{\"570\":1}}],[\"操作历史等等信息\",{\"1\":{\"400\":1}}],[\"操作\",{\"1\":{\"79\":1,\"80\":3}}],[\"操作结束以后\",{\"1\":{\"34\":1}}],[\"操作之后\",{\"1\":{\"30\":1}}],[\"操作只能返回文本数据\",{\"1\":{\"25\":1}}],[\"操作二进制数据的一个接口\",{\"1\":{\"0\":1}}],[\"大型重构所用分支\",{\"1\":{\"628\":1}}],[\"大大提升游戏耐玩性\",{\"1\":{\"566\":1}}],[\"大大降低了am脚本获取的门槛\",{\"1\":{\"390\":1}}],[\"大树等各种障碍物\",{\"1\":{\"562\":1}}],[\"大树\",{\"1\":{\"529\":1}}],[\"大城小胖\",{\"1\":{\"464\":1}}],[\"大部分信息都在defaultoption中\",{\"1\":{\"454\":1}}],[\"大部分的客户端执行命令流程都是如上面所示\",{\"1\":{\"282\":1}}],[\"大小去进行计算\",{\"1\":{\"479\":1}}],[\"大小要求\",{\"1\":{\"444\":1}}],[\"大小尺寸等等信息\",{\"1\":{\"400\":1}}],[\"大量自己的研究和摸索\",{\"1\":{\"411\":1}}],[\"大量的控制流转换会减慢代码速度并增加代码大小\",{\"1\":{\"307\":1}}],[\"大量的\",{\"1\":{\"24\":1}}],[\"大家也可以去了解一下各情况下对多边形的处理方式\",{\"1\":{\"484\":1}}],[\"大家可以根据自己的项目需求去进行扩展\",{\"1\":{\"479\":1}}],[\"大家可以自己实际测试一下\",{\"1\":{\"400\":1}}],[\"大家清楚这个标准定义与具体实现的区别即可\",{\"1\":{\"50\":1}}],[\"大体属性结构图如下\",{\"1\":{\"409\":1}}],[\"大体是这样\",{\"1\":{\"398\":1}}],[\"大体也就能覆盖你日常需要的40\",{\"1\":{\"389\":1}}],[\"大多数场景交互通过一笔画完成\",{\"1\":{\"587\":1}}],[\"大多数开发者都会根据自己的需要\",{\"1\":{\"395\":1}}],[\"大多数时候\",{\"1\":{\"387\":1}}],[\"大多数涉及到脚本插件开发的小伙伴\",{\"1\":{\"377\":1}}],[\"大致代码如下\",{\"1\":{\"234\":1}}],[\"大致流程和get\",{\"1\":{\"161\":1}}],[\"大于5000k\",{\"1\":{\"58\":1}}],[\"大端字节序\",{\"1\":{\"23\":2}}],[\"大端字节序则完全相反\",{\"1\":{\"11\":1}}],[\"在修改\",{\"1\":{\"634\":1}}],[\"在祥和中感受恐怖\",{\"1\":{\"604\":1}}],[\"在手机里养\",{\"1\":{\"602\":1}}],[\"在于它可以让我们体验现实中很难体验的生活\",{\"1\":{\"599\":1}}],[\"在真结局中\",{\"1\":{\"595\":1}}],[\"在剧情发展过程中利用线索与提示来解谜\",{\"1\":{\"572\":1}}],[\"在每个关卡中\",{\"1\":{\"605\":1}}],[\"在每个动作\",{\"1\":{\"398\":1}}],[\"在每局开始时\",{\"1\":{\"571\":1}}],[\"在跑酷中\",{\"1\":{\"566\":1}}],[\"在探索过程中\",{\"1\":{\"564\":1}}],[\"在1作中\",{\"1\":{\"539\":1}}],[\"在表象中探求真实\",{\"1\":{\"538\":1}}],[\"在核战的大背景下\",{\"1\":{\"535\":1}}],[\"在自救的过程中\",{\"1\":{\"527\":1}}],[\"在旅途中你需要不断解决谜题\",{\"1\":{\"526\":1}}],[\"在众多游戏厂商以游戏画面为卖点的今天\",{\"1\":{\"524\":1}}],[\"在策略上游戏更加偏向于对友军利用上的把握\",{\"1\":{\"515\":1}}],[\"在地狱边境寻找自己的姐姐\",{\"1\":{\"512\":1}}],[\"在地狱边缘寻求希望\",{\"1\":{\"512\":1}}],[\"在做小程序时\",{\"1\":{\"495\":1}}],[\"在游戏过程中\",{\"1\":{\"547\":1,\"555\":1}}],[\"在游戏建模广为传播的今天\",{\"1\":{\"526\":1}}],[\"在游戏中\",{\"1\":{\"524\":1,\"539\":1,\"566\":1,\"567\":1,\"588\":1}}],[\"在游戏中后期\",{\"1\":{\"520\":1}}],[\"在游戏场景人物都很丰富的情况下\",{\"1\":{\"489\":1}}],[\"在游戏开发中还是要以实践为准\",{\"1\":{\"469\":1}}],[\"在不懈的优化下\",{\"1\":{\"489\":1}}],[\"在不借助其他工具的情况下\",{\"1\":{\"220\":1}}],[\"在构建发布流程中\",{\"1\":{\"488\":1}}],[\"在图片的回收阶段中\",{\"1\":{\"487\":1}}],[\"在小游戏或\",{\"1\":{\"483\":1}}],[\"在江南百景图项目中\",{\"1\":{\"482\":1}}],[\"在动态合图时会导致空间浪费\",{\"1\":{\"468\":1}}],[\"在使用此插件之前\",{\"1\":{\"451\":1}}],[\"在使用pinus命令行创建一个新项目时\",{\"1\":{\"267\":1}}],[\"在使用pinus框架创建的项目中有两个app\",{\"1\":{\"267\":1}}],[\"在书籍的根目录下放置\",{\"1\":{\"444\":1}}],[\"在左侧导航栏添加链接信息\",{\"1\":{\"442\":1}}],[\"在获取属性值的时候\",{\"1\":{\"398\":1}}],[\"在下篇介绍如何修改这些信息\",{\"1\":{\"396\":1}}],[\"在下面的目录新建profile\",{\"1\":{\"291\":1}}],[\"在日志里头就不会有输出\",{\"1\":{\"396\":1}}],[\"在底层就可以找到对应的命令了\",{\"1\":{\"393\":1}}],[\"在引擎层就是一个hasmap\",{\"1\":{\"393\":1}}],[\"在所有am的代码片段中\",{\"1\":{\"393\":1}}],[\"在比如activelayer返回当前选中的图层\",{\"1\":{\"387\":1}}],[\"在视觉层面\",{\"1\":{\"378\":1}}],[\"在编译后的代码里\",{\"1\":{\"372\":1}}],[\"在遇到运行时异常时断点\",{\"1\":{\"369\":1}}],[\"在添加完\",{\"1\":{\"365\":1}}],[\"在终端执行下面的命令即可开启\",{\"1\":{\"360\":1}}],[\"在实现它之前我们得先对\",{\"1\":{\"358\":1}}],[\"在实际应用中\",{\"1\":{\"272\":1}}],[\"在某些机子和环境下会报错或者获取不到\",{\"1\":{\"501\":1}}],[\"在某些场景你可能用得上\",{\"1\":{\"382\":1}}],[\"在某些\",{\"1\":{\"357\":1}}],[\"在插件根目录下新建文件夹\",{\"1\":{\"357\":1}}],[\"在插件市场的评论区反馈是没用的\",{\"1\":{\"346\":1}}],[\"在其中添加\",{\"1\":{\"356\":1}}],[\"在其中定义monitorhandler\",{\"1\":{\"272\":1}}],[\"在项目根目录下创建\",{\"1\":{\"356\":1}}],[\"在项目目录下建立\",{\"1\":{\"65\":1}}],[\"在remote\",{\"1\":{\"343\":1}}],[\"在routerutil中可以具体的定义不同服务器的路由规则\",{\"1\":{\"261\":1,\"271\":1}}],[\"在首行暂停\",{\"1\":{\"341\":1,\"342\":1}}],[\"在命令行进入\",{\"1\":{\"636\":1}}],[\"在命令行进入引擎路径然后执行以下命令\",{\"1\":{\"636\":1}}],[\"在命令行中进入引擎路径\",{\"1\":{\"632\":1}}],[\"在命令行执行命令\",{\"1\":{\"330\":1}}],[\"在命令行工具中\",{\"1\":{\"282\":1}}],[\"在安装时指定镜像\",{\"1\":{\"288\":1}}],[\"在安装了谷歌浏览器后还需要在谷歌网上应用店中下载所需要的postman插件\",{\"1\":{\"159\":1}}],[\"在客户端连接到master上的时候\",{\"1\":{\"282\":1}}],[\"在客户端可以依据此协议完成与服务端的通信\",{\"1\":{\"229\":1}}],[\"在回调中会获得自己的服务器信息\",{\"1\":{\"282\":1}}],[\"在回调中\",{\"1\":{\"281\":1,\"282\":1}}],[\"在回调函数中返回服务器的id即可\",{\"1\":{\"271\":1}}],[\"在连接到master上后\",{\"1\":{\"276\":1}}],[\"在连接注册到master上的时候\",{\"1\":{\"233\":1}}],[\"在加载组件时\",{\"1\":{\"285\":1}}],[\"在加载watchdog这个module时\",{\"1\":{\"279\":1}}],[\"在加载注册完所有的module后\",{\"1\":{\"274\":1}}],[\"在加载完所有的组件包括master组件后\",{\"1\":{\"262\":1}}],[\"在monitor端\",{\"1\":{\"282\":1}}],[\"在monitorhandler中会调用app\",{\"1\":{\"280\":1}}],[\"在monitorhandler中也仅仅把其打印到console上而已\",{\"1\":{\"272\":1}}],[\"在master端\",{\"1\":{\"277\":1,\"278\":1,\"279\":1,\"281\":1,\"282\":1}}],[\"在master组件的start调用中\",{\"1\":{\"274\":1}}],[\"在整个管理框架中\",{\"1\":{\"273\":1}}],[\"在上面类图中\",{\"1\":{\"273\":1}}],[\"在开着\",{\"1\":{\"367\":1}}],[\"在开启了\",{\"1\":{\"365\":1}}],[\"在开启监听后\",{\"1\":{\"262\":1}}],[\"在开发中应该针对实际的项目情况采用合适的排序算法\",{\"1\":{\"485\":1}}],[\"在开发插件时我们肯定不会每次打开插件先签一遍名\",{\"1\":{\"359\":1}}],[\"在开发指南部分会有详细的介绍\",{\"1\":{\"272\":1}}],[\"在调用application\",{\"1\":{\"272\":1}}],[\"在调用了master组件的start方法后\",{\"1\":{\"262\":1}}],[\"在导出一个module的时候\",{\"1\":{\"272\":1}}],[\"在定义完上面的admin\",{\"1\":{\"272\":1}}],[\"在创建完app\",{\"1\":{\"262\":1}}],[\"在创建新项目时\",{\"1\":{\"233\":1}}],[\"在启动masterconsoleservice时\",{\"1\":{\"262\":1}}],[\"在将所有默认的module都挂到app上后\",{\"1\":{\"262\":1}}],[\"在我们常规开发的时候\",{\"1\":{\"395\":1}}],[\"在我们\",{\"1\":{\"358\":1}}],[\"在我们这个例子中\",{\"1\":{\"272\":1,\"282\":1}}],[\"在我们启动应用的时候\",{\"1\":{\"262\":1}}],[\"在我的使用过程中\",{\"1\":{\"161\":1}}],[\"在路由函数中\",{\"1\":{\"261\":1}}],[\"在app初始化的时候\",{\"1\":{\"262\":1}}],[\"在app\",{\"1\":{\"257\":1,\"272\":1}}],[\"在after\",{\"1\":{\"230\":1}}],[\"在afterfilter中再次获取当前的时间戳\",{\"1\":{\"200\":1}}],[\"在afterfilter中清除\",{\"1\":{\"199\":1}}],[\"在对pinus服务器进行管理的时候\",{\"1\":{\"254\":1}}],[\"在对应的afterfilter中\",{\"1\":{\"198\":1}}],[\"在请求处理流程中\",{\"1\":{\"251\":1}}],[\"在后面一篇文章里头\",{\"1\":{\"393\":1}}],[\"在后面的叙述中\",{\"1\":{\"249\":1}}],[\"在后端服务器接收到请求后\",{\"1\":{\"247\":1}}],[\"在后端服务器求处理链上的所有session参数\",{\"1\":{\"230\":1}}],[\"在后端服务器中\",{\"1\":{\"230\":1}}],[\"在后端服务器的话是backendsession\",{\"1\":{\"197\":1}}],[\"在前进的路上\",{\"1\":{\"596\":1}}],[\"在前面的代码中我们还没有实现获取当前选中的图层的名称的接口\",{\"1\":{\"358\":1}}],[\"在前面的enable\",{\"1\":{\"277\":1}}],[\"在前面的介绍中\",{\"1\":{\"273\":1}}],[\"在前面的例子中\",{\"1\":{\"234\":1}}],[\"在前端服务器中\",{\"1\":{\"247\":1}}],[\"在前端服务器的话是frontendsession\",{\"1\":{\"197\":1}}],[\"在执行完用户的配置代码后\",{\"1\":{\"262\":1}}],[\"在执行完上面的操作之后\",{\"1\":{\"262\":1}}],[\"在执行具体的pinus命令的时候\",{\"1\":{\"233\":1}}],[\"在执行afterfilter链的时候\",{\"1\":{\"197\":1}}],[\"在0\",{\"1\":{\"233\":1}}],[\"在sessionservice里有选项singlesession\",{\"1\":{\"230\":1}}],[\"在filter\",{\"1\":{\"230\":1}}],[\"在filter的具体实现中\",{\"1\":{\"197\":1}}],[\"在before\",{\"1\":{\"230\":1}}],[\"在beforefilter中会记录一下当前的时间戳\",{\"1\":{\"200\":1}}],[\"在beforefilter中会启动一个定时器\",{\"1\":{\"199\":1}}],[\"在beforefilter中\",{\"1\":{\"198\":1}}],[\"在beforefilter或者handler中\",{\"1\":{\"197\":1}}],[\"在backendsession中会维护此session所在的前端服务器的id\",{\"1\":{\"230\":1}}],[\"在一个聊天应用中\",{\"1\":{\"230\":1}}],[\"在消息头里面可能要打入message\",{\"1\":{\"226\":1}}],[\"在握手阶段客户端将该版本号上传给服务器\",{\"1\":{\"223\":1}}],[\"在经过一番断点切换后\",{\"1\":{\"218\":1}}],[\"在此处下一个断点\",{\"1\":{\"214\":1}}],[\"在此事件处理中\",{\"1\":{\"195\":1}}],[\"在webstorm\",{\"1\":{\"209\":1}}],[\"在服务器配置文件中\",{\"1\":{\"203\":1}}],[\"在errorhandler中可以根据传入的resp以及err信息\",{\"1\":{\"197\":1}}],[\"在具体handler的实现中\",{\"1\":{\"197\":1}}],[\"在具体的事件处理中\",{\"1\":{\"197\":1}}],[\"在next传递err的时候\",{\"1\":{\"197\":1}}],[\"在npm运行目录下安装\",{\"1\":{\"102\":1}}],[\"在逻辑处理完后\",{\"1\":{\"197\":1}}],[\"在事件的处理中\",{\"1\":{\"194\":1}}],[\"在cocoscreator官方文档中没有提供跨平台的通用写文件接口\",{\"1\":{\"491\":1}}],[\"在coconnector的afterstart回调中\",{\"1\":{\"193\":1}}],[\"在console这个module中\",{\"1\":{\"282\":1}}],[\"在configure中用户可以根据应用的不同需求在不同的服务器中进行相关配置\",{\"1\":{\"261\":1,\"271\":1}}],[\"在config\",{\"1\":{\"234\":1}}],[\"在coserver的start回调里\",{\"1\":{\"193\":1}}],[\"在collections里添加请求\",{\"1\":{\"162\":1}}],[\"在本地进行应用开发过程中\",{\"1\":{\"233\":1}}],[\"在本地安装好的模块中\",{\"1\":{\"102\":1}}],[\"在本部分\",{\"1\":{\"192\":1,\"201\":1,\"221\":1,\"229\":1}}],[\"在这一点上游戏趣味性\",{\"1\":{\"516\":1}}],[\"在这个模式中没有分数也没有死亡\",{\"1\":{\"554\":1}}],[\"在这个动作完成之后呢\",{\"1\":{\"390\":1}}],[\"在这个事件处理中\",{\"1\":{\"281\":1}}],[\"在这部分里\",{\"1\":{\"272\":1}}],[\"在这部分\",{\"1\":{\"192\":1,\"230\":1,\"234\":1,\"257\":1,\"261\":1,\"262\":1}}],[\"在这里pinus框架会针对每一种服务器将默认加载不同的组件\",{\"1\":{\"262\":1}}],[\"在这里配置的参数选项\",{\"1\":{\"261\":1}}],[\"在这里\",{\"1\":{\"257\":1,\"261\":1,\"262\":1,\"272\":1,\"280\":1,\"559\":1,\"578\":1,\"582\":1}}],[\"在这里可以做一些初始化工作\",{\"1\":{\"255\":1}}],[\"在这里告诉大家可以这样\",{\"1\":{\"162\":1}}],[\"在这里就不截图\",{\"1\":{\"161\":1}}],[\"在这里插入图片描述\",{\"1\":{\"159\":1}}],[\"在右侧准备好接口请求的所有数据\",{\"1\":{\"162\":1}}],[\"在pinus应用中\",{\"1\":{\"282\":1}}],[\"在pinus命令行工具里面会有详细的介绍\",{\"1\":{\"282\":1}}],[\"在pinus\",{\"1\":{\"272\":1}}],[\"在pinus的createapp\",{\"1\":{\"262\":1}}],[\"在pinus的应用中有两个app\",{\"1\":{\"257\":1}}],[\"在pinus框架中\",{\"1\":{\"247\":1,\"261\":1}}],[\"在pinus中框架中\",{\"1\":{\"261\":1}}],[\"在pinus中rpc调用分为两大类\",{\"1\":{\"245\":1}}],[\"在pinus中\",{\"1\":{\"197\":1,\"234\":1,\"255\":1}}],[\"在post基础功能那里有一张图片大致说了一下collections\",{\"1\":{\"162\":1}}],[\"在package\",{\"1\":{\"102\":1}}],[\"在\",{\"1\":{\"124\":1,\"137\":1,\"293\":1,\"341\":1,\"343\":1,\"365\":1,\"370\":1,\"461\":2,\"464\":1,\"469\":1,\"475\":1,\"536\":1,\"639\":2}}],[\"在设置属性的时候\",{\"1\":{\"409\":1}}],[\"在设置属性值的时候\",{\"1\":{\"394\":1}}],[\"在设置中安装安装插件后重启\",{\"1\":{\"122\":1}}],[\"在设计目的上\",{\"1\":{\"22\":1}}],[\"在要使用的本地目录中\",{\"1\":{\"102\":1}}],[\"在~\",{\"1\":{\"88\":1}}],[\"在原型链中找到的\",{\"1\":{\"53\":1}}],[\"在两下划线之间加入了一个空格\",{\"1\":{\"50\":1}}],[\"在共享内存上建立视图\",{\"1\":{\"29\":2}}],[\"在第9个字节\",{\"1\":{\"24\":1}}],[\"在第5个字节\",{\"1\":{\"24\":1}}],[\"在第1个字节\",{\"1\":{\"24\":1}}],[\"在它们上面都能使用\",{\"1\":{\"8\":1}}],[\"本作游戏画面比前作更加精细\",{\"1\":{\"516\":1}}],[\"本人发现以上方案并不完美\",{\"1\":{\"502\":1}}],[\"本书语言\",{\"1\":{\"442\":1}}],[\"本书描述\",{\"1\":{\"442\":1}}],[\"本书作者\",{\"1\":{\"442\":1}}],[\"本书标题\",{\"1\":{\"442\":1}}],[\"本篇文章的主要内容就结束了\",{\"1\":{\"411\":1}}],[\"本篇讲述了任何软件开发中非常重要一环\",{\"1\":{\"374\":1}}],[\"本质上是修改目标对象的actiondescriptor\",{\"1\":{\"410\":1}}],[\"本质上和js开发没有多大区别\",{\"1\":{\"406\":1}}],[\"本质上\",{\"1\":{\"399\":1}}],[\"本质上也就是一个桥接\",{\"1\":{\"390\":1}}],[\"本部分详细介绍地介绍了pinus的监控管理框架的工作流程\",{\"1\":{\"282\":1}}],[\"本地更新\",{\"1\":{\"102\":1}}],[\"本地安装\",{\"1\":{\"102\":1}}],[\"本地搭建\",{\"0\":{\"70\":1}}],[\"本文章并无任何商业性质\",{\"1\":{\"504\":1}}],[\"本文介绍的示例代码\",{\"1\":{\"405\":1}}],[\"本文介绍所涉及到的官方文档\",{\"1\":{\"387\":1}}],[\"本文是此系列教程中的精华\",{\"1\":{\"397\":1,\"406\":1}}],[\"本文主要介绍了jsx的核心\",{\"1\":{\"387\":1}}],[\"本文没有涉及对\",{\"1\":{\"362\":1}}],[\"本文为保持简单\",{\"1\":{\"304\":1}}],[\"本文讲述如何使用\",{\"1\":{\"202\":1}}],[\"本文中的部分内容参考自这两篇博文\",{\"1\":{\"54\":1}}],[\"本文就此结束了\",{\"1\":{\"54\":1}}],[\"本文基于谷歌浏览器\",{\"1\":{\"50\":1}}],[\"本文旨在帮助大家理清它们之间的关系并彻底搞懂它们\",{\"1\":{\"50\":1}}],[\"本身拥有或继承而来\",{\"1\":{\"53\":1}}],[\"本身是无法读写的\",{\"1\":{\"29\":1}}],[\"本身不储存数据\",{\"1\":{\"8\":1}}],[\"本来\",{\"1\":{\"22\":1}}],[\"到处触发剧情的rpg游戏\",{\"1\":{\"578\":1}}],[\"到哪找脾气这么好的人\",{\"1\":{\"567\":1}}],[\"到哪去\",{\"1\":{\"532\":1}}],[\"到最后独自前行\",{\"1\":{\"507\":1}}],[\"到底是怎么回事\",{\"1\":{\"389\":1}}],[\"到底是小端字节序还是大端字节序\",{\"1\":{\"23\":1}}],[\"到此为止\",{\"1\":{\"272\":1}}],[\"到此结束\",{\"1\":{\"51\":1}}],[\"到这一步为止\",{\"1\":{\"262\":1}}],[\"到工作区\",{\"1\":{\"86\":1}}],[\"到\",{\"1\":{\"83\":1}}],[\"到远程仓库\",{\"1\":{\"72\":1}}],[\"到字节\",{\"1\":{\"22\":3}}],[\"到第\",{\"1\":{\"6\":1}}],[\"分为剧情和沙盒模式\",{\"1\":{\"582\":1}}],[\"分数无上限\",{\"1\":{\"568\":1}}],[\"分时寻路\",{\"1\":{\"480\":1}}],[\"分享当前页面\",{\"1\":{\"453\":1}}],[\"分享\",{\"0\":{\"453\":1}}],[\"分析上图\",{\"1\":{\"497\":1}}],[\"分析了pinus核心的两个module\",{\"1\":{\"282\":1}}],[\"分析一下master组件的启动过程\",{\"1\":{\"262\":1}}],[\"分别放置在对应的层级中\",{\"1\":{\"471\":1}}],[\"分别为master\",{\"1\":{\"273\":1}}],[\"分别对应游戏服务器与web服务器\",{\"1\":{\"267\":1}}],[\"分别是变量名\",{\"1\":{\"261\":1}}],[\"分别是request\",{\"1\":{\"249\":1}}],[\"分别选择chat以及web后\",{\"1\":{\"212\":1}}],[\"分别启动web\",{\"0\":{\"212\":1}}],[\"分别建立两种视图\",{\"1\":{\"4\":1}}],[\"分钟左右\",{\"1\":{\"488\":1}}],[\"分钟缩短到\",{\"1\":{\"488\":1}}],[\"分钟\",{\"1\":{\"187\":1}}],[\"分组长度128位\",{\"1\":{\"146\":1}}],[\"分支相同\",{\"1\":{\"628\":1}}],[\"分支\",{\"0\":{\"87\":1},\"1\":{\"400\":1,\"405\":1,\"628\":6}}],[\"分配\",{\"1\":{\"29\":1}}],[\"分成三个部分\",{\"1\":{\"22\":1}}],[\"拷贝出来结合使用\",{\"1\":{\"395\":1}}],[\"拷贝到photoshop安装路径\",{\"1\":{\"391\":1}}],[\"拷贝到另一段内存之中\",{\"1\":{\"22\":1}}],[\"拷贝这段代码去用的时候记得删掉所有注释\",{\"1\":{\"365\":1}}],[\"拷贝多个文件到一个目录中\",{\"1\":{\"170\":1}}],[\"拷贝生成一个新的\",{\"1\":{\"6\":1}}],[\"接下来可以对\",{\"1\":{\"637\":1}}],[\"接下来您可以定制引擎修改了\",{\"1\":{\"633\":1}}],[\"接下来就是将原有的\",{\"1\":{\"470\":1}}],[\"接下来就需要根据这个属性\",{\"1\":{\"398\":1}}],[\"接下来\",{\"1\":{\"389\":1,\"409\":1}}],[\"接下来我们讲一下如何优雅的抄作业\",{\"1\":{\"392\":1}}],[\"接下来我们使用\",{\"1\":{\"366\":1}}],[\"接下来我们动手写一个简单的\",{\"1\":{\"349\":1}}],[\"接下来我们来分析app\",{\"1\":{\"262\":1}}],[\"接下来我们看\",{\"1\":{\"52\":1}}],[\"接着把一个新创建的ad赋值给整个图层\",{\"1\":{\"408\":1}}],[\"接着你在ps上随便操作\",{\"1\":{\"391\":1}}],[\"接着你就会开始想这tmd是啥东西\",{\"1\":{\"389\":1}}],[\"接着点击底部\",{\"1\":{\"346\":1}}],[\"接着打开vscode左侧运行按钮\",{\"1\":{\"346\":1}}],[\"接着处理图像元信息部分\",{\"1\":{\"29\":1}}],[\"接收master推送来的变化消息\",{\"1\":{\"254\":1}}],[\"接收客户端对后端服务器的请求\",{\"1\":{\"242\":1}}],[\"接受monitor和client的request\",{\"1\":{\"273\":1}}],[\"接受外来的请求事件或者是自身的定时器事件执行相应的回调方法\",{\"1\":{\"262\":1}}],[\"接受rpc请求时使用的端口号\",{\"1\":{\"261\":1}}],[\"接受两个参数\",{\"1\":{\"24\":1}}],[\"接受一个构造函数类型作为参数\",{\"1\":{\"117\":1}}],[\"接受一个\",{\"1\":{\"22\":1}}],[\"接受一个可遍历的数据结构\",{\"1\":{\"22\":1}}],[\"接口还没有实现\",{\"1\":{\"357\":1}}],[\"接口获取当前选中的图层名称\",{\"1\":{\"357\":1}}],[\"接口请求流程\",{\"0\":{\"161\":1}}],[\"接口\",{\"1\":{\"10\":1,\"362\":1,\"639\":1}}],[\"以不同时间线上的线索相互交错推动剧情发展\",{\"1\":{\"586\":1}}],[\"以到达最终目的地\",{\"1\":{\"585\":1}}],[\"以打造属于你自己的世外桃源\",{\"1\":{\"582\":1}}],[\"以平衡游戏中4种数值\",{\"1\":{\"574\":1}}],[\"以至于它有足够的动力向光芒处伸展\",{\"1\":{\"557\":1}}],[\"以解决这次灾难\",{\"1\":{\"551\":1}}],[\"以换取一方和平安宁\",{\"1\":{\"547\":1}}],[\"以阻止人类悲剧的发生\",{\"1\":{\"546\":1}}],[\"以棋格回合制的玩法和手指滑动的操作方式让我们控制劳拉\",{\"1\":{\"541\":1}}],[\"以寓教于乐的图文互动方式让我们接触到经济学博弈论的内容\",{\"1\":{\"540\":1}}],[\"以获得\",{\"1\":{\"536\":1}}],[\"以获取我们需要的数据项\",{\"1\":{\"406\":1}}],[\"以重建它们的家园\",{\"1\":{\"529\":1}}],[\"以4名角色各自的故事为我们展示了战争中友情\",{\"1\":{\"528\":1}}],[\"以帮助一个小女孩回到她自己世界的故事\",{\"1\":{\"525\":1}}],[\"以推动剧情发展\",{\"1\":{\"520\":1}}],[\"以此节约性能消耗\",{\"1\":{\"469\":1}}],[\"以此类推\",{\"1\":{\"20\":1}}],[\"以达到更新的数据的目的\",{\"1\":{\"408\":1}}],[\"以弥补dom\",{\"1\":{\"395\":1}}],[\"以内都不奇怪\",{\"1\":{\"367\":1}}],[\"以\",{\"1\":{\"355\":1,\"573\":1}}],[\"以单独的命令行版本示例\",{\"1\":{\"304\":1}}],[\"以速度为中心\",{\"1\":{\"287\":1}}],[\"以后不写\",{\"1\":{\"374\":1}}],[\"以后每次再有服务器变动的时候\",{\"1\":{\"280\":1}}],[\"以后对此变量的访问\",{\"1\":{\"261\":1}}],[\"以使得后来有请求时\",{\"1\":{\"262\":1}}],[\"以使得所有的chat服务器的负载尽可能平衡\",{\"1\":{\"234\":1}}],[\"以对应具体的是开发调试环境还是具体的产品环境\",{\"1\":{\"261\":1}}],[\"以下简称ad\",{\"1\":{\"394\":1}}],[\"以下简称am\",{\"1\":{\"389\":1}}],[\"以下内容主要是针对game\",{\"1\":{\"267\":1}}],[\"以下示例为chat服务器配置路由规则\",{\"1\":{\"261\":1}}],[\"以下是一些配置实例\",{\"1\":{\"257\":1,\"267\":1}}],[\"以下是一些典型用例行为的时序图\",{\"1\":{\"230\":1}}],[\"以下是参数说明\",{\"1\":{\"257\":1,\"267\":1}}],[\"以下是对后端服务器来说\",{\"1\":{\"230\":1}}],[\"以前的登录会被踢掉\",{\"1\":{\"230\":1}}],[\"以便在将来引擎升级时\",{\"1\":{\"628\":1}}],[\"以便后续调用\",{\"1\":{\"395\":1}}],[\"以便更清晰的看到它的层次结构\",{\"1\":{\"394\":1}}],[\"以便更好地推送消息\",{\"1\":{\"230\":1}}],[\"以便\",{\"1\":{\"341\":1}}],[\"以便调试部署在远端服务器上运行的代码\",{\"1\":{\"220\":1}}],[\"以便调试器连接\",{\"1\":{\"206\":1}}],[\"以聊天为例\",{\"1\":{\"230\":1}}],[\"以满足诸如移动环境的需求\",{\"1\":{\"221\":1}}],[\"以查找解决方案\",{\"1\":{\"212\":1}}],[\"以及糟糕的ai设计\",{\"1\":{\"594\":1}}],[\"以及没有文字描述却依然展现得淋漓尽致的剧情\",{\"1\":{\"521\":1}}],[\"以及路上各种会让你挂掉的陷阱与生物\",{\"1\":{\"512\":1}}],[\"以及下一篇\",{\"1\":{\"397\":1}}],[\"以及改善了对\",{\"1\":{\"368\":1}}],[\"以及调用\",{\"1\":{\"358\":1}}],[\"以及获取周期\",{\"1\":{\"272\":1}}],[\"以及设置一些属性\",{\"1\":{\"230\":1}}],[\"以及典型用例行为的控制流程\",{\"1\":{\"201\":1}}],[\"以及他们的作用\",{\"1\":{\"192\":1}}],[\"以及响应大小\",{\"1\":{\"161\":1}}],[\"以64位为分组对数据加密\",{\"1\":{\"144\":1}}],[\"以严格模式解析并为每个源文件生成\",{\"1\":{\"137\":1}}],[\"以上代码主要是借鉴了拼多多的默认值写法\",{\"1\":{\"501\":1}}],[\"以上代码表示创建一个构造函数foo\",{\"1\":{\"50\":1}}],[\"以上\",{\"1\":{\"396\":1}}],[\"以上的数字可以叠加\",{\"1\":{\"606\":1}}],[\"以上的手机至少支持8张\",{\"1\":{\"467\":1}}],[\"以上的用例行为基本上描述了pinus的管理框架的执行流\",{\"1\":{\"278\":1}}],[\"以上的对backendsession以及channel操作\",{\"1\":{\"230\":1}}],[\"以上三种操作退回了\",{\"1\":{\"80\":1}}],[\"以小端字节序写入值为2\",{\"1\":{\"24\":1}}],[\"以大端字节序写入值为25的32位整数\",{\"1\":{\"24\":2}}],[\"以外的其他\",{\"1\":{\"3\":1}}],[\"比较简单一些的方法是下载该\",{\"1\":{\"636\":1}}],[\"比较损耗性能\",{\"1\":{\"483\":1}}],[\"比较粗暴\",{\"1\":{\"188\":1}}],[\"比默认的\",{\"1\":{\"453\":1}}],[\"比dom提供的丰富的多的多\",{\"1\":{\"405\":1}}],[\"比起直接的读写操作\",{\"1\":{\"30\":1}}],[\"比一个个拷贝成员的那种复制快得多\",{\"1\":{\"18\":1}}],[\"比如有些变大变小的道具不能乱吃\",{\"1\":{\"531\":1}}],[\"比如下面左边的图上我们的\",{\"1\":{\"472\":1}}],[\"比如现在升级\",{\"1\":{\"461\":1}}],[\"比如修改图层顺序是move命令\",{\"1\":{\"410\":1}}],[\"比如根据图层顺序\",{\"1\":{\"408\":1}}],[\"比如获取选中的图层\",{\"1\":{\"405\":1}}],[\"比如通道\",{\"1\":{\"400\":1}}],[\"比如通过一个sid获取其backendsession\",{\"1\":{\"247\":1}}],[\"比如document\",{\"1\":{\"399\":1}}],[\"比如前文我们一直提到过的一个问题\",{\"1\":{\"399\":1}}],[\"比如前面的代码\",{\"1\":{\"398\":1}}],[\"比如名称\",{\"1\":{\"399\":1}}],[\"比如上面我们一直都在讲图层\",{\"1\":{\"399\":1}}],[\"比如能不能通过图层id\",{\"1\":{\"399\":1}}],[\"比如尺寸这样的属性\",{\"1\":{\"398\":1}}],[\"比如我当前选中的是文字工具\",{\"1\":{\"400\":1}}],[\"比如我dump出来的数据\",{\"1\":{\"400\":1}}],[\"比如我想知道当前文档的一些信息\",{\"1\":{\"399\":1}}],[\"比如我想获取当前ps的主题颜色\",{\"1\":{\"396\":1}}],[\"比如我们看上图name属性的类型是stringtype\",{\"1\":{\"398\":1}}],[\"比如我要设置工具的属性值\",{\"1\":{\"396\":1}}],[\"比如我自己日常开发\",{\"1\":{\"376\":1}}],[\"比如对document的常用操作\",{\"1\":{\"395\":1}}],[\"比如ad\",{\"1\":{\"394\":1}}],[\"比如pixelunit表示像素\",{\"1\":{\"394\":1}}],[\"比如offset这个属性\",{\"1\":{\"394\":1}}],[\"比如宽\",{\"1\":{\"394\":1}}],[\"比如你想拿到当前选中的工具的一些选项\",{\"1\":{\"400\":1}}],[\"比如你想获取到id为3的图层的名称\",{\"1\":{\"399\":1}}],[\"比如你看到一个缩写命令\",{\"1\":{\"393\":1}}],[\"比如你可以通过名称来查找图层getbyname\",{\"1\":{\"387\":1}}],[\"比如你可以通过修改name属性来设置一个图层的名称\",{\"1\":{\"379\":1}}],[\"比如你可以把一个图层移动到图层组的里面\",{\"1\":{\"378\":1}}],[\"比如layerid\",{\"1\":{\"408\":1}}],[\"比如lyr\",{\"1\":{\"393\":1}}],[\"比如let\",{\"1\":{\"376\":1}}],[\"比如当选中的多图层的时候\",{\"1\":{\"389\":1}}],[\"比如创建图层\",{\"1\":{\"387\":1}}],[\"比如请求关服务器命令\",{\"1\":{\"273\":1}}],[\"比如监控这些应用服务器的进程状态\",{\"1\":{\"272\":1}}],[\"比如调用app\",{\"1\":{\"262\":1}}],[\"比如是否需要daemon的形式启动\",{\"1\":{\"262\":1}}],[\"比如收集进程状态等\",{\"1\":{\"255\":1}}],[\"比如聊天应用中的房间号就可以看作是session的一个自定义属性\",{\"1\":{\"247\":1}}],[\"比如即时表达式求值\",{\"1\":{\"215\":1}}],[\"比如服务器传来的\",{\"1\":{\"22\":1}}],[\"比如数组\",{\"1\":{\"22\":1}}],[\"比如第一个字节是\",{\"1\":{\"3\":1}}],[\"比如\",{\"1\":{\"2\":1,\"8\":1,\"11\":1,\"14\":2,\"26\":1,\"124\":1,\"161\":1,\"230\":3,\"261\":2,\"272\":1,\"376\":1,\"393\":1,\"394\":1,\"398\":1,\"399\":2}}],[\"该方法也在官方api里头\",{\"1\":{\"398\":1}}],[\"该方式直接kill掉项目进程\",{\"1\":{\"188\":1}}],[\"该项目目前开源\",{\"1\":{\"395\":1}}],[\"该项目中包含创建pinus应用的基本文件及pinus应用的简单示例\",{\"1\":{\"232\":1}}],[\"该工具还提供了执行本地脚本文件\",{\"1\":{\"348\":1}}],[\"该选项会显著增加代码大小\",{\"1\":{\"307\":1}}],[\"该服务主要负责维护服务器本地session并与前端服务器进行交互\",{\"1\":{\"285\":1}}],[\"该服务主要用来对前端服务器的用户session进行统一管理\",{\"1\":{\"285\":1}}],[\"该服务主要提供channel相关的功能包括创建channel\",{\"1\":{\"285\":1}}],[\"该服务负责收集服务器的信息并定期向master进行消息推送\",{\"1\":{\"271\":1,\"285\":1}}],[\"该服务器启动时长\",{\"1\":{\"187\":1}}],[\"该服务器已经使用的堆大小\",{\"1\":{\"187\":1}}],[\"该操作相当地暴力\",{\"1\":{\"233\":1}}],[\"该命令会在引擎目录下生成一个\",{\"1\":{\"633\":1}}],[\"该命令用来启动master服务器的slave节点\",{\"1\":{\"233\":1}}],[\"该命令用来启动pinus应用\",{\"1\":{\"233\":1}}],[\"该命令用来运行时动态增加服务器\",{\"1\":{\"233\":1}}],[\"该命令同样也需要进行身份验证以及指定master服务器的位置\",{\"1\":{\"233\":1}}],[\"该命令强制关闭应用\",{\"1\":{\"233\":1}}],[\"该命令列出所有服务器信息\",{\"1\":{\"233\":1}}],[\"该命令需在项目的根目录或game\",{\"1\":{\"233\":1}}],[\"该命令需在项目的根目录下使用\",{\"1\":{\"189\":1}}],[\"该命令需在项目根目录下进行\",{\"1\":{\"188\":1}}],[\"该插件的下载方式如下\",{\"1\":{\"159\":1}}],[\"该加密算法采用对称分组密码体制\",{\"1\":{\"146\":1}}],[\"该怎么办呢\",{\"1\":{\"124\":1}}],[\"该元组类型包含了构造函数的参数类型\",{\"1\":{\"115\":1}}],[\"该文件记录下了你在ps的每一步操作对应的js\",{\"1\":{\"391\":1}}],[\"该文件夹下的所有内容都会被忽略\",{\"1\":{\"65\":1}}],[\"该文件将会再次被包含\",{\"1\":{\"64\":1}}],[\"该函数的参数\",{\"1\":{\"393\":1}}],[\"该函数\",{\"1\":{\"53\":2}}],[\"该属性在es标准定义中的名字应该是\",{\"1\":{\"50\":1}}],[\"该属性为只读属性\",{\"1\":{\"15\":1}}],[\"该参数可选\",{\"1\":{\"32\":1}}],[\"该位置的预期值\",{\"1\":{\"32\":1}}],[\"该线程与主线程之间会有一个通信渠道\",{\"1\":{\"29\":1}}],[\"该值一律等于当前数据类型的最小值\",{\"1\":{\"14\":1}}],[\"该值一律等于当前数据类型的最大值\",{\"1\":{\"14\":1}}],[\"该数组有\",{\"1\":{\"9\":1}}],[\"凡是发生正向溢出\",{\"1\":{\"14\":1}}],[\"根据不同的\",{\"1\":{\"628\":1}}],[\"根据宽高进行进行计算\",{\"1\":{\"474\":1}}],[\"根据图层的顺序\",{\"1\":{\"399\":1}}],[\"根据图层id来获取图层信息\",{\"1\":{\"399\":1}}],[\"根据项目中的\",{\"1\":{\"289\":1}}],[\"根据给出的路径或文件名创建新项目\",{\"1\":{\"233\":1}}],[\"根据值的大小\",{\"1\":{\"226\":1}}],[\"根据其他人的浏览器console输出\",{\"1\":{\"218\":1}}],[\"根据package\",{\"1\":{\"102\":1}}],[\"根据\",{\"1\":{\"14\":2}}],[\"根据规则\",{\"1\":{\"14\":1}}],[\"相同版本的\",{\"1\":{\"628\":1}}],[\"相同的明文产生相同的密文\",{\"1\":{\"152\":1}}],[\"相互影响着演绎了精彩的剧情\",{\"1\":{\"580\":1}}],[\"相关工作流程请参考\",{\"1\":{\"628\":1}}],[\"相关插件介绍\",{\"0\":{\"448\":1}}],[\"相关的api大家看文档就可以了\",{\"1\":{\"384\":1}}],[\"相比\",{\"1\":{\"507\":1}}],[\"相比上面的getterdemo\",{\"1\":{\"402\":1}}],[\"相比于\",{\"1\":{\"81\":1}}],[\"相信遇到柜子你也会跟我一样先冲进去躲会儿\",{\"1\":{\"564\":1}}],[\"相信不少小伙伴已使用过这个功能\",{\"1\":{\"496\":1}}],[\"相信这三篇文章下来\",{\"1\":{\"396\":1}}],[\"相信很多初学者对这些属性存在许多困惑\",{\"1\":{\"50\":1}}],[\"相应的类关系图\",{\"1\":{\"230\":1}}],[\"相当于把一个新的ad覆盖到图层原有的ad上\",{\"1\":{\"408\":1}}],[\"相当于有了一个学霸同桌\",{\"1\":{\"391\":1}}],[\"相当于执行\",{\"1\":{\"76\":1}}],[\"相当于\",{\"1\":{\"74\":1}}],[\"相当于负向溢出\",{\"1\":{\"14\":1}}],[\"相当于正向溢出\",{\"1\":{\"14\":1}}],[\"相对路径是相对于插件文件夹\",{\"1\":{\"356\":1,\"357\":1}}],[\"相对完美\",{\"1\":{\"54\":1}}],[\"相对不重要字节排在前面的内存地址\",{\"1\":{\"11\":1}}],[\"相对重要的字节排在后面的内存地址\",{\"1\":{\"11\":1}}],[\"时空悖论\",{\"1\":{\"546\":1}}],[\"时间杀手\",{\"1\":{\"536\":1}}],[\"时间参数\",{\"1\":{\"469\":1}}],[\"时插件会和\",{\"1\":{\"370\":1}}],[\"时跳过本次\",{\"1\":{\"83\":1}}],[\"时解决冲突后继续\",{\"1\":{\"83\":1}}],[\"时需要如下命令关联到远程\",{\"1\":{\"77\":1}}],[\"时\",{\"1\":{\"14\":2,\"39\":1,\"483\":1}}],[\"最有趣的是\",{\"1\":{\"584\":1,\"586\":1}}],[\"最想让我吹爆的还是解谜的逻辑性\",{\"1\":{\"508\":1}}],[\"最开始我们使用了四叉树\",{\"1\":{\"479\":1}}],[\"最开始直接\",{\"1\":{\"369\":1}}],[\"最多支持几张图集\",{\"1\":{\"467\":1}}],[\"最快也是最有效的方式\",{\"1\":{\"467\":1}}],[\"最外层是通过调用set这个命令\",{\"1\":{\"408\":1}}],[\"最近打开的文件\",{\"1\":{\"400\":1}}],[\"最常见的\",{\"1\":{\"393\":1}}],[\"最常见的这种请求就是用户登录请求\",{\"1\":{\"195\":1}}],[\"最完整的官方参考资料了\",{\"1\":{\"377\":1}}],[\"最完整的版本历史信息\",{\"1\":{\"84\":1}}],[\"最终控制\",{\"1\":{\"565\":1}}],[\"最终采用了\",{\"1\":{\"482\":1}}],[\"最终达到所有建筑和人物的创建\",{\"1\":{\"469\":1}}],[\"最终的options不是直接修改application的currenttooloptions属性值\",{\"1\":{\"409\":1}}],[\"最终的构造函数都指向function\",{\"1\":{\"54\":1}}],[\"最终我们\",{\"1\":{\"350\":1}}],[\"最终显示的是a\",{\"1\":{\"74\":2}}],[\"最大的问题是你怎么去处理\",{\"1\":{\"372\":1}}],[\"最大的问题就是如何防止两个线程同时修改某个地址\",{\"1\":{\"29\":1}}],[\"最大值减去余值的绝对值\",{\"1\":{\"14\":1}}],[\"最后以拍卖的方式获得收益\",{\"1\":{\"598\":1}}],[\"最后开出美妙绝伦的花朵\",{\"1\":{\"557\":1}}],[\"最后都跑室外解谜了\",{\"1\":{\"510\":1}}],[\"最后到application\",{\"1\":{\"409\":1}}],[\"最后组成一个完整的动作命令\",{\"1\":{\"394\":1}}],[\"最后js的解释器转化到底层c++部分\",{\"1\":{\"390\":1}}],[\"最后把用户的值还原回去\",{\"1\":{\"380\":1}}],[\"最后如果有module定义了start的话\",{\"1\":{\"275\":1}}],[\"最后如果有module定义了start回调\",{\"1\":{\"274\":1}}],[\"最后结果通过回调第三个参数返回结果\",{\"1\":{\"273\":1}}],[\"最后配置完成后就可以启动项目\",{\"1\":{\"267\":1}}],[\"最后启动服务\",{\"1\":{\"267\":1}}],[\"最后启动应用\",{\"1\":{\"257\":1}}],[\"最后生成响应返回给客户端\",{\"1\":{\"261\":1,\"271\":1}}],[\"最后简单分析了一下pinus内建提供的一些filter\",{\"1\":{\"201\":1}}],[\"最后一行代码\",{\"1\":{\"394\":1}}],[\"最后一次升级是在2019年7月\",{\"1\":{\"346\":1}}],[\"最后一次提交时间大于2020\",{\"1\":{\"58\":1}}],[\"最后一个参数是配置选项\",{\"1\":{\"272\":1}}],[\"最后一个取最新的\",{\"1\":{\"102\":1}}],[\"最后一位的route表示route是否压缩\",{\"1\":{\"227\":1}}],[\"最后\",{\"1\":{\"53\":1,\"54\":1,\"346\":1}}],[\"最后返回该新对象的引用\",{\"1\":{\"50\":1}}],[\"最后处理图像本身的像素信息\",{\"1\":{\"29\":1}}],[\"最后将图像展示在\",{\"1\":{\"29\":1}}],[\"最小值加上余值\",{\"1\":{\"14\":1}}],[\"最小值是\",{\"1\":{\"14\":1}}],[\"最不重要的是\",{\"1\":{\"11\":1}}],[\"请在相应的\",{\"1\":{\"640\":1}}],[\"请在config\",{\"1\":{\"190\":1}}],[\"请手动下载该\",{\"1\":{\"636\":2}}],[\"请参考\",{\"1\":{\"628\":1}}],[\"请参阅有关资料\",{\"1\":{\"29\":1}}],[\"请参阅数组方法的介绍\",{\"1\":{\"10\":1}}],[\"请去demo里测试\",{\"1\":{\"504\":1}}],[\"请接着往下看\",{\"1\":{\"498\":1}}],[\"请摆正椅子\",{\"1\":{\"389\":1}}],[\"请使用pinus\",{\"1\":{\"206\":1}}],[\"请选择参数\",{\"1\":{\"186\":1}}],[\"请求信息中带有moduleid和对应的回调参数\",{\"1\":{\"278\":1}}],[\"请求整个服务器群的监控信息\",{\"1\":{\"273\":1}}],[\"请求会触发socket的message事件\",{\"1\":{\"195\":1}}],[\"请求头中的content\",{\"1\":{\"161\":1}}],[\"请求头是根据请求参数的形式自动生成的\",{\"1\":{\"161\":1}}],[\"请求参数会指出相应的moduleid以及回调调用的参数\",{\"1\":{\"278\":1}}],[\"请求参数\",{\"1\":{\"161\":1}}],[\"请求url\",{\"1\":{\"161\":1}}],[\"请求\",{\"1\":{\"161\":1}}],[\"请看一个例子\",{\"1\":{\"32\":1}}],[\"请看下面的例子\",{\"1\":{\"14\":1,\"29\":1}}],[\"请设想如果两个线程同时\",{\"1\":{\"29\":1}}],[\"会遇上你原来操控的车\",{\"1\":{\"605\":1}}],[\"会纵向移动的柱子和横向移动的触台增大了游戏难度\",{\"1\":{\"539\":1}}],[\"会进行合图处理\",{\"1\":{\"478\":1}}],[\"会消耗相当多的性能\",{\"1\":{\"475\":1}}],[\"会影响性能\",{\"1\":{\"469\":1}}],[\"会影响到另一个视图\",{\"1\":{\"4\":1}}],[\"会显示下载状态\",{\"1\":{\"461\":1}}],[\"会依次读取\",{\"1\":{\"443\":1}}],[\"会将当前文档以json数据结构进行输出\",{\"1\":{\"404\":1}}],[\"会将第一个参数指定的\",{\"1\":{\"22\":1}}],[\"会输出如下代码\",{\"1\":{\"394\":1,\"408\":1}}],[\"会发现charidtotypeid\",{\"1\":{\"393\":1}}],[\"会发现上面的代码有些冗余\",{\"1\":{\"392\":1}}],[\"会发现它和你手动操作的行为是一模一样的\",{\"1\":{\"391\":1}}],[\"会发现对于图层的调整而言\",{\"1\":{\"378\":1}}],[\"会讲插件的打包\",{\"1\":{\"376\":1}}],[\"会不会写那就看心情了\",{\"1\":{\"374\":1}}],[\"会比较慢\",{\"1\":{\"367\":1}}],[\"会导致默认为黑色的文字看不见\",{\"1\":{\"357\":1}}],[\"会非常有用\",{\"1\":{\"348\":1}}],[\"会在介绍这块内容\",{\"1\":{\"376\":1}}],[\"会在底部的console中进行输出\",{\"1\":{\"346\":1}}],[\"会在start阶段\",{\"1\":{\"280\":1}}],[\"会激发monitoragent的disconnect事件\",{\"1\":{\"281\":1}}],[\"会开启masteragent对端口的监听\",{\"1\":{\"274\":1}}],[\"会开启socket的监听\",{\"1\":{\"193\":1}}],[\"会完成以下几步\",{\"1\":{\"274\":1}}],[\"会完成session与uid的解绑\",{\"1\":{\"196\":1}}],[\"会根据项目的相关信息生成默认的app\",{\"1\":{\"267\":1}}],[\"会根据具体的消息类型和内容而改变\",{\"1\":{\"226\":1}}],[\"会执行app\",{\"1\":{\"262\":1}}],[\"会执行其coserver的dohandle\",{\"1\":{\"195\":1}}],[\"会启动master组件和monitor组件\",{\"1\":{\"262\":1}}],[\"会启动所有的组件\",{\"1\":{\"262\":1}}],[\"会涉及到这些术语\",{\"1\":{\"256\":1}}],[\"会提示是否覆盖\",{\"1\":{\"233\":1}}],[\"会出现channel找不到的错误\",{\"1\":{\"230\":1}}],[\"会使用ssh的方式远程启动相应的进程\",{\"1\":{\"262\":1}}],[\"会使用session作为计算路由的参数\",{\"1\":{\"234\":1}}],[\"会使用uid绑定对应的session\",{\"1\":{\"230\":1}}],[\"会使用filter\",{\"1\":{\"195\":1}}],[\"会给所有的在这个channel中的用户推送消息\",{\"1\":{\"230\":1}}],[\"会创建对应的session信息\",{\"1\":{\"230\":1}}],[\"会携带用来创建backendsession的信息\",{\"1\":{\"230\":1}}],[\"会先向客户端发送一个控制消息\",{\"1\":{\"226\":1}}],[\"会看到scriptlistener输出如下代码\",{\"1\":{\"398\":1}}],[\"会看到两个文件\",{\"1\":{\"391\":1}}],[\"会看到\",{\"1\":{\"215\":1}}],[\"会监听32312端口\",{\"1\":{\"206\":1}}],[\"会从sessionservice中删除掉对应的session\",{\"1\":{\"197\":1}}],[\"会通过用户的uid或者session\",{\"1\":{\"195\":1}}],[\"会通过coconnection增加连接信息\",{\"1\":{\"194\":1}}],[\"会对连接返回的用来数据通信的socket绑定message\",{\"1\":{\"194\":1}}],[\"会触发connector的监听事件\",{\"1\":{\"194\":1}}],[\"会扫描当前服务器应该加载的handler和handlerfilter\",{\"1\":{\"193\":1}}],[\"会维护服务器的handler和handlerfilter\",{\"1\":{\"192\":1}}],[\"会关闭特定服务器\",{\"1\":{\"188\":1}}],[\"会直接把用户名\",{\"1\":{\"163\":1}}],[\"会取消某次\",{\"1\":{\"81\":1}}],[\"会拉取远程仓库并合并到本地仓库\",{\"1\":{\"76\":1}}],[\"会报错\",{\"1\":{\"51\":1,\"54\":1}}],[\"会变成多条机器指令\",{\"1\":{\"29\":1}}],[\"会自动变为\",{\"1\":{\"26\":1}}],[\"会得到余值\",{\"1\":{\"14\":1}}],[\"除此以外\",{\"1\":{\"430\":1}}],[\"除此之外我们还在游戏里做了一个大胆的优化\",{\"1\":{\"480\":1}}],[\"除此之外\",{\"1\":{\"410\":1,\"479\":1}}],[\"除非手动断开连接\",{\"1\":{\"370\":1}}],[\"除以\",{\"1\":{\"14\":3}}],[\"除了选中的图层之外\",{\"1\":{\"399\":1}}],[\"除了论坛上各种零星的代码随便\",{\"1\":{\"389\":1}}],[\"除了普通的面板类型还有\",{\"1\":{\"356\":1}}],[\"除了会监听端口外\",{\"1\":{\"279\":1}}],[\"除了系统rpc调用外\",{\"1\":{\"245\":1}}],[\"除了常规调试用到的stepover\",{\"1\":{\"215\":1}}],[\"除了\",{\"1\":{\"6\":1}}],[\"除了接受\",{\"1\":{\"4\":1}}],[\"余值\",{\"1\":{\"14\":1}}],[\"负责处理业务逻辑\",{\"1\":{\"358\":1}}],[\"负责读取数据渲染界面\",{\"1\":{\"358\":1}}],[\"负值表示逆向的位置\",{\"1\":{\"20\":1}}],[\"负向溢出都返回\",{\"1\":{\"14\":1}}],[\"负向溢出\",{\"1\":{\"14\":1}}],[\"负数在计算机内部采用\",{\"1\":{\"14\":1}}],[\"再重新运行\",{\"1\":{\"636\":2}}],[\"再重头进行一次操作\",{\"1\":{\"34\":1}}],[\"再玩这种游戏一开始也会有些不适应\",{\"1\":{\"607\":1}}],[\"再配合游戏中的多种道具让小黑球到达发出闪亮蓝光的位置即可过关\",{\"1\":{\"588\":1}}],[\"再结合逼真诡异的音效\",{\"1\":{\"512\":1}}],[\"再到乌鸦人\",{\"1\":{\"506\":1}}],[\"再打包\",{\"1\":{\"488\":1}}],[\"再谈性能\",{\"0\":{\"481\":1}}],[\"再者这个同一时间是非常短的\",{\"1\":{\"480\":1}}],[\"再在项目中进行拼接处理\",{\"1\":{\"468\":1}}],[\"再设置回去\",{\"1\":{\"409\":1}}],[\"再给一个例子\",{\"1\":{\"399\":1}}],[\"再后来\",{\"1\":{\"390\":1}}],[\"再比如你想通过代码来选中移动工具\",{\"1\":{\"389\":1}}],[\"再跳回来\",{\"1\":{\"364\":1}}],[\"再拷贝到我的项目工程当中\",{\"1\":{\"348\":1}}],[\"再从配置下拉菜单中选择刚刚的调试配置gate\",{\"1\":{\"213\":1}}],[\"再次强推\",{\"1\":{\"508\":1}}],[\"再次返回到前端服务器的rpc发起者coserver\",{\"1\":{\"230\":1}}],[\"再次\",{\"1\":{\"203\":1}}],[\"再启动由game\",{\"1\":{\"203\":1}}],[\"再执行某些操作\",{\"1\":{\"238\":1}}],[\"再执行\",{\"1\":{\"74\":2,\"88\":1}}],[\"再往上就已经不是\",{\"1\":{\"51\":1}}],[\"再往上找就相当于在null上取值\",{\"1\":{\"51\":1,\"54\":1}}],[\"再唤醒那些休眠的线程\",{\"1\":{\"32\":1}}],[\"再对\",{\"1\":{\"29\":2}}],[\"再建立一个\",{\"1\":{\"29\":1}}],[\"再建立一个新的视图\",{\"1\":{\"19\":1}}],[\"再减去\",{\"1\":{\"14\":2}}],[\"再加上每次人物落地或游戏失败迸发的碎方块\",{\"1\":{\"583\":1}}],[\"再加上主角与npc逗比风格的对话\",{\"1\":{\"548\":1}}],[\"再加上\",{\"1\":{\"14\":3}}],[\"将高颜值标签与华容道自身魅力结合\",{\"1\":{\"603\":1}}],[\"将历史存进游戏里\",{\"1\":{\"589\":1}}],[\"将凶手绳之以法\",{\"1\":{\"569\":1}}],[\"将图片添加到我们自己创建的回收用工具类\",{\"1\":{\"487\":1}}],[\"将点击的坐标减去建筑物相对原点的坐标\",{\"1\":{\"484\":1}}],[\"将一个原版\",{\"1\":{\"476\":1}}],[\"将道路转为\",{\"0\":{\"475\":1}}],[\"将只对\",{\"1\":{\"474\":1}}],[\"将菱形周围多余的部分切割\",{\"1\":{\"474\":1}}],[\"将旗杆与旗面拆开\",{\"1\":{\"471\":1}}],[\"将多张的图片合并到一张图集上\",{\"1\":{\"467\":1}}],[\"将多次\",{\"1\":{\"83\":1}}],[\"将骨骼动画的图合到自动图集中会减少drawcall吗\",{\"1\":{\"462\":1}}],[\"将currenttooloptions赋值给文字工具\",{\"1\":{\"409\":1}}],[\"将texttoolcharacteroptions赋值给它\",{\"1\":{\"409\":1}}],[\"将textstyle赋值给它\",{\"1\":{\"409\":1}}],[\"将这些常见的am代码做封装\",{\"1\":{\"395\":1}}],[\"将这个文件\",{\"1\":{\"391\":1}}],[\"将它输出出来\",{\"1\":{\"390\":1}}],[\"将上述配置选项\",{\"1\":{\"308\":1}}],[\"将被替换为var\",{\"1\":{\"307\":1}}],[\"将url设置为none则移除代理\",{\"1\":{\"298\":1}}],[\"将下面的代码写入到上面的配置文件里面\",{\"1\":{\"291\":1,\"292\":1}}],[\"将文件夹名称改为powershell\",{\"1\":{\"291\":1}}],[\"将获得到的服务器信息数据响应给adminclient\",{\"1\":{\"282\":1}}],[\"将使用默认值\",{\"1\":{\"272\":1}}],[\"将在相关部分进行详述\",{\"1\":{\"262\":1}}],[\"将在后面介绍\",{\"1\":{\"262\":1}}],[\"将在这步被回调\",{\"1\":{\"262\":1}}],[\"将在其他部分进行介绍\",{\"1\":{\"192\":1}}],[\"将启动所有的module\",{\"1\":{\"262\":1}}],[\"将自定义的module挂到app上\",{\"1\":{\"262\":1}}],[\"将试图向你讲述pinus框架是如何驱动的\",{\"1\":{\"262\":1}}],[\"将设置的settings的值同步到原始session中\",{\"1\":{\"247\":1}}],[\"将其中的key和value打印出来\",{\"1\":{\"406\":1}}],[\"将其配置进框架\",{\"1\":{\"261\":1}}],[\"将其映射到一个具体的应用服务器id\",{\"1\":{\"246\":1}}],[\"将其转换为\",{\"1\":{\"39\":1}}],[\"将请求路由给具体的后端服务器\",{\"1\":{\"242\":1}}],[\"将不会发送响应\",{\"1\":{\"230\":1}}],[\"将端口设置的偏高是为了减少端口冲突的可能性\",{\"1\":{\"206\":1}}],[\"将会使得应用默认注册pinus\",{\"1\":{\"282\":1}}],[\"将会使用这些术语而不再作解释\",{\"1\":{\"249\":1}}],[\"将会在这里调用\",{\"1\":{\"274\":1}}],[\"将会附带更多的参数\",{\"1\":{\"262\":1}}],[\"将会起一个子进程\",{\"1\":{\"262\":1}}],[\"将会对周期性的事件进行调度\",{\"1\":{\"262\":1}}],[\"将会进入到的是\",{\"1\":{\"262\":1}}],[\"将会处理其请求\",{\"1\":{\"198\":1}}],[\"将会默认的查看\",{\"1\":{\"124\":1}}],[\"将用户的请求放到taskmanager中\",{\"1\":{\"198\":1}}],[\"将对应目录中的\",{\"1\":{\"488\":1}}],[\"将对应的主体分为三种角色\",{\"1\":{\"273\":1}}],[\"将对应的正数值进行否运算\",{\"1\":{\"14\":1}}],[\"将对客户端响应没有任何影响\",{\"1\":{\"197\":1}}],[\"将比较多个文件\",{\"1\":{\"85\":1}}],[\"将工作区的文件和版本库进行比较\",{\"1\":{\"85\":1}}],[\"将工作区的文件和缓存区进行比较\",{\"1\":{\"85\":1}}],[\"将工作区内容提交到本地仓库\",{\"1\":{\"74\":3}}],[\"将某个版本的\",{\"1\":{\"80\":2}}],[\"将所有\",{\"1\":{\"365\":1}}],[\"将所有流程都画到一个图中了\",{\"1\":{\"273\":1}}],[\"将所有文件取消缓存\",{\"1\":{\"79\":1}}],[\"将所有修改的文件都提交到暂存区\",{\"1\":{\"73\":1}}],[\"将当前本地分支\",{\"1\":{\"75\":1}}],[\"将修改的文件中的指定的文件\",{\"1\":{\"73\":1}}],[\"将刚刚新建的bat文件路径填入\",{\"1\":{\"62\":1}}],[\"将null除外\",{\"1\":{\"53\":1}}],[\"将值包装为已解决的\",{\"1\":{\"39\":1}}],[\"将质数放入\",{\"1\":{\"29\":1}}],[\"将\",{\"1\":{\"29\":1,\"32\":1,\"54\":1,\"69\":1,\"73\":1,\"79\":1,\"83\":2,\"294\":1,\"365\":1}}],[\"将大于\",{\"1\":{\"26\":1}}],[\"将最重要的字节排在前面\",{\"1\":{\"11\":1}}],[\"而剧情方面\",{\"1\":{\"600\":1}}],[\"而剧情方面也是通俗易懂\",{\"1\":{\"511\":1}}],[\"而女特工却策划杀死了自己的上司\",{\"1\":{\"600\":1}}],[\"而第二层彩带需要和底下格子的颜色一样\",{\"1\":{\"592\":1}}],[\"而第三代算是无尽模式\",{\"1\":{\"545\":1}}],[\"而你就要帮助主角们解开方舟竞技场之谜\",{\"1\":{\"584\":1}}],[\"而你将作为避难所的管理者让居民们健康安全的存活下去\",{\"1\":{\"535\":1}}],[\"而更像在把玩一件艺术品\",{\"1\":{\"581\":1}}],[\"而更多地\",{\"1\":{\"261\":1}}],[\"而主角沿着父亲的足迹一路冒险\",{\"1\":{\"565\":1}}],[\"而要远离那些能将你吞噬的红色星系\",{\"1\":{\"555\":1}}],[\"而2作不仅继承了1作的创意\",{\"1\":{\"553\":1}}],[\"而男主的任务就是通过不断穿越过去和未来破解谜题\",{\"1\":{\"546\":1}}],[\"而人类要夺回这片家园\",{\"1\":{\"534\":1}}],[\"而我们需要控制他在资源有限\",{\"1\":{\"533\":1}}],[\"而他的愿望竟然是\",{\"1\":{\"530\":1}}],[\"而后蛙子就会带回旅行照片或特产给你\",{\"1\":{\"602\":1}}],[\"而后摘下一朵美丽的樱花\",{\"1\":{\"517\":1}}],[\"而后再选择语言\",{\"1\":{\"430\":1}}],[\"而在于对冒险的定义\",{\"1\":{\"554\":1}}],[\"而在\",{\"1\":{\"536\":1}}],[\"而在各平台构建时\",{\"1\":{\"488\":1}}],[\"而在江南百景图项目中\",{\"1\":{\"485\":1}}],[\"而在用户点击时\",{\"1\":{\"484\":1}}],[\"而采用了\",{\"1\":{\"482\":1}}],[\"而背景中的人物动画等仍需要正常播放\",{\"1\":{\"482\":1}}],[\"而其他的地图层将直接照搬第一个地图层的处理结果\",{\"1\":{\"474\":1}}],[\"而其他任何人都无法登录\",{\"1\":{\"218\":1}}],[\"而为了提高合图的效率\",{\"1\":{\"468\":1}}],[\"而小游戏版在经过立项选型后\",{\"1\":{\"465\":1}}],[\"而通过\",{\"1\":{\"461\":1}}],[\"而string则是这个缩写的完整表达\",{\"1\":{\"393\":1}}],[\"而settings也不应该被随意的修改\",{\"1\":{\"247\":1}}],[\"而layers是图层统称\",{\"1\":{\"378\":1}}],[\"而它价值最大的是给与开发着一张编程图谱\",{\"1\":{\"377\":1}}],[\"而插件的业务逻辑一般需要获取\",{\"1\":{\"358\":1}}],[\"而整个服务器群的其他服务器也需要获知具体的服务器的动态信息\",{\"1\":{\"278\":1}}],[\"而client\",{\"1\":{\"273\":1}}],[\"而实际上\",{\"1\":{\"272\":1}}],[\"而app\",{\"1\":{\"262\":1}}],[\"而应用服务器的启动命令行\",{\"1\":{\"262\":1}}],[\"而由master服务器创建的那些子进程\",{\"1\":{\"262\":1}}],[\"而web\",{\"1\":{\"257\":1}}],[\"而这一帧对于上一帧来说差异不会很大\",{\"1\":{\"485\":1}}],[\"而这也是官方文档提供给我们的有限的可用接口\",{\"1\":{\"389\":1}}],[\"而这里有多台服务器\",{\"1\":{\"234\":1}}],[\"而这个constructor可能是对象自己本身显式定义的或者通过\",{\"1\":{\"53\":1}}],[\"而没有使用\",{\"1\":{\"472\":1}}],[\"而没有太多关心整个框架的驱动力量\",{\"1\":{\"262\":1}}],[\"而没有调用push的话\",{\"1\":{\"230\":1}}],[\"而没有具体地深入介绍\",{\"1\":{\"197\":1}}],[\"而game\",{\"1\":{\"218\":1}}],[\"而3014端口刚好是gate服务器\",{\"1\":{\"218\":1}}],[\"而ide会因为调试器而被激活\",{\"1\":{\"215\":1}}],[\"而不会打断合批\",{\"1\":{\"472\":1}}],[\"而不会有很多相同的调试器都连到后面指定的调试端口\",{\"1\":{\"209\":1}}],[\"而不同的\",{\"1\":{\"461\":1}}],[\"而不需要一旦客户端发起请求\",{\"1\":{\"282\":1}}],[\"而不是告诉你打开文档用这段代码\",{\"1\":{\"396\":1}}],[\"而不是周期性地由定时器激发\",{\"1\":{\"282\":1}}],[\"而不是监听接口\",{\"1\":{\"275\":1}}],[\"而不是关闭所有的服务器\",{\"1\":{\"233\":1}}],[\"而不使用pinus默认的\",{\"1\":{\"234\":1}}],[\"而不再把channel信息放在服务器本地\",{\"1\":{\"230\":1}}],[\"而不对其他任何地方的session产生影响\",{\"1\":{\"230\":1}}],[\"而不必提交\",{\"1\":{\"82\":1}}],[\"而该服务器的进程\",{\"1\":{\"206\":1}}],[\"而该位置的取值操作\",{\"1\":{\"30\":1}}],[\"而调试则更可以让我们准确的定位bug\",{\"1\":{\"202\":1}}],[\"而公开算法\",{\"1\":{\"144\":1}}],[\"而函数创建的对象\",{\"1\":{\"53\":1}}],[\"而单从constructor这个属性来讲\",{\"1\":{\"53\":1}}],[\"而对应的\",{\"1\":{\"484\":1}}],[\"而对\",{\"1\":{\"30\":1}}],[\"而打乱机器指令的执行顺序\",{\"1\":{\"30\":1}}],[\"而执行到一半的时候\",{\"1\":{\"29\":1}}],[\"而且很随缘\",{\"1\":{\"602\":1}}],[\"而且拍卖判定不太智能\",{\"1\":{\"598\":1}}],[\"而且对于某些bug\",{\"1\":{\"594\":1}}],[\"而且对于服务端push的消息\",{\"1\":{\"226\":1}}],[\"而且解谜内容并不难\",{\"1\":{\"591\":1}}],[\"而且幸福值还会影响市民们的工作效率\",{\"1\":{\"582\":1}}],[\"而且后期剧情的突然紧凑也让许多玩家不知所措\",{\"1\":{\"580\":1}}],[\"而且从2作开始去掉100天机制\",{\"1\":{\"578\":1}}],[\"而且此游戏还支持云存档与4人联机\",{\"1\":{\"550\":1}}],[\"而且此时具体的响应resp已经发送到了客户端\",{\"1\":{\"197\":1}}],[\"而且过去未来的切换\",{\"1\":{\"546\":1}}],[\"而且拖拽地图又是一个很频繁的操作\",{\"1\":{\"469\":1}}],[\"而且你也不知道它的id和index\",{\"1\":{\"399\":1}}],[\"而且在\",{\"1\":{\"352\":1}}],[\"而且用\",{\"1\":{\"346\":1}}],[\"而且\",{\"1\":{\"32\":1,\"478\":1}}],[\"而且影响性能\",{\"1\":{\"26\":1}}],[\"而且发生运算的时候自动过滤高位溢出\",{\"1\":{\"26\":1}}],[\"而且支持设定字节序\",{\"1\":{\"22\":1}}],[\"而除以\",{\"1\":{\"14\":1}}],[\"而\",{\"1\":{\"14\":1,\"22\":1,\"31\":1,\"44\":1,\"461\":1,\"484\":1,\"488\":1,\"606\":1}}],[\"而是更贴近真实打斗\",{\"1\":{\"594\":1}}],[\"而是燥热的内心\",{\"1\":{\"591\":1}}],[\"而是回家\",{\"1\":{\"585\":1}}],[\"而是给每个建筑物画了一个\",{\"1\":{\"484\":1}}],[\"而是将其放在一个\",{\"1\":{\"483\":1}}],[\"而是将发送任务调度给copushscheduler\",{\"1\":{\"195\":1}}],[\"而是在游戏中的用法优化\",{\"1\":{\"480\":1}}],[\"而是要修改当前选择的文字工具的属性\",{\"1\":{\"409\":1}}],[\"而是根据你想要条件的目标对象\",{\"1\":{\"408\":1}}],[\"而是让我们可以窥探am这个神秘的领域\",{\"1\":{\"390\":1}}],[\"而是只会输出图层面板上的一级图层\",{\"1\":{\"378\":1}}],[\"而是push方式的话\",{\"1\":{\"272\":1}}],[\"而是提供了一个可插拔的监控框架机制\",{\"1\":{\"272\":1}}],[\"而是整个应用程序的驱动方式\",{\"1\":{\"262\":1}}],[\"而是master服务器\",{\"1\":{\"262\":1}}],[\"而是直接作为一个参数来使用的\",{\"1\":{\"233\":1}}],[\"而是进行一次新的\",{\"1\":{\"81\":1}}],[\"而是一组构造函数\",{\"1\":{\"4\":1}}],[\"而是类似数组的对象\",{\"1\":{\"3\":1}}],[\"就应该从哪跌倒从哪爬起来\",{\"1\":{\"554\":1}}],[\"就真的经典神作了\",{\"1\":{\"537\":1}}],[\"就等于把角色寻路分配到了不同帧里\",{\"1\":{\"480\":1}}],[\"就算是相同位置上使用的人物立绘\",{\"1\":{\"477\":1}}],[\"就好比弄了一个devtool\",{\"1\":{\"400\":1}}],[\"就只有上面那个属性和它的值\",{\"1\":{\"399\":1}}],[\"就能够找到你想要的目标对象了\",{\"1\":{\"399\":1}}],[\"就无能为力了\",{\"1\":{\"397\":1}}],[\"就无从下手了\",{\"1\":{\"396\":1}}],[\"就无法从插件的输出里头获取到了\",{\"1\":{\"396\":1}}],[\"就遍历它里头的图层\",{\"1\":{\"378\":1}}],[\"就喜欢用typescript来开发\",{\"1\":{\"376\":1}}],[\"就非常忧伤\",{\"1\":{\"347\":1}}],[\"就连不上ps了\",{\"1\":{\"346\":1}}],[\"就弹出电脑上安装好的ps版本\",{\"1\":{\"346\":1}}],[\"就向所有的服务器轮询\",{\"1\":{\"282\":1}}],[\"就需要一种机制来实现这一切\",{\"1\":{\"278\":1}}],[\"就需要给session绑定uid\",{\"1\":{\"230\":1}}],[\"就调用app\",{\"1\":{\"261\":1}}],[\"就省略掉了chat的路由配置\",{\"1\":{\"234\":1}}],[\"就通过取得定时器id进行了定时器的清理工作\",{\"1\":{\"230\":1}}],[\"就可以将以上所有用到的对象都清理干净了\",{\"1\":{\"487\":1}}],[\"就可以进行点击检测了\",{\"1\":{\"484\":1}}],[\"就可以正常运行了\",{\"1\":{\"461\":1}}],[\"就可以为自己所用了\",{\"1\":{\"410\":1}}],[\"就可以获取到选中工具的actiondescriptor\",{\"1\":{\"400\":1}}],[\"就可以遍历出它的属性了\",{\"1\":{\"399\":1}}],[\"就可以拿到该图层的各种属性信息了\",{\"1\":{\"399\":1}}],[\"就可以拿到它可读的字符串属性\",{\"1\":{\"398\":1}}],[\"就可以通过该函数\",{\"1\":{\"398\":1}}],[\"就可以通过app直接获取到对应的配置信息\",{\"1\":{\"261\":1}}],[\"就可以了\",{\"1\":{\"398\":1}}],[\"就可以看到如下的代码输出\",{\"1\":{\"392\":1}}],[\"就可以实现一些批量操作的任务\",{\"1\":{\"390\":1}}],[\"就可以用layers\",{\"1\":{\"378\":1}}],[\"就可以导入到注册表\",{\"1\":{\"361\":1}}],[\"就可以在\",{\"1\":{\"366\":1}}],[\"就可以在ps中看到执行的效果了\",{\"1\":{\"346\":1}}],[\"就可以在服务器配置中\",{\"1\":{\"233\":1}}],[\"就可以给master发request\",{\"1\":{\"276\":1}}],[\"就可以开启调试\",{\"1\":{\"261\":1}}],[\"就可以直接通过app对象\",{\"1\":{\"261\":1}}],[\"就可以很轻易地实现服务器的扩充\",{\"1\":{\"234\":1}}],[\"就可以使用channel了\",{\"1\":{\"230\":1}}],[\"就可以打开管理控制台界面\",{\"1\":{\"190\":1}}],[\"就可以唤醒\",{\"1\":{\"32\":1}}],[\"就将它写回原来的位置\",{\"1\":{\"34\":1}}],[\"就将其打印出来\",{\"1\":{\"29\":1}}],[\"就写入\",{\"1\":{\"34\":1}}],[\"就返回字符串\",{\"1\":{\"32\":3}}],[\"就自动唤醒\",{\"1\":{\"32\":1}}],[\"就进入休眠状态\",{\"1\":{\"32\":1}}],[\"就进入休眠\",{\"1\":{\"32\":1}}],[\"就在这一行\",{\"1\":{\"32\":1}}],[\"就执行特定操作\",{\"1\":{\"30\":1}}],[\"就必须这样计算\",{\"1\":{\"26\":1}}],[\"就必须明确数据的存储方式\",{\"1\":{\"23\":1}}],[\"就设为\",{\"1\":{\"25\":1}}],[\"就是解谜引导语过多\",{\"1\":{\"593\":1}}],[\"就是统一管理寻路任务\",{\"1\":{\"480\":1}}],[\"就是把寻路过程由一帧分到若干帧去进行计算\",{\"1\":{\"480\":1}}],[\"就是我长时间的摸索总结下来的可复制\",{\"1\":{\"411\":1}}],[\"就是我们前面提到要牢记的两点中的第二点\",{\"1\":{\"52\":1}}],[\"就是通过ad的put相关的方法来达成\",{\"1\":{\"407\":1}}],[\"就是当前被选中的图层的id列表\",{\"1\":{\"399\":1}}],[\"就是charidtotypeid函数返回的数值\",{\"1\":{\"398\":1}}],[\"就是本篇的主要内容\",{\"1\":{\"396\":1}}],[\"就是可以把当前执行的这段代码保存起来\",{\"1\":{\"348\":1}}],[\"就是将底层socket的事件由masteragent捕捉后\",{\"1\":{\"279\":1}}],[\"就是获取自己当前的时间\",{\"1\":{\"272\":1}}],[\"就是一个很简单的通过变量名获取变量值\",{\"1\":{\"261\":1}}],[\"就是如果session没有绑定uid的话\",{\"1\":{\"246\":1}}],[\"就是说\",{\"1\":{\"220\":1}}],[\"就是专门针对颜色\",{\"1\":{\"26\":1}}],[\"就是大端字节序\",{\"1\":{\"24\":1}}],[\"就是小端字节序\",{\"1\":{\"24\":1}}],[\"就是模运算的结果\",{\"1\":{\"14\":1}}],[\"就是补码形式\",{\"1\":{\"14\":1}}],[\"就是\",{\"1\":{\"14\":1,\"26\":1,\"28\":1,\"29\":1,\"355\":1}}],[\"就是抛弃溢出的位\",{\"1\":{\"14\":1}}],[\"就会导致在渲染到旗帜的时候出现断批\",{\"1\":{\"471\":1}}],[\"就会编译报错\",{\"1\":{\"461\":1}}],[\"就会自动生成一张样式不错的空表格\",{\"1\":{\"431\":1}}],[\"就会自动帮你实现代码高亮\",{\"1\":{\"430\":1}}],[\"就会发现在你的桌面上会生成一个scriptinglistenerjs\",{\"1\":{\"391\":1}}],[\"就会用到这些对象的方法\",{\"1\":{\"384\":1}}],[\"就会切换我们环境变量中\",{\"1\":{\"295\":1}}],[\"就会向master报告其状态\",{\"1\":{\"262\":1}}],[\"就会触发toobusy\",{\"1\":{\"201\":1}}],[\"就会让它继续往下运行\",{\"1\":{\"32\":1}}],[\"就会造成卡顿\",{\"1\":{\"32\":1}}],[\"就会出问题\",{\"1\":{\"29\":1}}],[\"就会出现溢出\",{\"1\":{\"14\":1}}],[\"就会返回\",{\"1\":{\"14\":2}}],[\"就会溢出\",{\"1\":{\"14\":1}}],[\"就会在另外两个视图上反应出来\",{\"1\":{\"9\":1}}],[\"溢出\",{\"0\":{\"14\":1}}],[\"溢出处理不同\",{\"1\":{\"8\":1}}],[\"字体列表\",{\"1\":{\"400\":1}}],[\"字符串转为\",{\"1\":{\"13\":1}}],[\"字节起始位置\",{\"1\":{\"22\":1}}],[\"字节变为\",{\"1\":{\"11\":3}}],[\"字节的\",{\"1\":{\"11\":1}}],[\"字节的内存\",{\"1\":{\"4\":1}}],[\"字节的内存区域\",{\"1\":{\"4\":1}}],[\"字节序指的是数值在内存中的表示方式\",{\"1\":{\"11\":1}}],[\"字节序\",{\"0\":{\"11\":1}}],[\"字节内存生成\",{\"1\":{\"9\":1}}],[\"字节内存生成了\",{\"1\":{\"9\":2}}],[\"字节\",{\"1\":{\"9\":6,\"22\":3}}],[\"字节长度的\",{\"1\":{\"22\":1}}],[\"字节长度为\",{\"1\":{\"19\":1}}],[\"字节长度\",{\"1\":{\"3\":1}}],[\"即包含了一堆这样的图层\",{\"1\":{\"378\":1}}],[\"即宿主可操控对象的dom树\",{\"1\":{\"377\":1}}],[\"即可以是artlayer\",{\"1\":{\"378\":1}}],[\"即可\",{\"1\":{\"369\":1,\"442\":1,\"483\":1,\"636\":1}}],[\"即时启动\",{\"1\":{\"287\":1}}],[\"即时显示在url链接上\",{\"1\":{\"161\":1}}],[\"即一旦有monitoragent断开连接时触发\",{\"1\":{\"279\":1}}],[\"即一旦有monitoragent发起到masteragent的连接时触发\",{\"1\":{\"279\":1}}],[\"即一个进程将需要分享的数据复制一份\",{\"1\":{\"29\":1}}],[\"即使是master的消息\",{\"1\":{\"278\":1}}],[\"即使用pull方式\",{\"1\":{\"272\":1}}],[\"即其配置type的值为\",{\"1\":{\"275\":1}}],[\"即requestid\",{\"1\":{\"226\":1}}],[\"即便打开了\",{\"1\":{\"217\":1}}],[\"即在一个请求的afterfilter里启动在taskmanager中还没处理的下一个请求\",{\"1\":{\"198\":1}}],[\"即在一个线程进行操作时\",{\"1\":{\"32\":1}}],[\"即next\",{\"1\":{\"197\":1}}],[\"即找不出具有相同散列结果的两条信息\",{\"1\":{\"151\":1}}],[\"即f1\",{\"1\":{\"54\":1}}],[\"即指向它们的原型对象\",{\"1\":{\"51\":1}}],[\"即被其他线程改写过\",{\"1\":{\"34\":1}}],[\"即不能在运算过程中\",{\"1\":{\"33\":1}}],[\"即无限期的休眠\",{\"1\":{\"32\":1}}],[\"即只能取值\",{\"1\":{\"26\":1}}],[\"即默认大端字节序写入\",{\"1\":{\"24\":1}}],[\"即同一段内存\",{\"1\":{\"15\":1}}],[\"即\",{\"1\":{\"14\":4,\"20\":1,\"25\":1,\"237\":1,\"262\":1,\"377\":1}}],[\"即字符串的编码方法是确定的\",{\"1\":{\"13\":1}}],[\"即有\",{\"1\":{\"12\":1}}],[\"p=5\",{\"1\":{\"623\":1}}],[\"ppt\",{\"1\":{\"464\":1}}],[\"ppro\",{\"1\":{\"360\":1}}],[\"px\",{\"1\":{\"380\":1}}],[\"pdf\",{\"1\":{\"387\":3,\"439\":3}}],[\"pdf文档\",{\"1\":{\"380\":1}}],[\"pdf这样的参考文档\",{\"1\":{\"377\":1}}],[\"playerinfopara\",{\"1\":{\"612\":1}}],[\"playerinfo\",{\"1\":{\"612\":2}}],[\"player\",{\"1\":{\"612\":6}}],[\"playerdebugmode\",{\"1\":{\"360\":3,\"361\":2}}],[\"platform\",{\"1\":{\"501\":2}}],[\"plus\",{\"1\":{\"442\":1,\"453\":1}}],[\"plug\",{\"1\":{\"391\":5}}],[\"pluginsconfig\",{\"1\":{\"442\":1,\"453\":1,\"454\":1}}],[\"plugins\",{\"1\":{\"442\":1,\"447\":1,\"449\":1,\"450\":1,\"451\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1}}],[\"pluginsdk\",{\"1\":{\"393\":1}}],[\"plugin是mac上用的\",{\"1\":{\"391\":1}}],[\"plugin是pinus\",{\"1\":{\"256\":1}}],[\"plugin\",{\"0\":{\"256\":1},\"1\":{\"180\":1,\"261\":1,\"391\":1,\"454\":1,\"461\":1}}],[\"plumber\",{\"1\":{\"319\":3}}],[\"p>\",{\"1\":{\"357\":1}}],[\"phxs\",{\"1\":{\"356\":2,\"360\":1,\"365\":1}}],[\"phsp\",{\"1\":{\"356\":2,\"360\":1,\"365\":1}}],[\"photoshopinfo>\",{\"1\":{\"401\":1}}],[\"photoshop对象树\",{\"0\":{\"400\":1}}],[\"photoshopapi\",{\"1\":{\"393\":1}}],[\"photoshop\",{\"1\":{\"352\":2,\"356\":1,\"360\":1,\"370\":2,\"376\":1,\"377\":4,\"387\":2,\"389\":2,\"393\":1,\"395\":3,\"400\":3}}],[\"php\",{\"1\":{\"65\":2}}],[\"pwa\",{\"1\":{\"350\":1,\"356\":1}}],[\"pwd\",{\"1\":{\"97\":1}}],[\"pass\",{\"1\":{\"619\":1}}],[\"password\",{\"1\":{\"233\":4}}],[\"page\",{\"1\":{\"412\":1,\"454\":3}}],[\"pattern\",{\"1\":{\"356\":1}}],[\"pathfinding2040×1056\",{\"1\":{\"480\":1}}],[\"pathcomponentselecttool\",{\"1\":{\"389\":1}}],[\"pathitems操作路径等内容\",{\"1\":{\"377\":1}}],[\"pathmapping\",{\"1\":{\"370\":1}}],[\"path=$\",{\"1\":{\"293\":1}}],[\"path\",{\"1\":{\"261\":1,\"293\":1,\"298\":1,\"382\":1,\"400\":1}}],[\"paths\",{\"1\":{\"137\":1}}],[\"panels\",{\"1\":{\"382\":1}}],[\"panel\",{\"1\":{\"356\":3,\"365\":1,\"370\":1,\"405\":1}}],[\"padda\",{\"0\":{\"348\":1,\"403\":1},\"1\":{\"348\":2,\"403\":3}}],[\"pauses\",{\"1\":{\"382\":1}}],[\"pause\",{\"1\":{\"343\":1}}],[\"package类型\",{\"1\":{\"222\":1}}],[\"package分为header和body两部分\",{\"1\":{\"222\":1}}],[\"package分为控制包和数据包两种类型\",{\"1\":{\"221\":1}}],[\"package格式\",{\"0\":{\"222\":1}}],[\"package协议主要用来封装在面向连接的二进制流的通讯协议\",{\"1\":{\"221\":1}}],[\"package层不会对body内容做任何处理\",{\"1\":{\"225\":1}}],[\"package层的编码结果可以通过tcp\",{\"1\":{\"221\":1}}],[\"package层主要实现pinus应用基于二进制协议的握手过程\",{\"1\":{\"221\":1}}],[\"package和message\",{\"1\":{\"221\":1}}],[\"package\",{\"0\":{\"221\":1},\"1\":{\"102\":1,\"103\":3,\"222\":1,\"313\":1,\"320\":1,\"324\":1}}],[\"paradox\",{\"1\":{\"523\":1}}],[\"param\",{\"1\":{\"398\":1,\"399\":2}}],[\"parameter>\",{\"1\":{\"356\":3,\"357\":3}}],[\"parameter\",{\"1\":{\"180\":1}}],[\"parameters<typeof\",{\"1\":{\"114\":1}}],[\"parameters\",{\"0\":{\"114\":1}}],[\"part2\",{\"1\":{\"441\":3}}],[\"part1\",{\"1\":{\"441\":3}}],[\"part\",{\"1\":{\"441\":3}}],[\"partial<user>\",{\"1\":{\"105\":1}}],[\"partial\",{\"0\":{\"105\":1}}],[\"parent\",{\"1\":{\"54\":9,\"636\":1}}],[\"parseargs是一个很关键的操作\",{\"1\":{\"262\":1}}],[\"parseargs\",{\"1\":{\"262\":1}}],[\"parse\",{\"1\":{\"45\":1,\"101\":1,\"395\":3}}],[\"python=3\",{\"1\":{\"103\":1}}],[\"python\",{\"0\":{\"647\":1},\"1\":{\"99\":1,\"103\":7,\"636\":1}}],[\"ps插件开发\",{\"0\":{\"653\":1}}],[\"ps的很多设置动作\",{\"1\":{\"410\":1}}],[\"ps官方支持针对一些对象进行json输出\",{\"1\":{\"404\":1}}],[\"ps核心通过动作\",{\"1\":{\"398\":1}}],[\"psd\",{\"1\":{\"392\":1}}],[\"ps底层实现了一整套动作\",{\"1\":{\"390\":1}}],[\"ps加入了action\",{\"1\":{\"390\":1}}],[\"ps提供了多种尺寸单位\",{\"1\":{\"380\":1}}],[\"ps在后面预留了一个图层index\",{\"1\":{\"378\":1}}],[\"ps版本\",{\"1\":{\"360\":1}}],[\"ps1\",{\"1\":{\"291\":1}}],[\"ps1文件\",{\"1\":{\"291\":1}}],[\"pstree\",{\"1\":{\"262\":1}}],[\"ps\",{\"1\":{\"99\":1,\"262\":1,\"351\":2,\"353\":1,\"356\":9,\"357\":1,\"358\":3,\"359\":1,\"361\":1,\"365\":1,\"366\":1,\"370\":1,\"373\":1,\"382\":1,\"530\":1}}],[\"pistringterminology\",{\"1\":{\"393\":3}}],[\"pid\",{\"1\":{\"187\":1,\"232\":1}}],[\"pinus提供的命令行工具\",{\"1\":{\"273\":1}}],[\"pinus提供了一个管理框架\",{\"1\":{\"273\":1}}],[\"pinus管理框架\",{\"0\":{\"273\":1}}],[\"pinus并没有实现固定的监控模块\",{\"1\":{\"272\":1}}],[\"pinus自带的component如下\",{\"1\":{\"271\":1}}],[\"pinus应用的整个流程实际就是对其所加载的组件的生命周期的管理过程\",{\"1\":{\"262\":1}}],[\"pinus框架类图\",{\"1\":{\"273\":2,\"278\":1,\"282\":1}}],[\"pinus框架总是先顺序地调用所有组件的start方法后\",{\"1\":{\"262\":1}}],[\"pinus框架会使用一个默认的router\",{\"1\":{\"246\":1}}],[\"pinus核心中的module\",{\"1\":{\"262\":1}}],[\"pinus核心提供了两种connector\",{\"1\":{\"221\":1}}],[\"pinus调用createapp\",{\"1\":{\"262\":1}}],[\"pinus还可以加载自定义的插件\",{\"1\":{\"261\":1}}],[\"pinus会默认根据服务器的类型加载不同的组件\",{\"1\":{\"271\":1}}],[\"pinus会默认根据服务器的类型加载不同的内建组件\",{\"1\":{\"261\":1}}],[\"pinus会去自动读取此目录下的handler\",{\"0\":{\"265\":1}}],[\"pinus会使用一个默认的router完成路由\",{\"1\":{\"234\":1}}],[\"pinus会使用一个默认的路由配置\",{\"1\":{\"195\":1}}],[\"pinus默认会使用ssh的方式远程启动相应的服务器\",{\"1\":{\"262\":1}}],[\"pinus默认的路由函数是使用session里面的uid字段\",{\"1\":{\"246\":1}}],[\"pinus默认使用的是direct的方式\",{\"1\":{\"195\":1}}],[\"pinus是通过内建的module\",{\"1\":{\"278\":1}}],[\"pinus是作为监控管理框架的一个客户端的\",{\"1\":{\"233\":1}}],[\"pinus是网易推出的一个基于node\",{\"1\":{\"184\":1}}],[\"pinus消息头是可变的\",{\"1\":{\"226\":1}}],[\"pinusprotocol\",{\"1\":{\"221\":1}}],[\"pinus协议层的结构如下图所示\",{\"1\":{\"221\":1}}],[\"pinus标题的登录页面\",{\"1\":{\"215\":1}}],[\"pinus的管理框架中\",{\"1\":{\"273\":1}}],[\"pinus的核心功能都由其组件提供\",{\"1\":{\"262\":1}}],[\"pinus的核心功能都是由component完成的\",{\"1\":{\"253\":1}}],[\"pinus的createapp调用中会调用app的init方法\",{\"1\":{\"262\":1}}],[\"pinus的配置文件都在game\",{\"1\":{\"261\":1}}],[\"pinus的功能由其component提供\",{\"1\":{\"261\":1}}],[\"pinus的二进制协议包含两层编码\",{\"1\":{\"221\":1}}],[\"pinus的设计人员最初已经考虑到了直接在node后app\",{\"1\":{\"203\":1}}],[\"pinus的运行原理是\",{\"1\":{\"203\":1}}],[\"pinus内建了常见的一些filter\",{\"1\":{\"197\":1}}],[\"pinus中内建实现并使用了console和watchdog这两个admin\",{\"1\":{\"272\":1}}],[\"pinus中有四种消息类型的消息\",{\"1\":{\"249\":1}}],[\"pinus中使用rpc调用进行进程间通信\",{\"1\":{\"245\":1}}],[\"pinus中的channel就是应用这种场景的\",{\"1\":{\"230\":1}}],[\"pinus中的请求处理链\",{\"0\":{\"192\":1}}],[\"pinus中提供了两种方式的pushscheduler\",{\"1\":{\"195\":1}}],[\"pinus\",{\"0\":{\"221\":1},\"1\":{\"185\":1,\"186\":1,\"187\":1,\"188\":3,\"189\":1,\"190\":3,\"192\":1,\"195\":1,\"197\":1,\"202\":1,\"203\":1,\"215\":1,\"222\":1,\"233\":15,\"253\":1,\"257\":3,\"261\":5,\"262\":2,\"267\":4,\"271\":8,\"273\":1,\"282\":1}}],[\"pipe\",{\"1\":{\"169\":1,\"170\":7,\"171\":2,\"319\":3}}],[\"pick<user\",{\"1\":{\"108\":1}}],[\"pick\",{\"0\":{\"83\":1,\"108\":1},\"1\":{\"83\":16}}],[\"pixelsunit\",{\"1\":{\"394\":4,\"395\":2}}],[\"pixels\",{\"1\":{\"26\":1,\"29\":1,\"380\":2,\"444\":1}}],[\"pocket\",{\"1\":{\"442\":2,\"453\":1}}],[\"powershell\",{\"0\":{\"291\":1},\"1\":{\"291\":1}}],[\"pomelo\",{\"0\":{\"236\":1},\"1\":{\"236\":2}}],[\"port等这样的参数\",{\"1\":{\"262\":1}}],[\"port等等都是子服务器的启动参数\",{\"1\":{\"203\":1}}],[\"port不应该省略\",{\"1\":{\"261\":1}}],[\"port则是可以省略的\",{\"1\":{\"261\":1}}],[\"port端口用来给后端提供服务\",{\"1\":{\"242\":1}}],[\"port>\",{\"1\":{\"233\":4}}],[\"port填入刚刚上面指定的端口号\",{\"1\":{\"209\":1}}],[\"port=6050\",{\"1\":{\"262\":1}}],[\"port=8000\",{\"1\":{\"233\":1}}],[\"port=8000++\",{\"1\":{\"233\":1}}],[\"port=\",{\"1\":{\"189\":1,\"365\":2}}],[\"port\",{\"1\":{\"171\":1,\"189\":2,\"218\":1,\"233\":6,\"234\":12,\"239\":2,\"261\":4,\"262\":1,\"266\":2,\"267\":1,\"365\":1,\"370\":2,\"438\":1}}],[\"post\",{\"1\":{\"161\":1}}],[\"post请求四\",{\"1\":{\"161\":1}}],[\"post请求三\",{\"1\":{\"161\":1}}],[\"post请求二\",{\"1\":{\"161\":1}}],[\"post请求一\",{\"1\":{\"161\":1}}],[\"post请求\",{\"1\":{\"161\":1}}],[\"posts\",{\"1\":{\"159\":1,\"362\":1,\"412\":1}}],[\"postman支持获得oauth\",{\"1\":{\"163\":1}}],[\"postman会移除之前的header\",{\"1\":{\"163\":1}}],[\"postman电脑客户端安装\",{\"1\":{\"159\":1}}],[\"postman谷歌浏览器的安装插件\",{\"1\":{\"159\":1}}],[\"postman的oauth\",{\"1\":{\"163\":1}}],[\"postman的基础功能\",{\"0\":{\"160\":1}}],[\"postman的安装方法分好几种\",{\"1\":{\"159\":1}}],[\"postman的操作环境\",{\"0\":{\"158\":1}}],[\"postman安装\",{\"1\":{\"159\":1}}],[\"postman官网下载地址\",{\"1\":{\"159\":1}}],[\"postman下载地址\",{\"1\":{\"159\":1}}],[\"postman下载安装\",{\"0\":{\"159\":1}}],[\"postman中文使用教程\",{\"1\":{\"158\":1}}],[\"postman使用参考文档\",{\"1\":{\"158\":1}}],[\"postman使用详解\",{\"0\":{\"156\":1}}],[\"postman\",{\"1\":{\"158\":2,\"159\":6}}],[\"postman适用于不同的操作系统\",{\"1\":{\"158\":1}}],[\"postman在发送网络http请求方面可以说是chrome插件类产品中的代表产品之一\",{\"1\":{\"157\":1}}],[\"postman背景介绍\",{\"0\":{\"157\":1}}],[\"postmessage\",{\"1\":{\"29\":9,\"30\":1}}],[\"pop\",{\"1\":{\"82\":2}}],[\"pngquant1358×644\",{\"1\":{\"478\":1}}],[\"pngquant\",{\"1\":{\"478\":5}}],[\"png<\",{\"1\":{\"356\":4}}],[\"png\",{\"1\":{\"69\":1,\"89\":1,\"170\":5,\"171\":2,\"319\":1,\"420\":3,\"442\":1,\"478\":2}}],[\"putxxx和getxxx基本是相对应的\",{\"1\":{\"407\":1}}],[\"putproperty\",{\"1\":{\"399\":2,\"400\":2,\"404\":1}}],[\"putpath\",{\"1\":{\"392\":4,\"407\":1}}],[\"putname\",{\"1\":{\"398\":8,\"408\":1,\"410\":1}}],[\"putindex\",{\"1\":{\"399\":2}}],[\"putinteger\",{\"1\":{\"392\":4,\"394\":1,\"398\":1,\"407\":1,\"410\":4}}],[\"putidentifier都在官方文档api里头\",{\"1\":{\"399\":1}}],[\"putidentifier\",{\"1\":{\"393\":2,\"399\":3}}],[\"putunitdouble\",{\"1\":{\"392\":1,\"394\":8,\"395\":4,\"407\":1}}],[\"putstring\",{\"1\":{\"392\":1,\"407\":1,\"408\":3,\"409\":3}}],[\"putobject等\",{\"1\":{\"394\":1}}],[\"putobject\",{\"1\":{\"392\":1,\"394\":4,\"395\":1,\"407\":1,\"408\":3,\"409\":3}}],[\"putlist\",{\"1\":{\"392\":1,\"393\":2,\"398\":1,\"407\":1,\"410\":1}}],[\"putenumerated\",{\"1\":{\"392\":1,\"394\":8,\"395\":3,\"399\":4,\"400\":3,\"402\":1,\"404\":1,\"407\":1,\"408\":2,\"409\":1,\"410\":1}}],[\"putdouble\",{\"1\":{\"392\":1,\"394\":1,\"407\":1}}],[\"putboolean\",{\"1\":{\"389\":2,\"392\":7,\"398\":1,\"407\":1,\"410\":1}}],[\"putreference\",{\"1\":{\"389\":1,\"392\":1,\"393\":2,\"394\":3,\"395\":1,\"398\":1,\"404\":1,\"407\":1,\"408\":2,\"409\":1,\"410\":1}}],[\"putclass\",{\"1\":{\"389\":1,\"392\":1,\"407\":1,\"409\":1}}],[\"pull方式是让master定时给monitor发请求\",{\"1\":{\"272\":1}}],[\"pull\",{\"0\":{\"76\":1},\"1\":{\"76\":5,\"88\":1,\"272\":1,\"274\":1,\"277\":1}}],[\"push的方式则是monitor定时上报自己的信息\",{\"1\":{\"272\":1}}],[\"push是服务端主动给客户端推送消息的类型\",{\"1\":{\"249\":1}}],[\"pushschedulers\",{\"1\":{\"195\":1}}],[\"pushschedulerconfig\",{\"1\":{\"195\":1}}],[\"push\",{\"0\":{\"75\":1,\"249\":1},\"1\":{\"75\":3,\"77\":2,\"80\":1,\"87\":1,\"227\":1,\"230\":2,\"275\":1,\"278\":1}}],[\"pushed\",{\"1\":{\"58\":1}}],[\"publish\",{\"1\":{\"102\":1}}],[\"pub\",{\"1\":{\"69\":1}}],[\"p2\",{\"1\":{\"41\":2,\"44\":2}}],[\"p1\",{\"1\":{\"41\":2,\"44\":2}}],[\"p\",{\"1\":{\"34\":1,\"233\":8,\"365\":1,\"456\":1}}],[\"perfect\",{\"1\":{\"536\":1}}],[\"percentunit\",{\"1\":{\"394\":4,\"395\":2}}],[\"personinstance\",{\"1\":{\"117\":1}}],[\"person>\",{\"1\":{\"115\":1,\"117\":1}}],[\"personconstructorparams\",{\"1\":{\"115\":1}}],[\"person\",{\"1\":{\"112\":1,\"115\":1,\"117\":2}}],[\"perl\",{\"1\":{\"68\":1}}],[\"per\",{\"0\":{\"12\":1},\"1\":{\"12\":11,\"29\":2,\"30\":1}}],[\"prpr\",{\"1\":{\"399\":2,\"404\":1}}],[\"prld\",{\"1\":{\"360\":1}}],[\"prune\",{\"1\":{\"288\":1}}],[\"preview\",{\"1\":{\"608\":1}}],[\"prevent\",{\"1\":{\"292\":1}}],[\"preferencesfolder\",{\"1\":{\"400\":1}}],[\"preferences\",{\"1\":{\"380\":6,\"400\":1}}],[\"predefined\",{\"1\":{\"370\":1}}],[\"predicate\",{\"1\":{\"10\":2}}],[\"prelude\",{\"1\":{\"360\":1}}],[\"prelaunchtask\",{\"1\":{\"344\":1}}],[\"premierepro\",{\"1\":{\"370\":1}}],[\"premiere\",{\"1\":{\"360\":1}}],[\"pretty=online\",{\"1\":{\"84\":1}}],[\"practice\",{\"1\":{\"76\":1}}],[\"primegenerator\",{\"1\":{\"29\":1}}],[\"primes\",{\"1\":{\"29\":3}}],[\"property\",{\"1\":{\"398\":4,\"400\":2,\"408\":2}}],[\"properties\",{\"1\":{\"379\":3,\"398\":2}}],[\"provided\",{\"1\":{\"382\":1,\"392\":2}}],[\"pro\",{\"1\":{\"360\":1,\"451\":1}}],[\"product\",{\"1\":{\"360\":1,\"461\":1}}],[\"production或development|production\",{\"1\":{\"257\":1,\"267\":1}}],[\"production方式启动则是\",{\"1\":{\"236\":1}}],[\"production|development\",{\"1\":{\"234\":1,\"271\":1}}],[\"production环境下\",{\"1\":{\"191\":1}}],[\"production环境背景知识\",{\"0\":{\"191\":1}}],[\"production\",{\"1\":{\"186\":1,\"234\":1,\"236\":1,\"258\":1,\"266\":1,\"268\":1}}],[\"program\",{\"1\":{\"344\":1,\"346\":1,\"353\":2}}],[\"profile\",{\"1\":{\"291\":1,\"293\":2}}],[\"proxy\",{\"1\":{\"271\":3,\"285\":1,\"298\":1}}],[\"proxy组件主要负责生成服务器rpc客户端\",{\"1\":{\"271\":1,\"285\":1}}],[\"proxy组件\",{\"1\":{\"192\":1}}],[\"process\",{\"1\":{\"236\":2}}],[\"processimage\",{\"1\":{\"29\":2}}],[\"probably\",{\"1\":{\"220\":1}}],[\"projecbuilder\",{\"1\":{\"95\":1}}],[\"project\",{\"1\":{\"71\":2,\"95\":1,\"182\":1}}],[\"protocol\",{\"1\":{\"636\":4}}],[\"protobuf组件主要负责解析服务端和客户端的proto\",{\"1\":{\"285\":1}}],[\"protobuf压缩的数据定义\",{\"1\":{\"223\":1}}],[\"protobuf\",{\"1\":{\"223\":1,\"285\":1}}],[\"protos\",{\"1\":{\"223\":2}}],[\"proto和constructor的三角关系\",{\"1\":{\"54\":1}}],[\"proto\",{\"0\":{\"49\":1,\"51\":1},\"1\":{\"50\":8,\"51\":8,\"52\":1,\"53\":4,\"54\":12}}],[\"prototype和\",{\"1\":{\"54\":1}}],[\"prototype属性的作用就是让该函数所实例化的对象们都可以找到公用的属性和方法\",{\"1\":{\"54\":1}}],[\"prototype属性\",{\"0\":{\"52\":1},\"1\":{\"52\":1}}],[\"prototype属性是函数所独有的\",{\"1\":{\"51\":1,\"54\":1}}],[\"prototype\",{\"0\":{\"5\":1,\"6\":1,\"15\":1,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"1\":{\"9\":1,\"10\":22,\"12\":1,\"22\":3,\"50\":2,\"52\":2,\"53\":2,\"54\":4,\"272\":3,\"372\":1}}],[\"promise\",{\"1\":{\"39\":6,\"40\":3,\"41\":7,\"42\":4,\"43\":4,\"44\":5,\"45\":2,\"46\":6}}],[\"还包括了一些相关的\",{\"1\":{\"639\":1}}],[\"还包括运行配置\",{\"1\":{\"210\":1}}],[\"还需要切换不同的引擎分支\",{\"1\":{\"628\":1}}],[\"还需要指定master服务器的ip和port\",{\"1\":{\"233\":1}}],[\"还能看到游戏对细节的刻画\",{\"1\":{\"588\":1}}],[\"还能听见诸如泼水声\",{\"1\":{\"582\":1}}],[\"还能用余光欣赏两边的唯美风景\",{\"1\":{\"575\":1}}],[\"还能顺便学学英语单词hhhh\",{\"1\":{\"572\":1}}],[\"还能在地上滚滚\",{\"1\":{\"563\":1}}],[\"还能够通过其它方式来获取到目标图层对象么\",{\"1\":{\"399\":1}}],[\"还特意注重游戏不同类别元素的融入\",{\"1\":{\"553\":1}}],[\"还很\",{\"1\":{\"539\":1}}],[\"还会再讲到这里\",{\"1\":{\"384\":1}}],[\"还会调用connectionservice上decreaseconnectioncount\",{\"1\":{\"197\":1}}],[\"还会调用coconnection的removelogineduser来减少登录用户\",{\"1\":{\"196\":1}}],[\"还会调用coconnection的addlogineduser来增加用户\",{\"1\":{\"196\":1}}],[\"还提供了一些内置对象来完成一些其它操作\",{\"1\":{\"381\":1}}],[\"还应该把用户原来的设置还原回去\",{\"1\":{\"380\":1}}],[\"还记得前面\",{\"1\":{\"357\":1}}],[\"还具有部分防调试功能\",{\"1\":{\"304\":1}}],[\"还做了一件很重要的工作\",{\"1\":{\"279\":1}}],[\"还有物体发出的声响\",{\"1\":{\"564\":1}}],[\"还有根据不同的手机型号设置不同高度\",{\"1\":{\"502\":1}}],[\"还有许许多多看不到的子对象\",{\"1\":{\"400\":1}}],[\"还有当前选中的文档\",{\"1\":{\"399\":1}}],[\"还有百分比percentunit等\",{\"1\":{\"394\":1}}],[\"还有很多很多其它的操作\",{\"1\":{\"387\":1}}],[\"还有一些socket\",{\"1\":{\"386\":1}}],[\"还有一个可以适配任何模糊算法的方法\",{\"1\":{\"482\":1}}],[\"还有一个小细节\",{\"1\":{\"475\":1}}],[\"还有一个基于web的监控工具pinus\",{\"1\":{\"282\":1}}],[\"还有一个要注意的地方是masterhandler的实现\",{\"1\":{\"272\":1}}],[\"还有监听的socket\",{\"1\":{\"273\":1}}],[\"还有\",{\"1\":{\"273\":1,\"396\":1,\"487\":1}}],[\"还有服务器管理客户端共同完成\",{\"1\":{\"272\":1}}],[\"还以聊天为例\",{\"1\":{\"230\":1}}],[\"还是情侣\",{\"1\":{\"576\":1}}],[\"还是怀念小时候和同学玩双人的时光\",{\"1\":{\"531\":1}}],[\"还是一如既往的优秀\",{\"1\":{\"510\":1}}],[\"还是会导致合批渲染被打断\",{\"1\":{\"467\":1}}],[\"还是国外的各种大佬\",{\"1\":{\"411\":1}}],[\"还是其它\",{\"1\":{\"356\":1}}],[\"还是\",{\"1\":{\"356\":1}}],[\"还是不是周期性的触发\",{\"1\":{\"262\":1}}],[\"还是周期性的由monitor来推\",{\"1\":{\"262\":1}}],[\"还是取消创建\",{\"1\":{\"233\":1}}],[\"还是通过channelservice进行广播\",{\"1\":{\"230\":1}}],[\"还是通过channel发送消息\",{\"1\":{\"230\":1}}],[\"还是继续调试一下吧\",{\"1\":{\"218\":1}}],[\"还是大端字节序\",{\"1\":{\"11\":1}}],[\"还支持postman\",{\"1\":{\"158\":1}}],[\"还原所有的修改\",{\"0\":{\"78\":1}}],[\"还可以看提示和地图\",{\"1\":{\"604\":1}}],[\"还可以调整税金\",{\"1\":{\"582\":1}}],[\"还可以是无界面的面板\",{\"1\":{\"356\":1}}],[\"还可以对整个框架的全局事件作出响应处理\",{\"1\":{\"256\":1}}],[\"还可以给session绑定uid\",{\"1\":{\"247\":1}}],[\"还可以通过不断搜捕不同的动物以增加动物园门票价格\",{\"1\":{\"566\":1}}],[\"还可以通过\",{\"1\":{\"22\":1}}],[\"还可以接受普通数组作为参数\",{\"1\":{\"4\":1}}],[\"赋值运算\",{\"1\":{\"11\":1}}],[\"下次从缓存池中调用符合要求的\",{\"1\":{\"483\":1}}],[\"下篇介绍如何设置这些信息\",{\"1\":{\"397\":1}}],[\"下三篇文章\",{\"1\":{\"389\":1}}],[\"下一任国王将继承遗志重新开始游戏\",{\"1\":{\"574\":1}}],[\"下一篇教程将讨论如何\",{\"1\":{\"362\":1}}],[\"下一步就是enable所有的module\",{\"1\":{\"262\":1}}],[\"下一步\",{\"1\":{\"29\":1,\"262\":1}}],[\"下发对服务器的操作指令\",{\"1\":{\"272\":1}}],[\"下的所有服务器生效\",{\"1\":{\"258\":1,\"268\":1}}],[\"下方窗口中\",{\"1\":{\"215\":1}}],[\"下图只展示了部分比较重要的层级\",{\"1\":{\"471\":1}}],[\"下图是常见的一些模糊算法\",{\"1\":{\"482\":1}}],[\"下图是\",{\"1\":{\"474\":1}}],[\"下图是一个正常的顶点数据\",{\"1\":{\"470\":1}}],[\"下图是它输出的数据结构的样子\",{\"1\":{\"402\":1}}],[\"下图中\",{\"1\":{\"161\":1}}],[\"下图示例中设置了请求方法\",{\"1\":{\"161\":1}}],[\"下载而不是克隆下来的\",{\"1\":{\"636\":1}}],[\"下载或者克隆好\",{\"1\":{\"636\":1}}],[\"下载的图片也能进行合图\",{\"1\":{\"468\":1}}],[\"下载完成后\",{\"1\":{\"461\":1}}],[\"下载\",{\"0\":{\"296\":1}}],[\"下载安装文件\",{\"1\":{\"159\":1}}],[\"下载文件\",{\"1\":{\"97\":1}}],[\"下面\",{\"1\":{\"400\":1}}],[\"下面我给了一个图层列表\",{\"1\":{\"378\":1}}],[\"下面我们先判断它的属性类型\",{\"1\":{\"398\":1}}],[\"下面我们用一个类时序图\",{\"1\":{\"273\":1}}],[\"下面我们将给我们的聊天应用增加一个监控管理模块\",{\"1\":{\"272\":1}}],[\"下面我们将尝试使用pinus的filter机制继续完善我们的聊天应用\",{\"1\":{\"234\":1}}],[\"下面我们从pinus\",{\"1\":{\"262\":1}}],[\"下面我们就正式进入我们的例子\",{\"1\":{\"256\":1}}],[\"下面通过几个示例\",{\"1\":{\"377\":1}}],[\"下面通过类时序图的方式\",{\"1\":{\"192\":1}}],[\"下面继续通过选取典型的用例场景\",{\"1\":{\"278\":1}}],[\"下面会对pinus内建的两个module做一些分析\",{\"1\":{\"278\":1}}],[\"下面会有详细分析\",{\"1\":{\"227\":1}}],[\"下面展示了监控框架相关的类图\",{\"1\":{\"273\":1}}],[\"下面展示了其调用顺序\",{\"1\":{\"262\":1}}],[\"下面将对此进行介绍\",{\"1\":{\"273\":1}}],[\"下面主要分析master组件在启动中的作用\",{\"1\":{\"262\":1}}],[\"下面就对这些框架配置作些介绍\",{\"1\":{\"261\":1}}],[\"下面再说backendsession\",{\"1\":{\"247\":1}}],[\"下面介绍一下这几个fitler\",{\"1\":{\"197\":1}}],[\"下面的是对于传统的高斯模糊与\",{\"1\":{\"482\":1}}],[\"下面的几个地方会自动更新\",{\"1\":{\"461\":1}}],[\"下面的代码\",{\"1\":{\"393\":1}}],[\"下面的例子我们遍历document的一级图层打印图层信息\",{\"1\":{\"378\":1}}],[\"下面的叙述中将对这些术语不加区分的混用\",{\"1\":{\"273\":1}}],[\"下面的叙述中将不加区分地使用monitor与应用服务器\",{\"1\":{\"272\":1}}],[\"下面的stop命令和kill命令均需要使用用户名和口令验证\",{\"1\":{\"233\":1}}],[\"下面的host写本地127\",{\"1\":{\"209\":1}}],[\"下面的类图粗略地展示了这些类之间的关系\",{\"1\":{\"192\":1}}],[\"下面的函数可以用来判断\",{\"1\":{\"11\":1}}],[\"下面以处理\",{\"1\":{\"29\":2}}],[\"下面三种方法都会生成同样一个\",{\"1\":{\"21\":1}}],[\"下面是adobe官方给出的一段针对这个语言的介绍\",{\"1\":{\"376\":1}}],[\"下面是\",{\"1\":{\"30\":1}}],[\"下面是一个例子\",{\"1\":{\"29\":1}}],[\"下面是另一个例子\",{\"1\":{\"11\":1,\"29\":1,\"30\":1}}],[\"下面是其中的几个\",{\"1\":{\"3\":1}}],[\"下文会详细介绍\",{\"1\":{\"11\":1}}],[\"储存顺序就是\",{\"1\":{\"11\":2}}],[\"进化之地1\",{\"0\":{\"553\":1}}],[\"进程\",{\"1\":{\"343\":1}}],[\"进入里面检查是否还有人在\",{\"1\":{\"564\":1}}],[\"进入用户目录\",{\"1\":{\"292\":1,\"293\":1}}],[\"进入该环境后\",{\"1\":{\"103\":1}}],[\"进入c\",{\"1\":{\"94\":1}}],[\"进入下一个\",{\"1\":{\"83\":1}}],[\"进行修改然后编译\",{\"0\":{\"633\":1}}],[\"进行递归遍历\",{\"1\":{\"406\":1}}],[\"进行展开介绍\",{\"1\":{\"398\":1}}],[\"进行jsx脚本的单步调试\",{\"1\":{\"346\":1}}],[\"进行创建\",{\"1\":{\"247\":1}}],[\"进行一些初始化的数据交换\",{\"1\":{\"223\":1}}],[\"进行位运算\",{\"1\":{\"33\":3}}],[\"进行图像变形\",{\"1\":{\"29\":1}}],[\"进行否运算以后\",{\"1\":{\"14\":1}}],[\"进行操作\",{\"1\":{\"1\":1}}],[\"进制数\",{\"1\":{\"11\":1}}],[\"段\",{\"1\":{\"11\":1}}],[\"则需要在生成自定义模拟器之前先在\",{\"1\":{\"638\":1}}],[\"则可以通过查看scriptlistener的代码输出\",{\"1\":{\"395\":1}}],[\"则可以读出完全不一样的结果\",{\"1\":{\"11\":1}}],[\"则新建一个文件\",{\"1\":{\"293\":1}}],[\"则认为其配置了周期性监控操作\",{\"1\":{\"274\":1}}],[\"则包含了全部的应用服务器参数\",{\"1\":{\"262\":1}}],[\"则后来的连接将会被connector拒绝\",{\"1\":{\"261\":1}}],[\"则是必需的\",{\"1\":{\"261\":1}}],[\"则默认为false\",{\"1\":{\"261\":1}}],[\"则默认到原\",{\"1\":{\"6\":1}}],[\"则会回调start\",{\"1\":{\"275\":1}}],[\"则会根据应用服务器的配置不同\",{\"1\":{\"262\":1}}],[\"则会先检查\",{\"1\":{\"236\":1}}],[\"则会关闭特定的服务器\",{\"1\":{\"233\":1}}],[\"则会引发超时警告\",{\"1\":{\"199\":1}}],[\"则会禁用自动引入\",{\"1\":{\"137\":1}}],[\"则调用next\",{\"1\":{\"197\":1}}],[\"则各服务器需支持ssh\",{\"1\":{\"191\":1}}],[\"则自动创建\",{\"1\":{\"169\":1}}],[\"则不引用任何文件\",{\"1\":{\"137\":1}}],[\"则执行\",{\"1\":{\"76\":1}}],[\"则直接执行\",{\"1\":{\"76\":1}}],[\"则相对于项目根目录\",{\"1\":{\"64\":1}}],[\"则它匹配相对于当前\",{\"1\":{\"64\":1}}],[\"则使用默认url\",{\"1\":{\"298\":2}}],[\"则使用\",{\"1\":{\"64\":1,\"628\":1}}],[\"则继续往上找\",{\"1\":{\"51\":1}}],[\"则继续往父对象的\",{\"1\":{\"51\":1}}],[\"<链接地址>\",{\"1\":{\"418\":1}}],[\"<img\",{\"1\":{\"420\":1}}],[\"<integer\",{\"1\":{\"401\":6}}],[\"<item>value<\",{\"1\":{\"385\":1}}],[\"<icon\",{\"1\":{\"356\":4}}],[\"<icons>\",{\"1\":{\"356\":1}}],[\"<div\",{\"1\":{\"357\":1}}],[\"<dispatchinfo>\",{\"1\":{\"356\":1}}],[\"<dispatchinfolist>\",{\"1\":{\"356\":1}}],[\"<title>cep\",{\"1\":{\"357\":1}}],[\"<type>panel<\",{\"1\":{\"356\":1}}],[\"<width>600<\",{\"1\":{\"356\":1}}],[\"<width>280<\",{\"1\":{\"356\":2}}],[\"<geometry>\",{\"1\":{\"356\":1}}],[\"<git\",{\"1\":{\"71\":3,\"72\":4}}],[\"<meta\",{\"1\":{\"357\":3}}],[\"<menu>hello\",{\"1\":{\"356\":1}}],[\"<minsize>\",{\"1\":{\"356\":1}}],[\"<maxsize>\",{\"1\":{\"356\":1}}],[\"<mainpath>\",{\"1\":{\"356\":1,\"357\":1}}],[\"<master\",{\"1\":{\"233\":8}}],[\"<urlopen\",{\"1\":{\"636\":2}}],[\"<ui>\",{\"1\":{\"356\":1}}],[\"<username>\",{\"1\":{\"233\":4,\"355\":1}}],[\"<actiondescriptor\",{\"1\":{\"401\":2}}],[\"<autovisible>true<\",{\"1\":{\"356\":1}}],[\"<args>\",{\"1\":{\"197\":1}}],[\"<link\",{\"1\":{\"357\":1}}],[\"<lifecycle>\",{\"1\":{\"356\":1}}],[\"<locale\",{\"1\":{\"356\":1}}],[\"<localelist>\",{\"1\":{\"356\":1}}],[\"<cefcommandline>\",{\"1\":{\"356\":1,\"357\":1}}],[\"<code\",{\"1\":{\"233\":2}}],[\"<commit\",{\"1\":{\"80\":3,\"81\":1}}],[\"<string\",{\"1\":{\"401\":2}}],[\"<script>\",{\"1\":{\"357\":1}}],[\"<scriptpath>\",{\"1\":{\"356\":1,\"357\":1}}],[\"<span\",{\"1\":{\"357\":1}}],[\"<size>\",{\"1\":{\"356\":1}}],[\"<session\",{\"1\":{\"247\":3}}],[\"<servertype>\",{\"1\":{\"257\":1}}],[\"<server\",{\"1\":{\"233\":1}}],[\"<serverids>\",{\"1\":{\"233\":1}}],[\"<root>\",{\"1\":{\"385\":1}}],[\"<resources>\",{\"1\":{\"356\":1,\"357\":1}}],[\"<requiredruntime\",{\"1\":{\"356\":1}}],[\"<requiredruntimelist>\",{\"1\":{\"356\":1}}],[\"<raw\",{\"1\":{\"247\":1}}],[\"<head>\",{\"1\":{\"357\":1}}],[\"<height>4000<\",{\"1\":{\"356\":1}}],[\"<height>611<\",{\"1\":{\"356\":2}}],[\"<html\",{\"1\":{\"357\":1}}],[\"<host\",{\"1\":{\"356\":2,\"365\":2}}],[\"<hostlist>\",{\"1\":{\"356\":1,\"365\":1}}],[\"<handler\",{\"1\":{\"197\":1}}],[\"<用户名>\",{\"1\":{\"354\":1}}],[\"<node\",{\"1\":{\"344\":1}}],[\"<name>\",{\"1\":{\"288\":1}}],[\"<version>\",{\"1\":{\"288\":2}}],[\"<var>\",{\"1\":{\"130\":1}}],[\"<button\",{\"1\":{\"357\":1}}],[\"<boolean\",{\"1\":{\"401\":6}}],[\"<body>\",{\"1\":{\"357\":1}}],[\"<bound\",{\"1\":{\"247\":2}}],[\"<basepath>\",{\"1\":{\"262\":3}}],[\"<photoshopinfo>\",{\"1\":{\"401\":1}}],[\"<p>当前图层名称为\",{\"1\":{\"357\":1}}],[\"<plugin\",{\"1\":{\"261\":1}}],[\"<plugin>\",{\"1\":{\"261\":1}}],[\"<parameter>\",{\"1\":{\"356\":3,\"357\":3}}],[\"<password>\",{\"1\":{\"233\":4}}],[\"<path\",{\"1\":{\"197\":1}}],[\"<==>\",{\"1\":{\"258\":1}}],[\"<key\",{\"1\":{\"247\":2}}],[\"<frontend\",{\"1\":{\"247\":2}}],[\"<filtername>\",{\"1\":{\"197\":1}}],[\"<file>\",{\"1\":{\"77\":1}}],[\"<executionenvironment>\",{\"1\":{\"356\":1}}],[\"<extension\",{\"1\":{\"356\":2,\"365\":1}}],[\"<extensionlist>\",{\"1\":{\"356\":1,\"365\":1}}],[\"<extensionmanifest\",{\"1\":{\"356\":1}}],[\"<env>\",{\"1\":{\"233\":1,\"257\":1}}],[\"<errorhandler\",{\"1\":{\"197\":1}}],[\"<分支名2>\",{\"1\":{\"85\":1}}],[\"<分支名1>\",{\"1\":{\"85\":1}}],[\"<分支名>\",{\"1\":{\"76\":1,\"86\":1}}],[\"<远程主机名>\",{\"1\":{\"76\":1,\"86\":1}}],[\"<\",{\"1\":{\"11\":2,\"13\":3,\"29\":2,\"30\":2,\"31\":1,\"246\":2,\"333\":2,\"334\":1,\"356\":46,\"357\":13,\"365\":8,\"370\":1,\"372\":2,\"385\":1,\"401\":4}}],[\"另类拼图游戏\",{\"1\":{\"608\":1}}],[\"另\",{\"1\":{\"389\":1}}],[\"另外我们也建议程序多了解一下图片格式以及其原理\",{\"1\":{\"478\":1}}],[\"另外我也会把一些常用的代码片段通过这种方式保存起来\",{\"1\":{\"348\":1}}],[\"另外一方面set部分会用到get讲的数据结构\",{\"1\":{\"397\":1}}],[\"另外用户可以根据应用的需要自定义filter\",{\"1\":{\"261\":1,\"271\":1}}],[\"另外用户可以根据应用需求自定义组件\",{\"1\":{\"261\":1,\"271\":1}}],[\"另外也可以选择在具体的服务器中进行应用的配置\",{\"1\":{\"261\":1,\"271\":1}}],[\"另外\",{\"1\":{\"10\":1,\"32\":1,\"261\":1,\"267\":1,\"467\":1,\"477\":1,\"482\":1,\"628\":1}}],[\"另一种是\",{\"1\":{\"8\":1}}],[\"另一种\",{\"1\":{\"4\":1}}],[\"77\",{\"0\":{\"582\":1}}],[\"7777\",{\"1\":{\"370\":1}}],[\"76\",{\"0\":{\"581\":1}}],[\"74\",{\"0\":{\"579\":1}}],[\"73\",{\"0\":{\"578\":1}}],[\"7种常规与4种特殊的瘟疫类型对应着不同的基因树\",{\"1\":{\"522\":1}}],[\"79\",{\"0\":{\"584\":1},\"1\":{\"487\":1,\"550\":1}}],[\"79353632\",{\"1\":{\"159\":1}}],[\"71\",{\"0\":{\"576\":1},\"1\":{\"469\":1}}],[\"75\",{\"0\":{\"580\":1},\"1\":{\"308\":2,\"311\":2,\"312\":1,\"523\":1}}],[\"70\",{\"0\":{\"575\":1},\"1\":{\"380\":1}}],[\"7020\",{\"1\":{\"293\":1}}],[\"7001\",{\"1\":{\"190\":1}}],[\"7及以前的版本中\",{\"1\":{\"233\":1}}],[\"727952266\",{\"1\":{\"505\":1,\"608\":1}}],[\"72\",{\"0\":{\"577\":1},\"1\":{\"50\":1}}],[\"78563412\",{\"1\":{\"11\":1}}],[\"78\",{\"0\":{\"583\":1},\"1\":{\"11\":1,\"470\":1,\"522\":1}}],[\"7\",{\"0\":{\"455\":1,\"512\":1},\"1\":{\"10\":1,\"11\":3,\"13\":1,\"21\":2,\"27\":1,\"356\":4,\"360\":2,\"378\":2,\"401\":2,\"487\":2,\"501\":2,\"639\":1}}],[\"6nvauftcucmg\",{\"1\":{\"627\":1}}],[\"67\",{\"0\":{\"572\":1}}],[\"63\",{\"0\":{\"568\":1}}],[\"6379\",{\"1\":{\"261\":1}}],[\"62\",{\"0\":{\"567\":1}}],[\"68\",{\"0\":{\"573\":1},\"1\":{\"535\":1}}],[\"68去购买\",{\"1\":{\"518\":1}}],[\"66去购买\",{\"1\":{\"527\":1}}],[\"66\",{\"0\":{\"571\":1},\"1\":{\"478\":1}}],[\"666\",{\"1\":{\"454\":2}}],[\"65\",{\"0\":{\"570\":1},\"1\":{\"477\":1}}],[\"69\",{\"0\":{\"574\":1},\"1\":{\"474\":1}}],[\"60\",{\"0\":{\"565\":1},\"1\":{\"465\":1,\"482\":1}}],[\"600+m\",{\"1\":{\"465\":1,\"476\":1}}],[\"6052\",{\"1\":{\"234\":2}}],[\"6051\",{\"1\":{\"234\":2}}],[\"6050\",{\"1\":{\"234\":2}}],[\"6加入的全新的扩展机制\",{\"1\":{\"256\":1}}],[\"61\",{\"0\":{\"566\":1},\"1\":{\"217\":2,\"218\":1,\"219\":1,\"482\":1}}],[\"6\",{\"0\":{\"335\":1,\"454\":1,\"511\":1},\"1\":{\"10\":1,\"11\":4,\"13\":1,\"16\":1,\"22\":1,\"27\":1,\"29\":1,\"89\":1,\"353\":1,\"360\":2,\"378\":4,\"461\":2,\"488\":1,\"489\":1}}],[\"64位的平板\",{\"1\":{\"461\":1}}],[\"64\",{\"0\":{\"569\":1},\"1\":{\"3\":1,\"8\":1,\"9\":1,\"15\":1,\"23\":1,\"24\":1,\"382\":1,\"461\":1}}],[\"right\",{\"1\":{\"501\":1}}],[\"rid进行hash处理从而完成服务器选择\",{\"1\":{\"261\":1,\"271\":1}}],[\"rid\",{\"1\":{\"234\":1,\"261\":1,\"271\":1}}],[\"ruark针对此写了一个非常有价值的插件scriptlistener\",{\"1\":{\"390\":1}}],[\"rulerunits\",{\"1\":{\"380\":3}}],[\"rulerunit\",{\"1\":{\"380\":2}}],[\"rulers\",{\"1\":{\"380\":2}}],[\"rush\",{\"1\":{\"360\":2}}],[\"runoob\",{\"1\":{\"418\":5,\"420\":9}}],[\"running\",{\"1\":{\"402\":1}}],[\"runs\",{\"1\":{\"382\":1}}],[\"runtime\",{\"1\":{\"382\":1,\"628\":1,\"639\":1,\"641\":2}}],[\"run\",{\"1\":{\"65\":2,\"102\":1,\"370\":1}}],[\"rc4\",{\"1\":{\"310\":1}}],[\"rc4对stringarray影响的所有字符串文本进行编码\",{\"1\":{\"307\":1}}],[\"rpcdebuglog\",{\"1\":{\"261\":4}}],[\"rpc调用\",{\"0\":{\"245\":1},\"1\":{\"245\":1}}],[\"rpc调用时\",{\"1\":{\"195\":1}}],[\"rpc给相应的后端rpc\",{\"1\":{\"195\":1}}],[\"roomtype\",{\"1\":{\"612\":1}}],[\"roomname\",{\"1\":{\"612\":1}}],[\"roombroadcasthandler\",{\"1\":{\"612\":2}}],[\"roominfo\",{\"1\":{\"612\":1}}],[\"room\",{\"1\":{\"509\":1,\"612\":15}}],[\"root>\",{\"1\":{\"385\":1}}],[\"rootname\",{\"1\":{\"171\":1}}],[\"root\",{\"1\":{\"171\":1,\"180\":1,\"298\":1,\"352\":1,\"353\":1,\"385\":1}}],[\"ro\",{\"1\":{\"461\":1}}],[\"rollover\",{\"1\":{\"356\":1}}],[\"role\",{\"1\":{\"180\":1}}],[\"rotatestringarray\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"roaming\",{\"1\":{\"294\":1,\"354\":1,\"355\":1}}],[\"routescripts1666×706\",{\"1\":{\"488\":1}}],[\"route1328×724\",{\"1\":{\"488\":1}}],[\"routeutil\",{\"1\":{\"261\":4,\"271\":7}}],[\"route用来标识一个具体服务或者客户端接受服务端推送消息的位置\",{\"1\":{\"246\":1}}],[\"router主要负责路由信息的维护\",{\"1\":{\"271\":1}}],[\"router主要负责请求路由信息的维护\",{\"1\":{\"261\":1}}],[\"router\",{\"0\":{\"246\":1}}],[\"route字段的编码会依赖flag的这一位\",{\"1\":{\"229\":1}}],[\"route字段压缩的映射表\",{\"1\":{\"223\":1}}],[\"route通过系统生成和用户自定义的字典进行压缩\",{\"1\":{\"229\":1}}],[\"route主要分为压缩和未压缩两种\",{\"1\":{\"229\":1}}],[\"route压缩标志位\",{\"0\":{\"229\":1},\"1\":{\"229\":1}}],[\"route则根据消息类型以及内容的大小\",{\"1\":{\"226\":1}}],[\"route为空\",{\"1\":{\"226\":1}}],[\"route\",{\"0\":{\"246\":1},\"1\":{\"223\":1,\"226\":1,\"234\":2,\"257\":1,\"261\":2,\"271\":4}}],[\"route调用配置个路由等\",{\"1\":{\"262\":1}}],[\"route调用\",{\"1\":{\"195\":1,\"262\":1}}],[\"rz\",{\"1\":{\"97\":1}}],[\"rm\",{\"1\":{\"97\":2}}],[\"r\",{\"1\":{\"87\":1,\"97\":1,\"331\":1,\"341\":2,\"361\":1,\"385\":1}}],[\"rsa建议采用1024位的数字\",{\"1\":{\"154\":1}}],[\"rsa\",{\"0\":{\"148\":1},\"1\":{\"69\":2,\"148\":1}}],[\"random\",{\"1\":{\"613\":1}}],[\"randomutil\",{\"1\":{\"613\":2}}],[\"range1812×1020\",{\"1\":{\"479\":1}}],[\"rangeerror\",{\"1\":{\"9\":1}}],[\"raw\",{\"1\":{\"356\":2}}],[\"race\",{\"1\":{\"42\":1,\"44\":2,\"46\":1,\"47\":1}}],[\"redirect\",{\"1\":{\"625\":1,\"626\":1}}],[\"reduceright\",{\"1\":{\"10\":1}}],[\"reduce\",{\"1\":{\"10\":1}}],[\"renderer\",{\"1\":{\"487\":1}}],[\"rendertexture\",{\"0\":{\"483\":1},\"1\":{\"482\":1,\"483\":3}}],[\"renameglobals\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"rename\",{\"1\":{\"171\":1}}],[\"repository\",{\"1\":{\"636\":1}}],[\"repo\",{\"1\":{\"442\":1,\"628\":1}}],[\"replace\",{\"1\":{\"238\":1}}],[\"regular\",{\"1\":{\"409\":1}}],[\"regedit\",{\"1\":{\"361\":1}}],[\"register\",{\"1\":{\"341\":2}}],[\"register事件\",{\"1\":{\"279\":1}}],[\"registeradmin的时候传入的\",{\"1\":{\"274\":1}}],[\"registeradmin的时候再指定moduleid也是可以的\",{\"1\":{\"272\":1}}],[\"registeradmin调用\",{\"1\":{\"272\":1}}],[\"registeradmin\",{\"1\":{\"261\":2,\"272\":1}}],[\"registry\",{\"1\":{\"102\":3,\"329\":1,\"331\":5,\"333\":3,\"334\":1}}],[\"ref11\",{\"1\":{\"394\":3}}],[\"ref1\",{\"1\":{\"389\":3,\"393\":6,\"394\":6,\"395\":3,\"398\":23,\"399\":27,\"400\":11,\"408\":10,\"409\":6,\"410\":3}}],[\"ref\",{\"1\":{\"377\":1,\"387\":1,\"402\":3}}],[\"referencetype\",{\"1\":{\"398\":1}}],[\"reference\",{\"1\":{\"370\":1,\"377\":2,\"398\":1,\"402\":1}}],[\"refreshbtn\",{\"1\":{\"357\":2}}],[\"refresh\",{\"1\":{\"357\":5}}],[\"reflog显示出版本索引hash值\",{\"1\":{\"84\":1}}],[\"reflog\",{\"1\":{\"84\":1}}],[\"release\",{\"1\":{\"628\":3}}],[\"releases\",{\"1\":{\"296\":1,\"461\":1}}],[\"rel=\",{\"1\":{\"357\":1}}],[\"reload\",{\"1\":{\"171\":1}}],[\"rebuilder\",{\"1\":{\"180\":1}}],[\"rebase\",{\"1\":{\"76\":2}}],[\"recent\",{\"1\":{\"636\":2}}],[\"receive\",{\"1\":{\"27\":1}}],[\"rect\",{\"1\":{\"500\":3,\"501\":6}}],[\"rectangle\",{\"1\":{\"398\":8}}],[\"reconnect事件\",{\"1\":{\"279\":1}}],[\"record<fruit\",{\"1\":{\"109\":1}}],[\"record\",{\"0\":{\"109\":1}}],[\"revert\",{\"0\":{\"81\":1},\"1\":{\"81\":2}}],[\"reverse\",{\"1\":{\"10\":1}}],[\"removeserver删除相应的服务器\",{\"1\":{\"281\":1}}],[\"removecomments\",{\"1\":{\"137\":1}}],[\"remove\",{\"1\":{\"72\":1,\"103\":1,\"238\":2}}],[\"remoteconfig\",{\"1\":{\"271\":1}}],[\"remote组件主要负责加载后端服务器的服务并生成服务器rpc服务端\",{\"1\":{\"271\":1,\"285\":1}}],[\"remote组件等\",{\"1\":{\"192\":1}}],[\"remoteaddress\",{\"1\":{\"239\":2}}],[\"remote\",{\"0\":{\"72\":1,\"265\":1},\"1\":{\"70\":1,\"72\":6,\"87\":1,\"209\":1,\"220\":1,\"271\":3,\"285\":1,\"288\":1,\"365\":1,\"366\":4,\"367\":2}}],[\"react\",{\"1\":{\"137\":1,\"358\":1,\"366\":1}}],[\"reason\",{\"1\":{\"43\":2}}],[\"ready\",{\"1\":{\"636\":2}}],[\"readystate\",{\"1\":{\"25\":1}}],[\"read\",{\"1\":{\"247\":2,\"379\":2,\"382\":1,\"385\":1}}],[\"readonly<user>\",{\"1\":{\"107\":1}}],[\"readonly\",{\"0\":{\"107\":1},\"1\":{\"107\":3,\"247\":6,\"392\":2}}],[\"readme\",{\"1\":{\"58\":1,\"436\":2,\"441\":6,\"442\":3}}],[\"readasarraybuffer\",{\"1\":{\"29\":3}}],[\"reader\",{\"1\":{\"29\":11}}],[\"reject\",{\"1\":{\"40\":1,\"43\":1,\"44\":1,\"47\":1}}],[\"rejected\",{\"1\":{\"40\":1,\"43\":4}}],[\"request\",{\"0\":{\"249\":1},\"1\":{\"192\":1,\"223\":1,\"227\":1,\"344\":1,\"346\":1,\"370\":4}}],[\"requires\",{\"1\":{\"491\":1}}],[\"requiredruntimelist>\",{\"1\":{\"356\":1}}],[\"required<user>\",{\"1\":{\"106\":1}}],[\"required\",{\"0\":{\"106\":1},\"1\":{\"352\":1}}],[\"require\",{\"1\":{\"101\":1,\"169\":1,\"171\":1,\"197\":1,\"257\":1,\"261\":2,\"267\":1,\"271\":2,\"272\":1,\"319\":3}}],[\"req\",{\"1\":{\"25\":1}}],[\"returns\",{\"1\":{\"382\":1}}],[\"returntype<typeof\",{\"1\":{\"116\":1}}],[\"returntype\",{\"0\":{\"116\":1}}],[\"return\",{\"1\":{\"10\":1,\"11\":2,\"13\":3,\"24\":1,\"28\":1,\"56\":1,\"116\":1,\"170\":7,\"171\":1,\"234\":2,\"261\":3,\"271\":1,\"272\":2,\"319\":1,\"357\":1,\"358\":2,\"372\":1,\"392\":1,\"398\":2,\"399\":4,\"500\":1,\"612\":2}}],[\"resources\",{\"1\":{\"356\":1,\"640\":1}}],[\"resources>\",{\"1\":{\"356\":1,\"357\":1}}],[\"resolved\",{\"1\":{\"43\":2}}],[\"resolve\",{\"1\":{\"39\":1,\"41\":3,\"42\":4,\"43\":1,\"44\":2,\"47\":1,\"261\":1}}],[\"res又来自connectors\",{\"1\":{\"218\":1}}],[\"res\",{\"1\":{\"218\":3,\"234\":4}}],[\"resp是前面流程传递过来\",{\"1\":{\"252\":1}}],[\"resp是给客户端的响应\",{\"1\":{\"197\":1}}],[\"resp\",{\"1\":{\"197\":9,\"252\":1}}],[\"response\",{\"0\":{\"249\":1},\"1\":{\"25\":2,\"28\":2,\"223\":2,\"227\":1,\"249\":1}}],[\"responsetype\",{\"1\":{\"25\":3}}],[\"reset\",{\"0\":{\"80\":1},\"1\":{\"79\":2,\"80\":4,\"81\":1,\"84\":3,\"97\":1}}],[\"reserved\",{\"1\":{\"236\":4}}],[\"reserved2\",{\"1\":{\"10\":1}}],[\"reserved1\",{\"1\":{\"10\":1}}],[\"restore\",{\"0\":{\"79\":1},\"1\":{\"79\":1}}],[\"results\",{\"1\":{\"43\":2}}],[\"result\",{\"1\":{\"10\":3,\"29\":3,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"357\":2,\"382\":1}}],[\"resultconstructor\",{\"1\":{\"10\":2}}],[\"mgobe\",{\"1\":{\"612\":18,\"613\":2}}],[\"mb\",{\"1\":{\"469\":1}}],[\"mm\",{\"1\":{\"454\":2}}],[\"md\",{\"1\":{\"436\":4,\"441\":6,\"442\":1,\"443\":1}}],[\"md5\",{\"0\":{\"152\":1}}],[\"m=x12c456\",{\"1\":{\"307\":1}}],[\"m=\",{\"1\":{\"307\":1}}],[\"multitexture\",{\"1\":{\"472\":2}}],[\"multishell\",{\"1\":{\"293\":1}}],[\"multi\",{\"1\":{\"234\":2,\"467\":1}}],[\"multiple\",{\"1\":{\"9\":1}}],[\"msgid=2247485754\",{\"1\":{\"625\":1}}],[\"msg是经过beforefilter链处理过的msg\",{\"1\":{\"197\":1}}],[\"msg\",{\"1\":{\"197\":4,\"234\":2,\"251\":1,\"252\":1,\"255\":3,\"261\":1,\"271\":1,\"272\":8,\"273\":1}}],[\"most\",{\"1\":{\"636\":2}}],[\"mobi\",{\"1\":{\"439\":3}}],[\"mousemove\",{\"1\":{\"367\":2}}],[\"modified\",{\"1\":{\"454\":1}}],[\"mode\",{\"1\":{\"382\":1}}],[\"modeless\",{\"1\":{\"356\":1}}],[\"modaldialog\",{\"1\":{\"356\":2}}],[\"module中关于处理add方法的部分现在已经过时\",{\"1\":{\"282\":1}}],[\"module中一般包括四个回调方法\",{\"1\":{\"272\":1}}],[\"module就是使用了周期拉取\",{\"1\":{\"282\":1}}],[\"module阶段\",{\"1\":{\"277\":1}}],[\"module的monitorhandler被回调\",{\"1\":{\"282\":1}}],[\"module的clienthandler被回调\",{\"1\":{\"282\":1}}],[\"module的导出方式有两种\",{\"1\":{\"274\":1}}],[\"module的用法\",{\"1\":{\"272\":1}}],[\"module可以通过对application调用app\",{\"1\":{\"272\":1}}],[\"module可以实现上报任何我们需要的上报的数据\",{\"1\":{\"272\":1}}],[\"module后\",{\"1\":{\"272\":1}}],[\"moduleid就是console\",{\"1\":{\"282\":1}}],[\"moduleid将使用第一个参数\",{\"1\":{\"272\":1}}],[\"moduleid\",{\"1\":{\"272\":8}}],[\"module上\",{\"1\":{\"272\":1}}],[\"module加载完成后\",{\"1\":{\"272\":1}}],[\"module给master服务器发出关闭服务器请求\",{\"1\":{\"262\":1}}],[\"module特指服务器监控管理模块\",{\"1\":{\"255\":1}}],[\"module\",{\"0\":{\"255\":1},\"1\":{\"127\":1,\"128\":1,\"129\":1,\"137\":1,\"234\":1,\"255\":1,\"261\":2,\"272\":12}}],[\"modules\",{\"1\":{\"124\":1,\"261\":1,\"272\":1,\"454\":1}}],[\"mondo\",{\"1\":{\"382\":1}}],[\"monitor角色\",{\"1\":{\"282\":1}}],[\"monitor会向master发起一个订阅请求\",{\"1\":{\"280\":1}}],[\"monitor会发起到master的连接\",{\"1\":{\"275\":1}}],[\"monitor的启动过程与master基本一致\",{\"1\":{\"275\":1}}],[\"monitor的启动过程与master类似\",{\"1\":{\"275\":1}}],[\"monitor中同样也会使用与master完全相同的方式\",{\"1\":{\"275\":1}}],[\"monitoragent会主动发起连接到master\",{\"1\":{\"273\":1}}],[\"monitorconsoleservice会管理所有已注册的module\",{\"1\":{\"273\":1}}],[\"monitor和client角色\",{\"1\":{\"273\":1}}],[\"monitor组件的启动\",{\"0\":{\"275\":1}}],[\"monitor组件\",{\"1\":{\"273\":1}}],[\"monitor组件主要负责启动各个服务器的monitor服务\",{\"1\":{\"271\":1,\"285\":1}}],[\"monitor向master上报其信息\",{\"1\":{\"273\":1}}],[\"monitor可以认为是所有服务器都加载的monitor组件\",{\"1\":{\"273\":1}}],[\"monitor可以向master上报其进程相关的信息等等\",{\"1\":{\"272\":1}}],[\"monitor给其上报信息\",{\"1\":{\"272\":1}}],[\"monitor负责上报服务器状态\",{\"1\":{\"272\":1}}],[\"monitorhandler会被回调\",{\"1\":{\"281\":1}}],[\"monitorhandler的实现中\",{\"1\":{\"272\":1}}],[\"monitorhandler\",{\"1\":{\"255\":1,\"272\":2}}],[\"monitor运行在各个应用服务器中\",{\"1\":{\"254\":1}}],[\"monitor\",{\"0\":{\"254\":1},\"1\":{\"254\":1,\"261\":1,\"271\":2,\"272\":1,\"273\":1,\"285\":1}}],[\"monkey\",{\"1\":{\"111\":1}}],[\"morebtn\",{\"1\":{\"121\":2}}],[\"mv\",{\"1\":{\"97\":1}}],[\"mkdirp\",{\"1\":{\"327\":1}}],[\"mkdir\",{\"1\":{\"97\":1,\"185\":1,\"355\":1}}],[\"mid=2659671295\",{\"1\":{\"626\":1}}],[\"mill\",{\"1\":{\"523\":1}}],[\"milliseconds\",{\"1\":{\"382\":1}}],[\"microsoft\",{\"1\":{\"131\":1,\"291\":1}}],[\"mirrors\",{\"1\":{\"288\":1}}],[\"mirror=https\",{\"1\":{\"288\":1}}],[\"mirror\",{\"1\":{\"130\":1,\"298\":2}}],[\"mixed\",{\"1\":{\"80\":2,\"84\":1}}],[\"mini\",{\"1\":{\"628\":1}}],[\"miniconda\",{\"1\":{\"103\":2}}],[\"mind\",{\"1\":{\"382\":1}}],[\"minsize>\",{\"1\":{\"356\":1}}],[\"min\",{\"1\":{\"26\":1,\"302\":1}}],[\"memory\",{\"1\":{\"633\":1}}],[\"messenger\",{\"1\":{\"442\":1,\"453\":1}}],[\"message协议的主要作用是封装消息头\",{\"1\":{\"226\":1}}],[\"message层编码可选\",{\"1\":{\"221\":1}}],[\"message层的编码结果将传递给package层\",{\"1\":{\"221\":1}}],[\"message层主要实现route压缩和protobuf压缩\",{\"1\":{\"221\":1}}],[\"message\",{\"1\":{\"27\":1,\"29\":2,\"30\":1,\"31\":1,\"32\":1,\"74\":4,\"82\":1,\"226\":4,\"227\":1,\"228\":1,\"229\":1}}],[\"methods\",{\"1\":{\"379\":1,\"382\":1}}],[\"methodname\",{\"1\":{\"246\":1,\"251\":1}}],[\"menu>\",{\"1\":{\"356\":1}}],[\"media\",{\"1\":{\"356\":1,\"357\":1}}],[\"medium=twitter\",{\"1\":{\"159\":1}}],[\"merge\",{\"1\":{\"76\":1,\"86\":1,\"87\":1}}],[\"m\",{\"1\":{\"74\":7,\"301\":1,\"302\":1}}],[\"mp\",{\"1\":{\"36\":1,\"461\":1,\"616\":1,\"625\":2,\"626\":2,\"627\":1}}],[\"mybook\",{\"1\":{\"439\":3}}],[\"mysql\",{\"1\":{\"261\":5,\"267\":2,\"271\":5}}],[\"myenv\",{\"1\":{\"103\":4}}],[\"my\",{\"1\":{\"71\":2,\"382\":1}}],[\"myworker\",{\"1\":{\"29\":1}}],[\"mycanvas\",{\"1\":{\"26\":1}}],[\"matchplayerspara\",{\"1\":{\"612\":1}}],[\"matchplayers\",{\"1\":{\"612\":1}}],[\"material1358×760\",{\"1\":{\"469\":1}}],[\"material\",{\"1\":{\"469\":1}}],[\"math\",{\"1\":{\"26\":2,\"234\":1}}],[\"makevisible\",{\"1\":{\"398\":1,\"410\":1}}],[\"margin\",{\"1\":{\"357\":1}}],[\"manifest\",{\"1\":{\"350\":2,\"356\":10,\"357\":1,\"358\":1,\"362\":1,\"373\":1}}],[\"manager由于缺乏官方文档\",{\"1\":{\"411\":1}}],[\"manager来从ps中获取数据\",{\"1\":{\"406\":1}}],[\"manager的入门知识\",{\"1\":{\"397\":1}}],[\"manager语法结构\",{\"0\":{\"392\":1}}],[\"manager这样的词\",{\"1\":{\"389\":1}}],[\"manager\",{\"1\":{\"329\":1,\"387\":1,\"389\":2,\"395\":3}}],[\"maser服务器的地址信息以及管理用户信息都可以省略\",{\"1\":{\"233\":1}}],[\"master就可以直接返回其缓存的东西\",{\"1\":{\"282\":1}}],[\"master就已经可以接收来自monitor和client的request和notify了\",{\"1\":{\"274\":1}}],[\"master在收集完所有monitor的响应后\",{\"1\":{\"282\":1}}],[\"master在发出停止通告后\",{\"1\":{\"262\":1}}],[\"master用此来进行校验身份\",{\"1\":{\"282\":1}}],[\"master接受后\",{\"1\":{\"278\":1}}],[\"master需要使用用户名和密码对其进行验证\",{\"1\":{\"276\":1}}],[\"master完成启动\",{\"1\":{\"274\":1}}],[\"master不会向client发出request\",{\"1\":{\"273\":1}}],[\"masteragent监听端口\",{\"1\":{\"273\":1}}],[\"masteragent会创建监听socket\",{\"1\":{\"262\":1}}],[\"master获得这个命令后\",{\"1\":{\"273\":1}}],[\"master获得到信息后进行缓存\",{\"1\":{\"273\":1}}],[\"master将缓存的监控信息返回给client\",{\"1\":{\"273\":1}}],[\"master将这个时间值打印到console\",{\"1\":{\"272\":1}}],[\"master向monitor发出请求某些监控信息\",{\"1\":{\"273\":1}}],[\"master负责收集所有服务器的信息\",{\"1\":{\"272\":1}}],[\"master与master服务器\",{\"1\":{\"272\":1}}],[\"master会向monitor广播此关闭命令\",{\"1\":{\"273\":1}}],[\"master会给每一个服务器发出停止通告\",{\"1\":{\"262\":1}}],[\"master会委托starter来完成整个服务器群的启动\",{\"1\":{\"262\":1}}],[\"masterconsoleservice会发起广播notify到所有的服务器\",{\"1\":{\"281\":1}}],[\"masterconsoleservice会在这个事件处理中\",{\"1\":{\"279\":2}}],[\"masterconsoleservice会在这个事件的处理中\",{\"1\":{\"279\":1}}],[\"masterconsoleservice会enable所有的module\",{\"1\":{\"274\":1}}],[\"masterconsoleservice会管理所有已注册的module\",{\"1\":{\"273\":1}}],[\"masterconsoleservice会从app处拿到所有挂到其上面的module\",{\"1\":{\"262\":1}}],[\"masterconsole会创建masteragent\",{\"1\":{\"262\":1}}],[\"master组件主要负责根据根据servers\",{\"1\":{\"285\":1}}],[\"master组件主要负责启动master服务器\",{\"1\":{\"271\":1,\"285\":1}}],[\"master组件在其start调用的最后才会调用starter\",{\"1\":{\"274\":1}}],[\"master组件的启动\",{\"0\":{\"274\":1}}],[\"master组件的创建过程会创建masterconsole\",{\"1\":{\"262\":1}}],[\"master组件\",{\"1\":{\"273\":1}}],[\"master组件将会监听来自其他服务器的monitor发出的请求或者给其他的monitor推送通知\",{\"1\":{\"262\":1}}],[\"master组件已经开启了请求监听\",{\"1\":{\"262\":1}}],[\"master组件就已经可以接受监控管理请求了\",{\"1\":{\"262\":1}}],[\"master组件会启动masterconsoleservice\",{\"1\":{\"262\":1}}],[\"master组件会注册默认的module\",{\"1\":{\"262\":1}}],[\"master进程与应用程序进程就不会再有父子关系了\",{\"1\":{\"262\":1}}],[\"master还接受admin\",{\"1\":{\"254\":1}}],[\"master运行在应用服务器中\",{\"1\":{\"254\":1}}],[\"master\",{\"0\":{\"254\":1},\"1\":{\"254\":1,\"261\":4,\"271\":2,\"272\":1,\"285\":1,\"356\":1,\"628\":2}}],[\"master服务器总是率先启动\",{\"1\":{\"274\":1}}],[\"master服务器除外\",{\"1\":{\"271\":1,\"285\":1}}],[\"master服务器又启动了所有的应用服务器后\",{\"1\":{\"262\":1}}],[\"master服务器的启动命令行中\",{\"1\":{\"262\":1}}],[\"master服务器的地址会一直是127\",{\"1\":{\"233\":1}}],[\"master服务器已经加载了所有服务器的配置信息\",{\"1\":{\"262\":1}}],[\"master服务器开的端口\",{\"1\":{\"261\":1}}],[\"master服务器加载配置文件\",{\"1\":{\"244\":1}}],[\"master服务器\",{\"0\":{\"244\":1}}],[\"master服务器会读取新的配置\",{\"1\":{\"206\":1}}],[\"masterhandler的回调中会返回所有目前已经启动的服务器的信息给这个新启动的服务器\",{\"1\":{\"280\":1}}],[\"masterhandler会回调\",{\"1\":{\"280\":1}}],[\"masterhandler会在两种情况下被回调\",{\"1\":{\"272\":1}}],[\"masterhandler和clienthandler\",{\"1\":{\"272\":1}}],[\"masterhandler是master收到monitor的请求或者通知时回调\",{\"1\":{\"272\":1}}],[\"masterhandler\",{\"1\":{\"255\":1,\"272\":2,\"273\":1}}],[\"masterha\",{\"1\":{\"232\":1,\"233\":2}}],[\"macintosh\",{\"1\":{\"382\":1}}],[\"machine\",{\"1\":{\"382\":1}}],[\"macos\",{\"1\":{\"165\":1,\"287\":1,\"353\":1,\"354\":1}}],[\"macos安装\",{\"1\":{\"159\":1}}],[\"mac\",{\"0\":{\"360\":1},\"1\":{\"158\":1,\"159\":1,\"352\":2,\"355\":1,\"391\":2,\"511\":1,\"638\":1}}],[\"mainpath\",{\"1\":{\"357\":1}}],[\"mainpath>\",{\"1\":{\"356\":1,\"357\":1}}],[\"main\",{\"1\":{\"30\":1,\"383\":1}}],[\"maxplayers\",{\"1\":{\"612\":1}}],[\"maxxmplimit\",{\"1\":{\"402\":1}}],[\"maxrawlimit\",{\"1\":{\"402\":1}}],[\"maxsize>\",{\"1\":{\"356\":1}}],[\"max\",{\"1\":{\"26\":1,\"261\":1,\"467\":1,\"633\":1}}],[\"map>\",{\"1\":{\"247\":2}}],[\"map\",{\"1\":{\"10\":1,\"22\":2,\"247\":1,\"341\":2,\"345\":3,\"475\":2}}],[\"jid\",{\"1\":{\"626\":1}}],[\"jianshu\",{\"1\":{\"456\":1}}],[\"jixiaohua\",{\"1\":{\"34\":1}}],[\"jpeg\",{\"1\":{\"319\":1}}],[\"jpg图片进行压缩\",{\"1\":{\"317\":1}}],[\"jpg\",{\"1\":{\"170\":2,\"319\":1,\"442\":5,\"444\":5,\"478\":1}}],[\"just\",{\"1\":{\"259\":1,\"260\":1}}],[\"job=任务名称\",{\"1\":{\"180\":2}}],[\"join\",{\"1\":{\"10\":1,\"13\":1,\"215\":1}}],[\"jenkins\",{\"0\":{\"645\":1},\"1\":{\"180\":2}}],[\"jsb\",{\"1\":{\"628\":1,\"639\":5}}],[\"jsdoc\",{\"1\":{\"339\":1}}],[\"js进入到application\",{\"1\":{\"262\":1}}],[\"js进程\",{\"1\":{\"262\":1}}],[\"js里\",{\"1\":{\"262\":1}}],[\"js后面将会带有很多参数\",{\"1\":{\"262\":1}}],[\"js如何配置整个框架并在最后给出了服务器配置文件的格式\",{\"1\":{\"261\":1}}],[\"js是运行pinus项目的入口\",{\"1\":{\"257\":1,\"267\":1}}],[\"js是整个游戏服务器的入口和配置点\",{\"1\":{\"257\":1}}],[\"js则是web服务器入口\",{\"1\":{\"257\":1}}],[\"js中增加如下代码\",{\"1\":{\"272\":1}}],[\"js中进行配置即可\",{\"1\":{\"271\":1}}],[\"js中进行的\",{\"1\":{\"257\":1}}],[\"js中由用户来调用\",{\"1\":{\"262\":1}}],[\"js中的对app进行配置的代码会执行\",{\"1\":{\"262\":1}}],[\"js中的一般代码如下\",{\"1\":{\"257\":1}}],[\"js中\",{\"1\":{\"257\":1,\"258\":1,\"454\":1}}],[\"js中配置框架以及pinus框架使用的服务器配置文件的格式\",{\"1\":{\"257\":1}}],[\"js中事件循环的请求等待队列过长\",{\"1\":{\"201\":1}}],[\"js文件\",{\"0\":{\"257\":1},\"1\":{\"267\":1}}],[\"js目录所在目录\",{\"1\":{\"209\":1}}],[\"js前添加参数的简便方法\",{\"1\":{\"203\":1}}],[\"js的配置说明\",{\"1\":{\"267\":1}}],[\"js的执行\",{\"1\":{\"262\":1}}],[\"js的后面\",{\"1\":{\"203\":1}}],[\"js的分布式水平扩展游戏服务器轻量级强大框架\",{\"1\":{\"184\":1}}],[\"js配置app\",{\"1\":{\"190\":1}}],[\"jsx核心除了提供给我们一个dom树之外\",{\"1\":{\"381\":1}}],[\"jsx的array对象里头并没有indexof函数\",{\"1\":{\"376\":1}}],[\"jsx采用的es3标准\",{\"1\":{\"376\":1}}],[\"jsx<\",{\"1\":{\"356\":1,\"357\":1}}],[\"jsx\",{\"0\":{\"373\":1,\"401\":1,\"402\":1},\"1\":{\"137\":1,\"350\":3,\"356\":2,\"357\":5,\"358\":11,\"362\":1,\"365\":3,\"369\":4,\"370\":3,\"372\":1,\"373\":3,\"374\":2,\"382\":1,\"383\":2,\"401\":1,\"402\":3}}],[\"jspm\",{\"1\":{\"130\":1}}],[\"js判断两个时间戳是否为同一天\",{\"0\":{\"56\":1}}],[\"js会同时创建一个该函数对应的prototype对象\",{\"1\":{\"53\":1}}],[\"json指定的配置\",{\"1\":{\"308\":1}}],[\"json和master\",{\"1\":{\"261\":1}}],[\"json里面增加相应的配置就行了\",{\"1\":{\"234\":1}}],[\"json里面继续增加服务器的配置就行了\",{\"1\":{\"234\":1}}],[\"json中添加指定的servertype配置\",{\"0\":{\"266\":1}}],[\"json中\",{\"1\":{\"261\":2,\"282\":1}}],[\"json中的配置\",{\"1\":{\"234\":1}}],[\"json中为不同的服务器中添加不同参数\",{\"1\":{\"233\":1}}],[\"json下connector服务器的\",{\"1\":{\"218\":1}}],[\"json修改端口\",{\"1\":{\"190\":1}}],[\"json提交\",{\"1\":{\"161\":1}}],[\"json格式的响应体\",{\"1\":{\"161\":1}}],[\"json的scripts中定义的脚本命令\",{\"1\":{\"102\":1}}],[\"json文件中的配置信息和启动参数去启动其他服务器\",{\"1\":{\"285\":1}}],[\"json文件中经过配置的各个服务器进程\",{\"1\":{\"203\":1}}],[\"json文件进行配置\",{\"1\":{\"233\":1}}],[\"json文件\",{\"0\":{\"136\":1},\"1\":{\"102\":1,\"261\":1,\"267\":1}}],[\"json文件安装\",{\"1\":{\"102\":1}}],[\"json\",{\"0\":{\"135\":1,\"264\":1,\"442\":1},\"1\":{\"45\":1,\"161\":2,\"205\":1,\"233\":1,\"234\":1,\"261\":3,\"267\":1,\"271\":2,\"276\":1,\"289\":1,\"308\":2,\"341\":1,\"344\":1,\"346\":1,\"356\":2,\"365\":1,\"370\":1,\"398\":9,\"399\":6,\"400\":1,\"402\":5,\"404\":3,\"488\":1,\"491\":1}}],[\"js\",{\"0\":{\"169\":1,\"631\":1},\"1\":{\"29\":1,\"30\":4,\"32\":1,\"73\":6,\"79\":2,\"124\":1,\"171\":1,\"209\":1,\"214\":2,\"223\":1,\"234\":3,\"236\":1,\"237\":1,\"238\":1,\"257\":1,\"261\":1,\"262\":6,\"267\":1,\"271\":1,\"272\":1,\"288\":3,\"300\":1,\"302\":3,\"306\":1,\"308\":5,\"315\":1,\"342\":2,\"343\":1,\"344\":1,\"345\":2,\"346\":3,\"370\":1,\"479\":1,\"629\":1,\"634\":1,\"635\":1}}],[\"java\",{\"0\":{\"643\":1},\"1\":{\"8\":1,\"58\":1}}],[\"javascriptreact\",{\"1\":{\"365\":1}}],[\"javascript\",{\"0\":{\"36\":1,\"303\":1,\"629\":1,\"630\":1},\"1\":{\"0\":1,\"11\":1,\"13\":1,\"14\":1,\"29\":1,\"304\":1,\"305\":1,\"306\":2,\"308\":2,\"313\":1,\"341\":1,\"365\":4,\"370\":3,\"376\":2,\"377\":3,\"382\":1,\"387\":2,\"628\":2,\"629\":1,\"630\":1,\"631\":1,\"633\":1,\"638\":1}}],[\"ep2\",{\"0\":{\"590\":1}}],[\"epub\",{\"1\":{\"439\":3}}],[\"einverne\",{\"1\":{\"456\":1}}],[\"emptykid\",{\"1\":{\"395\":1}}],[\"email\",{\"1\":{\"68\":1,\"93\":1,\"105\":2,\"106\":2,\"107\":2,\"108\":1}}],[\"e4x\",{\"1\":{\"376\":1}}],[\"erase\",{\"1\":{\"392\":2}}],[\"erinf\",{\"1\":{\"368\":1}}],[\"errcode\",{\"1\":{\"612\":7}}],[\"err是前面流程中发生的异常\",{\"1\":{\"252\":1}}],[\"err\",{\"1\":{\"40\":2,\"45\":2,\"197\":9,\"252\":1}}],[\"errors\",{\"1\":{\"382\":1}}],[\"errorhandler就是用来进行错误处理的\",{\"1\":{\"197\":1}}],[\"errorhandler\",{\"1\":{\"197\":4,\"252\":2}}],[\"error\",{\"0\":{\"252\":1},\"1\":{\"11\":1,\"40\":4,\"43\":2,\"44\":1,\"45\":1,\"194\":1,\"201\":1,\"234\":1,\"252\":2,\"261\":1,\"271\":1,\"348\":4,\"501\":5,\"636\":2}}],[\"edge\",{\"1\":{\"367\":2}}],[\"edition\",{\"1\":{\"376\":1}}],[\"editor\",{\"1\":{\"370\":1,\"475\":1}}],[\"edit\",{\"1\":{\"74\":2,\"102\":1,\"208\":1}}],[\"eu\",{\"1\":{\"331\":2}}],[\"equiv=\",{\"1\":{\"357\":1}}],[\"equivalent\",{\"1\":{\"258\":1,\"382\":1}}],[\"equal\",{\"1\":{\"32\":1,\"392\":1}}],[\"e选项\",{\"1\":{\"233\":1}}],[\"ec\",{\"1\":{\"612\":7}}],[\"ecma\",{\"1\":{\"376\":3}}],[\"eclipse\",{\"1\":{\"202\":1,\"220\":1}}],[\"ecc建议采用160位\",{\"1\":{\"154\":1}}],[\"ecc\",{\"0\":{\"150\":1}}],[\"echo\",{\"1\":{\"95\":5,\"292\":1}}],[\"ejs\",{\"1\":{\"102\":3}}],[\"effect\",{\"1\":{\"625\":1}}],[\"effects\",{\"1\":{\"360\":1}}],[\"ef\",{\"1\":{\"99\":1}}],[\"etc\",{\"1\":{\"92\":1}}],[\"eg\",{\"1\":{\"82\":1}}],[\"escape\",{\"1\":{\"523\":10}}],[\"estk\",{\"1\":{\"368\":1}}],[\"es5\",{\"1\":{\"137\":1}}],[\"esnext\",{\"1\":{\"137\":1}}],[\"eslint\",{\"1\":{\"74\":1}}],[\"es2018\",{\"1\":{\"137\":1}}],[\"es2016\",{\"1\":{\"137\":1}}],[\"es2015\",{\"1\":{\"137\":1}}],[\"es2017\",{\"1\":{\"29\":1,\"137\":1}}],[\"es2021\",{\"1\":{\"47\":1}}],[\"es2020\",{\"1\":{\"47\":1}}],[\"es6\",{\"1\":{\"47\":1,\"54\":2}}],[\"ex\",{\"1\":{\"442\":2}}],[\"execute\",{\"1\":{\"394\":2,\"398\":2}}],[\"executeactionget\",{\"1\":{\"398\":7,\"399\":8,\"400\":3,\"402\":1,\"408\":2,\"409\":1}}],[\"executeaction\",{\"1\":{\"389\":1,\"392\":3,\"393\":2,\"394\":2,\"395\":1,\"398\":1,\"404\":1,\"408\":2,\"409\":1,\"410\":1}}],[\"executionenvironment>\",{\"1\":{\"356\":1}}],[\"exe\",{\"1\":{\"292\":1}}],[\"external\",{\"1\":{\"636\":1}}],[\"extensionmanifest\",{\"1\":{\"356\":2}}],[\"extensionmanifest>\",{\"1\":{\"356\":1}}],[\"extension>\",{\"1\":{\"356\":1,\"365\":1}}],[\"extensionlist>\",{\"1\":{\"356\":1,\"365\":1}}],[\"extensionbundleversion=\",{\"1\":{\"356\":1}}],[\"extensionbundleid=\",{\"1\":{\"356\":1}}],[\"extensionbundleid\",{\"1\":{\"356\":1}}],[\"extensions\",{\"1\":{\"352\":1,\"353\":3,\"354\":2,\"355\":2}}],[\"extensiontoolkit\",{\"1\":{\"346\":1}}],[\"extension\",{\"1\":{\"346\":1,\"347\":2}}],[\"extends\",{\"1\":{\"612\":1}}],[\"extendscript语言\",{\"0\":{\"376\":1}}],[\"extendscript\",{\"0\":{\"347\":1,\"358\":1,\"368\":1},\"1\":{\"346\":5,\"350\":1,\"356\":2,\"357\":2,\"358\":1,\"362\":1,\"368\":1,\"370\":6,\"376\":2,\"382\":1,\"402\":1}}],[\"extended简介\",{\"0\":{\"316\":1}}],[\"extended\",{\"1\":{\"180\":1,\"318\":1,\"319\":1,\"320\":1,\"376\":1,\"402\":1}}],[\"ext\",{\"1\":{\"613\":1}}],[\"extract<animal\",{\"1\":{\"111\":1}}],[\"extractbird\",{\"1\":{\"111\":1}}],[\"extract\",{\"0\":{\"111\":1}}],[\"exceptions\",{\"1\":{\"343\":1}}],[\"exclude<fruit\",{\"1\":{\"110\":1}}],[\"exclude\",{\"0\":{\"110\":1},\"1\":{\"137\":1}}],[\"exchangedvalue\",{\"1\":{\"31\":2}}],[\"exchange\",{\"1\":{\"31\":3}}],[\"expandable\",{\"1\":{\"442\":1}}],[\"express\",{\"1\":{\"338\":2}}],[\"expressions\",{\"1\":{\"376\":1}}],[\"expression\",{\"1\":{\"291\":1}}],[\"experimentaldecorators\",{\"1\":{\"137\":1}}],[\"expectedstoredvalue\",{\"1\":{\"32\":2}}],[\"exports\",{\"1\":{\"234\":1,\"272\":2}}],[\"export\",{\"1\":{\"95\":2,\"103\":1,\"293\":1}}],[\"evalfile\",{\"1\":{\"382\":1}}],[\"evaluation\",{\"1\":{\"382\":1}}],[\"evaluates\",{\"1\":{\"382\":1}}],[\"evalscript\",{\"1\":{\"357\":2,\"358\":1,\"362\":1,\"373\":1}}],[\"eval\",{\"1\":{\"293\":1}}],[\"ev\",{\"1\":{\"29\":8}}],[\"event\",{\"1\":{\"27\":3,\"30\":2,\"31\":2,\"32\":2,\"238\":2,\"390\":1,\"398\":1,\"612\":11}}],[\"every\",{\"1\":{\"10\":1}}],[\"e\",{\"1\":{\"29\":2,\"130\":2,\"233\":2,\"382\":1,\"632\":1,\"636\":1}}],[\"electron\",{\"1\":{\"130\":1}}],[\"element\",{\"0\":{\"12\":1},\"1\":{\"12\":11,\"29\":2,\"30\":1}}],[\"else\",{\"1\":{\"5\":1,\"31\":1,\"54\":2,\"491\":1,\"501\":3,\"612\":5}}],[\"enthusiast\",{\"1\":{\"454\":1}}],[\"entry\",{\"1\":{\"11\":9}}],[\"entries\",{\"1\":{\"10\":1}}],[\"enumtype\",{\"1\":{\"392\":1,\"407\":1}}],[\"enumeration\",{\"1\":{\"392\":2}}],[\"engine\",{\"1\":{\"357\":1,\"365\":1,\"370\":1,\"632\":1,\"636\":1,\"639\":2,\"640\":1}}],[\"engines\",{\"1\":{\"289\":1}}],[\"en\",{\"1\":{\"357\":1,\"382\":1}}],[\"encoding=\",{\"1\":{\"356\":1,\"401\":1}}],[\"enabled\",{\"1\":{\"261\":2,\"267\":1}}],[\"enable\",{\"1\":{\"190\":1,\"261\":4,\"267\":1,\"272\":1,\"282\":1,\"356\":3,\"357\":3,\"360\":1}}],[\"env=develpment\",{\"1\":{\"262\":1}}],[\"env=development`\",{\"1\":{\"262\":1}}],[\"env=development\",{\"1\":{\"262\":3}}],[\"env~module\",{\"1\":{\"130\":1}}],[\"environments\",{\"1\":{\"130\":1}}],[\"environment\",{\"1\":{\"103\":1,\"130\":1,\"382\":1}}],[\"env\",{\"1\":{\"103\":2,\"130\":1,\"233\":1,\"236\":13,\"257\":2,\"259\":1,\"260\":1,\"267\":2,\"291\":1,\"292\":1,\"293\":1}}],[\"endianness\",{\"1\":{\"11\":1}}],[\"endian\",{\"1\":{\"11\":7}}],[\"end=this\",{\"1\":{\"10\":2}}],[\"end\",{\"1\":{\"10\":1}}],[\"oa0soa28g\",{\"1\":{\"627\":1}}],[\"oauth不用获取access\",{\"1\":{\"163\":1}}],[\"oauth\",{\"1\":{\"163\":3}}],[\"owner\",{\"1\":{\"612\":1}}],[\"os\",{\"1\":{\"382\":2}}],[\"overall\",{\"1\":{\"454\":1}}],[\"over\",{\"1\":{\"343\":1}}],[\"overflow\",{\"1\":{\"14\":1}}],[\"obfuscator将会使用test\",{\"1\":{\"308\":1}}],[\"obfuscator\",{\"1\":{\"305\":1,\"306\":2,\"308\":1,\"313\":1}}],[\"obfuscator是一个免费开源的javascript代码混淆工具\",{\"1\":{\"304\":1}}],[\"obfuscator简介\",{\"0\":{\"303\":1}}],[\"obj\",{\"1\":{\"65\":4,\"398\":4}}],[\"objectvalue\",{\"1\":{\"398\":2}}],[\"objecttype\",{\"1\":{\"398\":1}}],[\"objecttype的话\",{\"1\":{\"398\":1}}],[\"object类型等复杂类型\",{\"1\":{\"398\":1}}],[\"objects\",{\"1\":{\"376\":1}}],[\"object\",{\"1\":{\"50\":1,\"54\":3,\"382\":1,\"392\":3}}],[\"o\",{\"1\":{\"301\":1,\"302\":1}}],[\"opn\",{\"1\":{\"393\":3}}],[\"options=\",{\"1\":{\"341\":1}}],[\"options参数可选\",{\"1\":{\"271\":1}}],[\"options\",{\"1\":{\"271\":1,\"282\":1,\"301\":2,\"396\":2,\"400\":2,\"409\":4}}],[\"options>\",{\"1\":{\"261\":1}}],[\"optional\",{\"1\":{\"261\":1}}],[\"opts\",{\"1\":{\"261\":3,\"272\":6,\"274\":1}}],[\"opengl\",{\"1\":{\"639\":1}}],[\"openid\",{\"1\":{\"612\":1}}],[\"opendocument\",{\"1\":{\"392\":2}}],[\"open就是打开文件的意思\",{\"1\":{\"392\":1}}],[\"open\",{\"1\":{\"25\":1,\"27\":2,\"385\":1,\"392\":5,\"393\":3}}],[\"old\",{\"1\":{\"114\":1,\"633\":1}}],[\"oldval\",{\"1\":{\"34\":3}}],[\"omit<person\",{\"1\":{\"112\":1}}],[\"omitage\",{\"1\":{\"112\":1}}],[\"omit\",{\"0\":{\"112\":1}}],[\"outfiles\",{\"1\":{\"344\":1}}],[\"outdir\",{\"1\":{\"137\":1}}],[\"output\",{\"1\":{\"97\":1,\"308\":1,\"348\":2,\"398\":6,\"402\":2}}],[\"out\",{\"1\":{\"32\":1,\"291\":1,\"343\":1,\"633\":1}}],[\"onclick\",{\"1\":{\"491\":1}}],[\"once\",{\"1\":{\"382\":1}}],[\"only\",{\"1\":{\"209\":1,\"259\":1,\"260\":1,\"382\":1}}],[\"onload\",{\"1\":{\"25\":1,\"29\":2}}],[\"oneline\",{\"1\":{\"84\":1}}],[\"on\",{\"1\":{\"82\":1,\"159\":1,\"238\":1,\"291\":1,\"292\":1,\"298\":1,\"343\":1,\"382\":2}}],[\"onmessage\",{\"1\":{\"29\":4}}],[\"onreadystatechange\",{\"1\":{\"25\":1}}],[\"onst\",{\"1\":{\"14\":1}}],[\"ok\",{\"1\":{\"11\":2,\"32\":1,\"217\":1,\"536\":1,\"612\":4}}],[\"ordn\",{\"1\":{\"399\":5,\"400\":3,\"402\":1,\"404\":1,\"408\":1,\"409\":1}}],[\"ordinal\",{\"1\":{\"394\":3,\"395\":1,\"399\":2,\"408\":2}}],[\"orderlee\",{\"1\":{\"102\":1}}],[\"orange\",{\"1\":{\"109\":2,\"110\":2,\"118\":2,\"119\":2,\"120\":2}}],[\"org\",{\"1\":{\"102\":1,\"298\":1,\"331\":4,\"356\":5,\"365\":1,\"625\":5}}],[\"origin\",{\"1\":{\"70\":1,\"72\":2,\"75\":3,\"76\":2,\"77\":4,\"87\":1}}],[\"or\",{\"0\":{\"465\":1},\"1\":{\"9\":2,\"33\":3,\"85\":1,\"382\":1,\"636\":1}}],[\"off\",{\"1\":{\"292\":1,\"298\":1}}],[\"offsety\",{\"1\":{\"395\":2}}],[\"offsetx\",{\"1\":{\"395\":2}}],[\"offset\",{\"1\":{\"9\":1,\"10\":3,\"394\":7,\"395\":2}}],[\"of\",{\"0\":{\"21\":1},\"1\":{\"9\":2,\"10\":6,\"11\":1,\"20\":1,\"21\":3,\"22\":3,\"130\":1,\"202\":1,\"215\":2,\"292\":1,\"372\":2,\"376\":2,\"382\":3,\"392\":29,\"633\":1,\"636\":1}}],[\"并帮他找到自己失散已久的女友\",{\"1\":{\"567\":1}}],[\"并把他们的分享植入自己的软件里以获得更好的观赏体验\",{\"1\":{\"559\":1}}],[\"并把定时器id作为一个属性set到backendsession中\",{\"1\":{\"230\":1}}],[\"并找到逃离星球的方法\",{\"1\":{\"548\":1}}],[\"并非简单地通过地形上的块做判断\",{\"1\":{\"484\":1}}],[\"并使用顶点数据传递\",{\"1\":{\"469\":1}}],[\"并使得以后的rpc或者消息不路由到已经停止的服务器的\",{\"1\":{\"273\":1}}],[\"并输入行数和列数\",{\"1\":{\"431\":1}}],[\"并拿到想要的信息\",{\"1\":{\"378\":1}}],[\"并没有太多作用\",{\"1\":{\"393\":1}}],[\"并没有增加什么新功能\",{\"1\":{\"368\":1}}],[\"并没有变动\",{\"1\":{\"9\":1}}],[\"并添加\",{\"1\":{\"356\":1}}],[\"并添加提交信息\",{\"1\":{\"74\":1}}],[\"并修改调试\",{\"1\":{\"348\":1}}],[\"并立刻运行拿到结果\",{\"1\":{\"348\":1}}],[\"并指定输出结果到\",{\"1\":{\"308\":1}}],[\"并插入用于在运行时对其进行解码的特殊代码\",{\"1\":{\"307\":1}}],[\"并显示出来\",{\"1\":{\"282\":1}}],[\"并维护对应的连接\",{\"1\":{\"273\":1}}],[\"并缓存其值\",{\"1\":{\"272\":1}}],[\"并完成相应的配置即可\",{\"1\":{\"272\":1}}],[\"并完成初始化后\",{\"1\":{\"262\":1}}],[\"并完成handler和filter的加载\",{\"1\":{\"193\":1}}],[\"并将引擎源码编译到\",{\"1\":{\"633\":1}}],[\"并将结果转化成json输出\",{\"1\":{\"402\":1}}],[\"并将数据以xml的格式出处到你的桌面\",{\"1\":{\"401\":1}}],[\"并将其设置在原点坐标上\",{\"1\":{\"484\":1}}],[\"并将其加入到监听者列表\",{\"1\":{\"280\":1}}],[\"并将其自己的serverid\",{\"1\":{\"262\":1}}],[\"并将配置信息设置到app上下文中\",{\"1\":{\"261\":1}}],[\"并将响应发给前端服务器\",{\"1\":{\"192\":1}}],[\"并不是给我们输出免费的代码\",{\"1\":{\"390\":1}}],[\"并不是指执行函数foo后得到的结果\",{\"1\":{\"50\":1}}],[\"并不执行逻辑业务\",{\"1\":{\"262\":1}}],[\"并不维护具体的客户端连接\",{\"1\":{\"261\":1}}],[\"并能根据需要切换路由策略\",{\"1\":{\"261\":1,\"271\":1}}],[\"并能通过app进行访问\",{\"1\":{\"261\":1}}],[\"并通过enable\",{\"1\":{\"261\":1}}],[\"并由rpc客户端显式地发起调用\",{\"1\":{\"245\":1}}],[\"并由前端服务器将响应发送到客户端\",{\"1\":{\"195\":1}}],[\"并对master的命令作出反应\",{\"1\":{\"272\":1}}],[\"并对所有服务器进行管理\",{\"1\":{\"244\":1}}],[\"并对上一次\",{\"1\":{\"74\":1}}],[\"并增加具体的路由选择配置\",{\"1\":{\"234\":1}}],[\"并在args中配置开启调试的端口等\",{\"1\":{\"233\":1}}],[\"并在next调用中\",{\"1\":{\"201\":1}}],[\"并可以通过相应的bind以及push调用\",{\"1\":{\"230\":1}}],[\"并做简单的校验表明路由是合法的\",{\"1\":{\"230\":1}}],[\"并附带必要的数据\",{\"1\":{\"223\":1}}],[\"并调整此处的端口值\",{\"1\":{\"206\":1}}],[\"并以这个配置运行gate\",{\"1\":{\"206\":1}}],[\"并开启调试模式\",{\"1\":{\"203\":1}}],[\"并记录日志\",{\"1\":{\"199\":1}}],[\"并配置到应用程序中\",{\"1\":{\"195\":1}}],[\"并配以相关的图帮助理解\",{\"1\":{\"50\":1}}],[\"并按时冲刷\",{\"1\":{\"195\":1}}],[\"并绑定了connctor的connection事件\",{\"1\":{\"193\":1}}],[\"并验证后\",{\"1\":{\"162\":1}}],[\"并管理起来\",{\"1\":{\"162\":1}}],[\"并返回该构造函数类型的实例类型\",{\"1\":{\"117\":1}}],[\"并返回该函数的返回值类型\",{\"1\":{\"116\":1}}],[\"并返回一个元组类型\",{\"1\":{\"114\":1}}],[\"并返回旧的值\",{\"1\":{\"33\":3}}],[\"并安装\",{\"1\":{\"103\":1}}],[\"并切换到该分支\",{\"1\":{\"87\":1}}],[\"并切换至\",{\"1\":{\"77\":2}}],[\"并删除这次缓存\",{\"1\":{\"82\":2}}],[\"并跳过\",{\"1\":{\"74\":1}}],[\"并同时切换到指定分支\",{\"1\":{\"71\":1}}],[\"并同时完成对这段内存的赋值\",{\"1\":{\"4\":1}}],[\"并且bug很多\",{\"1\":{\"502\":1}}],[\"并且啥也看不清\",{\"1\":{\"497\":1}}],[\"并且不影响游戏最终的显示效果\",{\"1\":{\"476\":1}}],[\"并且不会从新人的视角来写\",{\"1\":{\"374\":1}}],[\"并且都以实战为主\",{\"1\":{\"411\":1}}],[\"并且还提升了动态合图的利用率和部分性能\",{\"1\":{\"477\":1}}],[\"并且还能知道它是一个object类型\",{\"1\":{\"409\":1}}],[\"并且还封装了一些比较好用的工具\",{\"1\":{\"400\":1}}],[\"并且自己实际动手去尝试了\",{\"1\":{\"406\":1}}],[\"并且我还介绍了如何从宿主全局出发通过对象树分析的方法\",{\"1\":{\"406\":1}}],[\"并且am代码要比dom\",{\"1\":{\"405\":1}}],[\"并且发现它和我们设置给actionreference的名称值是一样的\",{\"1\":{\"398\":1}}],[\"并且对其中的代码做了一些介绍\",{\"1\":{\"396\":1}}],[\"并且对需要周期执行的监控任务已经完成了调度\",{\"1\":{\"262\":1}}],[\"并且在升级2\",{\"1\":{\"395\":1}}],[\"并且这个动作脚本是js的方式提供的\",{\"1\":{\"390\":1}}],[\"并且图层名称是可以重复的\",{\"1\":{\"387\":1}}],[\"并且介绍了dom的基本概念和一些使用问题\",{\"1\":{\"387\":1}}],[\"并且输出一些上下文\",{\"1\":{\"346\":1}}],[\"并且它们都是运行各自服务器的入口\",{\"1\":{\"267\":1}}],[\"并且给其设置属性room\",{\"1\":{\"230\":1}}],[\"并且设定一些自定义属性\",{\"1\":{\"230\":1}}],[\"并且使用json作为通信格式\",{\"1\":{\"221\":1}}],[\"并且重启chat服务器\",{\"1\":{\"219\":1}}],[\"并且项目在所有服务器里的目录是一致的\",{\"1\":{\"191\":1}}],[\"并且成了函数的上下文\",{\"1\":{\"50\":1}}],[\"并且可以在所有线程内同步\",{\"1\":{\"29\":1}}],[\"并用new关键字实例化该构造函数得到一个实例化对象f1\",{\"1\":{\"50\":1}}],[\"并行执行多个\",{\"1\":{\"41\":1}}],[\"并执行这个命令\",{\"1\":{\"394\":1}}],[\"并执行\",{\"1\":{\"39\":1}}],[\"并作出反应\",{\"1\":{\"29\":1}}],[\"当横向或纵向格子被填充满后自动消除\",{\"1\":{\"568\":1}}],[\"当完成某一小任务时\",{\"1\":{\"567\":1}}],[\"当新鲜感消退\",{\"1\":{\"563\":1}}],[\"当新增一个服务器的时候的交互行为\",{\"1\":{\"280\":1}}],[\"当地图移动到要显示的节点时\",{\"1\":{\"469\":1}}],[\"当选中多个图层的时候\",{\"1\":{\"399\":1}}],[\"当做课后作业了\",{\"1\":{\"398\":1}}],[\"当我想要弄一个功能的时候\",{\"1\":{\"393\":1}}],[\"当我们通过executeactionget去获取一个目标对象的actiondescriptor的时候\",{\"1\":{\"399\":1}}],[\"当我们需要做一些持久化存储的时候\",{\"1\":{\"384\":1}}],[\"当我们的插件写到这\",{\"1\":{\"359\":1}}],[\"当我们的应用只有很少人用的时候\",{\"1\":{\"234\":1}}],[\"当我们想关闭服务器时候\",{\"1\":{\"262\":1}}],[\"当我们想对某一个服务器开启调试的时候\",{\"1\":{\"233\":1}}],[\"当我们调用了pinus\",{\"1\":{\"262\":1}}],[\"当我们选择json\",{\"1\":{\"161\":1}}],[\"当你不断被碰撞直至变白则游戏结束\",{\"1\":{\"561\":1}}],[\"当你如果很明确的想要获取目标对象的某个属性的时候\",{\"1\":{\"399\":1}}],[\"当你选中一个图层的时候\",{\"1\":{\"398\":1}}],[\"当你的jsx文件很多的时候\",{\"1\":{\"383\":1}}],[\"当你要操作文档的时候\",{\"1\":{\"380\":1}}],[\"当你需要实现一个功能的时候\",{\"1\":{\"374\":1}}],[\"当代码执行结束自动断开\",{\"1\":{\"370\":1}}],[\"当masteragent接收到请求时\",{\"1\":{\"280\":1}}],[\"当master给monitor发送request\",{\"1\":{\"278\":1}}],[\"当master组件完成了所有的其自身的module的初始化和开启任务后\",{\"1\":{\"262\":1}}],[\"当某个module配置了type为\",{\"1\":{\"278\":1}}],[\"当停止某个服务器时\",{\"1\":{\"273\":1}}],[\"当收到master的通知后\",{\"1\":{\"272\":1}}],[\"当所有的组件的stop调用完后\",{\"1\":{\"262\":1}}],[\"当所有组件的afterstart方法都调用完毕后\",{\"1\":{\"262\":1}}],[\"当app\",{\"1\":{\"262\":1}}],[\"当adminclient向master注册成功后\",{\"1\":{\"282\":1}}],[\"当admin\",{\"1\":{\"255\":1}}],[\"当执行完上面的用户编辑的代码后\",{\"1\":{\"262\":1}}],[\"当chat应用启动后\",{\"1\":{\"262\":1}}],[\"当应用需要数据库时\",{\"1\":{\"261\":1}}],[\"当应用启动后\",{\"1\":{\"233\":1}}],[\"当一个客户端请求到达服务器后\",{\"1\":{\"261\":1,\"271\":1}}],[\"当一个线程修改共享内存以后\",{\"1\":{\"29\":1}}],[\"当需要add服务器的时候\",{\"1\":{\"282\":1}}],[\"当需要做更详细的监控管理的时候\",{\"1\":{\"261\":1}}],[\"当需要给客户端推送消息的时候\",{\"1\":{\"230\":1}}],[\"当由管理客户端向master请求服务器群信息时\",{\"1\":{\"255\":1}}],[\"当对这个channel推送消息的时候\",{\"1\":{\"248\":1}}],[\"当服务端推送消息时\",{\"1\":{\"246\":1}}],[\"当服务器群有变化时\",{\"1\":{\"254\":1}}],[\"当服务器主动断开客户端连接时\",{\"1\":{\"226\":1}}],[\"当服务器的请求处理逻辑需要给客户端推送消息时\",{\"1\":{\"195\":1}}],[\"当启用了master服务器的高可用后\",{\"1\":{\"233\":1}}],[\"当启用masterha高可用的时候\",{\"1\":{\"232\":1}}],[\"当当前目录下有同名文件夹存在时\",{\"1\":{\"233\":1}}],[\"当可以发布消息的时候\",{\"1\":{\"230\":1}}],[\"当处理过程中需要给session设置自定义属性以及绑定uid时\",{\"1\":{\"230\":1}}],[\"当确实需要进行共享channel信息时\",{\"1\":{\"230\":1}}],[\"当出现跨服务器访问channel的时候\",{\"1\":{\"230\":1}}],[\"当后端服务器处理完请求或者需要给客户端推送消息的时候\",{\"1\":{\"242\":1}}],[\"当后端服务器需要给前端的原始session绑定uid或者设置自定义属性时\",{\"1\":{\"230\":1}}],[\"当后端服务器发起filter\",{\"1\":{\"230\":1}}],[\"当调用了session的bind\",{\"1\":{\"230\":1}}],[\"当调用channel的pushmessge方法时\",{\"1\":{\"230\":1}}],[\"当有服务器断开的时候\",{\"1\":{\"281\":1}}],[\"当有monitor向master发出request\",{\"1\":{\"278\":1}}],[\"当有master请求应用服务器的一些监控信息时\",{\"1\":{\"255\":1}}],[\"当有应用服务器给master发监控数据时\",{\"1\":{\"255\":1}}],[\"当有客户端连接的时候\",{\"1\":{\"230\":1}}],[\"当有新的session建立登录的时候\",{\"1\":{\"230\":1}}],[\"当有人说话时\",{\"1\":{\"230\":1}}],[\"当有一个用户发起聊天请求时\",{\"1\":{\"230\":1}}],[\"当遇到用户的登录请求时\",{\"1\":{\"230\":1}}],[\"当flag中的route标志为0时\",{\"1\":{\"229\":1}}],[\"当握手结束后\",{\"1\":{\"224\":1}}],[\"当底层连接建立后\",{\"1\":{\"223\":1}}],[\"当然也有好坏结局之分\",{\"1\":{\"523\":1}}],[\"当然也可以通过frontendsession访问session的只读字段\",{\"1\":{\"247\":1}}],[\"当然也可以使用session\",{\"1\":{\"234\":1}}],[\"当然可以了\",{\"1\":{\"399\":1}}],[\"当然最好是区分开发环境设置\",{\"1\":{\"369\":1}}],[\"当然软件的安装路径你是可以修改的\",{\"1\":{\"352\":1}}],[\"当然这个只是能看见的部分\",{\"1\":{\"400\":1}}],[\"当然这个值没什么意义\",{\"1\":{\"272\":1}}],[\"当然这不是强制的\",{\"1\":{\"356\":1}}],[\"当然这些操作都是在对应的module定义的回调中进行的\",{\"1\":{\"262\":1}}],[\"当然我们如果这里不指定moduleid的话\",{\"1\":{\"272\":1}}],[\"当然客户端的请求是通过前端服务器路由过来的\",{\"1\":{\"243\":1}}],[\"当然\",{\"1\":{\"230\":1,\"261\":1,\"262\":1,\"272\":1,\"278\":1,\"508\":1,\"546\":1,\"563\":1,\"608\":1}}],[\"当然你可能已经注意到了\",{\"1\":{\"210\":1}}],[\"当然了\",{\"1\":{\"124\":1}}],[\"当再次启动服务器时\",{\"1\":{\"206\":1}}],[\"当用户的请求通过了filter\",{\"1\":{\"230\":1}}],[\"当用户的请求到达前端服务器时\",{\"1\":{\"192\":1}}],[\"当用户请求具体的服务的时候\",{\"1\":{\"230\":1}}],[\"当用户请求到来时\",{\"1\":{\"198\":1}}],[\"当用户登录的时候\",{\"1\":{\"230\":1}}],[\"当用户使用hybridconnector的时候\",{\"1\":{\"229\":1}}],[\"当客户端请求时\",{\"1\":{\"282\":1}}],[\"当客户端请求到达后\",{\"1\":{\"246\":1}}],[\"当客户端请求到来时\",{\"1\":{\"234\":1}}],[\"当客户端断开连接时\",{\"1\":{\"197\":1}}],[\"当客户端连接完成后\",{\"1\":{\"195\":1}}],[\"当客户端连接到前端服务器时\",{\"1\":{\"194\":1}}],[\"当会将相应的用户绑定到session上\",{\"1\":{\"196\":1}}],[\"当session连接完成后\",{\"1\":{\"196\":1}}],[\"当发起sys\",{\"1\":{\"195\":1}}],[\"当工作区有变动和暂存区都有变动\",{\"1\":{\"85\":1}}],[\"当工作区有变动\",{\"1\":{\"85\":1}}],[\"当前最新版本所用分支\",{\"1\":{\"628\":1}}],[\"当前的\",{\"1\":{\"367\":1}}],[\"当前的进程将使用master的配置信息\",{\"1\":{\"262\":1}}],[\"当前服务器的类型以及其他所必须的配置信息\",{\"1\":{\"262\":1}}],[\"当前端服务器发出rpc请求时\",{\"1\":{\"230\":1}}],[\"当前端服务器接收到来自客户端的请求时\",{\"1\":{\"230\":1}}],[\"当前\",{\"1\":{\"95\":1}}],[\"当前创建的\",{\"1\":{\"77\":1}}],[\"当前视图是小端字节序\",{\"1\":{\"11\":1}}],[\"当输入值小于当前数据类型的最小值\",{\"1\":{\"14\":1}}],[\"当输入值大于当前数据类型的最大值\",{\"1\":{\"14\":1}}],[\"当\",{\"1\":{\"9\":1}}],[\"为灵感制作\",{\"1\":{\"573\":1}}],[\"为我们逐渐揭开老人年轻时的故事\",{\"1\":{\"585\":1}}],[\"为我们逐渐揭开背后与女主的7年之约之谜\",{\"1\":{\"558\":1}}],[\"为我们带来了一部混合多种角度制作的突破性塔防游戏\",{\"1\":{\"513\":1}}],[\"为亚当斯系列\",{\"1\":{\"524\":1}}],[\"为泰勒小天使系列\",{\"1\":{\"524\":1}}],[\"为游戏赋予了高趣味性与高可玩性等特点\",{\"1\":{\"513\":1}}],[\"为表现一致\",{\"1\":{\"499\":1}}],[\"为什么说它很重要呢\",{\"1\":{\"399\":1}}],[\"为什么存在这两种功能相同表达方式不同的函数\",{\"1\":{\"393\":1}}],[\"为什么有一个null\",{\"1\":{\"392\":1}}],[\"为什么我们在单服务器的那个例子里\",{\"1\":{\"234\":1}}],[\"为此我们需要配置\",{\"1\":{\"365\":1}}],[\"为面板\",{\"1\":{\"365\":1}}],[\"为当前选中的图层\",{\"1\":{\"358\":1}}],[\"为当前打开的文档\",{\"1\":{\"358\":1}}],[\"为下面的值\",{\"1\":{\"292\":1}}],[\"为特定类型的服务器加载自定义的component等等\",{\"1\":{\"261\":1}}],[\"为这些操作提供rpc服务的是channelremote\",{\"1\":{\"230\":1}}],[\"为1则表示是压缩route\",{\"1\":{\"229\":1}}],[\"为\",{\"1\":{\"161\":1,\"356\":1,\"365\":1,\"501\":2}}],[\"为对应\",{\"1\":{\"82\":1}}],[\"为2缓存代码\",{\"1\":{\"82\":2}}],[\"为倒数第一个位置\",{\"1\":{\"20\":1}}],[\"为了妻子和孩子\",{\"1\":{\"597\":1}}],[\"为了阻止大魔王的复活\",{\"1\":{\"570\":1}}],[\"为了找到神秘失踪的外婆\",{\"1\":{\"556\":1}}],[\"为了找回丢失的金币\",{\"1\":{\"552\":1}}],[\"为了钱\",{\"1\":{\"552\":2}}],[\"为了搞明白原理\",{\"1\":{\"497\":1}}],[\"为了防止特殊情况出现\",{\"1\":{\"479\":1}}],[\"为了偷懒\",{\"1\":{\"398\":1}}],[\"为了开发方便\",{\"1\":{\"395\":1}}],[\"为了开发者方便\",{\"1\":{\"261\":1,\"271\":1}}],[\"为了理解方便\",{\"1\":{\"394\":1}}],[\"为了更好理解\",{\"1\":{\"394\":1}}],[\"为了实现这样的机制\",{\"1\":{\"390\":1}}],[\"为了大家方便\",{\"1\":{\"361\":1,\"391\":1}}],[\"为了方便起见\",{\"1\":{\"360\":1}}],[\"为了便于区分\",{\"1\":{\"278\":1}}],[\"为了便于便于开发\",{\"1\":{\"205\":1}}],[\"为了保持简单\",{\"1\":{\"272\":1}}],[\"为了保证代码质量不建议此操作qwq\",{\"1\":{\"74\":1}}],[\"为了演示admin\",{\"1\":{\"272\":1}}],[\"为了优化\",{\"1\":{\"29\":1}}],[\"为了避免溢出\",{\"1\":{\"13\":1}}],[\"为了解决这个问题\",{\"1\":{\"11\":1}}],[\"为了读写这段内容\",{\"1\":{\"4\":1}}],[\"为模板而生成的\",{\"1\":{\"9\":1}}],[\"yyyy\",{\"1\":{\"454\":1}}],[\"yutengjing\",{\"1\":{\"362\":1,\"412\":1}}],[\"ytj\",{\"1\":{\"356\":4,\"365\":1}}],[\"years\",{\"1\":{\"114\":1}}],[\"you\",{\"1\":{\"114\":1,\"220\":1,\"370\":1,\"382\":3}}],[\"your\",{\"1\":{\"74\":2,\"382\":1}}],[\"youremail\",{\"1\":{\"68\":1,\"69\":1}}],[\"yourname\",{\"1\":{\"68\":1}}],[\"yaml\",{\"1\":{\"103\":2,\"625\":2}}],[\"y\",{\"1\":{\"9\":8,\"65\":1,\"628\":5}}],[\"此游戏完全以创意制胜\",{\"1\":{\"553\":1}}],[\"此设置调整将字符串文本插入stringarray的概率\",{\"1\":{\"307\":1}}],[\"此设置对于大代码影响较大\",{\"1\":{\"307\":1}}],[\"此选项会减慢脚本的速度\",{\"1\":{\"307\":1}}],[\"此选项强制启用stringarray选项\",{\"1\":{\"307\":1}}],[\"此后\",{\"1\":{\"262\":1}}],[\"此处理链将会立即被中断\",{\"1\":{\"197\":1}}],[\"此文件有如下规则\",{\"1\":{\"65\":1}}],[\"此时回调会使用monitor请求中携带的参数\",{\"1\":{\"278\":1}}],[\"此时也可以通过判断msg进行两种情况的区分\",{\"1\":{\"272\":1}}],[\"此时msg将会是一个对象\",{\"1\":{\"272\":1}}],[\"此时msg参数是undefined\",{\"1\":{\"272\":1}}],[\"此时会完成周期性事件的调度\",{\"1\":{\"274\":1}}],[\"此时会默认为master类型\",{\"1\":{\"262\":1}}],[\"此时会调用cosession包装的sessionservice的操作unbind完成对应用户的解绑操作\",{\"1\":{\"196\":1}}],[\"此时会调用cosession包装的sessionservice的操作bind完成对应的用户绑定操作\",{\"1\":{\"196\":1}}],[\"此时pinus认为目前启动的不是应用服务器\",{\"1\":{\"262\":1}}],[\"此时pinus\",{\"1\":{\"262\":1}}],[\"此时命令行工具将会为其添加一个默认的env参数\",{\"1\":{\"262\":1}}],[\"此时命令行工具pinus会检测start后面有没有其他参数\",{\"1\":{\"262\":1}}],[\"此时uid字段为undefined\",{\"1\":{\"246\":1}}],[\"此时后端服务器向前端服务器发起rpc调用时\",{\"1\":{\"230\":1}}],[\"此时\",{\"1\":{\"194\":1,\"215\":1,\"262\":1,\"274\":1,\"282\":1}}],[\"此时已经做好了接收客户端连接的准备\",{\"1\":{\"193\":1}}],[\"此时看成对象了\",{\"1\":{\"54\":1}}],[\"此时生成的新数组\",{\"1\":{\"9\":1}}],[\"此外也不能撞击黑色方块\",{\"1\":{\"583\":1}}],[\"此外\",{\"1\":{\"30\":1,\"196\":2,\"519\":1,\"524\":1,\"529\":1,\"531\":1,\"536\":1,\"542\":1,\"553\":1,\"559\":1,\"563\":1,\"565\":1,\"573\":1,\"582\":1,\"595\":1}}],[\"此外还可以自定义字节序\",{\"1\":{\"3\":1}}],[\"共计19章构成\",{\"1\":{\"506\":1}}],[\"共有三层\",{\"1\":{\"474\":1}}],[\"共有三种可能的值\",{\"1\":{\"32\":1}}],[\"共分了13个层级\",{\"1\":{\"471\":1}}],[\"共享内存上面的某些运算是不能被打断的\",{\"1\":{\"33\":1}}],[\"共享内存的视图数组\",{\"1\":{\"32\":2}}],[\"共享内存也可以在\",{\"1\":{\"29\":1}}],[\"共享内存\",{\"1\":{\"29\":1}}],[\"共\",{\"1\":{\"9\":1}}],[\"共包括\",{\"1\":{\"2\":1}}],[\"++\",{\"1\":{\"29\":4}}],[\"+=\",{\"1\":{\"10\":2}}],[\"+\",{\"1\":{\"9\":1,\"11\":6,\"25\":2,\"74\":1,\"76\":1,\"173\":2,\"261\":1,\"271\":2,\"272\":2,\"361\":1,\"372\":2,\"378\":14,\"398\":6,\"402\":1,\"409\":4,\"425\":1,\"499\":2,\"500\":1,\"501\":3,\"613\":1}}],[\"也同样拥有唯美游戏配备的简洁画风和轻音乐\",{\"1\":{\"608\":1}}],[\"也同样是一款重剧情而轻解谜的游戏\",{\"1\":{\"590\":1}}],[\"也遭到了许多玩家吐槽\",{\"1\":{\"594\":1}}],[\"也增强了打击感\",{\"1\":{\"594\":1}}],[\"也稍稍提高了画面质量\",{\"1\":{\"578\":1}}],[\"也消除了玩家对于战争题材游戏的紧张感\",{\"1\":{\"528\":1}}],[\"也许你会觉得简单\",{\"1\":{\"525\":1}}],[\"也许有人会问\",{\"1\":{\"480\":1}}],[\"也加大了英雄的存在感\",{\"1\":{\"515\":1}}],[\"也随之移动\",{\"1\":{\"484\":1}}],[\"也提供像\",{\"1\":{\"478\":1}}],[\"也都可以给它们设置不同的缩放比例\",{\"1\":{\"477\":1}}],[\"也没有系统性的资料\",{\"1\":{\"411\":1}}],[\"也更不可预期\",{\"1\":{\"406\":1}}],[\"也很方便让你进行数据检查\",{\"1\":{\"404\":1}}],[\"也能自己把一些命令\",{\"1\":{\"396\":1}}],[\"也叫动作管理器\",{\"1\":{\"387\":1}}],[\"也应该非常适应\",{\"1\":{\"377\":1}}],[\"也不能确保ps所有的目标对象都是可以设置成功的\",{\"1\":{\"406\":1}}],[\"也不要说什么我可以直接在编译后的代码内\",{\"1\":{\"372\":1}}],[\"也不会再次被包含\",{\"1\":{\"64\":1}}],[\"也有是同步的\",{\"1\":{\"357\":1}}],[\"也就降低下来了\",{\"1\":{\"467\":1}}],[\"也就说console\",{\"1\":{\"282\":1}}],[\"也就是相对\",{\"1\":{\"485\":1}}],[\"也就是上一篇文章的内容\",{\"1\":{\"411\":1}}],[\"也就是当前选中的图层\",{\"1\":{\"399\":2,\"408\":1}}],[\"也就是我们上面看到的那段代码\",{\"1\":{\"390\":1}}],[\"也就是访问\",{\"1\":{\"358\":1}}],[\"也就是会由命令行工具收到\",{\"1\":{\"282\":1}}],[\"也就是module的配置中有type选项和interval选项\",{\"1\":{\"274\":1}}],[\"也就是module的工厂函数的moduleid属性\",{\"1\":{\"272\":1}}],[\"也就是关闭服务器命令后\",{\"1\":{\"273\":1}}],[\"也就是使用拉模式\",{\"1\":{\"272\":1}}],[\"也就是调用相应组件的start方法\",{\"1\":{\"262\":1}}],[\"也就是development或者production\",{\"1\":{\"261\":1}}],[\"也就是不需要服务端给予回复的请求\",{\"1\":{\"249\":1}}],[\"也就是前端服务器把这个客户端请求路由到哪个后端服务器上\",{\"1\":{\"234\":1}}],[\"也就是将多个接口请求可以放在一起\",{\"1\":{\"162\":1}}],[\"也就是将一段内容完全复制到另一段内存\",{\"1\":{\"18\":1}}],[\"也就是让该函数所实例化的对象们都可以找到公用的属性和方法\",{\"1\":{\"52\":1}}],[\"也就是这个函数\",{\"1\":{\"52\":1}}],[\"也就是此时函数内部的this是指向该新创建的对象\",{\"1\":{\"50\":1}}],[\"也就是说是支持跑在\",{\"1\":{\"356\":1}}],[\"也就是说此时monitor请求订阅所有的服务器变化信息\",{\"1\":{\"280\":1}}],[\"也就是说这四个回调都是可选的\",{\"1\":{\"273\":1}}],[\"也就是说master进程是其他应用服务器的父进程\",{\"1\":{\"262\":1}}],[\"也就是说在服务器a上创建的channel\",{\"1\":{\"248\":1}}],[\"也就是说在afterfilter如果对resp做更改的话\",{\"1\":{\"197\":1}}],[\"也就是说其配置项里可以没有port字段\",{\"1\":{\"241\":1}}],[\"也就是说两个后端服务器a和b不会共享channel信息\",{\"1\":{\"230\":1}}],[\"也就是说一个uid允许维持多个连接\",{\"1\":{\"230\":1}}],[\"也就是说后端服务器的coserver组件的请求是msgremote派发的\",{\"1\":{\"230\":1}}],[\"也就是说\",{\"1\":{\"9\":1,\"14\":1,\"22\":1,\"29\":1,\"364\":1}}],[\"也会有其他的情况\",{\"1\":{\"498\":1}}],[\"也会有使用\",{\"1\":{\"478\":1}}],[\"也会将具体的服务器变动消息发送给此服务器\",{\"1\":{\"280\":1}}],[\"也会创建app\",{\"1\":{\"262\":1}}],[\"也经常使用判断msg来区分两种情况的方式\",{\"1\":{\"272\":1}}],[\"也需要指定master服务器的位置\",{\"1\":{\"233\":1}}],[\"也无法跟你在一起聊天\",{\"1\":{\"217\":1}}],[\"也必须调用next\",{\"1\":{\"197\":1}}],[\"也可成为现实战争中一种人性的缩影\",{\"1\":{\"528\":1}}],[\"也可直接在该文件操作\",{\"1\":{\"298\":2}}],[\"也可能直接将某项数值归0\",{\"1\":{\"574\":1}}],[\"也可能没有携带任何参数\",{\"1\":{\"278\":1}}],[\"也可能是默认的\",{\"1\":{\"192\":1}}],[\"也可替换成其他二进制编码格式\",{\"1\":{\"221\":1}}],[\"也可以将这款游戏安利给ta\",{\"1\":{\"608\":1}}],[\"也可以将这个文件读取为\",{\"1\":{\"29\":1}}],[\"也可以自己配置\",{\"1\":{\"444\":1}}],[\"也可以换成string的表达方式document\",{\"1\":{\"399\":1}}],[\"也可以借助\",{\"1\":{\"374\":1}}],[\"也可以设置为\",{\"1\":{\"356\":1}}],[\"也可以导出对象\",{\"1\":{\"274\":1}}],[\"也可以优雅地通过命令行工具执行pinus\",{\"1\":{\"262\":1}}],[\"也可以做一些初始化的加载操作\",{\"1\":{\"261\":1}}],[\"也可以通过app这个上下文实现获取和设置\",{\"1\":{\"261\":1}}],[\"也可以通过app\",{\"1\":{\"261\":1}}],[\"也可以理解为这个用户通过哪个session进行了登录\",{\"1\":{\"230\":1}}],[\"也可以理解为父对象\",{\"1\":{\"51\":1}}],[\"也可以指定版本号\",{\"1\":{\"103\":1}}],[\"也可以是layerset\",{\"1\":{\"378\":1}}],[\"也可以是是模态的\",{\"1\":{\"356\":1}}],[\"也可以是一个对象\",{\"1\":{\"53\":1}}],[\"也可以是二进制数据\",{\"1\":{\"29\":1}}],[\"也可以使用channelservice的pushmessagebyuids\",{\"1\":{\"230\":1}}],[\"也可以使用\",{\"1\":{\"31\":1}}],[\"也是为了映照精灵族与怪物们对立的场景\",{\"1\":{\"515\":1}}],[\"也是最令人迷惑的地方\",{\"1\":{\"247\":1}}],[\"也是指定了下一步的处理\",{\"1\":{\"197\":1}}],[\"也是基于nodejs的自动任务运行器\",{\"1\":{\"167\":1}}],[\"也是返回\",{\"1\":{\"30\":1}}],[\"也是一个构造函数\",{\"1\":{\"4\":1}}],[\"新世界恐怖的生物与黑\",{\"1\":{\"604\":1}}],[\"新版本添加了一个第三方开源压缩工具\",{\"1\":{\"488\":1}}],[\"新添加的文件也会被删除\",{\"1\":{\"78\":1}}],[\"新增了兵营\",{\"1\":{\"513\":1}}],[\"新增服务器\",{\"0\":{\"280\":1}}],[\"新增一条\",{\"0\":{\"209\":1}}],[\"新增其他上游仓库\",{\"1\":{\"72\":1}}],[\"新增\",{\"1\":{\"47\":2}}],[\"新建图层是make\",{\"1\":{\"410\":1}}],[\"新建目录\",{\"1\":{\"97\":1}}],[\"新建文件\",{\"1\":{\"97\":1}}],[\"新建分支\",{\"1\":{\"87\":1}}],[\"新建一段共享内存\",{\"1\":{\"30\":1}}],[\"新建一个分支\",{\"1\":{\"87\":2}}],[\"新建一个bat文件\",{\"1\":{\"62\":1}}],[\"新建一个质数生成器\",{\"1\":{\"29\":1}}],[\"新建一个不带符号的\",{\"1\":{\"4\":1}}],[\"新建\",{\"1\":{\"29\":1}}],[\"新数组会开辟一段新的内存储存数据\",{\"1\":{\"9\":1}}],[\"新生成一个\",{\"1\":{\"9\":1}}],[\"必须调用next\",{\"1\":{\"197\":1}}],[\"必须搞懂js中的prototype\",{\"1\":{\"50\":1}}],[\"必须保证该位置的赋值操作\",{\"1\":{\"30\":1}}],[\"必须有一个机制让其他线程同步\",{\"1\":{\"29\":1}}],[\"必须在上面建立视图\",{\"1\":{\"29\":1}}],[\"必须在\",{\"1\":{\"23\":1}}],[\"必须一个一个字符地转\",{\"1\":{\"13\":1}}],[\"必须使用\",{\"1\":{\"9\":1}}],[\"必须与所要建立的数据类型一致\",{\"1\":{\"9\":1}}],[\"必需\",{\"1\":{\"9\":1}}],[\"是这款游戏的特色\",{\"1\":{\"554\":1}}],[\"是个开源引擎\",{\"1\":{\"473\":1}}],[\"是转换还是重写\",{\"1\":{\"464\":1}}],[\"是章节目录\",{\"1\":{\"436\":1}}],[\"是说明文档\",{\"1\":{\"436\":1}}],[\"是永远无法满足述求的\",{\"1\":{\"411\":1}}],[\"是有自己单独的命令来完成的\",{\"1\":{\"410\":1}}],[\"是通过actiondescriptor对象的getxxx方法来拿到目标对象的某个属性值实现的\",{\"1\":{\"407\":1}}],[\"是通过actiondescriptor的gettype方法来获取的\",{\"1\":{\"398\":1}}],[\"是因为它相比get行为\",{\"1\":{\"406\":1}}],[\"是因为服务器端的代码被断点拦下了\",{\"1\":{\"215\":1}}],[\"是可以实时输出当前图层的json数据结构\",{\"1\":{\"403\":1}}],[\"是宿主引擎在c++层实现的\",{\"1\":{\"390\":1}}],[\"是完不成一件完整的事情的\",{\"1\":{\"387\":1}}],[\"是所有\",{\"1\":{\"358\":1}}],[\"是隔离的\",{\"1\":{\"356\":1,\"357\":1}}],[\"是插件\",{\"1\":{\"356\":1}}],[\"是adobe希望用来替代老旧的那款extensionscript编辑器\",{\"1\":{\"346\":1}}],[\"是npm的镜像源管理工具\",{\"1\":{\"329\":1}}],[\"是前端开发打包的最常用工具之一\",{\"1\":{\"299\":1}}],[\"是当有应用服务器重连时触发\",{\"1\":{\"279\":1}}],[\"是当在处理请求时产生异常时进行的处理\",{\"1\":{\"197\":1}}],[\"是时候启动所有的应用服务器了\",{\"1\":{\"262\":1}}],[\"是周期性的由master来拉\",{\"1\":{\"262\":1}}],[\"是底层原生socket的引用\",{\"1\":{\"247\":1}}],[\"是全局唯一的\",{\"1\":{\"247\":1}}],[\"是允许一个uid绑定多个session的\",{\"1\":{\"230\":1}}],[\"是没办法连接到除了127\",{\"1\":{\"220\":1}}],[\"是没有余值的\",{\"1\":{\"14\":1}}],[\"是127\",{\"1\":{\"220\":1}}],[\"是需要调用cb\",{\"1\":{\"197\":1}}],[\"是要去执行的任务\",{\"1\":{\"170\":1}}],[\"是文件监听的路径\",{\"1\":{\"170\":1}}],[\"是基础的验证\",{\"1\":{\"163\":1}}],[\"是不是所有手机都是这种情况呢\",{\"1\":{\"498\":1}}],[\"是不是这样就行了呢\",{\"1\":{\"408\":1}}],[\"是不是反过来去setxxx就可以了呢\",{\"1\":{\"407\":1}}],[\"是不是看着有条理多了\",{\"1\":{\"162\":1}}],[\"是不正确的\",{\"1\":{\"29\":1}}],[\"是会自动帮我们设置\",{\"1\":{\"161\":1}}],[\"是rsa数据安全公司开发的一种单向散列算法\",{\"1\":{\"152\":1}}],[\"是一款难得的寓教于乐佳作\",{\"1\":{\"589\":1}}],[\"是一款打法时间的利器\",{\"1\":{\"568\":1}}],[\"是一款自由度很高的游戏\",{\"1\":{\"565\":1}}],[\"是一款综合水平很高的游戏\",{\"1\":{\"542\":1}}],[\"是一部游戏性很强的解谜作品\",{\"1\":{\"510\":1}}],[\"是一套非常非常非常旧的语言集合\",{\"1\":{\"376\":1}}],[\"是一种标准的\",{\"1\":{\"149\":1}}],[\"是一个4个字符长度的字符串缩写\",{\"1\":{\"393\":1}}],[\"是一个全局对象\",{\"1\":{\"382\":1}}],[\"是一个boolean值\",{\"1\":{\"261\":1}}],[\"是一个字符串\",{\"1\":{\"261\":2}}],[\"是一个支持变长密钥的公共密钥算法\",{\"1\":{\"148\":1}}],[\"是一个带符号的\",{\"1\":{\"14\":1}}],[\"是一个\",{\"1\":{\"9\":3,\"14\":2,\"365\":1}}],[\"是下一代的加密算法标准\",{\"1\":{\"146\":1}}],[\"是否私有\",{\"1\":{\"612\":1}}],[\"是否自动补帧\",{\"1\":{\"612\":1}}],[\"是否自动创建类型声明文件\",{\"1\":{\"137\":1}}],[\"是否移除注释\",{\"1\":{\"137\":1}}],[\"是否默认禁用\",{\"1\":{\"137\":1}}],[\"是否生成map文件\",{\"1\":{\"137\":1}}],[\"是否为\",{\"1\":{\"7\":1}}],[\"是单线程的\",{\"1\":{\"29\":1}}],[\"是用来存放软件自带的\",{\"1\":{\"352\":1}}],[\"是用来给node\",{\"1\":{\"261\":1}}],[\"是用来指定和影响node及v8的行为的\",{\"1\":{\"233\":1}}],[\"是用来指定下一步调用的\",{\"1\":{\"197\":1}}],[\"是用来做连接统计的\",{\"1\":{\"192\":1}}],[\"是用来处理网络设备传来的数据\",{\"1\":{\"22\":1}}],[\"是用来向网卡\",{\"1\":{\"22\":1}}],[\"是\",{\"1\":{\"20\":1,\"346\":1,\"352\":1}}],[\"是以数组\",{\"1\":{\"9\":1}}],[\"是重叠的\",{\"1\":{\"9\":1}}],[\"因此我们也需要做一些额外优化\",{\"1\":{\"488\":1}}],[\"因此我们将参数改为\",{\"1\":{\"488\":1}}],[\"因此我们将道路作为\",{\"1\":{\"475\":1}}],[\"因此我们将这张旗杆的图片裁剪成两张\",{\"1\":{\"468\":1}}],[\"因此我们将批图集的数量设置为8张\",{\"1\":{\"467\":1}}],[\"因此我们就省略掉了第一个moduleid参数了\",{\"1\":{\"272\":1}}],[\"因此它是通过另外一个move命令来进行修改的\",{\"1\":{\"408\":1}}],[\"因此浏览器\",{\"1\":{\"364\":1}}],[\"因此省略了与client有关的clienthandler回调函数的定义\",{\"1\":{\"282\":1}}],[\"因此monitor总是后于master启动\",{\"1\":{\"275\":1}}],[\"因此master组件总是最先start\",{\"1\":{\"274\":1}}],[\"因此message的头格式比较复杂\",{\"1\":{\"226\":1}}],[\"因此这段代码通过对msg的判断区分了这两种情况\",{\"1\":{\"272\":1}}],[\"因此此时只是简单的调用notifyall\",{\"1\":{\"272\":1}}],[\"因此pinus会按照他们具体的配置信息为其默认加载不同的组件\",{\"1\":{\"262\":1}}],[\"因此后端服务器只需监听它提供服务的端口即可\",{\"1\":{\"243\":1}}],[\"因此需要考虑对用户请求的服务器分配问题\",{\"1\":{\"234\":1}}],[\"因此在生成的时候可以将地图块按照实际项目需求进行缩小\",{\"1\":{\"475\":1}}],[\"因此在材质中\",{\"1\":{\"470\":1}}],[\"因此在这里我们将所有城市物体资源\",{\"1\":{\"469\":1}}],[\"因此在这个module中仅仅涉及到master\",{\"1\":{\"282\":1}}],[\"因此在不指定用户名和口令的时候\",{\"1\":{\"233\":1}}],[\"因此在errorhandler里面\",{\"1\":{\"197\":1}}],[\"因此route的长度最大支持256b\",{\"1\":{\"229\":1}}],[\"因此最大的包长度为2^24个byte\",{\"1\":{\"222\":1}}],[\"因此不会出现超时警告\",{\"1\":{\"199\":1}}],[\"因此\",{\"1\":{\"9\":1,\"144\":1,\"230\":2,\"247\":1,\"262\":1,\"272\":1,\"276\":1,\"278\":1,\"365\":1,\"467\":1,\"485\":1}}],[\"因为小约翰真的不耐打\",{\"1\":{\"570\":1}}],[\"因为莫名的暴风雪\",{\"1\":{\"551\":1}}],[\"因为被两个好友关在一个阴暗的大别墅里\",{\"1\":{\"549\":1}}],[\"因为游戏一开始就在埋伏笔\",{\"1\":{\"542\":1}}],[\"因为战乱\",{\"1\":{\"527\":1}}],[\"因为爷爷被神秘人掳走\",{\"1\":{\"526\":1}}],[\"因为一个批次有\",{\"1\":{\"467\":1}}],[\"因为你选中不同的工具\",{\"1\":{\"409\":1}}],[\"因为ps的图层顺序是有相互依赖的\",{\"1\":{\"408\":1}}],[\"因为包含了非常多的属性和值\",{\"1\":{\"399\":1}}],[\"因为插件和宿主一直是连着的\",{\"1\":{\"373\":1}}],[\"因为我们获取选中图层的\",{\"1\":{\"357\":1}}],[\"因为我们这里用不到\",{\"1\":{\"272\":1}}],[\"因为在下面的例子中\",{\"1\":{\"256\":1}}],[\"因为在进入after\",{\"1\":{\"250\":1}}],[\"因为在前端服务器发起rpc调用给后端服务器派发请求的时候\",{\"1\":{\"230\":1}}],[\"因为只有一台chat服务器\",{\"1\":{\"234\":1}}],[\"因为有多台chat服务器\",{\"1\":{\"234\":1}}],[\"因为本机调试没有任何问题\",{\"1\":{\"217\":1}}],[\"因为别人不一定能打开127\",{\"1\":{\"217\":1}}],[\"因为函数也是一种对象\",{\"1\":{\"54\":1}}],[\"因为创建对象的前提是需要有constructor\",{\"1\":{\"53\":1}}],[\"因为function可以看成是一个函数\",{\"1\":{\"53\":1}}],[\"因为它们的家园\",{\"1\":{\"529\":1}}],[\"因为它们之间互不依赖\",{\"1\":{\"29\":1}}],[\"因为它只能处理小端字节序\",{\"1\":{\"11\":1}}],[\"因为这游戏\",{\"1\":{\"604\":1}}],[\"因为这里没有什么需要在正常的请求响应之前要执行的东西\",{\"1\":{\"282\":1}}],[\"因为这行语句会被编译成多条机器指令\",{\"1\":{\"29\":1}}],[\"因为这一组机器指令的运行期间\",{\"1\":{\"29\":1}}],[\"因为这是第38个质数\",{\"1\":{\"29\":1}}],[\"因为\",{\"1\":{\"9\":2,\"26\":1}}],[\"因为没有那么多的连续空余内存\",{\"1\":{\"5\":1}}],[\"因为原始内存的\",{\"1\":{\"4\":1}}],[\"可执行以下命令解决\",{\"1\":{\"633\":1}}],[\"可跌落的空中触台与红光同色路径的干扰使得此作比1作难度更大\",{\"1\":{\"539\":1}}],[\"可在\",{\"1\":{\"524\":1,\"530\":1}}],[\"可在开始\",{\"1\":{\"64\":1}}],[\"可想而知设计者们需要将剧情刻画的多么精彩\",{\"1\":{\"524\":1}}],[\"可见设计者们对游戏的用心制作深受玩家们爱戴\",{\"1\":{\"523\":1}}],[\"可玩性反而增加\",{\"1\":{\"516\":1}}],[\"可保证绝大多数机子完美显示导航头\",{\"1\":{\"501\":1}}],[\"可自定义实现任何你想要的功能\",{\"0\":{\"494\":1}}],[\"可操作\",{\"1\":{\"411\":1}}],[\"可读性很差\",{\"1\":{\"395\":1}}],[\"可是\",{\"1\":{\"392\":1}}],[\"可配置\",{\"1\":{\"344\":1}}],[\"可设成development\",{\"1\":{\"257\":1,\"267\":1}}],[\"可不填\",{\"1\":{\"186\":1}}],[\"可输入多个\",{\"1\":{\"161\":1}}],[\"可用的聊天应用\",{\"0\":{\"216\":1}}],[\"可用版本\",{\"1\":{\"95\":1}}],[\"可用反斜杠转义\",{\"1\":{\"64\":1}}],[\"可作为分隔符\",{\"1\":{\"64\":1}}],[\"可能还需要同步修改\",{\"1\":{\"634\":1}}],[\"可能还有其它比如颜色\",{\"1\":{\"398\":1}}],[\"可能是更复杂的类型\",{\"1\":{\"398\":1}}],[\"可能因为它的文件后缀名就是\",{\"1\":{\"358\":1}}],[\"可能可以通过重启ps\",{\"1\":{\"346\":1}}],[\"可能需要展开\",{\"1\":{\"343\":1}}],[\"可能需要给原始的session绑定uid\",{\"1\":{\"230\":1}}],[\"可能有组件互相依赖的时候\",{\"1\":{\"262\":1}}],[\"可能产生数据丢失等不好的影响\",{\"1\":{\"233\":1}}],[\"可能成功或失败\",{\"1\":{\"44\":1}}],[\"可能会省略掉一些用不着的回调函数定义\",{\"1\":{\"273\":1}}],[\"可能会让人感到迷惑\",{\"1\":{\"272\":1}}],[\"可能会造成所有的请求都路由到同一台服务器\",{\"1\":{\"246\":1}}],[\"可能会改变这两个操作的执行顺序\",{\"1\":{\"29\":1}}],[\"可能会插入其他线程的指令\",{\"1\":{\"29\":1}}],[\"可能的结果\",{\"1\":{\"29\":1}}],[\"可选标题\",{\"1\":{\"420\":1}}],[\"可选的\",{\"1\":{\"261\":3}}],[\"可选\",{\"1\":{\"9\":2,\"223\":4}}],[\"可以执行\",{\"1\":{\"636\":1}}],[\"可以跳过该步骤\",{\"1\":{\"636\":1}}],[\"可以跳过校验\",{\"1\":{\"74\":1}}],[\"可以方便地将定制的部分更新上去\",{\"1\":{\"628\":1}}],[\"可以改背景音乐的跑酷游戏\",{\"1\":{\"607\":1}}],[\"可以改变元素的大小\",{\"1\":{\"394\":1}}],[\"可以暂停看看地图\",{\"1\":{\"561\":1}}],[\"可以尝试这款画面丰富鲜艳的游戏\",{\"1\":{\"561\":1}}],[\"可以和小伙伴们放心肝了\",{\"1\":{\"550\":1}}],[\"可以说是个操作简单但很考验规划能力的游戏\",{\"1\":{\"579\":1}}],[\"可以说是cep\",{\"1\":{\"391\":1}}],[\"可以说场景的手工制作\",{\"1\":{\"526\":1}}],[\"可以利用胶囊按钮的位置信息和statusbarheight高度动态计算导航栏的高度\",{\"1\":{\"500\":1}}],[\"可以跑满\",{\"1\":{\"482\":1}}],[\"可以实时查看图片减色后的效果\",{\"1\":{\"478\":1}}],[\"可以降得很低\",{\"1\":{\"472\":1}}],[\"可以知道在一台设备中\",{\"1\":{\"467\":1}}],[\"可以再解释一下\",{\"1\":{\"408\":1}}],[\"可以得到ps的各种配置项\",{\"1\":{\"400\":1}}],[\"可以得到这个图\",{\"1\":{\"394\":1}}],[\"可以对dom树进行查看\",{\"1\":{\"400\":1}}],[\"可以对任意长度的数据运算生成一个160位的数值\",{\"1\":{\"153\":1}}],[\"可以这样\",{\"1\":{\"399\":1}}],[\"可以这样表示\",{\"1\":{\"14\":1}}],[\"可以获取到当前actiondescriptor每个属性的char值\",{\"1\":{\"398\":1}}],[\"可以很清晰的看出来\",{\"1\":{\"398\":1}}],[\"可以不通过去网上搜索\",{\"1\":{\"396\":1}}],[\"可以不填\",{\"1\":{\"161\":1}}],[\"可以快速提升开发效率\",{\"1\":{\"395\":1}}],[\"可以缺省\",{\"1\":{\"377\":1}}],[\"可以参考\",{\"1\":{\"482\":1}}],[\"可以参考下面的配置\",{\"1\":{\"370\":1}}],[\"可以参考pinus\",{\"1\":{\"282\":1}}],[\"可以设置名称\",{\"1\":{\"379\":1}}],[\"可以设置\",{\"1\":{\"369\":1}}],[\"可以设定字节序\",{\"1\":{\"11\":1}}],[\"可以指定多个插件面板的\",{\"1\":{\"365\":1}}],[\"可以指定包名\",{\"1\":{\"103\":1}}],[\"可以让你写jsx代码\",{\"1\":{\"348\":1}}],[\"可以导出工厂函数\",{\"1\":{\"274\":1}}],[\"可以是monitoragent或者masteragent\",{\"1\":{\"273\":1}}],[\"可以是一个ip或域名\",{\"1\":{\"261\":2}}],[\"可以配置监控数据获取是pull还是push方式\",{\"1\":{\"272\":1}}],[\"可以配置各个组件的选项\",{\"1\":{\"257\":1}}],[\"可以上报任何信息\",{\"1\":{\"272\":1}}],[\"可以将点击坐标进行镜像\",{\"1\":{\"484\":1}}],[\"可以将要模糊的图片先渲染到一个小的\",{\"1\":{\"482\":1}}],[\"可以将它的完整字符弄出来\",{\"1\":{\"393\":1}}],[\"可以将有依赖的部分放到afterstart方法里面\",{\"1\":{\"262\":1}}],[\"可以将返回结果封装成js对象\",{\"1\":{\"251\":1}}],[\"可以直接修改\",{\"1\":{\"639\":1}}],[\"可以直接删除\",{\"1\":{\"461\":1}}],[\"可以直接阅读相关代码\",{\"1\":{\"272\":1}}],[\"可以直接进行查询回调\",{\"1\":{\"262\":1}}],[\"可以直接通过app\",{\"1\":{\"261\":1}}],[\"可以加载mysql的配置文件\",{\"1\":{\"261\":1}}],[\"可以给不同的服务器完成不同的配置\",{\"1\":{\"261\":1}}],[\"可以给其配置不同的admin\",{\"1\":{\"261\":1}}],[\"可以给前端原始的session绑定uid\",{\"1\":{\"230\":1}}],[\"可以打开systemmonitor选项\",{\"1\":{\"261\":1}}],[\"可以把该属性也设置到actionreference当中\",{\"1\":{\"399\":1}}],[\"可以把你的源代码变得\",{\"1\":{\"304\":1}}],[\"可以把某个玩家加入到一个channel中\",{\"1\":{\"248\":1}}],[\"可以把它看作是一个内部session在前端服务器中的傀儡\",{\"1\":{\"247\":1}}],[\"可以把返回类型\",{\"1\":{\"25\":1}}],[\"可以粗略地认为router就是根据用户的session以及其请求内容\",{\"1\":{\"246\":1}}],[\"可以在下面工程中找到\",{\"1\":{\"405\":1}}],[\"可以在c++sdk的其中一个头文件中找到\",{\"1\":{\"393\":1}}],[\"可以在configure中\",{\"1\":{\"261\":1}}],[\"可以在dom\",{\"1\":{\"391\":1}}],[\"可以在首选项\",{\"1\":{\"380\":1}}],[\"可以在\",{\"1\":{\"356\":1,\"357\":1,\"360\":1}}],[\"可以在github上提issue\",{\"1\":{\"348\":1}}],[\"可以在app\",{\"1\":{\"262\":1}}],[\"可以在error\",{\"1\":{\"252\":1}}],[\"可以在开发调试时使用\",{\"1\":{\"233\":1}}],[\"可以在加载timeout的时候作为参数传入\",{\"1\":{\"199\":1}}],[\"可以增加\",{\"1\":{\"233\":1}}],[\"可以考虑使用pinus提供的global\",{\"1\":{\"230\":1}}],[\"可以认为是第三方的管理工具\",{\"1\":{\"273\":1}}],[\"可以认为\",{\"1\":{\"230\":1}}],[\"可以针对某一类型的前端服务器\",{\"1\":{\"230\":1}}],[\"可以清楚的看见\",{\"1\":{\"218\":1}}],[\"可以发现gatehandler\",{\"1\":{\"218\":1}}],[\"可以检查一下这两个服务器的启动是否成功\",{\"1\":{\"212\":1}}],[\"可以从ide下方的控制台输出中查看日志输出\",{\"1\":{\"212\":1}}],[\"可以从运行\",{\"1\":{\"208\":1}}],[\"可以使得nodejs程序监听本地5858端口\",{\"1\":{\"203\":1}}],[\"可以使得用户的请求只有在第一个请求被处理完后\",{\"1\":{\"198\":1}}],[\"可以使我们的工作事半功倍\",{\"1\":{\"202\":1}}],[\"可以使用如下命令\",{\"1\":{\"233\":2}}],[\"可以使用cochannel提供的功能\",{\"1\":{\"230\":1}}],[\"可以使用反斜杠进行转义\",{\"1\":{\"64\":2}}],[\"可以使用上面的\",{\"1\":{\"31\":1}}],[\"可以携带一个resp参数\",{\"1\":{\"197\":1}}],[\"可以\",{\"1\":{\"159\":1}}],[\"可以选择某次\",{\"1\":{\"83\":1}}],[\"可以忽略\",{\"1\":{\"65\":1}}],[\"可以理解为\",{\"1\":{\"51\":1}}],[\"可以理解为原始人\",{\"1\":{\"51\":1}}],[\"可以理解为爷爷对象\",{\"1\":{\"51\":1}}],[\"可以理解为父对象\",{\"1\":{\"51\":1}}],[\"可以看出\",{\"1\":{\"498\":1}}],[\"可以看出编译后的代码和编译前的代码区别还是很大的\",{\"1\":{\"372\":1}}],[\"可以看作是原始session的代理\",{\"1\":{\"247\":1}}],[\"可以看\",{\"1\":{\"32\":1}}],[\"可以看到要对目标进行修改\",{\"1\":{\"408\":1}}],[\"可以看到actiondescriptor有一个count的属性\",{\"1\":{\"398\":1}}],[\"可以看到结果如下\",{\"1\":{\"378\":1}}],[\"可以看到他们都连接一下192\",{\"1\":{\"218\":1}}],[\"可以看到有提示说connected\",{\"1\":{\"213\":1}}],[\"可以看到\",{\"1\":{\"4\":2,\"9\":1,\"51\":1,\"218\":1}}],[\"可以根据这里提供的协议信息\",{\"1\":{\"229\":1}}],[\"可以根据策略选择是否要主动断开连接\",{\"1\":{\"224\":1}}],[\"可以根据需要\",{\"1\":{\"29\":1}}],[\"可以根据不同的数据类型\",{\"1\":{\"9\":1}}],[\"可以像下面这样处理\",{\"1\":{\"25\":1}}],[\"可以采用下面的判断方式\",{\"1\":{\"24\":1}}],[\"可以采用下面的写法\",{\"1\":{\"9\":1}}],[\"可以依次存放不同类型的数据\",{\"1\":{\"22\":1}}],[\"可以返回一个指定位置的新的\",{\"1\":{\"20\":1}}],[\"可以自定义压缩品质\",{\"1\":{\"478\":1}}],[\"可以自定义复合格式的视图\",{\"1\":{\"3\":1}}],[\"可以自由控制比例\",{\"1\":{\"477\":1}}],[\"可以自己打印getsysteminfo验证\",{\"1\":{\"498\":1}}],[\"可以自己封装一些函数\",{\"1\":{\"399\":1}}],[\"可以自己编写转换函数\",{\"1\":{\"13\":1}}],[\"可以用for去遍历它的属性\",{\"1\":{\"398\":1}}],[\"可以用其传递更有意义的参数\",{\"1\":{\"272\":1}}],[\"可以用下面这个函数\",{\"1\":{\"10\":1}}],[\"可以用数组的方法操作内存\",{\"1\":{\"1\":1}}],[\"可以接受另一个\",{\"1\":{\"9\":1}}],[\"可以存放多种类型的数据\",{\"1\":{\"8\":1}}],[\"可以分配一段可以存放数据的连续内存区域\",{\"1\":{\"4\":1}}],[\"可以通过调用是否有参数进行区分是周期性的任务还是接收到了master的消息\",{\"1\":{\"278\":1}}],[\"可以通过参数msg区分\",{\"1\":{\"272\":1}}],[\"可以通过app\",{\"1\":{\"261\":1}}],[\"可以通过application的registeradmin注册管理模块\",{\"1\":{\"255\":1}}],[\"可以通过application的route调用给某一类型的服务器配置其router\",{\"1\":{\"246\":1}}],[\"可以通过监听\",{\"1\":{\"238\":1}}],[\"可以通过cobackendsession来完成\",{\"1\":{\"230\":1}}],[\"可以通过channel的pushmessage给一个channel推送消息\",{\"1\":{\"230\":1}}],[\"可以通过客户端类型和版本号一起来确定客户端是否合适\",{\"1\":{\"223\":1}}],[\"可以通过如下的调用启用\",{\"1\":{\"195\":1}}],[\"可以通过该方式检测引擎是否支持这个属性\",{\"1\":{\"50\":1}}],[\"可以通过\",{\"1\":{\"1\":1,\"27\":1,\"362\":1}}],[\"直至得到棱镜\",{\"1\":{\"581\":1}}],[\"直到球消耗完则游戏结束\",{\"1\":{\"596\":1}}],[\"直到最后我们才明白\",{\"1\":{\"585\":1}}],[\"直到方块没有位置去填充为止\",{\"1\":{\"568\":1}}],[\"直到晨曦来临\",{\"0\":{\"549\":1}}],[\"直到终点存活下来\",{\"1\":{\"531\":1}}],[\"直到杀死或控制全人类以完成任务\",{\"1\":{\"522\":1}}],[\"直到找到我们最终想要的属性\",{\"1\":{\"409\":1}}],[\"直到\",{\"1\":{\"54\":1}}],[\"直到原型链顶端null\",{\"1\":{\"51\":1}}],[\"直到缓冲区的末尾\",{\"1\":{\"9\":2}}],[\"直接\",{\"1\":{\"474\":1}}],[\"直接运行就可以了\",{\"1\":{\"348\":1}}],[\"直接调试\",{\"1\":{\"342\":1}}],[\"直接在文件管理的地址栏输入\",{\"1\":{\"291\":1}}],[\"直接执行相关的配置\",{\"1\":{\"258\":1}}],[\"直接使用相应的frontendid即可\",{\"1\":{\"230\":1}}],[\"直接使用普通数组作为参数\",{\"1\":{\"4\":1}}],[\"直接传入一个用户列表即可\",{\"1\":{\"230\":1}}],[\"直接将消息推送到这一组即可\",{\"1\":{\"230\":1}}],[\"直接会转入错误处理\",{\"1\":{\"197\":1}}],[\"直接返回缓存的方式\",{\"1\":{\"282\":1}}],[\"直接返回该对象\",{\"1\":{\"39\":1}}],[\"直接返回状态为\",{\"1\":{\"39\":1}}],[\"直接分配内存而生成\",{\"1\":{\"9\":1}}],[\"直接分配内存生成底层的\",{\"1\":{\"4\":1}}],[\"用shader画个彩虹https\",{\"1\":{\"625\":1}}],[\"用心创造艺术品\",{\"1\":{\"598\":1}}],[\"用脚本控制缩放比例\",{\"1\":{\"477\":1}}],[\"用\",{\"1\":{\"430\":1}}],[\"用前端代码渲染界面\",{\"1\":{\"362\":1}}],[\"用法\",{\"0\":{\"301\":1}}],[\"用例行为6展示了当有应用服务器断开重连的情况\",{\"1\":{\"282\":1}}],[\"用例行为5展示了当有应用服务器断开的情况\",{\"1\":{\"281\":1}}],[\"用例行为3展示了\",{\"1\":{\"280\":1}}],[\"用例行为4展示了在monitor端\",{\"1\":{\"280\":1}}],[\"用户点击操作时\",{\"1\":{\"484\":1}}],[\"用户级别的插件存放文件夹\",{\"0\":{\"354\":1},\"1\":{\"355\":1}}],[\"用户级插件存放文件夹\",{\"1\":{\"351\":1}}],[\"用户的配置信息在adminuser\",{\"1\":{\"282\":1}}],[\"用户的权限分为三个等级\",{\"1\":{\"282\":1}}],[\"用户的客户端可能有多个设备\",{\"1\":{\"230\":1}}],[\"用户执行pomleo\",{\"1\":{\"282\":1}}],[\"用户通过一个命令来管理整个服务器群的方式\",{\"1\":{\"282\":1}}],[\"用户将可以自己定制一些需要监控的信息\",{\"1\":{\"273\":1}}],[\"用户只需要定义一个监控模块所需要的回调方法\",{\"1\":{\"272\":1}}],[\"用户也可以自定义自己的module\",{\"1\":{\"261\":1}}],[\"用户在关掉之前不能和\",{\"1\":{\"356\":1}}],[\"用户在使用时\",{\"1\":{\"255\":1}}],[\"用户在开发或者调试网络程序或者是网页b\",{\"1\":{\"157\":1}}],[\"用户完全可以自己定义这个参数的含义\",{\"1\":{\"234\":1}}],[\"用户自定义的握手数据\",{\"1\":{\"223\":1}}],[\"用户部分则是用户可以在具体应用中自定义的内容\",{\"1\":{\"223\":1}}],[\"用户可以很容易地完成自己特殊需要的module的定制\",{\"1\":{\"282\":1}}],[\"用户可以自定义自己的filter\",{\"1\":{\"261\":1}}],[\"用户可以自定义不同服务器的不同路由规则\",{\"1\":{\"261\":1,\"271\":1}}],[\"用户可以根据自己的实际需求进行配置相应的router\",{\"1\":{\"261\":1}}],[\"用户可以使用loadconfig的调用加载任何json格式的配置文件\",{\"1\":{\"261\":1}}],[\"用户可以使用一些网络的监视工具比如著名的firebug等网页调试工具\",{\"1\":{\"157\":1}}],[\"用户可以设置自己应用的一些功能选项\",{\"1\":{\"261\":1}}],[\"用户可以通过loadconfig加载配置文件\",{\"1\":{\"261\":1,\"267\":1}}],[\"用户可以通过enabled和disabled对相应的状态进行判断\",{\"1\":{\"261\":1,\"267\":1}}],[\"用户可以通过这个上下文\",{\"1\":{\"257\":1}}],[\"用户可以通过如下的方式启用\",{\"1\":{\"197\":1}}],[\"用户可以在<project\",{\"1\":{\"233\":1}}],[\"用户体验好\",{\"1\":{\"188\":1}}],[\"用户名\",{\"1\":{\"94\":1}}],[\"用于休闲解闷很不错\",{\"1\":{\"555\":1}}],[\"用于构建\",{\"1\":{\"461\":1}}],[\"用于配置扩展的名称\",{\"1\":{\"350\":1}}],[\"用于存放扩展的配置和资源文件\",{\"1\":{\"350\":1}}],[\"用于存放处理后的数据\",{\"1\":{\"29\":1}}],[\"用于其他的目的\",{\"1\":{\"261\":1}}],[\"用于获取构造函数的实例类型\",{\"1\":{\"117\":1}}],[\"用于获取构造函数的参数类型\",{\"1\":{\"115\":1}}],[\"用于获取函数的返回值类型\",{\"1\":{\"116\":1}}],[\"用于从一个对象类型中排除指定的属性\",{\"1\":{\"112\":1}}],[\"用于从一个联合类型中提取指定的类型\",{\"1\":{\"111\":1}}],[\"用于从一个联合类型中排除指定的类型\",{\"1\":{\"110\":1}}],[\"用于从给定类型中选择指定的属性\",{\"1\":{\"108\":1}}],[\"用于本地仓库获取远程仓库的更新\",{\"1\":{\"86\":1}}],[\"用于撤销各种\",{\"1\":{\"80\":1}}],[\"用于将字符串的首字符转换为小写\",{\"1\":{\"121\":1}}],[\"用于将字符串的首字符转换为大写\",{\"1\":{\"120\":1}}],[\"用于将字符串类型的字母转换为小写\",{\"1\":{\"119\":1}}],[\"用于将字符串类型的字母转换为大写\",{\"1\":{\"118\":1}}],[\"用于将当前的代码缓存起来\",{\"1\":{\"82\":1}}],[\"用于将改动从暂存区退回工作区\",{\"1\":{\"79\":1}}],[\"用于将本地仓库与远程仓库关联\",{\"1\":{\"72\":1}}],[\"用于将\",{\"1\":{\"33\":5}}],[\"用于将参数转为一个\",{\"1\":{\"21\":1}}],[\"用到了\",{\"1\":{\"24\":1}}],[\"用到了二进制数组操作二进制数据\",{\"1\":{\"3\":1}}],[\"用来存放项目中所需要的其它信息\",{\"1\":{\"470\":1}}],[\"用来存放插件图标\",{\"1\":{\"356\":1}}],[\"用来表示当前处于被激活状态的一些目标对象\",{\"1\":{\"399\":1}}],[\"用来表示route的字节长度\",{\"1\":{\"229\":1}}],[\"用来完成服务器状态信息交换\",{\"1\":{\"282\":1}}],[\"用来完成生命周期管理\",{\"1\":{\"253\":1}}],[\"用来执行一些初始化监控时调用\",{\"1\":{\"272\":1}}],[\"用来框架进行生命周期管理时候回调\",{\"1\":{\"262\":1}}],[\"用来监听应用服务器的监控和管理请求的\",{\"1\":{\"262\":1}}],[\"用来说明前端服务器最多承受的连接数\",{\"1\":{\"261\":1}}],[\"用来描述session的一些自定义属性\",{\"1\":{\"247\":1}}],[\"用来指明当前session的生命周期状态\",{\"1\":{\"247\":1}}],[\"用来指定项目目录\",{\"1\":{\"233\":1}}],[\"用来开启daemon模式启动\",{\"1\":{\"233\":1}}],[\"用来选择启动时使用的env\",{\"1\":{\"233\":1}}],[\"用来启动master服务器的slave节点\",{\"1\":{\"232\":1}}],[\"用来做统计\",{\"1\":{\"194\":1}}],[\"用来维护用户的session信息\",{\"1\":{\"192\":1}}],[\"用来生成对应类型的数据实例存到内存空间中\",{\"1\":{\"22\":1}}],[\"用来生成相应类型的数组实例\",{\"1\":{\"9\":1}}],[\"用来对每个元素进行遍历\",{\"1\":{\"22\":1}}],[\"默认false\",{\"1\":{\"612\":1}}],[\"默认背景是黑的\",{\"1\":{\"357\":1}}],[\"默认\",{\"1\":{\"307\":2,\"343\":1}}],[\"默认混淆\",{\"1\":{\"306\":1}}],[\"默认加载相应的组件\",{\"1\":{\"262\":1}}],[\"默认是https\",{\"1\":{\"298\":1}}],[\"默认是3005\",{\"1\":{\"261\":1}}],[\"默认是自动引入所有声明文件\",{\"1\":{\"137\":1}}],[\"默认使用当前目录\",{\"1\":{\"298\":1}}],[\"默认使用pull方式\",{\"1\":{\"272\":1}}],[\"默认使用127\",{\"1\":{\"233\":2}}],[\"默认使用的用户名和口令均为admin\",{\"1\":{\"233\":1}}],[\"默认生成的项目中\",{\"1\":{\"233\":1}}],[\"默认的用户名和密码均为admin\",{\"1\":{\"233\":1}}],[\"默认的处理超时是3秒\",{\"1\":{\"199\":1}}],[\"默认的errorhandler会向客户端返回由beforefilters或者handler产生的resp\",{\"1\":{\"197\":1}}],[\"默认值与此处相同\",{\"1\":{\"233\":1}}],[\"默认值\",{\"1\":{\"186\":1}}],[\"默认值是\",{\"1\":{\"32\":1}}],[\"默认不加\",{\"1\":{\"80\":1}}],[\"默认情况下为当前路径\",{\"1\":{\"233\":1}}],[\"默认情况下\",{\"1\":{\"23\":1}}],[\"默认直到本段内存区域结束\",{\"1\":{\"9\":1}}],[\"默认从\",{\"1\":{\"9\":1}}],[\"默认为\",{\"1\":{\"8\":1,\"32\":1}}],[\"默认所有位都是\",{\"1\":{\"4\":1}}],[\"同步和版本控制和二次混淆加密\",{\"1\":{\"488\":1}}],[\"同步捕获函数中的异常并转换为\",{\"1\":{\"45\":1}}],[\"同理如果建筑物是反转状态\",{\"1\":{\"484\":1}}],[\"同理\",{\"1\":{\"398\":1}}],[\"同类工具\",{\"0\":{\"339\":1}}],[\"同\",{\"1\":{\"297\":1}}],[\"同master中的语义一样\",{\"1\":{\"261\":1}}],[\"同样是一款休闲益智游戏\",{\"1\":{\"608\":1}}],[\"同样是个被广大玩家们吹爆的经典解谜之作\",{\"1\":{\"508\":1}}],[\"同样拥有可拍成电影的感人剧情\",{\"1\":{\"558\":1}}],[\"同样也可以手动更改\",{\"1\":{\"461\":1}}],[\"同样的黑白人物风格与爵士乐配音\",{\"1\":{\"521\":1}}],[\"同样的\",{\"1\":{\"400\":1,\"408\":1}}],[\"同样的在\",{\"1\":{\"356\":1}}],[\"同样console还省略了start回调\",{\"1\":{\"282\":1}}],[\"同样在这里可以填入任何配置\",{\"1\":{\"259\":1}}],[\"同样\",{\"1\":{\"197\":1,\"247\":1,\"261\":2}}],[\"同config配置表中的type\",{\"1\":{\"187\":1}}],[\"同config配置表中的id\",{\"1\":{\"187\":1}}],[\"同时得分\",{\"1\":{\"568\":1}}],[\"同时画风也更加简洁\",{\"1\":{\"520\":1}}],[\"同时不少小伙伴也会发现一些坑\",{\"1\":{\"496\":1}}],[\"同时保证游戏体验与\",{\"1\":{\"465\":1}}],[\"同时结合了大量\",{\"1\":{\"411\":1}}],[\"同时多了一个有效目标对象的概念\",{\"1\":{\"409\":1}}],[\"同时也非常消耗内存和性能\",{\"1\":{\"399\":1}}],[\"同时介绍了am的独特的代码结构\",{\"1\":{\"397\":1}}],[\"同时在执行这个命令的时候\",{\"1\":{\"394\":1}}],[\"同时它又是默认值\",{\"1\":{\"377\":1}}],[\"同时有一些你平常习惯了的函数可能也没有\",{\"1\":{\"376\":1}}],[\"同时pinus的createapp返回\",{\"1\":{\"262\":1}}],[\"同时又有两个service\",{\"1\":{\"247\":1}}],[\"同时要尽量使得服务器的服务是无状态的\",{\"1\":{\"234\":1}}],[\"同时\",{\"1\":{\"230\":1,\"242\":1,\"254\":1,\"281\":1,\"509\":1}}],[\"同时上层接口仍保持json格式的接口\",{\"1\":{\"221\":1}}],[\"同时提供了route字典压缩和protobuf压缩\",{\"1\":{\"221\":1}}],[\"同时这篇文章也是\",{\"1\":{\"220\":1}}],[\"同时再刷新访问的时候\",{\"1\":{\"219\":1}}],[\"同时修改版本库\",{\"1\":{\"84\":1}}],[\"同时通过\",{\"1\":{\"29\":1}}],[\"同一时间只为一个角色服务\",{\"1\":{\"480\":1}}],[\"同一批图集\",{\"1\":{\"467\":1}}],[\"同一个\",{\"1\":{\"9\":1}}],[\"同一段内存\",{\"1\":{\"8\":1}}],[\"同种类型\",{\"1\":{\"8\":1}}],[\"的适配层代码位于\",{\"1\":{\"640\":1}}],[\"的报错\",{\"1\":{\"633\":1}}],[\"的引擎部分包括\",{\"1\":{\"628\":1}}],[\"的故事\",{\"1\":{\"549\":1,\"565\":1}}],[\"的游戏\",{\"1\":{\"512\":1}}],[\"的游戏压缩到最终的\",{\"1\":{\"476\":1}}],[\"的默认参数是\",{\"1\":{\"488\":1}}],[\"的思路\",{\"1\":{\"487\":1}}],[\"的画面是可以流畅运行的\",{\"1\":{\"482\":1}}],[\"的样子\",{\"1\":{\"482\":1}}],[\"的任意界面时\",{\"1\":{\"482\":1}}],[\"的单元格大小要适中\",{\"1\":{\"479\":1}}],[\"的情况\",{\"1\":{\"478\":1}}],[\"的情况下\",{\"1\":{\"367\":1}}],[\"的图片资源中不会用到\",{\"1\":{\"470\":1}}],[\"的输入数据\",{\"0\":{\"470\":1}}],[\"的效果\",{\"1\":{\"469\":1}}],[\"的动态合图机制\",{\"1\":{\"468\":1}}],[\"的方式\",{\"1\":{\"471\":1}}],[\"的方式来解决这个问题\",{\"1\":{\"471\":1}}],[\"的方式进行了优化\",{\"1\":{\"467\":1}}],[\"的方法及代码\",{\"1\":{\"220\":1}}],[\"的资源非常多\",{\"1\":{\"467\":1}}],[\"的两次线下活动中做了全面的技术分享\",{\"1\":{\"464\":1}}],[\"的同时\",{\"1\":{\"464\":1}}],[\"的封面可以通过插件auto\",{\"1\":{\"444\":1}}],[\"的属性里面找到一个叫targetlayersids的属性\",{\"1\":{\"399\":1}}],[\"的完整资料\",{\"1\":{\"389\":1}}],[\"的文章\",{\"1\":{\"374\":1}}],[\"的文件类型映射\",{\"1\":{\"365\":1}}],[\"的文件\",{\"1\":{\"356\":1}}],[\"的文件夹就能称之为一个\",{\"1\":{\"356\":1}}],[\"的文件头\",{\"1\":{\"29\":1}}],[\"的端口\",{\"1\":{\"365\":1}}],[\"的函数\",{\"1\":{\"364\":1}}],[\"的代码是可以混在一起调试的\",{\"1\":{\"364\":1}}],[\"的代码和\",{\"1\":{\"364\":1}}],[\"的浏览器环境代码下可以混编\",{\"1\":{\"364\":1}}],[\"的前端代码和\",{\"1\":{\"362\":1}}],[\"的前端来说开始可能有点不习惯\",{\"1\":{\"358\":1}}],[\"的使用\",{\"1\":{\"362\":1}}],[\"的插件开发有一个初步的了解\",{\"1\":{\"362\":1}}],[\"的版本\",{\"1\":{\"360\":1}}],[\"的实现是异步的\",{\"1\":{\"357\":1}}],[\"的实验结果所得\",{\"1\":{\"50\":1}}],[\"的菜单中看到的插件名称\",{\"1\":{\"356\":1}}],[\"的是当前使用的源\",{\"1\":{\"331\":1}}],[\"的配置文件\",{\"1\":{\"293\":1}}],[\"的时候都要选择宿主\",{\"1\":{\"370\":1}}],[\"的时候你可以直接从浏览器原生代码跳进\",{\"1\":{\"364\":1}}],[\"的时候\",{\"1\":{\"278\":1,\"461\":1}}],[\"的调试指导文章\",{\"1\":{\"220\":1}}],[\"的话\",{\"1\":{\"217\":1}}],[\"的错误\",{\"1\":{\"206\":1}}],[\"的行末\",{\"1\":{\"206\":1}}],[\"的作用\",{\"1\":{\"162\":1}}],[\"的类型声明\",{\"1\":{\"137\":1}}],[\"的虚拟环境\",{\"1\":{\"103\":1}}],[\"的新虚拟环境\",{\"1\":{\"103\":1}}],[\"的变动合并至当前分支\",{\"1\":{\"83\":1}}],[\"的记录\",{\"1\":{\"80\":1}}],[\"的关系是什么\",{\"1\":{\"54\":1}}],[\"的范畴了\",{\"1\":{\"51\":1}}],[\"的缩写\",{\"1\":{\"50\":1}}],[\"的区别​​\",{\"1\":{\"44\":1}}],[\"的一个用途是\",{\"1\":{\"34\":1}}],[\"的内容合并到当前分支\",{\"1\":{\"83\":1}}],[\"的内存锁定\",{\"1\":{\"34\":1}}],[\"的内部编码方式\",{\"1\":{\"13\":1}}],[\"的第一个地图层进行处理判断可视区域的范围\",{\"1\":{\"474\":1}}],[\"的第\",{\"1\":{\"32\":1}}],[\"的返回值是一个字符串\",{\"1\":{\"32\":1}}],[\"的值为\",{\"1\":{\"236\":2}}],[\"的值\",{\"1\":{\"30\":2}}],[\"的值设为\",{\"1\":{\"26\":2}}],[\"的视图和位置索引\",{\"1\":{\"30\":1}}],[\"的视图\",{\"1\":{\"30\":1}}],[\"的视图实例\",{\"1\":{\"7\":1}}],[\"的共享内存\",{\"1\":{\"29\":1}}],[\"的运算结果\",{\"1\":{\"26\":1}}],[\"的写入\",{\"0\":{\"24\":1}}],[\"的读取\",{\"0\":{\"23\":1}}],[\"的余值的绝对值是\",{\"1\":{\"14\":1}}],[\"的余值是\",{\"1\":{\"14\":1}}],[\"的规则\",{\"1\":{\"14\":2}}],[\"的补码\",{\"1\":{\"14\":1}}],[\"的二进制形式是一个\",{\"1\":{\"14\":1}}],[\"的\",{\"1\":{\"8\":1,\"23\":1,\"29\":2,\"32\":2,\"39\":1,\"40\":1,\"42\":1,\"83\":2,\"218\":1,\"346\":2,\"356\":3,\"358\":1,\"359\":2,\"360\":1,\"361\":1,\"365\":3,\"367\":2,\"369\":1,\"373\":2,\"374\":1,\"461\":1,\"628\":1}}],[\"前往蓝色星球展开冒险的故事\",{\"1\":{\"584\":1}}],[\"前两代游戏中的操作都有时间倒计时\",{\"1\":{\"545\":1}}],[\"前两个参数是可选的\",{\"1\":{\"257\":1,\"267\":1}}],[\"前线\",{\"0\":{\"514\":1}}],[\"前的图片做压缩\",{\"1\":{\"478\":1}}],[\"前人的研究成果\",{\"1\":{\"411\":1}}],[\"前一阵子一个网友找我求助\",{\"1\":{\"409\":1}}],[\"前一个字符可以出现\",{\"1\":{\"173\":3}}],[\"前面我们介绍的图层\",{\"1\":{\"400\":1}}],[\"前面我们看到api提供了首选项preference的操作\",{\"1\":{\"380\":1}}],[\"前面写的跑在浏览器的代码就是用于渲染插件界面\",{\"1\":{\"358\":1}}],[\"前端代码\",{\"1\":{\"350\":1}}],[\"前端代码美化库\",{\"1\":{\"325\":1}}],[\"前端服务器会将用户客户端请求派发到后端服务器\",{\"1\":{\"246\":1}}],[\"前端服务器会调用connector的send函数将响应或者推送的消息发送给客户端\",{\"1\":{\"195\":1}}],[\"前端服务器将用户请求路由给后端服务器时也是sys\",{\"1\":{\"245\":1}}],[\"前端服务器路由请求给后端服务器发rpc调用时\",{\"1\":{\"234\":1}}],[\"前端服务器的coserver会完成相应的服务器路由\",{\"1\":{\"230\":1}}],[\"前端服务器上的coconnector会加载connector并开启请求监听\",{\"1\":{\"230\":1}}],[\"前端服务器也可能会有类似的场景\",{\"1\":{\"230\":1}}],[\"前端服务器再将响应发送到客户端\",{\"1\":{\"192\":1}}],[\"前端服务器首先断开连接\",{\"1\":{\"188\":1}}],[\"前\",{\"1\":{\"206\":1}}],[\"前进和回退\",{\"1\":{\"84\":1}}],[\"前言\",{\"0\":{\"50\":1,\"203\":1,\"389\":1}}],[\"前者用来实现pinus应用层面的控制流程\",{\"1\":{\"221\":1}}],[\"前者是字节长度\",{\"1\":{\"17\":1}}],[\"前者的数组成员都是同一个数据类型\",{\"1\":{\"8\":1}}],[\"前三条像\",{\"1\":{\"8\":1}}],[\"所可以混合在一起来达成目的\",{\"1\":{\"395\":1}}],[\"所在的目录\",{\"1\":{\"237\":1}}],[\"所列出来的\",{\"1\":{\"82\":1}}],[\"所创建的实例的原型对象\",{\"1\":{\"52\":1}}],[\"所能容纳的数值范围是确定的\",{\"1\":{\"14\":1}}],[\"所有格子都达成这样的效果则通关\",{\"1\":{\"592\":1}}],[\"所有场景全部由折纸构成\",{\"1\":{\"517\":1}}],[\"所有与通信相关的类\",{\"1\":{\"273\":1}}],[\"所有服务器的执行都可以看作是对其组件进行生命周期管理的过程\",{\"1\":{\"262\":1}}],[\"所有加入到这个channel的玩家都会收到推送过来的消息\",{\"1\":{\"248\":1}}],[\"所有属性设置为只读\",{\"1\":{\"107\":1}}],[\"所有属性设置为必选\",{\"1\":{\"106\":1}}],[\"所有属性设置为可选\",{\"1\":{\"105\":1}}],[\"所有的目标对象\",{\"1\":{\"400\":1}}],[\"所有的完整字符命令\",{\"1\":{\"393\":1}}],[\"所有的服务器通过配置文件都能获知到master服务器的监听地址和端口\",{\"1\":{\"273\":1}}],[\"所有的服务器都进入到自己的事件循环中\",{\"1\":{\"262\":1}}],[\"所有的配置文件中\",{\"1\":{\"261\":1}}],[\"所有的客户端请求都会经过filter链进行一些处理\",{\"1\":{\"250\":1}}],[\"所有的日志将不再打印到console上\",{\"1\":{\"233\":1}}],[\"所有的\",{\"1\":{\"103\":1}}],[\"所有函数\",{\"1\":{\"54\":1}}],[\"所有函数和对象最终都是由function构造函数得来\",{\"1\":{\"53\":1}}],[\"所有成功\",{\"1\":{\"46\":1}}],[\"所有个人电脑几乎都是小端字节序\",{\"1\":{\"11\":1}}],[\"所有数组的方法\",{\"1\":{\"8\":1}}],[\"所以修改引擎后可以直接打开\",{\"1\":{\"637\":1}}],[\"所以也不易沉迷\",{\"1\":{\"560\":1}}],[\"所以也推荐你尽量使用am代码来编写插件\",{\"1\":{\"405\":1}}],[\"所以小女孩要和一只白狐一起寻找暴风雪的源头\",{\"1\":{\"551\":1}}],[\"所以这种游戏可能需要纸笔做标记而后一气呵成的操作\",{\"1\":{\"592\":1}}],[\"所以这就不介绍剧情了\",{\"1\":{\"542\":1}}],[\"所以这可能也是个很容易摔手机的游戏\",{\"1\":{\"538\":1}}],[\"所以这里就有了层级的概念\",{\"1\":{\"378\":1}}],[\"所以需要渲染的也就是这个红框里出现的格子\",{\"1\":{\"479\":1}}],[\"所以需要从中选择一个服务器的信息进行返回\",{\"1\":{\"234\":1}}],[\"所以很简单\",{\"1\":{\"474\":1}}],[\"所以不管是我\",{\"1\":{\"411\":1}}],[\"所以想要学习的小伙伴\",{\"1\":{\"411\":1}}],[\"所以阅读本篇文章\",{\"1\":{\"406\":1}}],[\"所以推荐大家少用dom\",{\"1\":{\"395\":1}}],[\"所以它们要找到母树上最后一颗还未被吸干的种子\",{\"1\":{\"529\":1}}],[\"所以它里头又包含了一个actiondescriptor\",{\"1\":{\"409\":1}}],[\"所以它是另外一个描述符对象\",{\"1\":{\"394\":1}}],[\"所以它的参数都是4长度的字符串\",{\"1\":{\"393\":1}}],[\"所以两个都可以用\",{\"1\":{\"393\":1}}],[\"所以你看到的这种不常见的语法和使用方式\",{\"1\":{\"390\":1}}],[\"所以要遍历所有图层\",{\"1\":{\"378\":1}}],[\"所以通常我们不知道图层里头都是哪些的时候\",{\"1\":{\"378\":1}}],[\"所以当你在调试如按钮的\",{\"1\":{\"367\":1}}],[\"所以开发前我们都会选择先去配置\",{\"1\":{\"359\":1}}],[\"所以我们自定义导航栏的单位都必需是px\",{\"1\":{\"499\":1}}],[\"所以我们在游戏中使用完\",{\"1\":{\"483\":1}}],[\"所以我们用了\",{\"1\":{\"480\":1}}],[\"所以我们给地图划分格子\",{\"1\":{\"479\":1}}],[\"所以我们要对\",{\"1\":{\"478\":1}}],[\"所以我们是通过这个\",{\"1\":{\"467\":1}}],[\"所以我们可以写一个单独的函数来专门解析actiondescriptor\",{\"1\":{\"398\":1}}],[\"所以我们可以这样\",{\"1\":{\"398\":1}}],[\"所以我们可以将这段代码封装一下\",{\"1\":{\"392\":1}}],[\"所以我们只要获取到这个目标对象描述\",{\"1\":{\"398\":1}}],[\"所以我们通过函数将这个命令转成索引数值\",{\"1\":{\"393\":1}}],[\"所以我们先来介绍一下它的安装和使用\",{\"1\":{\"391\":1}}],[\"所以我们第一步就是在用户级别的插件存放文件夹创建我们的插件文件夹\",{\"1\":{\"355\":1}}],[\"所以我也信心满满的将这个地址告诉了与我同一网络的同事\",{\"1\":{\"217\":1}}],[\"所以console的masterhandler回调可以省略\",{\"1\":{\"282\":1}}],[\"所以constructor属性的终点就是function这个函数\",{\"1\":{\"53\":1}}],[\"所以master组件必须在启动应用服务器之前就准备好对来自服务器的监控数据作出回应\",{\"1\":{\"262\":1}}],[\"所以会有父子关系\",{\"1\":{\"262\":1}}],[\"所以会比较简单\",{\"1\":{\"163\":1}}],[\"所以直接返回仅有的一个服务器就行了\",{\"1\":{\"234\":1}}],[\"所以他们才无法登录的\",{\"1\":{\"218\":1}}],[\"所以将这里的127\",{\"1\":{\"217\":1}}],[\"所以afterfilter中\",{\"1\":{\"197\":1}}],[\"所以建议首先做好该服务器状态信息的维护和备份等工作\",{\"1\":{\"188\":1}}],[\"所以在接入\",{\"1\":{\"461\":1}}],[\"所以在module的定义中并没有指定其type和interval配置\",{\"1\":{\"282\":1}}],[\"所以在实际开发中还是需要自己来配置router\",{\"1\":{\"246\":1}}],[\"所以在ide中\",{\"1\":{\"214\":1}}],[\"所以在生成header之前要确保设置的正确性\",{\"1\":{\"163\":1}}],[\"所以在同一段内存之中\",{\"1\":{\"22\":1}}],[\"所以说它的使用前提是你的电脑上得安装谷歌浏览器才行\",{\"1\":{\"159\":1}}],[\"所以任何对象最终都可以找到其构造函数\",{\"1\":{\"53\":1}}],[\"所以函数也拥有\",{\"1\":{\"51\":1,\"54\":1}}],[\"所以图像处理必须要像上面这样算\",{\"1\":{\"26\":1}}],[\"所以大端字节序或小端字节序是可以自行设定的\",{\"1\":{\"22\":1}}],[\"所以使用本机的字节序就可以了\",{\"1\":{\"22\":1}}],[\"所以从\",{\"1\":{\"18\":1}}],[\"所以速度快得多\",{\"1\":{\"11\":1}}],[\"所以头两个字节等于258\",{\"1\":{\"11\":1}}],[\"所以就得到了上面的结果\",{\"1\":{\"11\":1}}],[\"所以整个\",{\"1\":{\"11\":1}}],[\"所以一共可以写入\",{\"1\":{\"11\":1}}],[\"所以可以被遍历\",{\"1\":{\"10\":1}}],[\"所以\",{\"1\":{\"9\":2,\"11\":1,\"14\":1,\"19\":1,\"29\":1,\"77\":1,\"161\":1,\"234\":1,\"394\":1,\"399\":2,\"411\":1}}],[\"所以有必要检查是否分配成功\",{\"1\":{\"5\":1}}],[\"所以统称为二进制数组\",{\"1\":{\"0\":1}}],[\"都为\",{\"1\":{\"501\":1}}],[\"都为维护自己的socket信息\",{\"1\":{\"273\":1}}],[\"都要重新生成对应的平台图集\",{\"1\":{\"488\":1}}],[\"都要考虑到这里\",{\"1\":{\"380\":1}}],[\"都用统一的\",{\"1\":{\"469\":1}}],[\"都不会打断合批渲染\",{\"1\":{\"467\":1}}],[\"都不影响package层编码和发送\",{\"1\":{\"221\":1}}],[\"都可以用am代码来写\",{\"1\":{\"405\":1}}],[\"都可以通过这种方式来获取到\",{\"1\":{\"399\":1}}],[\"都在根对象\",{\"1\":{\"400\":1}}],[\"都具备了哪些属性\",{\"1\":{\"399\":1}}],[\"都能拿到一致的\",{\"1\":{\"399\":1}}],[\"都能用方括号运算符\",{\"1\":{\"8\":1}}],[\"都指向同一个图层\",{\"1\":{\"399\":1}}],[\"都拿到了\",{\"1\":{\"398\":1}}],[\"都应该用过chrome的开发者工具\",{\"1\":{\"400\":1}}],[\"都应该知道\",{\"1\":{\"398\":1}}],[\"都应该是只可读不可写的\",{\"1\":{\"247\":1}}],[\"都无法通过dom\",{\"1\":{\"389\":1}}],[\"都会对这些人物建筑物进行排序\",{\"1\":{\"485\":1}}],[\"都会有一个目标对象描述\",{\"1\":{\"398\":1}}],[\"都会有用户登录的请求\",{\"1\":{\"196\":1}}],[\"都会在scriptlistener中有输出\",{\"1\":{\"396\":1}}],[\"都会转化成一个action\",{\"1\":{\"390\":1}}],[\"都会纳闷\",{\"1\":{\"389\":1}}],[\"都会从官方那里找到photoshop\",{\"1\":{\"377\":1}}],[\"都分为development和production两种配置模式\",{\"1\":{\"261\":1}}],[\"都将导致散列结果的明显变化\",{\"1\":{\"151\":1}}],[\"都是从各种角落\",{\"1\":{\"411\":1}}],[\"都是源于底层c的转换逻辑\",{\"1\":{\"397\":1}}],[\"都是由这几个对象组成\",{\"1\":{\"394\":1}}],[\"都是通过这个预留的图层索引来操作的\",{\"1\":{\"378\":1}}],[\"都是折磨\",{\"1\":{\"372\":1}}],[\"都是说\",{\"1\":{\"356\":1}}],[\"都是很常见和使用的一些特性\",{\"1\":{\"348\":1}}],[\"都是用来修改原始session中的settings字段或者绑定\",{\"1\":{\"247\":1}}],[\"都是退回本地仓库的\",{\"1\":{\"80\":1}}],[\"都是同一种类型\",{\"1\":{\"8\":1}}],[\"都有一个静态方法\",{\"1\":{\"21\":1}}],[\"都有一个\",{\"1\":{\"12\":1}}],[\"都有\",{\"1\":{\"8\":1}}],[\"个人认为2作仍然保持或者说提高了前一部的水准\",{\"1\":{\"509\":1}}],[\"个月的优化\",{\"1\":{\"465\":1}}],[\"个方法写入内存\",{\"1\":{\"24\":1}}],[\"个方法读取内存\",{\"1\":{\"23\":1}}],[\"个\",{\"1\":{\"22\":3,\"489\":1}}],[\"个整数\",{\"1\":{\"11\":1,\"30\":1}}],[\"个成员的\",{\"1\":{\"9\":1}}],[\"个成员\",{\"1\":{\"9\":6}}],[\"个成员都是\",{\"1\":{\"8\":1}}],[\"个空位\",{\"1\":{\"8\":1}}],[\"个构造函数生成的数组\",{\"1\":{\"8\":1}}],[\"个字节的\",{\"1\":{\"9\":1,\"24\":8}}],[\"个字节的内存\",{\"1\":{\"9\":1}}],[\"个字节开始存\",{\"1\":{\"9\":1}}],[\"个字节前面结束\",{\"1\":{\"6\":1}}],[\"个字节\",{\"1\":{\"6\":1,\"8\":9,\"11\":2,\"23\":9}}],[\"每关游戏的成功路径不止一种\",{\"1\":{\"577\":1}}],[\"每帧都可用作壁纸的唯美画风配上灵动的音乐\",{\"1\":{\"506\":1}}],[\"每当你从论坛\",{\"1\":{\"389\":1}}],[\"每次挑战成功一个新数字\",{\"1\":{\"606\":1}}],[\"每次操作也都会产生新数字\",{\"1\":{\"606\":1}}],[\"每次使用铁球或撞上障碍物会掉球数\",{\"1\":{\"596\":1}}],[\"每次layers都只能遍历当前层级的第一个子层级列表\",{\"1\":{\"378\":1}}],[\"每次代码执行结束连接不会断开\",{\"1\":{\"370\":1}}],[\"每次当你关闭调式中的\",{\"1\":{\"367\":1}}],[\"每次保存待编译文件都会自动更新编译文件\",{\"1\":{\"138\":1}}],[\"每5秒拉一次\",{\"1\":{\"272\":1}}],[\"每隔5秒获取一次数据\",{\"1\":{\"272\":1}}],[\"每类filter都可以注册多个\",{\"1\":{\"250\":1}}],[\"每一关\",{\"1\":{\"575\":1}}],[\"每一帧\",{\"1\":{\"485\":1}}],[\"每一个关键步骤都有或多或少的暗示和引导\",{\"1\":{\"508\":1}}],[\"每一个面板都是一个独立的进程\",{\"1\":{\"356\":1}}],[\"每一个面板都可以称之为一个子插件\",{\"1\":{\"356\":1}}],[\"每一个面板都可以视为一个子插件\",{\"1\":{\"356\":1}}],[\"每一个回调函数的签名为xxxhandler\",{\"1\":{\"273\":1}}],[\"每一个module会定义四个回调monitorhandler\",{\"1\":{\"273\":1}}],[\"每一个module中都会定义下面四种回调函数\",{\"1\":{\"255\":1}}],[\"每一个monitor收到关闭命令后\",{\"1\":{\"273\":1}}],[\"每一个组件在导出的时候\",{\"1\":{\"262\":1}}],[\"每一个pinus的组件都会定义start\",{\"1\":{\"262\":1}}],[\"每一个服务器要启动的地址\",{\"1\":{\"262\":1}}],[\"每一个uid会对应多个session\",{\"1\":{\"230\":1}}],[\"每一个channel中维护一个uid列表\",{\"1\":{\"230\":1}}],[\"每一个channel可以看作是一系列绑定用户的uid集合\",{\"1\":{\"230\":1}}],[\"每一个session都会维护与其相关的socket\",{\"1\":{\"194\":1}}],[\"每一个都是\",{\"1\":{\"9\":1}}],[\"每一种视图的构造函数\",{\"1\":{\"12\":1}}],[\"每一种视图都是一种构造函数\",{\"1\":{\"8\":1}}],[\"每个人都不能选择自己的出身\",{\"1\":{\"599\":1}}],[\"每个玩家使用资源的顺序也不尽相同\",{\"1\":{\"467\":1}}],[\"每个元素的上下级节点\",{\"1\":{\"400\":1}}],[\"每个对象设置相应的属性值\",{\"1\":{\"394\":1}}],[\"每个对象都有构造函数\",{\"1\":{\"53\":2}}],[\"每个应用服务器接收到stop通告后\",{\"1\":{\"262\":1}}],[\"每个component往往有start\",{\"1\":{\"253\":1}}],[\"每个component完成一些功能\",{\"1\":{\"253\":1}}],[\"每个session由sessionid以及serverid来指定其前端的连接信息\",{\"1\":{\"230\":1}}],[\"每个客户端sdk的每一个版本都有一个固定的版本号\",{\"1\":{\"223\":1}}],[\"每个函数在创建的时候\",{\"1\":{\"53\":1}}],[\"每个结果对象包含\",{\"1\":{\"43\":1}}],[\"每个线程的数据都是隔离的\",{\"1\":{\"29\":1}}],[\"每个字符占用2个字节\",{\"1\":{\"13\":1}}],[\"每个字节的值默认都是\",{\"1\":{\"4\":1}}],[\"每个成员\",{\"1\":{\"9\":1}}],[\"每个成员占\",{\"1\":{\"9\":2}}],[\"一文看懂\",{\"1\":{\"625\":1}}],[\"一上线发现它不在\",{\"1\":{\"602\":1}}],[\"一起玩陶艺\",{\"0\":{\"598\":1}}],[\"一起构造属于你们的世界\",{\"1\":{\"559\":1}}],[\"一共需要穿两层\",{\"1\":{\"592\":1}}],[\"一股历史感扑面而来\",{\"1\":{\"589\":1}}],[\"一边体会文字与印刷术悠久的发展历史\",{\"1\":{\"589\":1}}],[\"一边把代码拷贝出来贴进去\",{\"1\":{\"389\":1}}],[\"一段光影交织的旅程\",{\"1\":{\"588\":1}}],[\"一人一画一世界\",{\"1\":{\"586\":1}}],[\"一心寻找剧情\",{\"1\":{\"578\":1}}],[\"一家庞大而废弃的精神病院即将被拆除\",{\"1\":{\"564\":1}}],[\"一开始给出几种基本元素\",{\"1\":{\"560\":1}}],[\"一堆怪物\",{\"1\":{\"556\":1}}],[\"一种未来病毒穿越到现代\",{\"1\":{\"546\":1}}],[\"一种是master给其发了通知或请求\",{\"1\":{\"272\":1}}],[\"一种是monitor向master上报信息\",{\"1\":{\"272\":1}}],[\"一种是定时器的周期事件\",{\"1\":{\"272\":1}}],[\"一种是每隔5秒产生的一次拉数据事件\",{\"1\":{\"272\":1}}],[\"一种是\",{\"1\":{\"8\":1}}],[\"一款撞车游戏\",{\"1\":{\"605\":1}}],[\"一款足够耐玩的休闲游戏\",{\"1\":{\"601\":1}}],[\"一款足够耐玩却很肝的模拟经营类游戏\",{\"1\":{\"535\":1}}],[\"一款很佛系的休闲游戏\",{\"1\":{\"598\":1}}],[\"一款很有趣的模拟养成游戏\",{\"1\":{\"567\":1}}],[\"一款题材有趣的老解谜游戏\",{\"1\":{\"593\":1}}],[\"一款题材新颖的休闲策略类游戏\",{\"1\":{\"522\":1}}],[\"一款不能太相信自己脑力的休闲益智游戏\",{\"1\":{\"592\":1}}],[\"一款积木块画风的跑酷游戏\",{\"1\":{\"583\":1}}],[\"一款积木画风的点触式音乐游戏\",{\"1\":{\"575\":1}}],[\"一款画风清新简易的益智游戏\",{\"1\":{\"577\":1}}],[\"一款画风精致的动作射击游戏\",{\"1\":{\"571\":1}}],[\"一款画风简易的休闲益智游戏\",{\"1\":{\"606\":1}}],[\"一款画风简易的休闲小游戏\",{\"1\":{\"545\":1}}],[\"一款画风简易的策略类卡牌游戏\",{\"1\":{\"574\":1}}],[\"一款画风简洁的休闲益智小游戏\",{\"1\":{\"568\":1}}],[\"一款卡通画风的rpg休闲游戏\",{\"1\":{\"570\":1}}],[\"一款让手残党窒息的横版跑酷游戏\",{\"1\":{\"562\":1}}],[\"一款脑洞大开的休闲益智游戏\",{\"1\":{\"560\":1}}],[\"一款佛系男女必备的禅意游戏\",{\"1\":{\"557\":1}}],[\"一款像素风闯关冒险游戏\",{\"1\":{\"550\":1}}],[\"一款节奏很快\",{\"1\":{\"544\":1}}],[\"一款混合arpg与rts类型元素的游戏\",{\"1\":{\"537\":1}}],[\"一款打击感超强的arpg手游\",{\"1\":{\"534\":1}}],[\"一款超级唯美\",{\"1\":{\"529\":1}}],[\"一部可以玩的动画片\",{\"1\":{\"590\":1}}],[\"一部可以玩的侦探小说\",{\"1\":{\"580\":1}}],[\"一部可游玩的漫画\",{\"1\":{\"528\":1}}],[\"一部可编辑的连环画\",{\"1\":{\"520\":1}}],[\"一部自由度很高的解谜游戏\",{\"1\":{\"511\":1}}],[\"一如既往的漫画手绘风格和应景的音乐与喊叫声把我们带入了这场紧张的战斗\",{\"1\":{\"514\":1}}],[\"一探究竟\",{\"0\":{\"497\":1}}],[\"一级标题\",{\"1\":{\"416\":1}}],[\"一定能成为5星级休闲游戏\",{\"1\":{\"598\":1}}],[\"一定记得从上篇开始阅读\",{\"1\":{\"411\":1}}],[\"一定要专注认真\",{\"1\":{\"406\":1}}],[\"一定是在\",{\"1\":{\"30\":1}}],[\"一定是在它后面所有可能会读取该位置的操作开始之前执行\",{\"1\":{\"30\":1}}],[\"一定是在它前面的所有可能会改写内存的操作结束后执行\",{\"1\":{\"30\":1}}],[\"一定是早于\",{\"1\":{\"30\":1}}],[\"一定是作为一个整体运行的\",{\"1\":{\"29\":1}}],[\"一方面相比set而言\",{\"1\":{\"397\":1}}],[\"一看就明白了\",{\"1\":{\"394\":1}}],[\"一切都可以通过它开始\",{\"1\":{\"377\":1}}],[\"一组相关的供不同主体调用的回调函数构成一个admin\",{\"1\":{\"272\":1}}],[\"一台服务器可能就无法承受同一时刻巨大的访问量\",{\"1\":{\"234\":1}}],[\"一般参数类型就是自己本身\",{\"1\":{\"394\":1}}],[\"一般用的都比较少\",{\"1\":{\"386\":1}}],[\"一般都用到了es6的标准\",{\"1\":{\"376\":1}}],[\"一般在start回调里会做一些初始化信息\",{\"1\":{\"274\":1}}],[\"一般在coserver的处理中\",{\"1\":{\"196\":2}}],[\"一般需要指定一个moduleid\",{\"1\":{\"272\":1}}],[\"一般是由一个服务器群来支持\",{\"1\":{\"272\":1}}],[\"一般使用自增的方式来生成\",{\"1\":{\"247\":1}}],[\"一般不参与rpc调用\",{\"1\":{\"241\":1}}],[\"一般来说直接在\",{\"1\":{\"369\":1}}],[\"一般来说具体的同类型应用服务器都会有多个\",{\"1\":{\"246\":1}}],[\"一般来说在开发环境中\",{\"1\":{\"233\":1}}],[\"一般来说客户端的响应都是在handler的具体逻辑中生成\",{\"1\":{\"197\":1}}],[\"一般来说\",{\"1\":{\"196\":1,\"261\":1,\"278\":1}}],[\"一般情况下会由app来充当\",{\"1\":{\"234\":1}}],[\"一般情况下\",{\"1\":{\"161\":1,\"273\":1,\"282\":1}}],[\"一\",{\"0\":{\"157\":1,\"205\":1,\"208\":1,\"212\":1}}],[\"一次性执行多个任务\",{\"1\":{\"170\":1}}],[\"一次性编译\",{\"1\":{\"138\":1}}],[\"一次性从工作区提交到本地仓库\",{\"1\":{\"74\":1}}],[\"一张图理解prototype\",{\"1\":{\"54\":1}}],[\"一直找\",{\"1\":{\"54\":1}}],[\"一旦触发了toobusy\",{\"1\":{\"201\":1}}],[\"一旦检测到node\",{\"1\":{\"201\":1}}],[\"一旦你下载的应用程序\",{\"1\":{\"159\":1}}],[\"一旦指定该选项\",{\"1\":{\"137\":1}}],[\"一旦实际值等于预期值\",{\"1\":{\"32\":1}}],[\"一旦该位置的值变了\",{\"1\":{\"30\":1}}],[\"一条普通的命令被编译器处理以后\",{\"1\":{\"29\":1}}],[\"一样的黑底绿字画面\",{\"1\":{\"572\":1}}],[\"一样\",{\"1\":{\"29\":1,\"558\":1}}],[\"一模一样\",{\"1\":{\"29\":1}}],[\"一个憨憨的胖子一直在横向奔跑\",{\"1\":{\"597\":1}}],[\"一个选择能同时增加所有数值\",{\"1\":{\"574\":1}}],[\"一个崭新的机械世界\",{\"1\":{\"511\":1}}],[\"一个好的封面需要\",{\"1\":{\"444\":1}}],[\"一个很小的窗户\",{\"1\":{\"390\":1}}],[\"一个面板其实相当于一个浏览器标签页\",{\"1\":{\"357\":1}}],[\"一个\",{\"1\":{\"356\":2,\"359\":1}}],[\"一个包含\",{\"1\":{\"356\":1}}],[\"一个中等混淆强度的配置选项如下\",{\"1\":{\"308\":1}}],[\"一个module有两个属性很重要\",{\"1\":{\"272\":1}}],[\"一个admin\",{\"1\":{\"272\":1}}],[\"一个pinus的应用\",{\"1\":{\"272\":1}}],[\"一个plugin由多个component以及一些事件响应处理器组成\",{\"1\":{\"256\":1}}],[\"一个插件由多个component和一组对应用的事件进行响应的事件处理组成\",{\"1\":{\"261\":1}}],[\"一个在web\",{\"1\":{\"257\":1}}],[\"一个在game\",{\"1\":{\"257\":1}}],[\"一个玩家的id可能会被加入到多个channel中\",{\"1\":{\"248\":1}}],[\"一个session一旦建立\",{\"1\":{\"247\":1}}],[\"一个应用的gate服务器\",{\"1\":{\"241\":1}}],[\"一个uid可以加入多个channel中\",{\"1\":{\"230\":1}}],[\"一个客户端连接就对应一个session\",{\"1\":{\"230\":1}}],[\"一个聊天室的成员应分为一组\",{\"1\":{\"230\":1}}],[\"一个工程一个collection\",{\"1\":{\"162\":1}}],[\"一个成员\",{\"1\":{\"19\":1}}],[\"一个简单转换规则\",{\"1\":{\"14\":1}}],[\"一个占据四个字节的\",{\"1\":{\"11\":1}}],[\"一个视图修改底层内存\",{\"1\":{\"4\":1}}],[\"不然游戏结束\",{\"1\":{\"583\":1}}],[\"不如去玩玩游戏\",{\"1\":{\"558\":1}}],[\"不断突破自己的极限\",{\"1\":{\"566\":1}}],[\"不断勾起我小时候玩游戏的种种回忆\",{\"1\":{\"553\":1}}],[\"不断新增或强化瘟疫的症状和特性\",{\"1\":{\"522\":1}}],[\"不建议跳着玩\",{\"1\":{\"524\":1}}],[\"不做移动\",{\"1\":{\"484\":1}}],[\"不用关心这个隐藏的索引数值\",{\"1\":{\"378\":1}}],[\"不用通过channel\",{\"1\":{\"230\":1}}],[\"不要有边框\",{\"1\":{\"444\":1}}],[\"不要和我说话你不需要\",{\"1\":{\"372\":1}}],[\"不要发送不带参数的request\",{\"1\":{\"278\":1}}],[\"不支持\",{\"0\":{\"372\":1}}],[\"不支持该类型\",{\"1\":{\"26\":1}}],[\"不是直接销毁\",{\"1\":{\"483\":1}}],[\"不是所有图片都要使用\",{\"1\":{\"478\":1}}],[\"不是所有的ps操作\",{\"1\":{\"396\":1}}],[\"不是所有的缩写命令和完整命令都能相互转换\",{\"1\":{\"393\":1}}],[\"不是门\",{\"1\":{\"390\":1}}],[\"不是\",{\"1\":{\"356\":1,\"357\":1}}],[\"不是很高效\",{\"1\":{\"32\":1}}],[\"不需要任何编译操作\",{\"1\":{\"640\":1}}],[\"不需要解压该\",{\"1\":{\"636\":2}}],[\"不需要配置\",{\"1\":{\"261\":1}}],[\"不需要数据类型转换\",{\"1\":{\"11\":1}}],[\"不调用configure\",{\"1\":{\"258\":1}}],[\"不设置则对所有服务器执行初始化function\",{\"1\":{\"257\":1,\"267\":1}}],[\"不设置页可以调试\",{\"1\":{\"209\":1}}],[\"不至于当出现这些术语时一头雾水\",{\"1\":{\"256\":1}}],[\"不至于看到相应术语时产生迷惑\",{\"1\":{\"240\":1}}],[\"不仅剧情\",{\"1\":{\"546\":1}}],[\"不仅仅有连接的socket\",{\"1\":{\"273\":1}}],[\"不仅仅是字符串\",{\"1\":{\"29\":1}}],[\"不仅可以提供component的功能\",{\"1\":{\"256\":1}}],[\"不过只有\",{\"1\":{\"606\":1}}],[\"不过只有你死了\",{\"1\":{\"545\":1}}],[\"不过你每开一辆车\",{\"1\":{\"605\":1}}],[\"不过你会发现当文档图层很多\",{\"1\":{\"378\":1}}],[\"不过有许多商品需要同时花费金币和钻石\",{\"1\":{\"598\":1}}],[\"不过最重要的还是勾起了它们以前和同伴比切磋的回忆\",{\"1\":{\"596\":1}}],[\"不过最让我欣赏的还是那些bgm\",{\"1\":{\"547\":1}}],[\"不过是在解谜过程中有音乐相伴\",{\"1\":{\"591\":1}}],[\"不过主角尖锐滑稽的配音与幽默\",{\"1\":{\"590\":1}}],[\"不过游戏依然有一些缺点\",{\"1\":{\"580\":1}}],[\"不过\",{\"1\":{\"578\":1}}],[\"不过依然很沙雕\",{\"1\":{\"563\":1}}],[\"不过玩着真爽呀\",{\"1\":{\"550\":1}}],[\"不过好在路程简短\",{\"1\":{\"544\":1}}],[\"不过刻画精细的模型与优美空灵的音乐倒是也能提高玩家们的耐心\",{\"1\":{\"538\":1}}],[\"不过随着居民人数上升\",{\"1\":{\"535\":1}}],[\"不过这游戏也是挺关心人的\",{\"1\":{\"604\":1}}],[\"不过这款游戏还是很能满足收集欲的\",{\"1\":{\"602\":1}}],[\"不过这种设定对当时的玩家来说也算正常\",{\"1\":{\"593\":1}}],[\"不过这也是一款看广告什么都能干的游戏\",{\"1\":{\"575\":1}}],[\"不过这么绚丽的游戏1\",{\"1\":{\"534\":1}}],[\"不过这部的主题变为了森林或自然\",{\"1\":{\"515\":1}}],[\"不过相互配合也达到了渲染主题的作用\",{\"1\":{\"522\":1}}],[\"不过框架的旋转与反复使用频率的提高使得2作比1作要更难一些\",{\"1\":{\"521\":1}}],[\"不过在界面设计上又少了某些细节\",{\"1\":{\"516\":1}}],[\"不过在module中实现的是监控逻辑\",{\"1\":{\"255\":1}}],[\"不过可能希望不大了\",{\"1\":{\"511\":1}}],[\"不过解谜格局的开阔让人更舒适了\",{\"1\":{\"509\":1}}],[\"不过2作也有值得赞叹的地方\",{\"1\":{\"507\":1}}],[\"不过也缺少了属性类型等信息\",{\"1\":{\"402\":1}}],[\"不过虽然如此\",{\"1\":{\"376\":1}}],[\"不过为了保持示例的简单化\",{\"1\":{\"272\":1}}],[\"不过都是可选的\",{\"1\":{\"255\":1}}],[\"不过与frontendsession一样\",{\"1\":{\"247\":1}}],[\"不过与上面beforefilter和handler不同的是\",{\"1\":{\"197\":1}}],[\"不过对frontendsession中与session中相同的只读字段的修改并不会反映到原始的session中\",{\"1\":{\"247\":1}}],[\"不推荐在线上使用该命令\",{\"1\":{\"233\":1}}],[\"不再需要路由计算\",{\"1\":{\"230\":1}}],[\"不压缩\",{\"1\":{\"223\":1}}],[\"不借助一个代理工具\",{\"1\":{\"220\":1}}],[\"不能够做更丰富的title效果\",{\"1\":{\"495\":1}}],[\"不能想当然\",{\"1\":{\"469\":1}}],[\"不能嵌入\",{\"1\":{\"356\":1}}],[\"不能办到\",{\"1\":{\"220\":1}}],[\"不能访问google\",{\"1\":{\"159\":1}}],[\"不能是负数\",{\"1\":{\"23\":1}}],[\"不报告未使用的标签错误\",{\"1\":{\"137\":1}}],[\"不报告执行不到的代码错误\",{\"1\":{\"137\":1}}],[\"不加可选参数url\",{\"1\":{\"298\":1}}],[\"不加\",{\"1\":{\"85\":1,\"93\":1}}],[\"不取消\",{\"1\":{\"80\":1}}],[\"不改变文件内容\",{\"1\":{\"79\":1,\"80\":2}}],[\"不忽略classes目录下的a\",{\"1\":{\"65\":1}}],[\"不忽略\",{\"1\":{\"65\":4}}],[\"不等于\",{\"1\":{\"32\":1}}],[\"不像其他解谜游戏会给人某种莫名其妙感\",{\"1\":{\"508\":1}}],[\"不像\",{\"1\":{\"29\":1}}],[\"不含该成员\",{\"1\":{\"19\":1}}],[\"不含该字节\",{\"1\":{\"6\":1}}],[\"不同类型的主题背景大大提高了游戏耐玩性\",{\"1\":{\"601\":1}}],[\"不同类型的羊还有不同的特性\",{\"1\":{\"563\":1}}],[\"不同类型的消息\",{\"1\":{\"228\":1}}],[\"不同清晰度的资源\",{\"1\":{\"477\":1}}],[\"不同主题下的面板图标\",{\"1\":{\"356\":1}}],[\"不同项目自动切换不同的node版本\",{\"0\":{\"289\":1}}],[\"不同服务器进程之间相互通信需要通过rpc调用\",{\"1\":{\"271\":1,\"285\":1}}],[\"不同的是它那柔和稍带阴郁的画风与让人泪目的剧情\",{\"1\":{\"525\":1}}],[\"不同的是backendsession的这些调用实际上都是名字空间为sys的远程调用\",{\"1\":{\"247\":1}}],[\"不同的图片使用差异化配置\",{\"1\":{\"477\":1}}],[\"不同的\",{\"1\":{\"461\":1}}],[\"不同的类型\",{\"1\":{\"398\":1}}],[\"不同的宿主可以使用不同的端口号\",{\"1\":{\"365\":1}}],[\"不同的系统配置方式不同\",{\"1\":{\"359\":1}}],[\"不同的进程相互是隔离的\",{\"1\":{\"356\":1}}],[\"不同的面板它们的\",{\"1\":{\"356\":1,\"357\":1}}],[\"不同的组件在启动时会开启不同的功能\",{\"1\":{\"262\":1}}],[\"不同的环境\",{\"1\":{\"261\":1}}],[\"不同的消息类型有着不同的消息内容\",{\"1\":{\"227\":1}}],[\"不同的消息类型有着不同的消息头\",{\"1\":{\"226\":1}}],[\"不同的视图类型\",{\"1\":{\"14\":1}}],[\"不同数据有不同的解读方式\",{\"1\":{\"8\":1}}],[\"不会返回其它的属性\",{\"1\":{\"399\":1}}],[\"不会自己写\",{\"1\":{\"396\":1}}],[\"不会因为一个面板崩溃影响到另一个面板\",{\"1\":{\"356\":1}}],[\"不会传入参数\",{\"1\":{\"277\":1}}],[\"不会对前端的原始session造成任何影响\",{\"1\":{\"230\":1}}],[\"不会\",{\"1\":{\"86\":1}}],[\"不会覆盖\",{\"1\":{\"54\":1}}],[\"不会在原数组的内存上建立视图\",{\"1\":{\"9\":1}}],[\"不会在原数组的内存之上建立视图\",{\"1\":{\"9\":1}}],[\"不会有空位\",{\"1\":{\"8\":1}}],[\"tyora\",{\"0\":{\"655\":1}}],[\"typora\",{\"1\":{\"430\":3,\"431\":1}}],[\"typings\",{\"1\":{\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":4,\"131\":1}}],[\"typecreateoredittool\",{\"1\":{\"409\":1}}],[\"typeidtostringid就是反过来把数值转成可读的字符串\",{\"1\":{\"393\":1}}],[\"typeidtostringid\",{\"1\":{\"393\":3,\"398\":4}}],[\"typeidtocharid\",{\"1\":{\"393\":2,\"394\":1}}],[\"typeid\",{\"0\":{\"393\":1},\"1\":{\"393\":2,\"398\":15}}],[\"typeunits\",{\"1\":{\"380\":4}}],[\"typeunit\",{\"1\":{\"380\":2}}],[\"typename\",{\"1\":{\"378\":1,\"379\":1,\"392\":1}}],[\"type=\",{\"1\":{\"356\":4}}],[\"type>\",{\"1\":{\"356\":1}}],[\"type指出的是数据所采用的方式\",{\"1\":{\"272\":1}}],[\"type和interval\",{\"1\":{\"272\":1}}],[\"type用来标识消息类型\",{\"1\":{\"227\":1}}],[\"type字段和占用1个bit的route标识\",{\"1\":{\"227\":1}}],[\"type与请求参数的格式之间是有关联关系\",{\"1\":{\"161\":1}}],[\"typestring\",{\"1\":{\"398\":5}}],[\"typesearch\",{\"1\":{\"124\":1,\"131\":1}}],[\"types\",{\"1\":{\"124\":4,\"137\":1,\"338\":1,\"376\":1,\"612\":4}}],[\"typescript\",{\"1\":{\"122\":1,\"124\":2,\"133\":1,\"341\":2,\"343\":1,\"345\":1,\"372\":1,\"376\":2}}],[\"type\",{\"0\":{\"124\":1},\"1\":{\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":2,\"110\":2,\"111\":2,\"112\":2,\"113\":2,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":2,\"119\":2,\"120\":2,\"121\":2,\"222\":1,\"223\":2,\"229\":1,\"264\":1,\"272\":2,\"344\":1,\"346\":1,\"370\":4,\"392\":14,\"398\":2,\"408\":2,\"442\":1,\"491\":1}}],[\"typearray\",{\"1\":{\"20\":1,\"22\":1}}],[\"typedarray\",{\"0\":{\"15\":1,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1},\"1\":{\"0\":1,\"3\":2,\"4\":8,\"7\":1,\"8\":9,\"9\":20,\"10\":26,\"11\":3,\"12\":2,\"14\":1,\"15\":1,\"16\":2,\"17\":1,\"18\":2,\"19\":1,\"20\":1,\"21\":3,\"22\":5,\"26\":2,\"27\":2}}],[\"tlsv1\",{\"1\":{\"636\":4}}],[\"twitter\",{\"1\":{\"442\":2,\"453\":2}}],[\"two\",{\"1\":{\"41\":2}}],[\"tileset1360×758\",{\"1\":{\"475\":1}}],[\"tiled\",{\"1\":{\"475\":1}}],[\"tiledmap52434×1262\",{\"1\":{\"474\":1}}],[\"tiledmap41098×510\",{\"1\":{\"474\":1}}],[\"tiledmap3934×469\",{\"1\":{\"474\":1}}],[\"tiledmap21178×396\",{\"1\":{\"474\":1}}],[\"tiledmap2262×456\",{\"1\":{\"474\":1}}],[\"tiledmap\",{\"0\":{\"474\":1},\"1\":{\"474\":4}}],[\"tile\",{\"0\":{\"475\":1},\"1\":{\"474\":1,\"475\":1}}],[\"title\",{\"1\":{\"399\":1,\"442\":2}}],[\"title>\",{\"1\":{\"357\":1}}],[\"tinypng\",{\"0\":{\"316\":1},\"1\":{\"318\":1,\"319\":5,\"320\":1,\"478\":1}}],[\"timecolor\",{\"1\":{\"454\":1}}],[\"timereport\",{\"1\":{\"272\":5}}],[\"timefilter\",{\"1\":{\"261\":1,\"271\":1}}],[\"time\",{\"0\":{\"200\":1},\"1\":{\"271\":2,\"272\":4}}],[\"timedata\",{\"1\":{\"272\":5}}],[\"timed\",{\"1\":{\"32\":1}}],[\"timeoutfilter\",{\"1\":{\"261\":1,\"271\":1}}],[\"timeout\",{\"0\":{\"199\":1},\"1\":{\"32\":1,\"230\":1,\"271\":3}}],[\"tutorial\",{\"1\":{\"234\":1,\"272\":1,\"456\":1}}],[\"tcp\",{\"1\":{\"221\":1,\"365\":3}}],[\"tcp粘包\",{\"0\":{\"177\":1}}],[\"taptap上这13款游戏的平均得分高达9\",{\"1\":{\"523\":1}}],[\"taskmanager中维护着一个task队列\",{\"1\":{\"198\":1}}],[\"taskname\",{\"1\":{\"169\":1}}],[\"task\",{\"1\":{\"169\":1,\"170\":5,\"171\":2,\"319\":1}}],[\"taobao\",{\"1\":{\"102\":1,\"331\":2,\"332\":1}}],[\"taro组件github地址详细用法请参考readme\",{\"1\":{\"503\":1}}],[\"taro\",{\"1\":{\"501\":2}}],[\"tar\",{\"1\":{\"97\":2}}],[\"tarr\",{\"1\":{\"21\":6}}],[\"targetnum\",{\"1\":{\"394\":1}}],[\"targetenum\",{\"1\":{\"394\":3,\"395\":1,\"400\":1,\"408\":1}}],[\"targetlayersids\",{\"1\":{\"393\":1,\"399\":3}}],[\"targets\",{\"1\":{\"366\":1}}],[\"target部分找到你的\",{\"1\":{\"343\":1}}],[\"target\",{\"1\":{\"10\":1,\"29\":1,\"137\":1,\"366\":1,\"367\":1,\"394\":3,\"398\":1,\"399\":2,\"408\":1}}],[\"tstarve淘宝¥\",{\"1\":{\"533\":1}}],[\"ts编译\",{\"1\":{\"376\":1}}],[\"tsx文件里支持jsx\",{\"1\":{\"137\":1}}],[\"tsconfig\",{\"1\":{\"341\":1}}],[\"tsc\",{\"1\":{\"134\":1,\"136\":1,\"138\":3,\"344\":1}}],[\"ts\",{\"1\":{\"95\":2,\"122\":1,\"131\":1,\"137\":2,\"138\":1,\"341\":7,\"344\":2,\"372\":1,\"612\":1}}],[\"temp\",{\"1\":{\"382\":3}}],[\"term\",{\"1\":{\"103\":1}}],[\"testts1786×814\",{\"1\":{\"479\":1}}],[\"test1812×1018\",{\"1\":{\"479\":1}}],[\"testmsg参数在这里仅仅用来示例如何传参\",{\"1\":{\"272\":1}}],[\"testmsg\",{\"1\":{\"272\":3}}],[\"test等\",{\"1\":{\"233\":1}}],[\"test\",{\"1\":{\"70\":1,\"308\":2,\"335\":2,\"372\":5,\"382\":1,\"443\":1}}],[\"textfileasblob\",{\"1\":{\"491\":3}}],[\"texttowrite\",{\"1\":{\"491\":3}}],[\"texttoolcharacteroptions\",{\"1\":{\"400\":1,\"409\":6}}],[\"texttool\",{\"1\":{\"400\":2,\"409\":2}}],[\"texturerecycle\",{\"1\":{\"487\":1}}],[\"texture2d\",{\"1\":{\"487\":2}}],[\"texture\",{\"1\":{\"467\":3}}],[\"textstyle\",{\"1\":{\"400\":1,\"409\":8}}],[\"textcontent\",{\"1\":{\"357\":1}}],[\"text\",{\"1\":{\"25\":1,\"400\":2,\"409\":6}}],[\"tmp\",{\"1\":{\"65\":1}}],[\"txt文件查看\",{\"1\":{\"298\":2}}],[\"txt文件\",{\"1\":{\"65\":2}}],[\"txt\",{\"1\":{\"65\":2,\"170\":1,\"171\":1}}],[\"trgt\",{\"1\":{\"399\":5,\"400\":3,\"402\":1,\"404\":1,\"408\":1,\"409\":1}}],[\"transform\",{\"1\":{\"394\":3,\"395\":3}}],[\"transformobjectkeys\",{\"1\":{\"310\":1,\"311\":1}}],[\"traceback\",{\"1\":{\"636\":2}}],[\"trace\",{\"1\":{\"382\":1}}],[\"trmap\",{\"1\":{\"333\":1}}],[\"tree\",{\"1\":{\"262\":1,\"377\":2,\"389\":2}}],[\"try\",{\"1\":{\"45\":2,\"47\":1,\"501\":1}}],[\"true\",{\"1\":{\"7\":1,\"22\":1,\"23\":2,\"24\":4,\"29\":16,\"137\":6,\"171\":1,\"234\":8,\"236\":1,\"261\":4,\"266\":2,\"271\":1,\"307\":1,\"308\":7,\"310\":10,\"311\":8,\"312\":5,\"319\":1,\"341\":1,\"344\":1,\"389\":2,\"392\":4,\"400\":2,\"401\":3,\"442\":1,\"453\":3,\"612\":2}}],[\"t\",{\"1\":{\"32\":1,\"56\":2,\"69\":1,\"290\":1,\"382\":1,\"625\":5}}],[\"that\",{\"1\":{\"382\":1}}],[\"theatre\",{\"1\":{\"523\":1}}],[\"the\",{\"1\":{\"234\":1,\"376\":5,\"382\":14,\"392\":23,\"491\":4,\"509\":1,\"523\":3,\"636\":1}}],[\"thenable\",{\"1\":{\"39\":1}}],[\"then\",{\"1\":{\"28\":2,\"39\":3,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"293\":1}}],[\"throw\",{\"1\":{\"11\":1,\"501\":2}}],[\"thisarg\",{\"1\":{\"10\":7}}],[\"this\",{\"1\":{\"10\":1,\"117\":2,\"234\":1,\"272\":4,\"392\":1,\"393\":2}}],[\"topic\",{\"1\":{\"625\":3}}],[\"top\",{\"1\":{\"447\":1,\"500\":1,\"501\":1}}],[\"toc\",{\"1\":{\"415\":1}}],[\"tool\",{\"1\":{\"396\":2,\"400\":9,\"409\":4}}],[\"toolkit\",{\"0\":{\"347\":1},\"1\":{\"347\":2,\"391\":1}}],[\"tools\",{\"1\":{\"65\":1,\"346\":1,\"380\":1,\"383\":1,\"387\":1,\"441\":2,\"636\":1}}],[\"toobusy\",{\"0\":{\"201\":1}}],[\"tokens=\",{\"1\":{\"292\":1}}],[\"token=xxx\",{\"1\":{\"180\":2}}],[\"token并添加到requests中\",{\"1\":{\"163\":1}}],[\"token\",{\"1\":{\"163\":1,\"180\":1,\"264\":1}}],[\"to\",{\"1\":{\"159\":1,\"213\":1,\"258\":1,\"292\":1,\"376\":2,\"382\":3,\"392\":1,\"408\":3,\"409\":1,\"447\":1,\"491\":4,\"636\":2}}],[\"touch\",{\"1\":{\"97\":1,\"442\":3}}],[\"todatestring\",{\"1\":{\"56\":2}}],[\"totallength\",{\"1\":{\"10\":3}}],[\"tostring\",{\"1\":{\"10\":1,\"116\":1,\"272\":1,\"398\":1}}],[\"tolocalestring\",{\"1\":{\"10\":1}}],[\"vx\",{\"1\":{\"628\":4}}],[\"vyddw\",{\"1\":{\"616\":1}}],[\"v7a\",{\"1\":{\"461\":1}}],[\"vk\",{\"1\":{\"442\":1}}],[\"vs\",{\"0\":{\"395\":1}}],[\"vscode安装完成之后\",{\"1\":{\"346\":1}}],[\"vscode\",{\"1\":{\"344\":2,\"346\":4,\"356\":3,\"365\":3,\"368\":2,\"370\":3}}],[\"vscode配置\",{\"1\":{\"139\":1}}],[\"v8a\",{\"1\":{\"461\":1}}],[\"v8\",{\"1\":{\"364\":2}}],[\"v8使用的\",{\"1\":{\"261\":1}}],[\"vert\",{\"1\":{\"619\":1}}],[\"vertex2256×498\",{\"1\":{\"470\":1}}],[\"vertical\",{\"1\":{\"394\":4,\"395\":1}}],[\"version=\",{\"1\":{\"356\":6,\"401\":1}}],[\"version可简化为v\",{\"1\":{\"298\":1}}],[\"version和\",{\"1\":{\"287\":1}}],[\"version\",{\"1\":{\"223\":2,\"232\":1,\"233\":1,\"288\":1,\"289\":1,\"291\":1,\"292\":1,\"293\":1,\"298\":1,\"344\":1,\"346\":1,\"356\":2,\"360\":2,\"370\":2,\"636\":4}}],[\"verify\",{\"1\":{\"74\":2}}],[\"void\",{\"1\":{\"114\":1,\"392\":12,\"407\":11}}],[\"video\",{\"1\":{\"623\":1,\"625\":1}}],[\"viber\",{\"1\":{\"442\":1,\"453\":1}}],[\"visually\",{\"1\":{\"392\":1}}],[\"visualstudio\",{\"1\":{\"370\":1}}],[\"visual\",{\"1\":{\"346\":1}}],[\"vivo\",{\"1\":{\"95\":1}}],[\"viewport\",{\"1\":{\"357\":1}}],[\"view\",{\"1\":{\"8\":1,\"180\":1}}],[\"vague1360×766\",{\"1\":{\"482\":1}}],[\"varying\",{\"1\":{\"621\":1}}],[\"vars\",{\"1\":{\"382\":1}}],[\"variables\",{\"1\":{\"370\":3,\"382\":1}}],[\"var\",{\"1\":{\"54\":1,\"197\":1,\"218\":1,\"234\":6,\"236\":1,\"257\":2,\"261\":8,\"267\":4,\"271\":6,\"272\":7,\"307\":1,\"319\":3,\"358\":1,\"372\":5,\"377\":4,\"378\":7,\"379\":2,\"380\":2,\"384\":1,\"385\":3,\"389\":7,\"392\":13,\"393\":8,\"394\":28,\"395\":4,\"398\":39,\"399\":22,\"400\":11,\"402\":4,\"404\":4,\"408\":10,\"409\":13,\"410\":3}}],[\"val\",{\"1\":{\"39\":2}}],[\"values\",{\"1\":{\"10\":1}}],[\"value\",{\"1\":{\"10\":1,\"30\":1,\"32\":2,\"33\":9,\"43\":2,\"247\":3,\"261\":1,\"385\":1,\"392\":23,\"393\":1,\"398\":2,\"407\":11,\"408\":2}}],[\"vaule\",{\"1\":{\"33\":1}}],[\"v3\",{\"1\":{\"9\":4,\"16\":3,\"23\":2,\"636\":3}}],[\"v2\",{\"1\":{\"9\":4,\"16\":3,\"23\":2,\"368\":2,\"639\":1}}],[\"v16\",{\"1\":{\"95\":1}}],[\"v1\",{\"1\":{\"9\":4,\"11\":5,\"16\":3,\"23\":2,\"368\":1}}],[\"v\",{\"1\":{\"7\":2,\"72\":1,\"87\":1,\"95\":1,\"134\":1,\"168\":1,\"306\":1,\"356\":1,\"435\":1}}],[\"这跟父母担心离家的孩子一模一样\",{\"1\":{\"602\":1}}],[\"这老爸破坏力贼强\",{\"1\":{\"597\":1}}],[\"这部节奏感超强的跑酷作品向我们生动展示了一款手残党噩梦的游戏应该长什么样子\",{\"1\":{\"539\":1}}],[\"这部分代码的定制\",{\"1\":{\"640\":1}}],[\"这部分代码是使用\",{\"1\":{\"357\":1}}],[\"这部分我们的需求是\",{\"1\":{\"479\":1}}],[\"这部分没什么太多可以说的\",{\"1\":{\"370\":1}}],[\"这部分内容我们来编写前端部分的代码\",{\"1\":{\"357\":1}}],[\"这款恐怖解谜游戏的灵感诞生于瑞典民俗\",{\"1\":{\"604\":1}}],[\"这款萌萌画风的休闲跑酷游戏超有节奏感\",{\"1\":{\"597\":1}}],[\"这款2d横板arpg游戏以精湛的画风\",{\"1\":{\"595\":1}}],[\"这款休闲冒险游戏以精心的玩法设计与详细文字资料结合\",{\"1\":{\"589\":1}}],[\"这款休闲益智游戏模拟城市不断发展时地下铁路网的建设\",{\"1\":{\"579\":1}}],[\"这款穿越时空阻隔的拼图解谜类游戏通过不断嵌套\",{\"1\":{\"586\":1}}],[\"这款益智游戏需要你不断改变游戏地形\",{\"1\":{\"585\":1}}],[\"这款优雅华丽的禅式游戏以高颜值唯美画面和完美贴合不同场景的配乐为我们带来一次舒适的视听盛宴\",{\"1\":{\"576\":1}}],[\"这款模拟黑客入侵的益智游戏通过一条剧情线贯穿始终\",{\"1\":{\"572\":1}}],[\"这款3d益智游戏以谋杀案为主题设计诸多谜题\",{\"1\":{\"569\":1}}],[\"这款3d动作解谜游戏就在演绎一个\",{\"1\":{\"549\":1}}],[\"这款游戏画风简易\",{\"1\":{\"600\":1}}],[\"这款游戏虽无任何文字描述\",{\"1\":{\"586\":1}}],[\"这款游戏将重点放在光影特效的运用与画面刻画上\",{\"1\":{\"581\":1}}],[\"这款游戏不重视剧情\",{\"1\":{\"571\":1}}],[\"这款游戏在arpg类型的基础上增加了探索解谜的元素\",{\"1\":{\"565\":1}}],[\"这款游戏亮点在于恐怖氛围渲染非常出色\",{\"1\":{\"564\":1}}],[\"这款游戏3d但不精致的画面还有各种奇特的bug还是让人有一种想弃游的冲动\",{\"1\":{\"563\":1}}],[\"这款油画画风的游戏以自然与城市工业化的矛盾为主题\",{\"1\":{\"561\":1}}],[\"这款冒险类游戏以真实细腻的模型刻画\",{\"1\":{\"552\":1}}],[\"这款冒险与益智相结合的游戏从纯洁唯美的画风到暴雪凛冽的音效\",{\"1\":{\"551\":1}}],[\"这款arpg游戏最大的特点是将传统实时对战模式与新加入的计划式格斗模式相结合\",{\"1\":{\"542\":1}}],[\"这款简洁的小游戏唤起了我们对人际关系中信任与欺骗权衡的思考\",{\"1\":{\"540\":1}}],[\"这款大型科幻游戏以超现实的游戏特效与磅礴大气的配乐再加上惊艳的cg动画\",{\"1\":{\"534\":1}}],[\"这款画风简约的解谜游戏讲述了一个武士独自寻找内心春天的故事\",{\"1\":{\"517\":1}}],[\"这倒是个增强趣味性的小惊喜\",{\"1\":{\"529\":1}}],[\"这使得游戏具有足够的可玩性\",{\"1\":{\"529\":1}}],[\"这极大增强了游戏的真实体验感\",{\"1\":{\"524\":1}}],[\"这么重要的问题\",{\"1\":{\"502\":1}}],[\"这么安排是有考虑的\",{\"1\":{\"397\":1}}],[\"这也告诉我们\",{\"1\":{\"469\":1}}],[\"这也是插件开发所能找到的最全\",{\"1\":{\"377\":1}}],[\"这也是我目前\",{\"1\":{\"372\":1}}],[\"这也是我为什么会自己还封装了一套跨端的日志框架的原因\",{\"1\":{\"367\":1}}],[\"这也是为什么master组件在完成很多其自身的操作后\",{\"1\":{\"262\":1}}],[\"这三篇文章的内容\",{\"1\":{\"411\":1}}],[\"这三篇文章是逐渐递进\",{\"1\":{\"411\":1}}],[\"这权当是留给大家的作业\",{\"1\":{\"409\":1}}],[\"这点你要提前明白\",{\"1\":{\"406\":1}}],[\"这点是致使我们产生困惑的很大原因之一\",{\"1\":{\"51\":1}}],[\"这几个key\",{\"1\":{\"399\":1}}],[\"这篇文章的核心内容是向你介绍了逆向法来修改ps的特性属性值\",{\"1\":{\"411\":1}}],[\"这篇文章\",{\"1\":{\"397\":1,\"406\":1}}],[\"这坨代码不好阅读\",{\"1\":{\"394\":1}}],[\"这套机制\",{\"1\":{\"390\":1}}],[\"这可能也是四代作品保持了一如既往高分的原因吧\",{\"1\":{\"516\":1}}],[\"这可能是另外ps提供的另外一种api\",{\"1\":{\"389\":1}}],[\"这可以避免线程竞争\",{\"1\":{\"29\":1}}],[\"这块内容\",{\"1\":{\"378\":1}}],[\"这还不是关键问题\",{\"1\":{\"372\":1}}],[\"这对于写\",{\"1\":{\"358\":1}}],[\"这在\",{\"1\":{\"356\":1}}],[\"这在实际中是很有意义的\",{\"1\":{\"230\":1}}],[\"这和宿主的实现有关\",{\"1\":{\"356\":1,\"357\":1}}],[\"这才是我们在开发插件时插件应该存放的目录\",{\"1\":{\"354\":1}}],[\"这步操作主要是看看有没有module配置了周期性地拉取monitor信息\",{\"1\":{\"274\":1}}],[\"这张图是以chat为例\",{\"1\":{\"262\":1}}],[\"这一步实际上就是module放到一个以moduleid做键的map中\",{\"1\":{\"262\":1}}],[\"这一切配置都是在game\",{\"1\":{\"257\":1}}],[\"这一系列\",{\"1\":{\"23\":1,\"24\":1}}],[\"这需要我们对服务器进行伸缩扩充\",{\"1\":{\"234\":1}}],[\"这两种情况\",{\"1\":{\"272\":1}}],[\"这两部分之间相互独立\",{\"1\":{\"227\":1}}],[\"这两个文件\",{\"1\":{\"436\":1}}],[\"这两个诉求\",{\"1\":{\"396\":1}}],[\"这两个方法的锁内存实现\",{\"1\":{\"32\":1}}],[\"这两个方法相当于锁内存\",{\"1\":{\"32\":1}}],[\"这两个属性都是只读属性\",{\"1\":{\"16\":1}}],[\"这四个bit包括两部分\",{\"1\":{\"227\":1}}],[\"这是我的战争淘宝¥\",{\"1\":{\"527\":1}}],[\"这是我的战争\",{\"0\":{\"527\":1}}],[\"这是我开发的一个脚本辅助工具\",{\"1\":{\"403\":1}}],[\"这是我们精细化划分之后的结果\",{\"1\":{\"162\":1}}],[\"这是另外一个轻量级的脚本\",{\"1\":{\"402\":1}}],[\"这是ps\",{\"1\":{\"401\":1}}],[\"这是当前选中的目标图层\",{\"1\":{\"394\":1}}],[\"这是因为当你新建了一个图层组的时候\",{\"1\":{\"378\":1}}],[\"这是为什么呢\",{\"1\":{\"378\":1}}],[\"这是个闭源插件\",{\"1\":{\"368\":1}}],[\"这是一部挺耗时间的文字类侦探游戏\",{\"1\":{\"580\":1}}],[\"这是一部能让你内心发出无数\",{\"1\":{\"512\":1}}],[\"这是一款跑酷与音乐相结合的游戏\",{\"1\":{\"607\":1}}],[\"这是一款开车游戏\",{\"1\":{\"605\":1}}],[\"这是一款题材新颖的解谜游戏\",{\"1\":{\"600\":1}}],[\"这是一款将解谜融入动画片中的章节式游戏\",{\"1\":{\"590\":1}}],[\"这是一款关卡式益智游戏\",{\"1\":{\"588\":1}}],[\"这是一款模拟经营类游戏\",{\"1\":{\"582\":1}}],[\"这是一款需要你费尽心力\",{\"1\":{\"578\":1}}],[\"这是一款音乐欢快\",{\"1\":{\"573\":1}}],[\"这是一款节奏欢快的沙雕游戏\",{\"1\":{\"563\":1}}],[\"这是一款瞬间火爆全球的沙盒游戏\",{\"1\":{\"559\":1}}],[\"这是一款完全剧情向的rpg游戏\",{\"1\":{\"558\":1}}],[\"这是一款黑暗童话主题风格的独立卡牌游戏\",{\"1\":{\"556\":1}}],[\"这是一款像素风冒险游戏\",{\"1\":{\"547\":1}}],[\"这是一款脑洞大开的休闲神作\",{\"1\":{\"538\":1}}],[\"这是一款特殊的像素风rpg游戏\",{\"1\":{\"530\":1}}],[\"这是一款全屏点触式的音乐游戏\",{\"1\":{\"518\":1}}],[\"这是一款运行在ps上的插件\",{\"1\":{\"348\":1}}],[\"这是一段简单的检测函数\",{\"1\":{\"479\":1}}],[\"这是一个选中多个图层的代码输出\",{\"1\":{\"410\":1}}],[\"这是一个真实的案例\",{\"1\":{\"409\":1}}],[\"这是一个\",{\"1\":{\"365\":1}}],[\"这是早期adobe提供的用于开发调试extensionscript的开发工具\",{\"1\":{\"347\":1}}],[\"这是源代码的一种结构转换\",{\"1\":{\"307\":1}}],[\"这是通过application的registeradmin实现的\",{\"1\":{\"262\":1}}],[\"这是前端服务器接受客户端连接启用的端口\",{\"1\":{\"261\":1}}],[\"这是没有问题的\",{\"1\":{\"29\":1}}],[\"这称之为雪崩效应\",{\"1\":{\"151\":1}}],[\"这样处理之后自己模拟一个胶囊按钮的位置\",{\"1\":{\"501\":1}}],[\"这样的\",{\"1\":{\"485\":1}}],[\"这样的工具\",{\"1\":{\"478\":1}}],[\"这样的话\",{\"1\":{\"233\":1,\"261\":1}}],[\"这样便可以打包出任意画质和体积的各种版本\",{\"1\":{\"477\":1}}],[\"这样能够节约不少性能\",{\"1\":{\"474\":1}}],[\"这样很明显图片大小减少了一半\",{\"1\":{\"474\":1}}],[\"这样我们就可以根据功能区去划分图集\",{\"1\":{\"472\":1}}],[\"这样做可以增加模糊算法的\",{\"1\":{\"482\":1}}],[\"这样做可以减少\",{\"1\":{\"470\":1}}],[\"这样做很麻烦\",{\"1\":{\"26\":1}}],[\"这样在获取不到胶囊信息的情况下\",{\"1\":{\"501\":1}}],[\"这样在\",{\"1\":{\"468\":1}}],[\"这样在应用中\",{\"1\":{\"261\":1}}],[\"这样不论要生成多少张不同的图片\",{\"1\":{\"467\":1}}],[\"这样descriptor返回的\",{\"1\":{\"399\":1}}],[\"这样一方面获取的时候就会有点慢\",{\"1\":{\"399\":1}}],[\"这样你就不需要去猜测某个目标用什么key了\",{\"1\":{\"406\":1}}],[\"这样你就很难找到唯一的某个图层\",{\"1\":{\"387\":1}}],[\"这样你就会看到\",{\"1\":{\"205\":1}}],[\"这样是不可以的\",{\"1\":{\"379\":1}}],[\"这样是不行的\",{\"1\":{\"217\":1}}],[\"这样当我在测试多段代码之间切换的时候\",{\"1\":{\"348\":1}}],[\"这样所有的服务器群都会获知新增的服务器\",{\"1\":{\"280\":1}}],[\"这样可以使得在有依赖的部分执行时\",{\"1\":{\"262\":1}}],[\"这样可以是的pinus\",{\"1\":{\"233\":1}}],[\"这样命令的则是由master服务器创建的子进程\",{\"1\":{\"262\":1}}],[\"这样玩家就会收到其加入的channel推送过来的消息\",{\"1\":{\"248\":1}}],[\"这样就能减少很多构建的时间\",{\"1\":{\"488\":1}}],[\"这样就不会在某一个时间段集中进行大量运算\",{\"1\":{\"480\":1}}],[\"这样就会造成数据浪费和冗余\",{\"1\":{\"474\":1}}],[\"这样就很好地避免了渲染时一直被打断合批的情况\",{\"1\":{\"471\":1}}],[\"这样就大大减少了\",{\"1\":{\"467\":1}}],[\"这样就可以打开我们想要的文件了\",{\"1\":{\"392\":1}}],[\"这样就可以实现各个connector服务器的负载均衡\",{\"1\":{\"241\":1}}],[\"这样就启动了很多服务器\",{\"1\":{\"262\":1}}],[\"这样就实现了请求的序列化\",{\"1\":{\"198\":1}}],[\"这样使得消息推送更加灵活\",{\"1\":{\"230\":1}}],[\"这样只会启动一个调试器\",{\"1\":{\"209\":1}}],[\"这样方便查找及统一处理数据\",{\"1\":{\"162\":1}}],[\"这样\",{\"1\":{\"144\":1,\"262\":1,\"398\":1}}],[\"这些算法一起执行就会很损耗性能\",{\"1\":{\"480\":1}}],[\"这些图片首先都是\",{\"1\":{\"474\":1}}],[\"这些命令\",{\"1\":{\"410\":1}}],[\"这些命令的集合\",{\"1\":{\"393\":1}}],[\"这些key都在对象树的属性当中\",{\"1\":{\"406\":1}}],[\"这些类型里面的数据结构\",{\"1\":{\"398\":1}}],[\"这些类型大体是可枚举的\",{\"1\":{\"394\":1}}],[\"这些方法都在ad的官方文档api里头能找到\",{\"1\":{\"398\":1}}],[\"这些方法包括setenv\",{\"1\":{\"262\":1}}],[\"这些通过目标属性值就可以判断出来\",{\"1\":{\"394\":1}}],[\"这些属性有一些是直接挂在desc1下的\",{\"1\":{\"394\":1}}],[\"这些你在dom\",{\"1\":{\"389\":1}}],[\"这些在里面都跑不起来\",{\"1\":{\"376\":1}}],[\"这些面板可以是能嵌入\",{\"1\":{\"356\":1}}],[\"这些服务器收到notify后\",{\"1\":{\"280\":1}}],[\"这些事件为\",{\"1\":{\"279\":1}}],[\"这些admin\",{\"1\":{\"272\":1}}],[\"这些配置都在你的插件安装目录\",{\"1\":{\"454\":1}}],[\"这些配置都是创建一个项目必要条件\",{\"1\":{\"267\":1}}],[\"这些配置包括设置一个上下文变量供应用使用\",{\"1\":{\"261\":1}}],[\"这些子进程也就是我们的应用服务器\",{\"1\":{\"262\":1}}],[\"这些子进程执行的跟原进程同样的文件\",{\"1\":{\"262\":1}}],[\"这些参数在parseargs这一步将会被处理\",{\"1\":{\"262\":1}}],[\"这些参数是node和v8支持的参数\",{\"1\":{\"233\":1}}],[\"这些参数都会放到启动命令行中app\",{\"1\":{\"203\":1}}],[\"这些操作由cosession完成\",{\"1\":{\"230\":1}}],[\"这些操作实际上也是对前端服务器的rpc调用\",{\"1\":{\"230\":1}}],[\"这些操作实际上都是对前端服务器的rpc调用\",{\"1\":{\"230\":1}}],[\"这些可以通过使用backendsession的bind以及push操作\",{\"1\":{\"230\":1}}],[\"这些是一些常用的\",{\"1\":{\"103\":1}}],[\"这些指令之间无法保证不会插入其他进程的指令\",{\"1\":{\"29\":1}}],[\"这句话\",{\"1\":{\"53\":1}}],[\"这会导致用户失去响应\",{\"1\":{\"32\":1}}],[\"这种场景\",{\"1\":{\"394\":1}}],[\"这种\",{\"1\":{\"370\":1}}],[\"这种情况只能由用户自己处理了\",{\"1\":{\"278\":1}}],[\"这种配置将对所有的模式\",{\"1\":{\"268\":1}}],[\"这种配置将对所有模式\",{\"1\":{\"258\":1}}],[\"这种配置则针对development模式下的chat服务器生效\",{\"1\":{\"260\":1,\"270\":1}}],[\"这种配置则只针对development模式下所有服务器生效\",{\"1\":{\"259\":1,\"269\":1}}],[\"这种派发需要一个路由函数router\",{\"1\":{\"246\":1}}],[\"这种关闭首先会切断客户端与服务器的连接\",{\"1\":{\"233\":1}}],[\"这种对backendsession修改仅仅在后端服务器里有效\",{\"1\":{\"230\":1}}],[\"这种加密算法是美国联邦政府采用的区块加密标准\",{\"1\":{\"146\":1}}],[\"这种通信的效率显然比较低\",{\"1\":{\"29\":1}}],[\"这种交换采用的是复制机制\",{\"1\":{\"29\":1}}],[\"这种数据结构可以用如下的\",{\"1\":{\"22\":1}}],[\"这为图像处理带来了巨大的方便\",{\"1\":{\"26\":1}}],[\"这叫做\",{\"1\":{\"22\":1}}],[\"这说明遍历不是针对原来的\",{\"1\":{\"22\":1}}],[\"这个抢银行的老爸要开始他的极限跑酷了\",{\"1\":{\"597\":1}}],[\"这个病毒足以摧毁当今所有人类\",{\"1\":{\"546\":1}}],[\"这个用于官方演示游戏的高级账号\",{\"1\":{\"489\":1}}],[\"这个改动使我们的构建时间由之前的\",{\"1\":{\"488\":1}}],[\"这个指令\",{\"1\":{\"467\":1}}],[\"这个链接用\",{\"1\":{\"418\":2}}],[\"这个案例还是相对复杂的\",{\"1\":{\"409\":1}}],[\"这个需求用scriptlistener是找不到代码的\",{\"1\":{\"409\":1}}],[\"这个新创建的动作描述里头只有一个name\",{\"1\":{\"408\":1}}],[\"这个descobject就是最终的json结构输出\",{\"1\":{\"402\":1}}],[\"这个是am的核心\",{\"1\":{\"398\":1}}],[\"这个是从前面的整个框架的类图中取出来的\",{\"1\":{\"273\":1}}],[\"这个函数接受一个ad的对象\",{\"1\":{\"398\":1}}],[\"这个对象里头又有一堆属性需要我们去挖掘\",{\"1\":{\"398\":1}}],[\"这个对象描述里头包含了目标对象的一些属性信息\",{\"1\":{\"398\":1}}],[\"这个对象描述就是actiondescriptor\",{\"1\":{\"398\":1}}],[\"这个图层的属性有很多\",{\"1\":{\"398\":1}}],[\"这个key的值\",{\"1\":{\"398\":1}}],[\"这个属性\",{\"1\":{\"470\":1}}],[\"这个属性的值\",{\"1\":{\"399\":1}}],[\"这个属性值是一个actionreference\",{\"1\":{\"398\":1}}],[\"这个属性在\",{\"1\":{\"12\":1}}],[\"这个描述符里头表示的目标对象\",{\"1\":{\"398\":1}}],[\"这个动作描述里头包含了一个对当前选中图层的引用\",{\"1\":{\"408\":1}}],[\"这个动作描述对象本质就描述了一句话\",{\"1\":{\"394\":1}}],[\"这个动作的描述符是actiondescriptor\",{\"1\":{\"398\":1}}],[\"这个参数是一个actiondescriptor\",{\"1\":{\"394\":1}}],[\"这个参数默认为false\",{\"1\":{\"261\":1}}],[\"这个文件定义了5k多个命令\",{\"1\":{\"393\":1}}],[\"这个文件夹用来存在插件使用的前端代码\",{\"1\":{\"357\":1}}],[\"这个文件夹适合存放生产环境的插件\",{\"1\":{\"353\":1}}],[\"这个文件夹不应该被用于存放第三方插件\",{\"1\":{\"352\":1}}],[\"这个类有许多函数接口\",{\"1\":{\"392\":1}}],[\"这个功能\",{\"1\":{\"390\":1}}],[\"这个有着ps脚本编程黑暗魔法著称的action\",{\"1\":{\"389\":1}}],[\"这个在我们脚本编程的时候非常重要\",{\"1\":{\"380\":1}}],[\"这个往往会和你的预期不符\",{\"1\":{\"380\":1}}],[\"这个预留的值会在你拖动图层到图层组的时候派上用场\",{\"1\":{\"378\":1}}],[\"这个和html\",{\"1\":{\"378\":1}}],[\"这个方式会很慢\",{\"1\":{\"378\":1}}],[\"这个方法\",{\"1\":{\"501\":1}}],[\"这个方法还可以将一种\",{\"1\":{\"22\":1}}],[\"这个方法大致相当于判断参数\",{\"1\":{\"7\":1}}],[\"这个部分对web开发的前端同学应该都很熟悉\",{\"1\":{\"376\":1}}],[\"这个\",{\"1\":{\"365\":1}}],[\"这个插件的重要性\",{\"1\":{\"391\":1}}],[\"这个插件能够将你在ps中的操作\",{\"1\":{\"390\":1}}],[\"这个插件\",{\"1\":{\"359\":1}}],[\"这个插件还是存在很多bug\",{\"1\":{\"346\":1}}],[\"这个路径对应\",{\"1\":{\"358\":1}}],[\"这个路由选择策略用户可以配置\",{\"1\":{\"195\":1}}],[\"这个域名似乎国内访较慢\",{\"1\":{\"356\":1}}],[\"这个面板可以视为一个子插件\",{\"1\":{\"356\":1}}],[\"这个产品也一样不升级维护了\",{\"1\":{\"347\":1}}],[\"这个项目也停止维护更新了\",{\"1\":{\"346\":1}}],[\"这个时候的启动命令行\",{\"1\":{\"262\":1}}],[\"这个时候\",{\"1\":{\"262\":1,\"272\":1,\"346\":1}}],[\"这个app作为整个框架的配置上下文来使用\",{\"1\":{\"257\":1}}],[\"这个回调会被执行\",{\"1\":{\"255\":1}}],[\"这个回调函数会由master进程进行回调\",{\"1\":{\"255\":1}}],[\"这个定时器id属性将会在处理请求链的后面部分可以被访问\",{\"1\":{\"230\":1}}],[\"这个rpc调用由sessionremote提供服务\",{\"1\":{\"230\":1}}],[\"这个session就是backendsession\",{\"1\":{\"230\":1}}],[\"这个怪兽级javascript\",{\"1\":{\"202\":1}}],[\"这个filter中\",{\"1\":{\"201\":1}}],[\"这个filter使用来记录服务器处理时间的\",{\"1\":{\"200\":1}}],[\"这个filter是用来对服务端处理超时进行警告的\",{\"1\":{\"199\":1}}],[\"这个filter是用来对用户请求做串行化的\",{\"1\":{\"198\":1}}],[\"这个标准用来替代原先的des\",{\"1\":{\"146\":1}}],[\"这个命令用于导出当前虚拟环境的环境配置到一个\",{\"1\":{\"103\":1}}],[\"这个命令用于列出当前虚拟环境中已安装的所有包\",{\"1\":{\"103\":1}}],[\"这个命令用于列出所有已创建的虚拟环境\",{\"1\":{\"103\":1}}],[\"这个命令用于搜索符合搜索条件的\",{\"1\":{\"103\":1}}],[\"这个命令用于删除指定的\",{\"1\":{\"103\":1}}],[\"这个命令用于升级指定的\",{\"1\":{\"103\":1}}],[\"这个命令用于安装指定的\",{\"1\":{\"103\":1}}],[\"这个命令用于停用当前的虚拟环境\",{\"1\":{\"103\":1}}],[\"这个命令用于激活名为\",{\"1\":{\"103\":1}}],[\"这个命令用于创建一个名为\",{\"1\":{\"103\":1}}],[\"这个库\",{\"1\":{\"32\":1}}],[\"这个视图类型的特点\",{\"1\":{\"26\":1}}],[\"这就有点强迫玩家充钱的意思了\",{\"1\":{\"598\":1}}],[\"这就要涉及到我们下一篇要讲的action\",{\"1\":{\"387\":1}}],[\"这就意味着通过散列结果\",{\"1\":{\"151\":1}}],[\"这就带来一个严重的问题\",{\"1\":{\"11\":1}}],[\"这就叫做\",{\"1\":{\"8\":1}}],[\"这并不意味大端字节序不重要\",{\"1\":{\"11\":1}}],[\"这时候需要我们自己手动修改\",{\"1\":{\"461\":1}}],[\"这时候就可以把代码贴到这个编辑器里头\",{\"1\":{\"348\":1}}],[\"这时出现了一个问题\",{\"1\":{\"218\":1}}],[\"这时可以留出一块内存区域\",{\"1\":{\"29\":1}}],[\"这时分成两种情况\",{\"1\":{\"25\":1}}],[\"这时除了建立\",{\"1\":{\"22\":1}}],[\"这时就会发生溢出\",{\"1\":{\"14\":1}}],[\"这时\",{\"1\":{\"9\":2,\"30\":1,\"206\":1}}],[\"这里特别感谢moments网友提出的问题\",{\"1\":{\"504\":1}}],[\"这里注意一下非标准图形就不能这么用了\",{\"1\":{\"474\":1}}],[\"这里面很多代码我们都见过了\",{\"1\":{\"408\":1}}],[\"这里面有一个小问题\",{\"1\":{\"399\":1}}],[\"这里面有一个很关键的地方\",{\"1\":{\"398\":1}}],[\"这里需要注意\",{\"1\":{\"398\":1}}],[\"这里需要注意一下\",{\"1\":{\"233\":1}}],[\"这里就是底层c++的某个结构体的体现\",{\"1\":{\"394\":1}}],[\"这里就不详细说了\",{\"1\":{\"474\":1}}],[\"这里就不深入探讨了\",{\"1\":{\"215\":1}}],[\"这里就不一一举例说明了\",{\"1\":{\"161\":1}}],[\"这里为什么是null呢\",{\"1\":{\"394\":1}}],[\"这里为了省事\",{\"1\":{\"273\":1}}],[\"这里为了更好看清\",{\"1\":{\"50\":1}}],[\"这里为了方便大家看清\",{\"1\":{\"50\":1}}],[\"这里头有历时原因\",{\"1\":{\"393\":1}}],[\"这里声明的是\",{\"1\":{\"356\":1}}],[\"这里再提一下其中几个点\",{\"1\":{\"356\":1}}],[\"这里在简单分析一下console组件\",{\"1\":{\"282\":1}}],[\"这里要注意的是master不会主动向client发送request\",{\"1\":{\"278\":1}}],[\"这里也会调度对应的事件\",{\"1\":{\"275\":1}}],[\"这里由于我们给timereport定义了moduleid属性\",{\"1\":{\"272\":1}}],[\"这里registeradmin可以接收两个或三个参数\",{\"1\":{\"272\":1}}],[\"这里使用上报时间仅仅是为了使得示例尽可能简单\",{\"1\":{\"272\":1}}],[\"这里使用dispatcher对session\",{\"1\":{\"261\":1,\"271\":1}}],[\"这里关注的不是组件的细节功能\",{\"1\":{\"262\":1}}],[\"这里包括app\",{\"1\":{\"262\":1}}],[\"这里多说一句\",{\"1\":{\"262\":1}}],[\"这里先讨论master组件\",{\"1\":{\"262\":1}}],[\"这里先对术语做一些简单的解释\",{\"1\":{\"240\":1}}],[\"这里setenv操作会将当前的env设定为development\",{\"1\":{\"262\":1}}],[\"这里同样可以填入任何配置\",{\"1\":{\"260\":1}}],[\"这里尝试给出一些说明\",{\"1\":{\"247\":1}}],[\"这里的layer其实可以替换成null\",{\"1\":{\"408\":1}}],[\"这里的逻辑很简单\",{\"1\":{\"272\":1}}],[\"这里的参数就是testmsg\",{\"1\":{\"272\":1}}],[\"这里的进程都在一台主机上\",{\"1\":{\"262\":1}}],[\"这里的configurations不仅包含调试\",{\"1\":{\"210\":1}}],[\"这里的next参数\",{\"1\":{\"197\":1}}],[\"这里的意思是每个对象都可以找到其对应的constructor\",{\"1\":{\"53\":1}}],[\"这里仅仅提到了会发起rpc调用\",{\"1\":{\"197\":1}}],[\"这里仅仅涉及到了前端服务器\",{\"1\":{\"197\":1}}],[\"这里\",{\"1\":{\"195\":1,\"197\":1}}],[\"这里对connector组件底层使用的具体的connector不做太多关注\",{\"1\":{\"192\":1}}],[\"这里不再详述\",{\"1\":{\"272\":2}}],[\"这里不再重复了\",{\"1\":{\"10\":1}}],[\"这里不做深入介绍\",{\"1\":{\"192\":1}}],[\"这里我们没有定义start回调\",{\"1\":{\"272\":1}}],[\"这里我们将主要关注对框架的配置部分\",{\"1\":{\"257\":1}}],[\"这里我们也使用了前面提到的工具函数dispatch\",{\"1\":{\"234\":1}}],[\"这里我们增加了一个工具函数dispatch\",{\"1\":{\"234\":1}}],[\"这里我们的connector和chat都具有多台服务器\",{\"1\":{\"234\":1}}],[\"这里我们针对不同的请求方式做分组\",{\"1\":{\"162\":1}}],[\"这里我们再详细说明一下\",{\"1\":{\"162\":1}}],[\"这里我们仅留下\",{\"1\":{\"51\":1}}],[\"这里会有请求的响应状态码\",{\"1\":{\"161\":1}}],[\"这里会记录你的密码和帐号\",{\"1\":{\"88\":1}}],[\"这里写图片描述\",{\"1\":{\"160\":1,\"161\":2,\"162\":2}}],[\"这里解释一下上段中\",{\"1\":{\"53\":1}}],[\"这里稍微补充一下new操作符将函数作为构造器进行调用时的过程\",{\"1\":{\"50\":1}}],[\"这里说明一点\",{\"1\":{\"50\":1}}],[\"这里是第\",{\"1\":{\"9\":1}}],[\"这里即第\",{\"1\":{\"9\":1}}],[\"这\",{\"1\":{\"8\":1}}],[\"这意味着如果我们\",{\"1\":{\"372\":1}}],[\"这意味着我们可以在构造器函数内部通过this参数初始化值\",{\"1\":{\"50\":1}}],[\"这意味着\",{\"1\":{\"1\":1}}],[\"返回这个对象所有属性值的json结构\",{\"1\":{\"398\":1}}],[\"返回它的类型\",{\"1\":{\"398\":1}}],[\"返回true\",{\"1\":{\"267\":2}}],[\"返回后\",{\"1\":{\"262\":1}}],[\"返回握手响应\",{\"1\":{\"223\":1}}],[\"返回内容的\",{\"1\":{\"218\":1}}],[\"返回聚合错误数组\",{\"1\":{\"46\":1}}],[\"返回首个失败原因\",{\"1\":{\"46\":1}}],[\"返回第一个成功的\",{\"1\":{\"44\":1}}],[\"返回第一个完成\",{\"1\":{\"42\":1}}],[\"返回包含每个结果的数组\",{\"1\":{\"43\":1}}],[\"返回被替换的值\",{\"1\":{\"31\":1}}],[\"返回写入的值\",{\"1\":{\"31\":1}}],[\"返回\",{\"1\":{\"30\":1,\"33\":2,\"34\":1,\"261\":1,\"267\":1}}],[\"返回当前视图从对应的\",{\"1\":{\"22\":1}}],[\"返回占据的内存字节长度\",{\"1\":{\"22\":1}}],[\"返回对应的\",{\"1\":{\"22\":1}}],[\"返回整段内存区域对应的\",{\"1\":{\"15\":1}}],[\"返回结果就是\",{\"1\":{\"14\":1}}],[\"返回一个其选择的后端服务器id\",{\"1\":{\"234\":1}}],[\"返回一个元组类型\",{\"1\":{\"115\":1}}],[\"返回一个具有指定属性类型的对象类型\",{\"1\":{\"109\":1}}],[\"返回一个立即拒绝的\",{\"1\":{\"40\":1}}],[\"返回一个无符号的\",{\"1\":{\"23\":3}}],[\"返回一个基于这个结构的\",{\"1\":{\"22\":1}}],[\"返回一个新的视图实例\",{\"1\":{\"20\":1}}],[\"返回一个\",{\"1\":{\"8\":1,\"23\":5}}],[\"返回一个普通数组\",{\"1\":{\"8\":1}}],[\"返回一个布尔值\",{\"1\":{\"7\":1,\"34\":1}}],[\"返回所分配的内存区域的字节长度\",{\"1\":{\"5\":1}}],[\"有限的条件下自由选择做其他事\",{\"1\":{\"599\":1}}],[\"有限的内容只有在官方文档中找到比如action\",{\"1\":{\"389\":1}}],[\"有剧情的格斗游戏\",{\"1\":{\"594\":1}}],[\"有的谜题还需要你打破常规思维定式\",{\"1\":{\"526\":1}}],[\"有的目标对象很大\",{\"1\":{\"399\":1}}],[\"有时又恢宏大气\",{\"1\":{\"547\":1}}],[\"有时欢快灵动\",{\"1\":{\"547\":1}}],[\"有时你会同时遇到多个悬浮模型\",{\"1\":{\"538\":1}}],[\"有时你在现实生活中还能接到主角的弹窗消息\",{\"1\":{\"524\":1}}],[\"有时主角的下线还需要你在现实生活中等待一些时间\",{\"1\":{\"524\":1}}],[\"有时候国外资源太慢\",{\"1\":{\"329\":1}}],[\"有时候\",{\"1\":{\"230\":1}}],[\"有问题请联系\",{\"1\":{\"503\":1}}],[\"有序的数据\",{\"1\":{\"485\":1}}],[\"有针对单源单点的\",{\"1\":{\"480\":1}}],[\"有兴趣的可以去官方文档查阅\",{\"1\":{\"474\":1}}],[\"有兴趣的朋友可以自行实验\",{\"1\":{\"159\":1}}],[\"有清晰的标题\",{\"1\":{\"444\":1}}],[\"有很多前辈大佬总结过很多方法\",{\"1\":{\"400\":1}}],[\"有很多好用的工具\",{\"1\":{\"215\":1}}],[\"有助于我们找到想要的目标对象\",{\"1\":{\"400\":1}}],[\"有一些挂在另外一个ad下\",{\"1\":{\"394\":1}}],[\"有一个替代方案可以实现把内容保存到文件\",{\"1\":{\"491\":1}}],[\"有一个非常重要的地方要记住\",{\"1\":{\"378\":1}}],[\"有一个默认的用户名admin\",{\"1\":{\"233\":1}}],[\"有一个前提\",{\"1\":{\"13\":1}}],[\"有一个静态方法\",{\"1\":{\"7\":1}}],[\"有地方抄作业了\",{\"1\":{\"391\":1}}],[\"有了这个例子之后\",{\"1\":{\"409\":1}}],[\"有了这个树形图之后\",{\"1\":{\"409\":1}}],[\"有了这个工具\",{\"1\":{\"390\":1}}],[\"有了修改name属于的经验之后\",{\"1\":{\"408\":1}}],[\"有了ad\",{\"1\":{\"405\":1}}],[\"有了上面的adtojson函数\",{\"1\":{\"398\":1}}],[\"有了操作对象了\",{\"1\":{\"394\":1}}],[\"有了它\",{\"1\":{\"391\":2}}],[\"有需要的可以直接下载使用\",{\"1\":{\"387\":1}}],[\"有些另类的合成路径还让人们感叹设计者们的奇葩脑洞\",{\"1\":{\"560\":1}}],[\"有些是不行的\",{\"1\":{\"408\":1}}],[\"有些是不能的\",{\"1\":{\"379\":1}}],[\"有些属性是可以按照上面的代码修改的\",{\"1\":{\"408\":1}}],[\"有些属性是可以改的\",{\"1\":{\"379\":1}}],[\"有些时候\",{\"1\":{\"400\":1,\"574\":1}}],[\"有些完整字符命令没有缩写命令\",{\"1\":{\"393\":1}}],[\"有些缩写命令没有提供完整字符命令\",{\"1\":{\"393\":1}}],[\"有个注意的点是\",{\"1\":{\"393\":1}}],[\"有个\",{\"1\":{\"367\":1}}],[\"有过\",{\"1\":{\"356\":1}}],[\"有monitor发起到master的注册请求\",{\"1\":{\"280\":1}}],[\"有两种常用方式\",{\"1\":{\"373\":1}}],[\"有两种pull和push\",{\"1\":{\"272\":1}}],[\"有两种视图\",{\"1\":{\"8\":1}}],[\"有三个位置都能存放\",{\"1\":{\"351\":2}}],[\"有三个参数\",{\"1\":{\"261\":1}}],[\"有三个概念admin\",{\"1\":{\"254\":1}}],[\"有变化时会将变化推送到各个monitor\",{\"1\":{\"254\":1}}],[\"有这三个session的概念\",{\"1\":{\"247\":1}}],[\"有pinus自己的术语\",{\"1\":{\"240\":1}}],[\"有参数的构建链接\",{\"1\":{\"180\":1}}],[\"有可能分配失败\",{\"1\":{\"5\":1}}],[\"只期待广告的弹出位置能更亲民些\",{\"1\":{\"575\":1}}],[\"只为一刻繁花似锦\",{\"1\":{\"557\":1}}],[\"只渲染可视物体\",{\"1\":{\"479\":1}}],[\"只不过我看社区的人很多都是这么干\",{\"1\":{\"356\":1}}],[\"只不过此时将会在monitorhandler中进行判断了\",{\"1\":{\"272\":1}}],[\"只开开发时需要\",{\"1\":{\"350\":1}}],[\"只会对client的消息进行响应\",{\"1\":{\"278\":1}}],[\"只会针对client的request进行response\",{\"1\":{\"273\":1}}],[\"只会保留后\",{\"1\":{\"14\":1}}],[\"只能和\",{\"1\":{\"606\":2}}],[\"只能够返回上一页\",{\"1\":{\"495\":1}}],[\"只能拿到其中的一个\",{\"1\":{\"389\":1}}],[\"只能由服务器a才能给它推送消息\",{\"1\":{\"248\":1}}],[\"只能通过对应的日志文件查看日志\",{\"1\":{\"233\":1}}],[\"只能通过视图\",{\"1\":{\"4\":1}}],[\"只需要很简单的几步就可以完成\",{\"1\":{\"461\":1}}],[\"只需要修改相应的服务器配置即可\",{\"1\":{\"234\":1}}],[\"只需要修改一下配置文件\",{\"1\":{\"234\":1}}],[\"只需要在servers\",{\"1\":{\"234\":1}}],[\"只在后端服务器的处理链中后面部分有效\",{\"1\":{\"230\":1}}],[\"只关心其抽象行为\",{\"1\":{\"192\":1}}],[\"只适用于当前登录用户的配置\",{\"1\":{\"92\":1}}],[\"只修改版本库中的head指向\",{\"1\":{\"84\":1}}],[\"只忽略tmp目录下的\",{\"1\":{\"65\":1}}],[\"只有想不到\",{\"1\":{\"559\":1}}],[\"只有4个字符串表示的缩写不够用了\",{\"1\":{\"393\":1}}],[\"只有那些read\",{\"1\":{\"379\":1}}],[\"只有掌握了和发送方相同密钥的人才能解读由des加密算法\",{\"1\":{\"144\":1}}],[\"只有prototype对象才有\",{\"1\":{\"53\":1}}],[\"只有通过\",{\"1\":{\"32\":1}}],[\"只要找到并走到加粗的白色线条密集处即可过关\",{\"1\":{\"543\":1}}],[\"只要能算出每台手机的导航栏高度问题就迎刃而解\",{\"1\":{\"499\":1}}],[\"只要名称\",{\"1\":{\"399\":1}}],[\"只要涉及到尺寸\",{\"1\":{\"380\":1}}],[\"只要满足给定条件\",{\"1\":{\"32\":1}}],[\"只要\",{\"1\":{\"30\":1}}],[\"只要任何一个视图对内存有所修改\",{\"1\":{\"9\":1}}],[\"只包含\",{\"1\":{\"19\":1}}],[\"只是用游戏自带的功能截图像素会变低\",{\"1\":{\"582\":1}}],[\"只是涉及到的层级比较多\",{\"1\":{\"409\":1}}],[\"只是多了更多的参数\",{\"1\":{\"262\":1}}],[\"只是复制了参数数组的值\",{\"1\":{\"9\":1}}],[\"只是\",{\"1\":{\"8\":1}}],[\"只允许在其上方建立视图\",{\"1\":{\"6\":1}}],[\"含\",{\"1\":{\"39\":1}}],[\"含该字节\",{\"1\":{\"6\":1}}],[\"含义就是我们desc1这个动作描述生效的目标对象就是当前选中的图层\",{\"1\":{\"394\":1}}],[\"含义就是指向该对象的构造函数\",{\"1\":{\"53\":1}}],[\"含义与\",{\"1\":{\"22\":1}}],[\"含义\",{\"1\":{\"3\":1}}],[\"从零开始\",{\"1\":{\"625\":1}}],[\"从渲染管道获取的数据给顶点shader\",{\"1\":{\"621\":1}}],[\"从渲染管道中获取\",{\"1\":{\"620\":1}}],[\"从cpu传递给shader的数据\",{\"1\":{\"621\":1}}],[\"从cpu传递\",{\"1\":{\"620\":1}}],[\"从此他的目标只有活下去并逃出这家医院\",{\"1\":{\"564\":1}}],[\"从此\",{\"1\":{\"561\":1}}],[\"从哪来\",{\"1\":{\"532\":1}}],[\"从哪里能找到\",{\"1\":{\"393\":1}}],[\"从哪里可以找到这些命令的值呢\",{\"1\":{\"392\":1}}],[\"从列车到密室\",{\"1\":{\"510\":1}}],[\"从令人眼前一亮的视觉错位设定开始\",{\"1\":{\"506\":1}}],[\"从性能和逻辑上都不是好的处理方式\",{\"1\":{\"484\":1}}],[\"从中也能反应出来ad的数据结构\",{\"1\":{\"401\":1}}],[\"从输出的结果可以看到layerdescriptor是一个actiondescriptor对象\",{\"1\":{\"398\":1}}],[\"从字面含义\",{\"1\":{\"394\":1}}],[\"从官方文档里头\",{\"1\":{\"379\":1}}],[\"从这个文档里头\",{\"1\":{\"377\":1}}],[\"从里面我们就可以看到\",{\"1\":{\"376\":1}}],[\"从0到1\",{\"1\":{\"307\":1}}],[\"从上文中指定的\",{\"1\":{\"635\":1}}],[\"从上面简单例子的对照\",{\"1\":{\"409\":1}}],[\"从上面的输出结果\",{\"1\":{\"378\":1}}],[\"从上面的分析看\",{\"1\":{\"247\":1}}],[\"从上图可以看出\",{\"1\":{\"226\":1}}],[\"从上图中可以看出function这个对象比较特殊\",{\"1\":{\"53\":1}}],[\"从msgremote获得请求\",{\"1\":{\"230\":1}}],[\"从而不断拆解棱镜\",{\"1\":{\"581\":1}}],[\"从而确定该建筑物是否是需要被渲染的物体\",{\"1\":{\"479\":1}}],[\"从而确定当前服务器的id\",{\"1\":{\"262\":1}}],[\"从而达到更好的效果\",{\"1\":{\"473\":1}}],[\"从而对客户端和服务端的通信内容进行压缩\",{\"1\":{\"285\":1}}],[\"从而使得不同服务器进程对外提供不同个服务\",{\"1\":{\"285\":1}}],[\"从而激发了master端的register事件处理\",{\"1\":{\"280\":1}}],[\"从而得到一个connector服务器\",{\"1\":{\"234\":1}}],[\"从而会新的连接创建并维护session\",{\"1\":{\"230\":1}}],[\"从而完成session与具体用户的绑定\",{\"1\":{\"196\":1}}],[\"从而导致运行结果出错\",{\"1\":{\"29\":1}}],[\"从其中取出请求路由以及请求参数\",{\"1\":{\"192\":1}}],[\"从一个类型中排除\",{\"1\":{\"113\":1}}],[\"从全局中获取链接\",{\"1\":{\"102\":1}}],[\"从本地仓库退回到缓存区\",{\"1\":{\"80\":1}}],[\"从本地仓库退回到工作区\",{\"1\":{\"80\":1}}],[\"从第4个字节开始读取16位有符号整数\",{\"1\":{\"23\":1}}],[\"从第2个字节开始读取16位有符号整数\",{\"1\":{\"23\":1}}],[\"从第一个字节开始读取8位无符号整数\",{\"1\":{\"23\":1}}],[\"从第\",{\"1\":{\"9\":1}}],[\"从\",{\"1\":{\"6\":1,\"32\":2,\"33\":1,\"34\":1}}],[\"从头读取\",{\"1\":{\"4\":1}}],[\"失败条件\",{\"1\":{\"46\":1}}],[\"失败\",{\"1\":{\"5\":1}}],[\"nice\",{\"1\":{\"441\":2}}],[\"nm\",{\"1\":{\"401\":2}}],[\"nth\",{\"1\":{\"392\":1}}],[\"nj\",{\"1\":{\"331\":1}}],[\"nrm\",{\"1\":{\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"334\":1,\"335\":2}}],[\"navbarheight\",{\"1\":{\"500\":1}}],[\"navigation\",{\"1\":{\"442\":2,\"455\":1}}],[\"native\",{\"1\":{\"233\":1,\"366\":1}}],[\"name=\",{\"1\":{\"356\":3,\"357\":1,\"365\":2}}],[\"name=zhangsan\",{\"1\":{\"101\":1}}],[\"nameofproject\",{\"1\":{\"267\":1}}],[\"name进行访问\",{\"1\":{\"261\":1}}],[\"namespace\",{\"1\":{\"382\":1}}],[\"namespace的rpc调用\",{\"1\":{\"245\":1}}],[\"namespace为sys的为系统rpc调用\",{\"1\":{\"245\":1}}],[\"name栏名字可以随意起\",{\"1\":{\"209\":1}}],[\"name>\",{\"1\":{\"197\":2}}],[\"name\",{\"1\":{\"58\":1,\"68\":1,\"87\":6,\"93\":1,\"102\":1,\"103\":3,\"105\":2,\"106\":2,\"107\":2,\"108\":3,\"112\":2,\"114\":2,\"115\":1,\"117\":4,\"128\":1,\"180\":1,\"182\":1,\"261\":2,\"267\":1,\"271\":1,\"344\":1,\"346\":1,\"358\":1,\"370\":5,\"378\":2,\"379\":2,\"382\":1,\"393\":1,\"398\":3,\"401\":2,\"408\":6,\"612\":1}}],[\"num\",{\"1\":{\"392\":1}}],[\"num2\",{\"1\":{\"372\":4}}],[\"num1\",{\"1\":{\"372\":4}}],[\"number>\",{\"1\":{\"109\":1}}],[\"number\",{\"1\":{\"105\":2,\"106\":2,\"107\":2,\"108\":2,\"109\":3,\"112\":1,\"114\":2,\"115\":2,\"116\":4,\"117\":2,\"392\":46,\"407\":17}}],[\"nullablestring\",{\"1\":{\"113\":1}}],[\"null如果当成对象的话\",{\"1\":{\"53\":1}}],[\"null为原型链的终点\",{\"1\":{\"51\":1}}],[\"null\",{\"1\":{\"13\":2,\"50\":2,\"113\":2,\"197\":1,\"218\":1,\"234\":1,\"261\":1,\"271\":1,\"272\":1,\"358\":3,\"389\":1,\"392\":3,\"393\":2,\"394\":5,\"395\":1,\"398\":1,\"402\":1,\"404\":1,\"408\":2,\"409\":2,\"410\":1,\"491\":1,\"500\":1,\"501\":2}}],[\"npx\",{\"1\":{\"95\":1}}],[\"npmjs\",{\"1\":{\"313\":1,\"320\":1,\"324\":1,\"331\":3}}],[\"npmmirror\",{\"1\":{\"288\":1}}],[\"npm~module\",{\"1\":{\"130\":1}}],[\"npm常用命令\",{\"0\":{\"102\":1}}],[\"npm\",{\"0\":{\"329\":1},\"1\":{\"95\":1,\"102\":20,\"122\":2,\"124\":2,\"130\":2,\"133\":1,\"168\":2,\"182\":1,\"185\":2,\"190\":1,\"298\":2,\"300\":1,\"305\":1,\"315\":1,\"318\":1,\"329\":2,\"330\":1,\"331\":3,\"333\":1,\"335\":1,\"338\":2,\"434\":1,\"632\":2,\"636\":2}}],[\"nvm中文网站\",{\"1\":{\"298\":1}}],[\"nvm常用命令\",{\"0\":{\"297\":1}}],[\"nvmrc\",{\"1\":{\"289\":1,\"293\":1}}],[\"nvmrc文件\",{\"1\":{\"287\":1}}],[\"nvm\",{\"0\":{\"295\":1},\"1\":{\"95\":8,\"295\":1,\"296\":1,\"297\":12,\"298\":9}}],[\"nolastread=1\",{\"1\":{\"625\":1}}],[\"none\",{\"1\":{\"491\":1}}],[\"nonnullable<nullablestring>\",{\"1\":{\"113\":1}}],[\"nonnullablestring\",{\"1\":{\"113\":1}}],[\"nonnullable\",{\"0\":{\"113\":1}}],[\"nopowered\",{\"1\":{\"454\":1}}],[\"normal\",{\"1\":{\"356\":1,\"454\":1}}],[\"normalarray\",{\"1\":{\"9\":3}}],[\"noimplicitany\",{\"1\":{\"137\":1}}],[\"node版本工具\",{\"0\":{\"650\":1}}],[\"node使用11\",{\"1\":{\"632\":1,\"636\":1,\"638\":1}}],[\"nodecolor1360×500\",{\"1\":{\"470\":1}}],[\"nodejitsu\",{\"1\":{\"331\":1}}],[\"nodejs<\",{\"1\":{\"356\":1,\"357\":1}}],[\"nodejs\",{\"1\":{\"298\":1,\"356\":4,\"357\":3,\"358\":1,\"362\":1,\"364\":3,\"370\":1}}],[\"nodejs新人可以参考图片中配置\",{\"1\":{\"210\":1}}],[\"nodejs应用程序可以在运行命令中加入\",{\"1\":{\"203\":1}}],[\"node自动切换版本\",{\"1\":{\"289\":1}}],[\"node模块可以整体解决模块的声明文件问题\",{\"1\":{\"124\":1}}],[\"node\",{\"1\":{\"95\":3,\"122\":1,\"124\":2,\"137\":2,\"190\":2,\"209\":1,\"236\":2,\"262\":1,\"287\":1,\"288\":5,\"289\":1,\"293\":1,\"295\":1,\"297\":1,\"298\":1,\"341\":7,\"342\":2,\"343\":1,\"344\":1,\"356\":1,\"357\":1,\"366\":1,\"454\":1}}],[\"no\",{\"1\":{\"74\":4,\"356\":1,\"382\":2,\"389\":1,\"392\":3,\"393\":2,\"394\":2,\"395\":1,\"398\":1,\"404\":1,\"408\":2,\"409\":1,\"410\":1}}],[\"notational\",{\"1\":{\"376\":1}}],[\"notify的时候\",{\"1\":{\"278\":2}}],[\"notify中的请求体\",{\"1\":{\"273\":1}}],[\"notify了\",{\"1\":{\"273\":1,\"276\":1}}],[\"notifyall\",{\"1\":{\"272\":1}}],[\"notify是客户端发给服务端的通知\",{\"1\":{\"249\":1}}],[\"notify和push\",{\"1\":{\"249\":1}}],[\"notify\",{\"0\":{\"249\":1},\"1\":{\"227\":1,\"272\":1,\"273\":3,\"278\":3,\"282\":1}}],[\"noticed\",{\"1\":{\"220\":1}}],[\"not\",{\"1\":{\"32\":1,\"234\":1,\"261\":1,\"271\":1,\"292\":1,\"382\":1,\"612\":1,\"636\":1,\"642\":1}}],[\"now\",{\"1\":{\"31\":2}}],[\"neko电子音乐手游音乐世界cytus\",{\"1\":{\"519\":1}}],[\"need\",{\"1\":{\"382\":1}}],[\"nestjs\",{\"1\":{\"182\":1}}],[\"network\",{\"1\":{\"366\":1}}],[\"net\",{\"1\":{\"54\":1,\"159\":1,\"290\":1,\"293\":1}}],[\"next函数上\",{\"1\":{\"218\":1}}],[\"next是下一步处理\",{\"1\":{\"197\":1}}],[\"next是用来组成请求链的\",{\"1\":{\"197\":1}}],[\"next\",{\"1\":{\"29\":2,\"182\":1,\"197\":3,\"218\":1,\"234\":1,\"251\":1,\"252\":1,\"628\":1}}],[\"newval\",{\"1\":{\"34\":2}}],[\"newarrayvalue\",{\"1\":{\"32\":2}}],[\"newbuffer\",{\"1\":{\"6\":1}}],[\"new\",{\"1\":{\"4\":7,\"5\":1,\"6\":1,\"7\":2,\"8\":2,\"9\":14,\"10\":1,\"11\":8,\"13\":5,\"14\":3,\"15\":2,\"16\":4,\"17\":1,\"18\":4,\"19\":1,\"21\":2,\"22\":8,\"24\":3,\"25\":3,\"27\":2,\"29\":14,\"30\":4,\"31\":1,\"32\":1,\"40\":1,\"41\":1,\"42\":2,\"44\":1,\"50\":1,\"56\":2,\"74\":1,\"182\":1,\"234\":1,\"261\":1,\"271\":1,\"272\":2,\"292\":1,\"380\":2,\"384\":1,\"385\":2,\"389\":2,\"392\":7,\"393\":6,\"394\":7,\"395\":3,\"398\":11,\"399\":8,\"400\":3,\"401\":1,\"402\":1,\"404\":2,\"408\":7,\"409\":6,\"410\":3,\"491\":1,\"612\":1}}],[\"n\",{\"1\":{\"5\":1,\"82\":1,\"103\":1,\"365\":1,\"382\":1,\"393\":2}}],[\"icey\",{\"0\":{\"595\":1},\"1\":{\"595\":1}}],[\"icon\",{\"1\":{\"442\":3}}],[\"icons>\",{\"1\":{\"356\":1}}],[\"icondark\",{\"1\":{\"356\":2}}],[\"icon>\",{\"1\":{\"356\":4}}],[\"iconlight\",{\"1\":{\"356\":2}}],[\"ignore\",{\"1\":{\"443\":1}}],[\"ii周边t恤短袖男女全京东¥\",{\"1\":{\"519\":1}}],[\"ii\",{\"1\":{\"441\":1,\"518\":1}}],[\"i<list\",{\"1\":{\"399\":1}}],[\"i<layerdescriptor\",{\"1\":{\"398\":4}}],[\"i<layers\",{\"1\":{\"378\":2}}],[\"i<desc\",{\"1\":{\"398\":1}}],[\"itmi\",{\"1\":{\"401\":2}}],[\"itself\",{\"1\":{\"382\":1}}],[\"its\",{\"1\":{\"376\":1}}],[\"it\",{\"1\":{\"376\":1,\"382\":2,\"491\":2}}],[\"itcp\",{\"1\":{\"365\":1}}],[\"itemidx=1\",{\"1\":{\"625\":1}}],[\"itemindex\",{\"1\":{\"378\":18,\"399\":2,\"401\":2,\"408\":1}}],[\"item>\",{\"1\":{\"385\":1}}],[\"items\",{\"1\":{\"357\":1}}],[\"item\",{\"1\":{\"30\":1,\"31\":2,\"385\":1}}],[\"iterator\",{\"1\":{\"10\":1}}],[\"ilst\",{\"1\":{\"360\":1}}],[\"illustrator\",{\"1\":{\"360\":1,\"376\":1}}],[\"iphone手机打电话和开热点导致导航栏样式错乱\",{\"1\":{\"504\":1}}],[\"ip\",{\"0\":{\"239\":1},\"1\":{\"239\":2}}],[\"ios为88\",{\"1\":{\"501\":1}}],[\"ios胶囊按钮与状态栏之间距离为\",{\"1\":{\"498\":1}}],[\"ios\",{\"1\":{\"498\":1,\"501\":3}}],[\"ios和android一致\",{\"1\":{\"497\":1}}],[\"ios手机对于页面title的展示不一致\",{\"1\":{\"495\":1}}],[\"io的实现很好\",{\"1\":{\"221\":1}}],[\"io\",{\"1\":{\"65\":3,\"131\":1,\"221\":1,\"233\":1,\"273\":1,\"456\":1}}],[\"implements\",{\"1\":{\"376\":2}}],[\"implementation\",{\"1\":{\"115\":1}}],[\"import\",{\"1\":{\"137\":1,\"372\":1}}],[\"image1197×642\",{\"1\":{\"487\":1}}],[\"imagealpha\",{\"1\":{\"478\":1}}],[\"images\",{\"1\":{\"170\":5,\"319\":3,\"356\":4,\"420\":3,\"442\":6}}],[\"image\",{\"1\":{\"60\":3,\"67\":1,\"69\":1,\"87\":1,\"123\":2,\"139\":1,\"141\":1,\"164\":2,\"167\":1,\"170\":2,\"174\":1,\"179\":1,\"467\":1,\"487\":1,\"577\":1,\"610\":1,\"611\":4}}],[\"imagedata\",{\"1\":{\"26\":2}}],[\"img\",{\"1\":{\"50\":1,\"51\":1,\"52\":1,\"53\":3,\"122\":2,\"170\":6,\"292\":3,\"577\":1,\"633\":1,\"638\":1}}],[\"i=0\",{\"1\":{\"29\":1,\"378\":2,\"398\":5,\"399\":1}}],[\"ia\",{\"1\":{\"29\":23,\"30\":5,\"32\":8}}],[\"ie=edge\",{\"1\":{\"357\":1}}],[\"ie10\",{\"1\":{\"54\":1}}],[\"ie\",{\"1\":{\"26\":1}}],[\"isprivate\",{\"1\":{\"612\":1}}],[\"isproduction\",{\"1\":{\"369\":1}}],[\"isinited\",{\"1\":{\"612\":1}}],[\"isautorequestframe\",{\"1\":{\"612\":1}}],[\"isattach\",{\"1\":{\"261\":1}}],[\"isbrowser\",{\"1\":{\"491\":1}}],[\"isshowqrcode改成false\",{\"1\":{\"454\":1}}],[\"isowner\",{\"1\":{\"612\":1}}],[\"isoland3淘宝¥\",{\"1\":{\"532\":1}}],[\"iso\",{\"1\":{\"401\":1}}],[\"isequal\",{\"1\":{\"392\":1}}],[\"islockfree\",{\"1\":{\"34\":1}}],[\"is\",{\"1\":{\"25\":1,\"27\":1,\"30\":1,\"31\":1,\"56\":1,\"261\":1,\"382\":1,\"392\":1,\"441\":2}}],[\"isview\",{\"0\":{\"7\":1},\"1\":{\"7\":3}}],[\"idx=1\",{\"1\":{\"626\":1}}],[\"idx\",{\"1\":{\"467\":1}}],[\"idnt\",{\"1\":{\"401\":2}}],[\"idnull\",{\"1\":{\"389\":2,\"392\":4,\"394\":2}}],[\"idbicubic\",{\"1\":{\"394\":2}}],[\"idinterpolationtype\",{\"1\":{\"394\":2}}],[\"idinterfaceiconframedimmed\",{\"1\":{\"394\":2}}],[\"idheight\",{\"1\":{\"394\":2}}],[\"idhorizontal\",{\"1\":{\"394\":2}}],[\"idwidth\",{\"1\":{\"394\":2}}],[\"idvertical\",{\"1\":{\"394\":2}}],[\"idview\",{\"1\":{\"22\":1}}],[\"idpercentunit\",{\"1\":{\"394\":4}}],[\"idpixelsunit\",{\"1\":{\"394\":4}}],[\"idpathcomponentselecttool\",{\"1\":{\"389\":2}}],[\"idqcsaverage\",{\"1\":{\"394\":2}}],[\"idquadcenterstate\",{\"1\":{\"394\":2}}],[\"idfreetransformcenterstate\",{\"1\":{\"394\":2}}],[\"idforcenotify\",{\"1\":{\"389\":2,\"392\":4}}],[\"idtargetenum\",{\"1\":{\"394\":2}}],[\"idtransform\",{\"1\":{\"394\":2}}],[\"idoffset\",{\"1\":{\"394\":4}}],[\"idordinal\",{\"1\":{\"394\":2}}],[\"idopen\",{\"1\":{\"392\":4}}],[\"idlayer\",{\"1\":{\"394\":2}}],[\"iddocumentid\",{\"1\":{\"392\":4}}],[\"iddontrecord\",{\"1\":{\"389\":2,\"392\":4}}],[\"idselect\",{\"1\":{\"389\":2}}],[\"idsn\",{\"1\":{\"360\":1}}],[\"id里头少了7\",{\"1\":{\"378\":1}}],[\"identifiernamesgenerator\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"ide来调试\",{\"1\":{\"202\":1}}],[\"id是这个session的id\",{\"1\":{\"247\":1}}],[\"id>\",{\"1\":{\"247\":4}}],[\"id等\",{\"1\":{\"230\":1}}],[\"id采用varints\",{\"1\":{\"226\":1}}],[\"id和route则是可选的\",{\"1\":{\"226\":1}}],[\"id为空\",{\"1\":{\"226\":1}}],[\"id从sessionservice里获得到对应的session\",{\"1\":{\"195\":1}}],[\"id=1338611201454014464\",{\"1\":{\"625\":1}}],[\"id=chat\",{\"1\":{\"262\":2}}],[\"id=added\",{\"1\":{\"233\":1}}],[\"id=\",{\"1\":{\"189\":1,\"356\":2,\"357\":3,\"365\":1}}],[\"id\",{\"1\":{\"22\":1,\"69\":1,\"188\":1,\"189\":2,\"206\":1,\"226\":2,\"233\":1,\"234\":15,\"247\":2,\"261\":3,\"266\":2,\"271\":1,\"272\":1,\"356\":2,\"360\":1,\"365\":2,\"378\":18,\"392\":2,\"393\":2,\"399\":1,\"401\":2,\"612\":2,\"613\":1}}],[\"i++\",{\"1\":{\"11\":2,\"13\":2,\"29\":2,\"30\":2,\"31\":1,\"372\":1,\"378\":2,\"398\":5,\"399\":1}}],[\"i\",{\"1\":{\"11\":8,\"13\":8,\"26\":3,\"29\":5,\"30\":7,\"31\":7,\"99\":1,\"125\":1,\"182\":1,\"327\":1,\"338\":2,\"372\":3,\"378\":4,\"398\":9,\"399\":1,\"441\":2}}],[\"innerhtml\",{\"1\":{\"491\":1}}],[\"innertext\",{\"1\":{\"25\":1}}],[\"inchunit表示英寸\",{\"1\":{\"394\":1}}],[\"including\",{\"1\":{\"376\":2}}],[\"include指令\",{\"1\":{\"383\":1}}],[\"include的反向操作\",{\"1\":{\"137\":1}}],[\"include\",{\"1\":{\"137\":1,\"383\":1,\"402\":2}}],[\"incopy\",{\"1\":{\"360\":1}}],[\"indesign\",{\"1\":{\"360\":1,\"376\":1}}],[\"index类似\",{\"1\":{\"378\":1}}],[\"index值越大\",{\"1\":{\"378\":1}}],[\"index\",{\"1\":{\"30\":5,\"31\":2,\"32\":4,\"33\":15,\"34\":2,\"82\":3,\"131\":1,\"170\":3,\"215\":1,\"217\":2,\"234\":2,\"341\":3,\"342\":2,\"344\":1,\"350\":2,\"356\":2,\"357\":3,\"358\":2,\"369\":2,\"372\":1,\"392\":1,\"399\":3}}],[\"indexof\",{\"1\":{\"10\":1,\"376\":1}}],[\"inside中文版\",{\"1\":{\"512\":1}}],[\"ins\",{\"1\":{\"391\":4}}],[\"ins文件夹下\",{\"1\":{\"391\":1}}],[\"inspect=9222\",{\"1\":{\"345\":1}}],[\"inspect\",{\"1\":{\"341\":3,\"342\":2,\"343\":2,\"366\":3,\"367\":5}}],[\"instantapp\",{\"1\":{\"461\":1}}],[\"instant\",{\"1\":{\"461\":1}}],[\"instance\",{\"1\":{\"209\":1,\"261\":1,\"292\":1,\"356\":1}}],[\"instancetype<typeof\",{\"1\":{\"117\":1}}],[\"instancetype\",{\"0\":{\"117\":1}}],[\"instanceof\",{\"1\":{\"22\":1}}],[\"instapaper\",{\"1\":{\"442\":1,\"453\":1}}],[\"installed\",{\"1\":{\"297\":2}}],[\"install\",{\"1\":{\"102\":4,\"103\":1,\"122\":2,\"124\":2,\"129\":1,\"130\":3,\"133\":1,\"159\":1,\"168\":2,\"185\":2,\"190\":2,\"288\":4,\"297\":3,\"300\":1,\"305\":1,\"315\":1,\"318\":1,\"330\":1,\"434\":1,\"446\":1,\"632\":2,\"636\":2}}],[\"input<\",{\"1\":{\"356\":1,\"357\":1}}],[\"input\",{\"1\":{\"301\":1}}],[\"invoke\",{\"1\":{\"291\":1}}],[\"invalidjson\",{\"1\":{\"45\":1}}],[\"initroom\",{\"1\":{\"612\":2}}],[\"initial\",{\"1\":{\"357\":1}}],[\"initialvalue\",{\"1\":{\"10\":2}}],[\"init阶段唯一的不同就是\",{\"1\":{\"262\":1}}],[\"initarea\",{\"1\":{\"261\":2,\"271\":2}}],[\"init生成的项目中的相关配置\",{\"1\":{\"233\":1}}],[\"init\",{\"1\":{\"70\":1,\"72\":1,\"102\":1,\"126\":1,\"136\":1,\"185\":1,\"232\":1,\"233\":2,\"261\":1,\"262\":2,\"271\":2,\"436\":1,\"612\":1,\"613\":1,\"636\":5}}],[\"in\",{\"1\":{\"54\":2,\"58\":3,\"223\":1,\"292\":1,\"376\":1,\"380\":1,\"382\":2,\"383\":1,\"392\":2,\"398\":1,\"402\":1,\"612\":4}}],[\"inherit\",{\"1\":{\"54\":1}}],[\"info\",{\"0\":{\"402\":1},\"1\":{\"399\":2,\"402\":3,\"488\":1}}],[\"infoheader\",{\"1\":{\"29\":12}}],[\"infnite\",{\"1\":{\"292\":1}}],[\"infinity\",{\"1\":{\"32\":2}}],[\"integer=\",{\"1\":{\"401\":6}}],[\"integertype\",{\"1\":{\"398\":1}}],[\"integer\",{\"1\":{\"392\":1}}],[\"interpolationtype\",{\"1\":{\"394\":2,\"395\":1}}],[\"internals>\",{\"1\":{\"344\":1}}],[\"interval指定了周期\",{\"1\":{\"274\":1}}],[\"interval就是这个信息上报的时间周期了\",{\"1\":{\"272\":1}}],[\"interval\",{\"1\":{\"223\":1,\"271\":1,\"272\":2}}],[\"interfaceiconframedimmed\",{\"1\":{\"394\":3,\"395\":1}}],[\"interface\",{\"1\":{\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"398\":1,\"461\":1}}],[\"into\",{\"1\":{\"343\":1}}],[\"ints\",{\"1\":{\"25\":2}}],[\"int\",{\"1\":{\"3\":2,\"8\":1}}],[\"int32view\",{\"1\":{\"11\":3}}],[\"int32array\",{\"1\":{\"4\":2,\"7\":1,\"8\":1,\"9\":1,\"11\":1,\"12\":1,\"16\":1,\"29\":6,\"30\":3,\"31\":1,\"32\":1}}],[\"int32\",{\"1\":{\"3\":1}}],[\"int8array\",{\"1\":{\"8\":1,\"9\":6,\"12\":1,\"14\":1,\"22\":3}}],[\"int8\",{\"1\":{\"3\":1,\"14\":6}}],[\"int16view\",{\"1\":{\"11\":3}}],[\"int16\",{\"1\":{\"3\":2}}],[\"int16array\",{\"1\":{\"2\":1,\"8\":1,\"9\":3,\"11\":1,\"12\":1,\"16\":1,\"17\":1,\"22\":2,\"24\":1}}],[\"i16\",{\"1\":{\"9\":1}}],[\"if\",{\"1\":{\"5\":1,\"11\":1,\"13\":1,\"25\":1,\"31\":1,\"54\":3,\"234\":1,\"261\":1,\"271\":1,\"272\":2,\"292\":1,\"293\":1,\"358\":1,\"378\":1,\"382\":1,\"392\":1,\"398\":2,\"491\":2,\"501\":6,\"612\":6}}],[\"bv1cq4y1d726\",{\"1\":{\"625\":1}}],[\"bv1ke41197zs\",{\"1\":{\"623\":1}}],[\"b095a344\",{\"1\":{\"465\":1}}],[\"bp\",{\"1\":{\"382\":1}}],[\"by\",{\"1\":{\"376\":1}}],[\"bytes\",{\"0\":{\"12\":1},\"1\":{\"12\":11,\"29\":2,\"30\":1}}],[\"byte\",{\"1\":{\"10\":2}}],[\"byteoffset\",{\"0\":{\"16\":1},\"1\":{\"9\":3,\"16\":4,\"22\":1}}],[\"bytelength\",{\"0\":{\"5\":1,\"16\":1},\"1\":{\"5\":3,\"6\":1,\"13\":1,\"16\":4,\"17\":2,\"19\":2,\"22\":1,\"25\":1}}],[\"b++\",{\"1\":{\"372\":1}}],[\"breakpoint\",{\"1\":{\"382\":1}}],[\"break\",{\"1\":{\"382\":1,\"398\":7}}],[\"brew\",{\"1\":{\"165\":1}}],[\"bridge\",{\"1\":{\"360\":1,\"382\":1}}],[\"brk\",{\"1\":{\"341\":1,\"342\":1}}],[\"branch\",{\"1\":{\"87\":13}}],[\"branch2\",{\"1\":{\"76\":1,\"77\":9}}],[\"branch1\",{\"1\":{\"71\":2,\"75\":5,\"76\":4,\"77\":7}}],[\"blurcompare780×425\",{\"1\":{\"482\":1}}],[\"blur1360×720\",{\"1\":{\"482\":1}}],[\"bluematador\",{\"1\":{\"159\":1}}],[\"blankj\",{\"1\":{\"442\":5}}],[\"black\",{\"1\":{\"357\":1}}],[\"blog\",{\"1\":{\"54\":1,\"159\":2,\"290\":1,\"412\":1}}],[\"blob\",{\"1\":{\"25\":1,\"491\":1}}],[\"bom\",{\"1\":{\"639\":1}}],[\"boss战\",{\"1\":{\"570\":1}}],[\"boss\",{\"1\":{\"533\":1}}],[\"box\",{\"1\":{\"523\":1}}],[\"bottom\",{\"1\":{\"501\":1}}],[\"bookignore\",{\"1\":{\"443\":1}}],[\"bookmark\",{\"1\":{\"442\":1}}],[\"book\",{\"0\":{\"442\":1,\"644\":1}}],[\"boolean=\",{\"1\":{\"401\":6}}],[\"booleantype\",{\"1\":{\"398\":1}}],[\"boolean\",{\"1\":{\"113\":2,\"392\":6,\"407\":1,\"612\":2}}],[\"body>\",{\"1\":{\"357\":1}}],[\"body为空\",{\"1\":{\"224\":1}}],[\"body\",{\"1\":{\"222\":1,\"357\":1,\"491\":1}}],[\"body内容长度\",{\"1\":{\"222\":1}}],[\"body则是需要传输的数据内容\",{\"1\":{\"222\":1}}],[\"bower\",{\"1\":{\"130\":2}}],[\"back\",{\"1\":{\"447\":1}}],[\"background\",{\"1\":{\"357\":1,\"378\":2}}],[\"backgroundcolor\",{\"1\":{\"25\":1}}],[\"backendsession组件主要负责启动backendsession服务\",{\"1\":{\"285\":1}}],[\"backendsession和server组件\",{\"1\":{\"285\":1}}],[\"backendsession也有push\",{\"1\":{\"247\":1}}],[\"backendsession是由backendsessionservice创建并维护的\",{\"1\":{\"247\":1}}],[\"backendsession是用于后端服务器的\",{\"1\":{\"247\":1}}],[\"backendsession是前端服务器中的session在后端服务器中的代理\",{\"1\":{\"230\":1}}],[\"backendsessionservice\",{\"0\":{\"247\":1},\"1\":{\"261\":3}}],[\"backendsession\",{\"0\":{\"247\":1},\"1\":{\"285\":1}}],[\"backendsession可以看作前端原始session在后端服务器的一个代理\",{\"1\":{\"230\":1}}],[\"bat\",{\"1\":{\"185\":1}}],[\"base64\",{\"1\":{\"308\":1,\"311\":1}}],[\"base64或\",{\"1\":{\"307\":1}}],[\"base\",{\"1\":{\"237\":1}}],[\"based\",{\"1\":{\"180\":1}}],[\"baseurl\",{\"1\":{\"137\":1}}],[\"basic\",{\"1\":{\"163\":1}}],[\"bashrc\",{\"1\":{\"292\":2}}],[\"bashcopy\",{\"1\":{\"103\":10}}],[\"bash\",{\"0\":{\"293\":1},\"1\":{\"95\":1,\"293\":4,\"638\":1}}],[\"banana\",{\"1\":{\"109\":2,\"110\":2,\"118\":2,\"119\":2,\"120\":2}}],[\"b文件的\",{\"1\":{\"74\":2}}],[\"b等\",{\"1\":{\"65\":1}}],[\"button\",{\"1\":{\"442\":1,\"447\":1,\"472\":1}}],[\"buttons\",{\"1\":{\"442\":3}}],[\"button>\",{\"1\":{\"357\":1}}],[\"bug收集\",{\"0\":{\"656\":1}}],[\"bugly\",{\"0\":{\"616\":1}}],[\"bug\",{\"1\":{\"367\":1,\"374\":1}}],[\"builtin\",{\"1\":{\"261\":1,\"370\":1,\"639\":4,\"640\":1,\"641\":1}}],[\"buildvage1704×724\",{\"1\":{\"488\":1}}],[\"build命令\",{\"1\":{\"438\":1}}],[\"buildwithparameters\",{\"1\":{\"180\":1}}],[\"buildbytoken\",{\"1\":{\"180\":2}}],[\"build\",{\"1\":{\"65\":1,\"95\":1,\"170\":1,\"180\":4,\"344\":1,\"437\":1,\"478\":2,\"633\":2,\"638\":1}}],[\"bufview\",{\"1\":{\"13\":5}}],[\"buff\",{\"1\":{\"5\":2,\"6\":3}}],[\"buffer的定义\",{\"1\":{\"285\":1}}],[\"buffer则会缓冲发送任务\",{\"1\":{\"195\":1}}],[\"buffer\",{\"0\":{\"15\":1},\"1\":{\"4\":3,\"5\":1,\"6\":1,\"7\":3,\"8\":1,\"9\":4,\"11\":7,\"15\":2,\"22\":8,\"24\":3,\"27\":1,\"29\":3,\"195\":1}}],[\"buf\",{\"1\":{\"4\":3,\"13\":8}}],[\"bfoffbits\",{\"1\":{\"29\":2}}],[\"bfreserved2\",{\"1\":{\"29\":1}}],[\"bfreserved1\",{\"1\":{\"29\":1}}],[\"bfsize\",{\"1\":{\"29\":1}}],[\"bftype\",{\"1\":{\"29\":1}}],[\"bmp\",{\"1\":{\"29\":5}}],[\"biz=mjm5odaxntm2na==\",{\"1\":{\"626\":1}}],[\"biz=mzi1nzk1mzexnw==\",{\"1\":{\"625\":1}}],[\"bilibili\",{\"1\":{\"623\":1,\"625\":1}}],[\"birthday\",{\"1\":{\"523\":1}}],[\"bird\",{\"1\":{\"111\":3}}],[\"bind\",{\"1\":{\"238\":1,\"247\":1}}],[\"bin\",{\"1\":{\"65\":5,\"95\":1,\"443\":1,\"633\":2}}],[\"binary\",{\"1\":{\"27\":2,\"461\":1,\"636\":1}}],[\"binarytype\",{\"1\":{\"27\":1}}],[\"bicubic\",{\"1\":{\"394\":3,\"395\":1}}],[\"biclrimportant\",{\"1\":{\"29\":1}}],[\"biclrused\",{\"1\":{\"29\":1}}],[\"bicompression\",{\"1\":{\"29\":1}}],[\"biypelspermeter\",{\"1\":{\"29\":1}}],[\"bixpelspermeter\",{\"1\":{\"29\":1}}],[\"bibitcount\",{\"1\":{\"29\":1}}],[\"biplanes\",{\"1\":{\"29\":1}}],[\"biheight\",{\"1\":{\"29\":1}}],[\"biwidth\",{\"1\":{\"29\":1}}],[\"bisizeimage\",{\"1\":{\"29\":1}}],[\"bisize\",{\"1\":{\"29\":1}}],[\"bitmap\",{\"1\":{\"29\":22}}],[\"big\",{\"1\":{\"11\":3}}],[\"bstr\",{\"1\":{\"13\":3}}],[\"better\",{\"1\":{\"441\":1}}],[\"been\",{\"1\":{\"382\":1}}],[\"beforefilter\",{\"1\":{\"261\":2}}],[\"before\",{\"1\":{\"197\":1,\"250\":1,\"261\":4,\"491\":1}}],[\"be\",{\"1\":{\"9\":1,\"382\":1,\"491\":3}}],[\"b\",{\"1\":{\"9\":5,\"15\":2,\"16\":4,\"18\":8,\"19\":3,\"65\":5,\"71\":1,\"73\":2,\"77\":2,\"87\":1,\"98\":1,\"102\":1,\"116\":4,\"121\":1,\"308\":3,\"372\":5}}],[\"5对人被召唤到方舟竞技场\",{\"1\":{\"584\":1}}],[\"590\",{\"1\":{\"636\":2}}],[\"59\",{\"0\":{\"564\":1}}],[\"57\",{\"0\":{\"562\":1}}],[\"56\",{\"0\":{\"561\":1}}],[\"54\",{\"0\":{\"559\":1},\"1\":{\"636\":3}}],[\"53\",{\"0\":{\"558\":1}}],[\"52\",{\"0\":{\"557\":1}}],[\"51\",{\"0\":{\"556\":1}}],[\"5g的大小还是不能少的\",{\"1\":{\"534\":1}}],[\"55\",{\"0\":{\"560\":1},\"1\":{\"487\":1}}],[\"58去购买\",{\"1\":{\"509\":1}}],[\"58\",{\"0\":{\"563\":1},\"1\":{\"394\":3}}],[\"501为客户端版本号不符合要求\",{\"1\":{\"223\":1}}],[\"500000\",{\"1\":{\"394\":6}}],[\"500为处理用户自定义握手流程时失败\",{\"1\":{\"223\":1}}],[\"500\",{\"1\":{\"42\":1}}],[\"50\",{\"0\":{\"555\":1},\"1\":{\"29\":1,\"32\":2,\"308\":1,\"420\":2,\"487\":1}}],[\"5的32位浮点数\",{\"1\":{\"24\":1}}],[\"5\",{\"0\":{\"54\":1,\"334\":1,\"386\":1,\"453\":1,\"510\":1},\"1\":{\"4\":2,\"10\":1,\"11\":2,\"13\":1,\"14\":2,\"23\":1,\"24\":1,\"27\":1,\"159\":1,\"272\":1,\"292\":1,\"297\":6,\"360\":1,\"378\":6,\"460\":1,\"474\":1,\"487\":1,\"501\":6,\"527\":1,\"612\":1}}],[\"3款游戏皆为大型回合制rpg游戏\",{\"1\":{\"584\":1}}],[\"3作则讲述玩家受神秘女士指引\",{\"1\":{\"584\":1}}],[\"3作的剧情还是引发了玩家们的不满\",{\"1\":{\"578\":1}}],[\"3作游戏皆采用回合制战斗方式\",{\"1\":{\"578\":1}}],[\"3作继承了前两部的水准\",{\"1\":{\"510\":1}}],[\"39\",{\"0\":{\"544\":1}}],[\"36\",{\"0\":{\"541\":1}}],[\"3626\",{\"1\":{\"50\":1}}],[\"3代360°全角度覆盖的游戏路径替换了我们原先熟悉的从左到右的路径\",{\"1\":{\"539\":1}}],[\"33\",{\"0\":{\"538\":1}}],[\"3350×592\",{\"1\":{\"469\":1}}],[\"3306\",{\"1\":{\"261\":1,\"267\":1}}],[\"3编译\",{\"1\":{\"461\":1}}],[\"3rd\",{\"1\":{\"376\":1}}],[\"358\",{\"1\":{\"487\":1}}],[\"357\",{\"1\":{\"376\":1}}],[\"35\",{\"0\":{\"311\":1,\"540\":1}}],[\"311\",{\"1\":{\"468\":1}}],[\"31\",{\"0\":{\"536\":1},\"1\":{\"394\":3}}],[\"3150\",{\"1\":{\"266\":2}}],[\"314159\",{\"1\":{\"29\":1,\"30\":2}}],[\"3个byte的大端整数\",{\"1\":{\"222\":1}}],[\"3des\",{\"0\":{\"145\":1}}],[\"37\",{\"0\":{\"542\":1},\"1\":{\"29\":5,\"30\":6,\"32\":8}}],[\"38\",{\"0\":{\"543\":1},\"1\":{\"29\":1,\"70\":1}}],[\"343\",{\"1\":{\"480\":1}}],[\"34\",{\"0\":{\"539\":1},\"1\":{\"29\":1}}],[\"30多种武器的选择加上种类丰富的怪物\",{\"1\":{\"571\":1}}],[\"30m\",{\"1\":{\"465\":1,\"476\":1}}],[\"3010\",{\"1\":{\"266\":2}}],[\"3014\",{\"1\":{\"234\":2}}],[\"3014端口后\",{\"1\":{\"218\":1}}],[\"305\",{\"1\":{\"472\":1}}],[\"3052\",{\"1\":{\"234\":2}}],[\"3051\",{\"1\":{\"234\":2}}],[\"3050\",{\"1\":{\"218\":1,\"233\":1,\"234\":2}}],[\"300\",{\"1\":{\"395\":1,\"464\":1}}],[\"3005\",{\"1\":{\"233\":2}}],[\"3005作为master服务器的地址\",{\"1\":{\"233\":1}}],[\"3001\",{\"1\":{\"215\":1,\"217\":3,\"293\":1}}],[\"30\",{\"0\":{\"535\":1},\"1\":{\"9\":1,\"29\":1,\"271\":1,\"395\":1,\"488\":1}}],[\"3\",{\"0\":{\"52\":1,\"238\":1,\"266\":1,\"312\":1,\"332\":1,\"348\":1,\"380\":1,\"384\":1,\"395\":1,\"400\":1,\"403\":1,\"410\":1,\"451\":1,\"508\":1,\"539\":1,\"545\":1,\"578\":1,\"584\":1,\"594\":1},\"1\":{\"4\":1,\"6\":3,\"9\":4,\"10\":3,\"11\":5,\"13\":1,\"19\":2,\"21\":6,\"22\":1,\"23\":3,\"27\":1,\"103\":1,\"122\":1,\"159\":3,\"163\":1,\"223\":1,\"234\":4,\"261\":1,\"292\":1,\"360\":3,\"368\":1,\"372\":2,\"378\":7,\"399\":1,\"412\":1,\"442\":2,\"460\":1,\"461\":3,\"470\":1,\"474\":1,\"477\":1,\"511\":1,\"532\":1,\"533\":1,\"606\":2}}],[\"32312\",{\"1\":{\"213\":1}}],[\"32\",{\"0\":{\"537\":1},\"1\":{\"2\":1,\"3\":4,\"4\":5,\"5\":2,\"6\":2,\"8\":3,\"9\":2,\"11\":2,\"22\":2,\"23\":3,\"24\":3,\"25\":1,\"29\":2,\"501\":2}}],[\"lunr\",{\"1\":{\"451\":1}}],[\"lyr\",{\"1\":{\"393\":1,\"399\":1,\"408\":1}}],[\"lf\",{\"1\":{\"382\":2}}],[\"lts\",{\"1\":{\"288\":2}}],[\"ll\",{\"1\":{\"97\":1}}],[\"lstcp=\",{\"1\":{\"365\":1}}],[\"lstcp\",{\"1\":{\"365\":1}}],[\"ls查看可选的源\",{\"1\":{\"331\":1}}],[\"lsof\",{\"1\":{\"99\":1,\"365\":1}}],[\"ls\",{\"1\":{\"95\":2,\"97\":1,\"102\":1,\"288\":2,\"331\":1}}],[\"l\",{\"1\":{\"91\":3,\"95\":1}}],[\"lx\",{\"1\":{\"76\":1}}],[\"lmb0989\",{\"1\":{\"70\":1}}],[\"limited\",{\"1\":{\"400\":1}}],[\"lifecycle>\",{\"1\":{\"356\":1}}],[\"livereload\",{\"1\":{\"171\":1}}],[\"linefeed\",{\"1\":{\"382\":1}}],[\"line\",{\"1\":{\"382\":3,\"442\":1}}],[\"linux安装\",{\"1\":{\"159\":1}}],[\"linux\",{\"0\":{\"646\":1},\"1\":{\"159\":2,\"165\":1,\"185\":1,\"287\":1}}],[\"linux系统\",{\"1\":{\"158\":1}}],[\"linkedin\",{\"1\":{\"442\":2,\"453\":1}}],[\"links\",{\"1\":{\"442\":1}}],[\"link\",{\"1\":{\"102\":2,\"491\":2,\"637\":1}}],[\"lib\",{\"1\":{\"130\":1,\"137\":2,\"236\":1}}],[\"library\",{\"1\":{\"130\":1,\"353\":1,\"354\":1,\"355\":1,\"400\":1}}],[\"libraries\",{\"1\":{\"130\":2}}],[\"listtype\",{\"1\":{\"398\":1}}],[\"list1\",{\"1\":{\"393\":6,\"398\":3,\"410\":6}}],[\"listen\",{\"1\":{\"365\":1}}],[\"listener\",{\"1\":{\"346\":1,\"365\":1,\"612\":2}}],[\"list等命令类似\",{\"1\":{\"233\":1}}],[\"list一样\",{\"1\":{\"233\":1}}],[\"list可以在任意地方执行\",{\"1\":{\"233\":1}}],[\"list\",{\"1\":{\"68\":1,\"82\":2,\"103\":2,\"187\":1,\"232\":1,\"233\":2,\"234\":3,\"282\":1,\"288\":1,\"297\":5,\"392\":1,\"398\":1,\"399\":3}}],[\"littleendian\",{\"1\":{\"24\":1}}],[\"little\",{\"1\":{\"11\":4}}],[\"last\",{\"1\":{\"636\":2}}],[\"lastindexof\",{\"1\":{\"10\":1}}],[\"lara\",{\"0\":{\"541\":1}}],[\"lars\",{\"1\":{\"32\":1}}],[\"lake\",{\"1\":{\"523\":1}}],[\"layered2130×1198\",{\"1\":{\"472\":1}}],[\"layerdescriptor\",{\"1\":{\"398\":14,\"399\":6,\"408\":4}}],[\"layerid\",{\"1\":{\"398\":1,\"399\":8,\"410\":1}}],[\"layersets分别是一般图层和图层的集合\",{\"1\":{\"378\":1}}],[\"layersets\",{\"1\":{\"378\":2,\"379\":1}}],[\"layerset\",{\"1\":{\"378\":9,\"379\":3}}],[\"layers\",{\"1\":{\"378\":26}}],[\"layer来操作图层相关的内容\",{\"1\":{\"377\":1}}],[\"layer\",{\"1\":{\"377\":2,\"378\":23,\"379\":3,\"393\":1,\"394\":4,\"395\":4,\"398\":10,\"399\":2,\"403\":2,\"408\":8,\"410\":1}}],[\"layername\",{\"1\":{\"357\":2}}],[\"lang=\",{\"1\":{\"357\":1}}],[\"languages\",{\"1\":{\"382\":1,\"442\":1}}],[\"language\",{\"1\":{\"58\":1,\"376\":1,\"442\":1}}],[\"launch\",{\"1\":{\"292\":1,\"344\":2,\"346\":2,\"370\":3}}],[\"latest\",{\"1\":{\"288\":1,\"297\":1}}],[\"lorien是我微信名哈哈哈\",{\"1\":{\"582\":1}}],[\"love\",{\"1\":{\"441\":1}}],[\"looplayers\",{\"1\":{\"378\":3}}],[\"loop\",{\"1\":{\"292\":1,\"378\":2}}],[\"locale\",{\"1\":{\"382\":3}}],[\"localelist>\",{\"1\":{\"356\":1}}],[\"local\",{\"1\":{\"209\":2}}],[\"localhost\",{\"1\":{\"190\":1,\"366\":1}}],[\"localization等内置对象\",{\"1\":{\"386\":1}}],[\"localization\",{\"1\":{\"180\":1}}],[\"lock\",{\"1\":{\"32\":1}}],[\"lowercase<fruit>\",{\"1\":{\"119\":1}}],[\"lowercase\",{\"0\":{\"119\":1}}],[\"loads\",{\"1\":{\"382\":1}}],[\"loadservers会加载所有的应用服务器的配置信息\",{\"1\":{\"262\":1}}],[\"loadservers\",{\"1\":{\"262\":1}}],[\"loadmaster调用会加载master服务器的配置信息\",{\"1\":{\"262\":1}}],[\"loadmaster\",{\"1\":{\"262\":1}}],[\"loadconfig\",{\"1\":{\"261\":2,\"267\":1,\"271\":2}}],[\"load\",{\"1\":{\"29\":1,\"30\":8,\"32\":1,\"261\":1,\"271\":1}}],[\"long\",{\"1\":{\"22\":1,\"25\":1}}],[\"log文件\",{\"1\":{\"391\":1}}],[\"logo\",{\"1\":{\"356\":1,\"420\":3}}],[\"log并查看其状态是否存在\",{\"1\":{\"261\":1}}],[\"login\",{\"1\":{\"102\":1}}],[\"logs\",{\"1\":{\"65\":2}}],[\"log\",{\"1\":{\"4\":3,\"5\":1,\"6\":1,\"10\":1,\"11\":2,\"29\":6,\"30\":3,\"31\":2,\"32\":3,\"39\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"65\":2,\"84\":3,\"114\":1,\"170\":1,\"238\":1,\"272\":2,\"308\":1,\"310\":1,\"311\":1,\"312\":1,\"319\":1,\"365\":1,\"372\":4,\"391\":2,\"398\":1,\"491\":1,\"501\":2}}],[\"leaveroom\",{\"1\":{\"612\":1}}],[\"learn\",{\"1\":{\"442\":1}}],[\"left\",{\"1\":{\"501\":1}}],[\"lexical\",{\"1\":{\"376\":1}}],[\"level\",{\"1\":{\"369\":3,\"382\":1}}],[\"less\",{\"1\":{\"167\":1}}],[\"len\",{\"1\":{\"13\":3}}],[\"length\",{\"0\":{\"17\":1},\"1\":{\"4\":1,\"8\":1,\"9\":2,\"10\":5,\"11\":2,\"13\":3,\"17\":3,\"25\":1,\"29\":4,\"30\":2,\"222\":1,\"234\":2,\"346\":1,\"358\":1,\"372\":2,\"378\":2,\"385\":1}}],[\"let\",{\"1\":{\"10\":7,\"11\":4,\"13\":2,\"20\":1,\"21\":3,\"25\":2,\"27\":1,\"29\":3,\"30\":2,\"31\":1,\"50\":1,\"101\":1,\"399\":1,\"491\":2,\"500\":4,\"501\":2,\"612\":1}}],[\"和喜欢的人一起环球旅行\",{\"1\":{\"573\":1}}],[\"和对手的选择性互动\",{\"1\":{\"556\":1}}],[\"和对应的\",{\"1\":{\"43\":1}}],[\"和趋于完善的剧情也增强了玩家们对此款游戏的粘性\",{\"1\":{\"519\":1}}],[\"和单源多点的\",{\"1\":{\"480\":1}}],[\"和元素的属性以及它的值\",{\"1\":{\"400\":1}}],[\"和事件\",{\"1\":{\"398\":1}}],[\"和set\",{\"1\":{\"396\":1}}],[\"和属性\",{\"1\":{\"379\":1}}],[\"和宿主执行的\",{\"1\":{\"370\":1}}],[\"和后面提到的\",{\"1\":{\"356\":1}}],[\"和这个面板相关联的\",{\"1\":{\"356\":1,\"357\":1}}],[\"和传统的前端调试差不多\",{\"1\":{\"346\":1}}],[\"和端口\",{\"0\":{\"239\":1}}],[\"和kill命令不同\",{\"1\":{\"233\":1}}],[\"和route信息\",{\"1\":{\"226\":1}}],[\"和webpack中resolve\",{\"1\":{\"137\":1}}],[\"和baseurl有关联\",{\"1\":{\"137\":1}}],[\"和包命令都将在该环境中执行\",{\"1\":{\"103\":1}}],[\"和constructor属性\",{\"1\":{\"51\":1,\"54\":1}}],[\"和constructor属性是对象所独有的\",{\"1\":{\"51\":1,\"54\":1}}],[\"和\",{\"1\":{\"4\":1,\"9\":2,\"29\":1,\"32\":2,\"65\":1,\"73\":1,\"80\":2,\"113\":1,\"307\":1,\"345\":1,\"346\":2,\"356\":3,\"358\":1,\"436\":1,\"442\":1,\"443\":1,\"478\":1,\"628\":2,\"635\":1,\"639\":2}}],[\"x版本\",{\"0\":{\"660\":1}}],[\"xcode\",{\"1\":{\"638\":1}}],[\"xtr9inmxgeouk0jj\",{\"1\":{\"616\":1}}],[\"xiaoqiang\",{\"1\":{\"392\":1}}],[\"xmp\",{\"1\":{\"386\":1}}],[\"xmlobj\",{\"1\":{\"385\":3}}],[\"xml解析\",{\"0\":{\"385\":1}}],[\"xmlschema\",{\"1\":{\"356\":1}}],[\"xmlns\",{\"1\":{\"356\":1}}],[\"xml\",{\"1\":{\"350\":1,\"356\":12,\"357\":1,\"358\":1,\"362\":1,\"365\":7,\"373\":1,\"376\":1,\"385\":3,\"401\":1}}],[\"xml提交\",{\"1\":{\"161\":1}}],[\"xmlhttprequest\",{\"1\":{\"3\":1,\"25\":2}}],[\"xsd\",{\"1\":{\"356\":1}}],[\"xsi=\",{\"1\":{\"356\":1}}],[\"x64\",{\"1\":{\"158\":1,\"159\":2,\"353\":1}}],[\"x32\",{\"1\":{\"158\":1}}],[\"xx\",{\"1\":{\"93\":1,\"101\":1,\"170\":1,\"171\":1}}],[\"xxx\",{\"1\":{\"58\":1,\"68\":1,\"69\":1,\"93\":1,\"99\":1,\"138\":1,\"612\":4}}],[\"xx2\",{\"1\":{\"58\":3}}],[\"xx1\",{\"1\":{\"58\":3}}],[\"xor\",{\"1\":{\"33\":3}}],[\"xhrdiv\",{\"1\":{\"25\":2}}],[\"xhr\",{\"1\":{\"25\":8}}],[\"xhr2\",{\"1\":{\"25\":1}}],[\"x86\",{\"1\":{\"11\":1,\"159\":2,\"353\":1,\"461\":2}}],[\"x\",{\"0\":{\"634\":1,\"635\":1},\"1\":{\"9\":10,\"22\":4,\"65\":2,\"102\":1,\"356\":1,\"357\":1,\"360\":7,\"628\":3,\"634\":1,\"635\":1,\"636\":7,\"637\":1}}],[\"x2\",{\"1\":{\"4\":2}}],[\"x1\",{\"1\":{\"4\":3}}],[\"与黑白灰混合的色调为我们带来平静安逸的感受\",{\"1\":{\"588\":1}}],[\"与强盗战斗\",{\"1\":{\"582\":1}}],[\"与商人交易\",{\"1\":{\"582\":1}}],[\"与男主一起找回丢失的记忆碎片\",{\"1\":{\"558\":1}}],[\"与之对应的\",{\"1\":{\"518\":1}}],[\"与成长\",{\"1\":{\"507\":1}}],[\"与利用视觉错位和矛盾空间的操作交互成这部被玩家们吹爆多年的经典之作\",{\"1\":{\"506\":1}}],[\"与实际项目中使用是无关的\",{\"1\":{\"475\":1}}],[\"与指令集的每种组合都有专属的应用二进制接口\",{\"1\":{\"461\":1}}],[\"与管理框架相关的类\",{\"1\":{\"273\":1}}],[\"与master一样\",{\"1\":{\"278\":1}}],[\"与master类似\",{\"1\":{\"272\":1,\"278\":1}}],[\"与master服务器一样\",{\"1\":{\"262\":1}}],[\"与component类似\",{\"1\":{\"255\":1}}],[\"与connector分配相关的代码\",{\"1\":{\"214\":1}}],[\"与constructor属性有困惑的同学有所帮助\",{\"1\":{\"54\":1}}],[\"与constructor属性\",{\"1\":{\"50\":1}}],[\"与constructor\",{\"0\":{\"49\":1}}],[\"与frontendsession类似\",{\"1\":{\"247\":1}}],[\"与前面的每个服务器类型仅有一台服务器的例子相比\",{\"1\":{\"234\":1}}],[\"与前面配置文件中的完全一致\",{\"1\":{\"209\":1}}],[\"与pinus\",{\"1\":{\"233\":1}}],[\"与list命令一样\",{\"1\":{\"233\":1}}],[\"与grunt功能类似的项目构建工具\",{\"1\":{\"167\":1}}],[\"与上面的规则不同\",{\"1\":{\"14\":1}}],[\"与字符串的互相转换\",{\"0\":{\"13\":1}}],[\"与普通数组相比\",{\"1\":{\"11\":1}}],[\"与\",{\"1\":{\"4\":1,\"29\":2,\"33\":3,\"45\":1,\"470\":1,\"525\":1,\"558\":1}}],[\"需要执行以下命令来重新编译模拟器\",{\"1\":{\"638\":1}}],[\"需要我们不断发挥想象力\",{\"1\":{\"577\":1}}],[\"需要将默认的search和lunr\",{\"1\":{\"451\":1}}],[\"需要将其注册到我们的应用中\",{\"1\":{\"272\":1}}],[\"需要设置到对应工具这个目标对象上\",{\"1\":{\"409\":1}}],[\"需要你从新到\",{\"1\":{\"367\":1}}],[\"需要访问宿主就编写\",{\"1\":{\"362\":1}}],[\"需要生成\",{\"1\":{\"341\":1}}],[\"需要对客户端进行身份验证\",{\"1\":{\"282\":1}}],[\"需要对用户进行分组\",{\"1\":{\"230\":1}}],[\"需要监控和管理的信息也是各不相同的\",{\"1\":{\"272\":1}}],[\"需要注意\",{\"1\":{\"262\":1,\"282\":1}}],[\"需要注意的是虽然是\",{\"1\":{\"365\":1}}],[\"需要注意的是所有的json配置文件中都要指定具体的模式\",{\"1\":{\"261\":1}}],[\"需要注意的是channel都是服务器本地的\",{\"1\":{\"248\":1}}],[\"需要注意的是\",{\"1\":{\"26\":1,\"273\":1,\"478\":1}}],[\"需要返回给客户端的响应信息\",{\"1\":{\"252\":1}}],[\"需要用户自己完成rpc服务端remote的handle代码\",{\"1\":{\"245\":1}}],[\"需要选择由哪台chat服务器来服务\",{\"1\":{\"234\":1}}],[\"需要选择新项目使用的与客户端通信时使用的connector\",{\"1\":{\"233\":1}}],[\"需要在adminserver\",{\"1\":{\"234\":1}}],[\"需要在game\",{\"1\":{\"233\":1}}],[\"需要在远端仓库添加本地生成的\",{\"1\":{\"69\":1}}],[\"需要权限验证\",{\"1\":{\"233\":1}}],[\"需要进行身份验证\",{\"1\":{\"233\":1}}],[\"需要使用调用bind和push\",{\"1\":{\"230\":1}}],[\"需要通过查询字典来获取route\",{\"1\":{\"229\":1}}],[\"需要加密的文件块的长度也是可变的\",{\"1\":{\"148\":1}}],[\"需要为推送当前分支并建立与远程上游的跟踪\",{\"1\":{\"75\":1}}],[\"需要为它指定视图\",{\"1\":{\"4\":1}}],[\"需要唤醒的\",{\"1\":{\"32\":1}}],[\"需要指定第三个参数\",{\"1\":{\"24\":1}}],[\"需要提供\",{\"1\":{\"4\":1}}],[\"08\",{\"1\":{\"494\":1}}],[\"0ab8\",{\"1\":{\"465\":1}}],[\"0版本node\",{\"1\":{\"297\":3}}],[\"0版本\",{\"1\":{\"288\":1,\"395\":1,\"632\":1,\"636\":1,\"638\":1}}],[\"0可以在header或者查询参数中设置value\",{\"1\":{\"163\":1}}],[\"0基于身份验证的请求\",{\"1\":{\"163\":1}}],[\"04上安装postman应用程序\",{\"1\":{\"159\":1}}],[\"013ca3e08ee11352×760\",{\"1\":{\"465\":1}}],[\"01\",{\"1\":{\"58\":4}}],[\"00去购买\",{\"1\":{\"507\":1,\"511\":1,\"512\":1,\"522\":1,\"525\":1,\"532\":1,\"533\":1,\"535\":1,\"550\":1,\"559\":1,\"595\":1}}],[\"00068aec7941f8f57509794be54413\",{\"1\":{\"504\":1}}],[\"000000\",{\"1\":{\"394\":2}}],[\"00000000\",{\"1\":{\"14\":2}}],[\"00ff00\",{\"1\":{\"25\":1}}],[\"0x78563412\",{\"1\":{\"11\":1}}],[\"0x1\",{\"1\":{\"307\":1}}],[\"0x100\",{\"1\":{\"11\":1}}],[\"0x10000\",{\"1\":{\"11\":1}}],[\"0x1000000\",{\"1\":{\"11\":1}}],[\"0x10\",{\"1\":{\"11\":1}}],[\"0x12345678\",{\"1\":{\"11\":3}}],[\"0xff+1\",{\"1\":{\"26\":1}}],[\"0xff05\",{\"1\":{\"11\":1}}],[\"0xff\",{\"1\":{\"11\":3}}],[\"0x04\",{\"1\":{\"222\":1}}],[\"0x05\",{\"1\":{\"11\":2,\"222\":1}}],[\"0x00\",{\"1\":{\"11\":1,\"26\":1}}],[\"0x07\",{\"1\":{\"11\":3}}],[\"0x03\",{\"1\":{\"11\":3,\"222\":1}}],[\"0x01\",{\"1\":{\"11\":1,\"222\":1}}],[\"0x0210\",{\"1\":{\"11\":1}}],[\"0x02\",{\"1\":{\"11\":2,\"222\":1}}],[\"0\",{\"1\":{\"4\":10,\"6\":2,\"8\":3,\"9\":25,\"10\":4,\"11\":14,\"13\":2,\"14\":18,\"16\":1,\"20\":1,\"21\":3,\"22\":5,\"23\":1,\"24\":3,\"26\":6,\"27\":2,\"29\":4,\"30\":3,\"31\":2,\"32\":6,\"50\":1,\"82\":1,\"95\":1,\"102\":4,\"124\":1,\"163\":3,\"173\":2,\"209\":2,\"213\":2,\"215\":2,\"217\":8,\"218\":4,\"219\":2,\"220\":6,\"233\":12,\"234\":29,\"256\":1,\"261\":6,\"262\":2,\"266\":8,\"267\":4,\"288\":5,\"297\":3,\"307\":3,\"308\":3,\"311\":3,\"312\":1,\"344\":2,\"346\":2,\"356\":12,\"357\":1,\"358\":1,\"360\":21,\"368\":1,\"369\":2,\"370\":5,\"372\":2,\"378\":5,\"379\":1,\"382\":2,\"385\":1,\"401\":1,\"461\":1,\"477\":2,\"488\":2,\"612\":1,\"639\":1}}],[\"==>\",{\"1\":{\"636\":2}}],[\"==\",{\"1\":{\"29\":1,\"30\":1,\"378\":1,\"393\":1,\"394\":1}}],[\"===\",{\"1\":{\"5\":1,\"11\":1,\"24\":1,\"25\":1,\"31\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"234\":1,\"358\":1,\"382\":2,\"398\":1,\"501\":3,\"612\":8}}],[\"=>\",{\"1\":{\"22\":2,\"30\":1,\"31\":1,\"32\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":2,\"43\":1,\"44\":1,\"45\":2,\"169\":1,\"170\":5,\"171\":2,\"238\":1,\"398\":3,\"612\":4}}],[\"=\",{\"1\":{\"4\":10,\"5\":1,\"6\":2,\"7\":2,\"9\":22,\"10\":5,\"11\":20,\"13\":10,\"14\":9,\"15\":2,\"16\":4,\"17\":1,\"18\":4,\"19\":2,\"20\":1,\"21\":6,\"22\":7,\"23\":6,\"24\":2,\"25\":10,\"26\":6,\"27\":4,\"29\":54,\"30\":10,\"31\":4,\"32\":6,\"41\":2,\"42\":2,\"43\":2,\"44\":2,\"50\":1,\"54\":5,\"56\":1,\"101\":2,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":2,\"110\":2,\"111\":2,\"112\":2,\"113\":2,\"114\":1,\"115\":1,\"116\":1,\"117\":3,\"118\":2,\"119\":2,\"120\":2,\"121\":2,\"169\":1,\"171\":1,\"197\":1,\"218\":1,\"234\":8,\"236\":1,\"239\":2,\"251\":1,\"252\":1,\"257\":2,\"261\":9,\"267\":4,\"271\":7,\"272\":17,\"307\":5,\"319\":3,\"357\":3,\"358\":3,\"369\":2,\"372\":8,\"377\":4,\"378\":5,\"379\":4,\"380\":6,\"384\":1,\"385\":3,\"389\":7,\"392\":13,\"393\":8,\"394\":28,\"395\":5,\"398\":38,\"399\":22,\"400\":11,\"402\":4,\"404\":4,\"408\":11,\"409\":13,\"410\":3,\"491\":9,\"499\":1,\"500\":4,\"501\":11,\"612\":5,\"613\":1}}],[\"它细腻的手绘风格画面配合柔和的音乐一下子吸引住了我\",{\"1\":{\"585\":1}}],[\"它释放了我们的创造力与想象力\",{\"1\":{\"559\":1}}],[\"它真的能让你肝很久\",{\"1\":{\"548\":1}}],[\"它让我们把眼光从单纯的盒子解谜移到了整个房间\",{\"1\":{\"509\":1}}],[\"它更适合使用像下图这样的\",{\"1\":{\"485\":1}}],[\"它更易读一些\",{\"1\":{\"402\":1}}],[\"它就是上面截图框起来的部分\",{\"1\":{\"409\":1}}],[\"它就会采用当前用户使用的单位\",{\"1\":{\"380\":1}}],[\"它就会盖住下面的图层\",{\"1\":{\"378\":1}}],[\"它给actionreference设置了一个枚举类型\",{\"1\":{\"399\":1}}],[\"它可能需要一个递归\",{\"1\":{\"398\":1}}],[\"它可以记录你在ps上的各种操作\",{\"1\":{\"390\":1}}],[\"它可以保证一个操作所对应的多条机器指令\",{\"1\":{\"29\":1}}],[\"它通过set命令来完成\",{\"1\":{\"410\":1}}],[\"它通过传递一个typeid作为参数\",{\"1\":{\"398\":1}}],[\"它通过完整的字符串表示命令\",{\"1\":{\"393\":1}}],[\"它应该是数值型\",{\"1\":{\"398\":1}}],[\"它表示这个ad里头key的数量\",{\"1\":{\"398\":1}}],[\"它表示我们对某个目标对象的引用\",{\"1\":{\"398\":1}}],[\"它又都有哪些属性和值呢\",{\"1\":{\"398\":1}}],[\"它里头设置了一个layer属性\",{\"1\":{\"398\":1}}],[\"它才会输出\",{\"1\":{\"396\":1}}],[\"它包含了水平和垂直两个方向的数值\",{\"1\":{\"394\":1}}],[\"它由多个actiondescriptor\",{\"1\":{\"394\":1}}],[\"它由pinus的多个组件共同完成\",{\"1\":{\"230\":1}}],[\"它最大的价值\",{\"1\":{\"390\":1}}],[\"它只能返回第一个\",{\"1\":{\"387\":1}}],[\"它适用在不同的场景当中\",{\"1\":{\"380\":1}}],[\"它还是一份\",{\"1\":{\"374\":1}}],[\"它还可以发送几乎所有类型的http请求\",{\"1\":{\"157\":1}}],[\"它内置了一个简易的文本编辑器\",{\"1\":{\"348\":1}}],[\"它能够直接定位到对应的行\",{\"1\":{\"346\":1}}],[\"它支持很多流行的前端打包工具\",{\"1\":{\"304\":1}}],[\"它功能强大\",{\"1\":{\"304\":1}}],[\"它也都是这个对象树中的一个节点\",{\"1\":{\"400\":1}}],[\"它也有一个对象树\",{\"1\":{\"400\":1}}],[\"它也是一个属性树\",{\"1\":{\"399\":1}}],[\"它也是一个监控管理的客户端\",{\"1\":{\"282\":1}}],[\"它也能通过\",{\"1\":{\"53\":1}}],[\"它提供了一个gui界面让你选择需要dump的数据对象\",{\"1\":{\"401\":1}}],[\"它提供了一些属性和方法\",{\"1\":{\"382\":1}}],[\"它提供了一种很灵活的机制来扩展pinus\",{\"1\":{\"256\":1}}],[\"它提供了通过web页面来看服务器管理监控信息的方式\",{\"1\":{\"282\":1}}],[\"它注册到master上\",{\"1\":{\"272\":1}}],[\"它仅仅被当作一个全程驱动的入口以及一个上下文环境\",{\"1\":{\"262\":1}}],[\"它使用的module是pinus内建的console\",{\"1\":{\"262\":1}}],[\"它等价于在app\",{\"1\":{\"258\":1}}],[\"它会影响到这个图层的顺序树\",{\"1\":{\"408\":1}}],[\"它会会自动更新\",{\"1\":{\"403\":1}}],[\"它会使性能降低约30\",{\"1\":{\"308\":1}}],[\"它会发起到master的连接\",{\"1\":{\"254\":1}}],[\"它会收集整个服务器群的信息\",{\"1\":{\"254\":1}}],[\"它会向master注册自己\",{\"1\":{\"254\":1}}],[\"它位于before\",{\"1\":{\"251\":1}}],[\"它对用户来说是透明的\",{\"1\":{\"245\":1}}],[\"它完成实际的应用逻辑\",{\"1\":{\"243\":1}}],[\"它完成具体的分配运算\",{\"1\":{\"234\":1}}],[\"它决定了后面的消息类型和内容的格式\",{\"1\":{\"226\":1}}],[\"它底层使用的是二进制协议\",{\"1\":{\"221\":1}}],[\"它涉及到了很多组件\",{\"1\":{\"192\":1}}],[\"它接受一个函数类型作为参数\",{\"1\":{\"116\":1}}],[\"它接受一个函数作为参数\",{\"1\":{\"114\":1}}],[\"它用于获取函数的参数类型\",{\"1\":{\"114\":1}}],[\"它是am给我们提供的一个相当于快捷途径\",{\"1\":{\"399\":1}}],[\"它是每个字符串key在底层引擎的数值表示\",{\"1\":{\"398\":1}}],[\"它是ps对外提供的一套api\",{\"1\":{\"389\":1}}],[\"它是photoshop提供的一种俗称黑魔法的东西\",{\"1\":{\"387\":1}}],[\"它是具有生命周期的应用组件\",{\"1\":{\"271\":1}}],[\"它是如此的简单\",{\"1\":{\"234\":1}}],[\"它是从一个对象指向一个函数\",{\"1\":{\"53\":1}}],[\"它是从一个函数指向一个对象\",{\"1\":{\"52\":1}}],[\"它是函数所独有的\",{\"1\":{\"52\":1}}],[\"它是对象所独有的\",{\"1\":{\"51\":1}}],[\"它是整段内存的复制\",{\"1\":{\"18\":1}}],[\"它所涉及的操作都可以看作是原子性的单操作\",{\"1\":{\"29\":1}}],[\"它规定\",{\"1\":{\"14\":1}}],[\"它的前提是你要对ad的正向属性获取有足够的熟悉\",{\"1\":{\"411\":1}}],[\"它的选项是不一样的\",{\"1\":{\"409\":1}}],[\"它的含义就是把desc2这个动作描述符设置到的reference的对象上\",{\"1\":{\"408\":1}}],[\"它的含义是\",{\"1\":{\"399\":1,\"408\":1}}],[\"它的含义是函数的原型对象\",{\"1\":{\"52\":1}}],[\"它的值是rectangle\",{\"1\":{\"398\":1}}],[\"它的整个过程如下\",{\"1\":{\"392\":1}}],[\"它的大致字段如下\",{\"1\":{\"247\":1}}],[\"它的作用是做前端的负载均衡\",{\"1\":{\"241\":1}}],[\"它的作用就是包含可以由特定类型的所有实例共享的属性和方法\",{\"1\":{\"52\":1}}],[\"它的作用就是当访问一个对象的属性时\",{\"1\":{\"51\":1}}],[\"它的密钥长度是56位\",{\"1\":{\"144\":1}}],[\"它的构造函数就是它自己\",{\"1\":{\"53\":1}}],[\"它的三个参数含义如下\",{\"1\":{\"32\":1}}],[\"它的四个参数含义如下\",{\"1\":{\"32\":1}}],[\"它的\",{\"1\":{\"20\":1}}],[\"它的最大值是\",{\"1\":{\"14\":1}}],[\"它的数据都储存在底层的\",{\"1\":{\"8\":1}}],[\"它们也都有自己的特性\",{\"1\":{\"594\":1}}],[\"它们会介绍通用性的逻辑和方法\",{\"1\":{\"396\":1}}],[\"它们被认为是需要周期性进行回调的\",{\"1\":{\"277\":1}}],[\"它们是pinus核心的一部分\",{\"1\":{\"272\":1}}],[\"它们分别在game\",{\"1\":{\"267\":1}}],[\"它们后面会有一些诸如id\",{\"1\":{\"262\":1}}],[\"它们一起来完成给特定的用户推送消息\",{\"1\":{\"230\":1}}],[\"它们使你可以轻松地管理\",{\"1\":{\"103\":1}}],[\"它们两个完全一样\",{\"1\":{\"52\":1}}],[\"它们的作用与frontendsession的一样\",{\"1\":{\"247\":1}}],[\"它们的区别是\",{\"1\":{\"31\":1}}],[\"它们的好处是保证了读写操作的原子性\",{\"1\":{\"30\":1}}],[\"它们还用来解决一个问题\",{\"1\":{\"30\":1}}],[\"它们很像普通数组\",{\"1\":{\"8\":1}}],[\"它们都是以数组的语法处理二进制数据\",{\"1\":{\"0\":1}}],[\"它不是对application生效的\",{\"1\":{\"409\":1}}],[\"它不是遍历当前文档中的所有图层\",{\"1\":{\"378\":1}}],[\"它不是一个构造函数\",{\"1\":{\"4\":1}}],[\"它不能直接读写\",{\"1\":{\"4\":1}}],[\"概述\",{\"0\":{\"4\":1,\"8\":1}}],[\"fy2021\",{\"1\":{\"360\":1}}],[\"fy\",{\"1\":{\"360\":1}}],[\"fnm\",{\"1\":{\"288\":19,\"291\":1,\"292\":3,\"293\":2,\"294\":2}}],[\"fnm常用命令\",{\"0\":{\"288\":1}}],[\"f后\",{\"1\":{\"220\":1}}],[\"frame\",{\"1\":{\"613\":2}}],[\"freetransformcenterstate\",{\"1\":{\"394\":3,\"395\":1}}],[\"frp\",{\"1\":{\"333\":1}}],[\"frontendid是维护这个session的前端服务器的id\",{\"1\":{\"247\":1}}],[\"frontendid\",{\"1\":{\"247\":3}}],[\"frontendsession的字段大致如下\",{\"1\":{\"247\":1}}],[\"frontendsession\",{\"0\":{\"247\":1}}],[\"frontend\",{\"1\":{\"234\":8,\"261\":1,\"266\":2,\"454\":1}}],[\"frontend=true\",{\"1\":{\"233\":2}}],[\"fromcharcode\",{\"1\":{\"13\":2}}],[\"fromindex\",{\"1\":{\"10\":1}}],[\"fromindex=0\",{\"1\":{\"10\":1}}],[\"from\",{\"0\":{\"22\":1},\"1\":{\"9\":1,\"22\":7,\"130\":4,\"137\":1,\"234\":1,\"382\":2,\"392\":1,\"442\":1,\"625\":2,\"636\":2}}],[\"fruitcapitalize\",{\"1\":{\"120\":1}}],[\"fruitlowercase\",{\"1\":{\"119\":1}}],[\"fruituppercase\",{\"1\":{\"118\":1}}],[\"fruitexclude\",{\"1\":{\"110\":1}}],[\"fruitprices\",{\"1\":{\"109\":1}}],[\"fruit\",{\"1\":{\"109\":1,\"110\":1,\"118\":1,\"119\":1,\"120\":1}}],[\"feedback\",{\"1\":{\"441\":2}}],[\"feat\",{\"1\":{\"82\":1}}],[\"fetch\",{\"0\":{\"28\":1,\"86\":1},\"1\":{\"3\":1,\"28\":2,\"76\":1,\"86\":3}}],[\"f\",{\"1\":{\"75\":1,\"80\":1,\"102\":1,\"233\":1,\"292\":2,\"293\":2}}],[\"fd1\",{\"1\":{\"65\":2}}],[\"f1\",{\"1\":{\"50\":1,\"52\":1}}],[\"fold\",{\"1\":{\"449\":1}}],[\"folder\",{\"1\":{\"384\":3,\"402\":1}}],[\"folder两个对象\",{\"1\":{\"384\":1}}],[\"fontpostscriptname\",{\"1\":{\"409\":4}}],[\"fontstylename\",{\"1\":{\"409\":4}}],[\"fontname\",{\"1\":{\"400\":2,\"409\":4}}],[\"found\",{\"1\":{\"382\":1,\"642\":1}}],[\"foobarbazprr\",{\"1\":{\"382\":1}}],[\"foofilter\",{\"1\":{\"261\":2}}],[\"foo等\",{\"1\":{\"65\":2}}],[\"foo\",{\"1\":{\"50\":3,\"52\":1,\"54\":1,\"65\":6}}],[\"forum\",{\"1\":{\"625\":5}}],[\"forums\",{\"1\":{\"346\":1}}],[\"format\",{\"1\":{\"376\":1,\"454\":1}}],[\"form\",{\"1\":{\"376\":1}}],[\"forward\",{\"1\":{\"191\":1}}],[\"forcenotify是做什么\",{\"1\":{\"392\":1}}],[\"forcenotify\",{\"1\":{\"389\":1,\"392\":3}}],[\"force选项\",{\"1\":{\"233\":1}}],[\"force杀光pinus程序\",{\"1\":{\"206\":1}}],[\"force参数\",{\"1\":{\"188\":1}}],[\"force\",{\"1\":{\"95\":1,\"180\":1,\"188\":1,\"233\":1}}],[\"fork\",{\"0\":{\"630\":1},\"1\":{\"628\":2}}],[\"fork数超过10000\",{\"1\":{\"58\":1}}],[\"forks\",{\"1\":{\"58\":1}}],[\"for\",{\"1\":{\"10\":3,\"11\":2,\"13\":2,\"29\":2,\"30\":2,\"31\":1,\"54\":1,\"159\":5,\"234\":1,\"259\":1,\"260\":1,\"261\":2,\"271\":1,\"292\":2,\"372\":4,\"378\":2,\"382\":1,\"398\":6,\"399\":1,\"441\":1,\"511\":1}}],[\"foreach\",{\"1\":{\"10\":1,\"43\":1}}],[\"fatal\",{\"1\":{\"636\":1}}],[\"facebook\",{\"1\":{\"442\":2,\"453\":2}}],[\"facfunc\",{\"1\":{\"274\":1}}],[\"favicon\",{\"1\":{\"442\":4}}],[\"fast\",{\"1\":{\"42\":4}}],[\"fail\",{\"1\":{\"40\":2,\"536\":1}}],[\"false\",{\"1\":{\"7\":1,\"23\":1,\"24\":3,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"34\":1,\"137\":3,\"307\":2,\"308\":5,\"310\":3,\"311\":5,\"312\":8,\"346\":1,\"356\":1,\"392\":3,\"398\":1,\"400\":2,\"401\":3,\"402\":2,\"410\":1,\"442\":18,\"453\":5,\"454\":1}}],[\"full\",{\"1\":{\"382\":1}}],[\"fulfilled\",{\"1\":{\"39\":1,\"41\":1,\"43\":2}}],[\"functionality\",{\"1\":{\"130\":2}}],[\"function\",{\"1\":{\"10\":1,\"11\":1,\"13\":2,\"24\":1,\"25\":2,\"27\":2,\"28\":2,\"29\":7,\"50\":1,\"54\":1,\"56\":1,\"114\":1,\"116\":1,\"234\":4,\"236\":1,\"251\":1,\"252\":1,\"257\":3,\"258\":2,\"259\":1,\"260\":1,\"261\":6,\"267\":2,\"268\":1,\"269\":1,\"270\":1,\"271\":5,\"272\":5,\"319\":1,\"357\":5,\"358\":2,\"370\":1,\"372\":3,\"378\":1,\"392\":2,\"395\":1,\"398\":1,\"399\":2,\"500\":1,\"612\":2}}],[\"ftlolykikrixrybckk4kha\",{\"1\":{\"36\":1}}],[\"fly\",{\"1\":{\"382\":1}}],[\"flpr\",{\"1\":{\"360\":1}}],[\"flex\",{\"1\":{\"357\":2}}],[\"flushinterval是定时冲刷的周期\",{\"1\":{\"195\":1}}],[\"flushinterval\",{\"1\":{\"195\":1}}],[\"flow\",{\"1\":{\"192\":1,\"197\":1}}],[\"float64array\",{\"1\":{\"8\":1,\"9\":2,\"12\":1}}],[\"float64\",{\"1\":{\"3\":1}}],[\"float\",{\"1\":{\"3\":1,\"22\":1}}],[\"float32\",{\"1\":{\"3\":2}}],[\"float32array\",{\"1\":{\"2\":1,\"8\":1,\"12\":1,\"15\":1,\"21\":2,\"22\":1}}],[\"flag1358×758\",{\"1\":{\"471\":1}}],[\"flag最后一位为0是\",{\"1\":{\"229\":1}}],[\"flag的最后一位为1时\",{\"1\":{\"229\":1}}],[\"flag占用message头的第一个byte\",{\"1\":{\"227\":1}}],[\"flag位是必须的\",{\"1\":{\"226\":1}}],[\"flag\",{\"1\":{\"30\":1,\"226\":1,\"227\":1}}],[\"firefox\",{\"1\":{\"491\":1}}],[\"fi\",{\"1\":{\"293\":1}}],[\"fitler\",{\"1\":{\"201\":1}}],[\"findindex\",{\"1\":{\"10\":1}}],[\"find\",{\"1\":{\"10\":1,\"234\":1,\"261\":1,\"271\":1}}],[\"filter默认提供的配置类型如下\",{\"1\":{\"271\":1}}],[\"filter则是执行业务前进行预处理的地方\",{\"1\":{\"271\":1}}],[\"filter则是执行业务前进行预处理和业务处理后清理的地方\",{\"1\":{\"261\":1}}],[\"filter组件主要负责加载服务器请求的filter服务\",{\"1\":{\"271\":1}}],[\"filter又定义了after\",{\"1\":{\"261\":1}}],[\"filter调用了\",{\"1\":{\"261\":1}}],[\"filter调用\",{\"1\":{\"261\":1}}],[\"filter类似\",{\"1\":{\"251\":1}}],[\"filter之间\",{\"1\":{\"251\":1}}],[\"filter和after\",{\"1\":{\"251\":1}}],[\"filter前响应就已经被发送给客户端\",{\"1\":{\"250\":1}}],[\"filter是进行请求后置处理的地方\",{\"1\":{\"250\":1}}],[\"filter会对请求做一些前置处理\",{\"1\":{\"250\":1}}],[\"filter分为before和after两类\",{\"1\":{\"250\":1}}],[\"filter中不应该再出现修改响应内容的代码\",{\"1\":{\"250\":1}}],[\"filter中\",{\"1\":{\"230\":2}}],[\"filter链中处理时需要给用户推送或者广播消息\",{\"1\":{\"230\":1}}],[\"filters\",{\"1\":{\"197\":1,\"261\":1,\"271\":4}}],[\"filter\",{\"0\":{\"250\":1},\"1\":{\"10\":1,\"197\":1,\"201\":1,\"261\":10,\"267\":4,\"271\":7}}],[\"fill\",{\"1\":{\"10\":1}}],[\"filepath\",{\"1\":{\"392\":4}}],[\"fileassociations\",{\"1\":{\"356\":1}}],[\"file3\",{\"1\":{\"97\":1}}],[\"file2\",{\"1\":{\"97\":1}}],[\"file1\",{\"1\":{\"97\":1}}],[\"filenametosaveas\",{\"1\":{\"491\":3}}],[\"filename\",{\"1\":{\"84\":1,\"85\":3,\"382\":1}}],[\"fileheader\",{\"1\":{\"29\":7}}],[\"filereader\",{\"1\":{\"29\":3}}],[\"files\",{\"1\":{\"29\":2,\"137\":1,\"301\":1,\"353\":4,\"365\":1}}],[\"fileinput\",{\"1\":{\"29\":6}}],[\"file\",{\"0\":{\"29\":1},\"1\":{\"3\":1,\"29\":7,\"77\":1,\"97\":1,\"291\":1,\"292\":1,\"343\":1,\"370\":2,\"382\":2,\"385\":5,\"392\":4,\"491\":1}}],[\"f64a\",{\"1\":{\"9\":6}}],[\"af\",{\"1\":{\"404\":4}}],[\"afterstart\",{\"1\":{\"253\":1,\"262\":1}}],[\"afterfilter\",{\"1\":{\"261\":2}}],[\"afterfilter还没有执行到\",{\"1\":{\"199\":1}}],[\"afterfilter被调用\",{\"1\":{\"199\":1}}],[\"afterfilter是做一些清理操作的\",{\"1\":{\"197\":1}}],[\"after\",{\"1\":{\"197\":1,\"201\":1,\"250\":2,\"261\":4,\"284\":1,\"360\":1}}],[\"awesome\",{\"1\":{\"379\":1}}],[\"actually\",{\"1\":{\"491\":1}}],[\"actualplatform\",{\"1\":{\"488\":1}}],[\"action=getalbum\",{\"1\":{\"625\":1}}],[\"actionmanager\",{\"0\":{\"395\":1},\"1\":{\"405\":1}}],[\"actionlist这3个对象以及他们提供的方法\",{\"1\":{\"406\":1}}],[\"actionlist的数据结构和ad也差不多\",{\"1\":{\"399\":1}}],[\"actionlist等对象组织而成\",{\"1\":{\"394\":1}}],[\"actionlist\",{\"1\":{\"392\":1,\"393\":2,\"398\":1,\"410\":1}}],[\"action\",{\"0\":{\"392\":1},\"1\":{\"389\":2,\"394\":2,\"395\":3,\"398\":3,\"411\":1}}],[\"actionreference是一个动作引用对象\",{\"1\":{\"398\":1}}],[\"actionreference\",{\"1\":{\"389\":1,\"392\":3,\"393\":2,\"394\":4,\"395\":1,\"398\":9,\"399\":8,\"400\":3,\"402\":1,\"404\":1,\"406\":1,\"407\":1,\"408\":3,\"409\":2,\"410\":1}}],[\"actiondescriptor逆向操作\",{\"0\":{\"407\":1}}],[\"actiondescriptor才真正提供了宿主完整的信息\",{\"1\":{\"405\":1}}],[\"actiondescriptor>\",{\"1\":{\"401\":2}}],[\"actiondescriptor数据获取\",{\"0\":{\"398\":1}}],[\"actiondescriptor\",{\"0\":{\"394\":1},\"1\":{\"389\":1,\"392\":5,\"393\":2,\"394\":4,\"395\":2,\"398\":6,\"399\":1,\"404\":1,\"407\":1,\"408\":4,\"409\":4,\"410\":1}}],[\"activelayer只返回其中一个\",{\"1\":{\"399\":1}}],[\"activelayer\",{\"1\":{\"358\":2,\"377\":2,\"389\":1,\"395\":1}}],[\"activedocument\",{\"1\":{\"358\":2,\"377\":4,\"378\":3,\"379\":1,\"389\":1,\"395\":2}}],[\"activate\",{\"1\":{\"103\":1}}],[\"access\",{\"1\":{\"376\":1}}],[\"according\",{\"1\":{\"376\":1}}],[\"aicy\",{\"1\":{\"360\":1}}],[\"aeft\",{\"1\":{\"360\":1}}],[\"ae\",{\"1\":{\"356\":2,\"357\":1,\"373\":2}}],[\"aes采用128为即可\",{\"1\":{\"154\":1}}],[\"aes与3des对比\",{\"1\":{\"146\":1}}],[\"aes与3des的比较\",{\"1\":{\"146\":1}}],[\"aes\",{\"0\":{\"146\":1}}],[\"available\",{\"1\":{\"297\":1}}],[\"agarxhqb98rpajloaxn34ga8xrunpagkjwlaw3ruxnpaagl29w4rxn\",{\"1\":{\"264\":1}}],[\"agent\",{\"1\":{\"191\":1,\"255\":3,\"272\":9,\"273\":1}}],[\"age\",{\"1\":{\"105\":2,\"106\":2,\"107\":2,\"108\":3,\"112\":2,\"114\":2,\"115\":1,\"117\":4}}],[\"age=20\",{\"1\":{\"101\":1}}],[\"audioengine\",{\"1\":{\"639\":1}}],[\"audition\",{\"1\":{\"360\":1}}],[\"audt\",{\"1\":{\"360\":1}}],[\"auto\",{\"1\":{\"357\":1,\"401\":4}}],[\"autovisible\",{\"1\":{\"356\":1}}],[\"autovisible>\",{\"1\":{\"356\":1}}],[\"autorun\",{\"1\":{\"292\":2}}],[\"author\",{\"1\":{\"442\":1}}],[\"authors\",{\"1\":{\"441\":1}}],[\"authorization\",{\"1\":{\"180\":2}}],[\"auth复杂的多\",{\"1\":{\"163\":1}}],[\"auth\",{\"1\":{\"163\":2}}],[\"au\",{\"1\":{\"262\":1,\"331\":2}}],[\"asgr\",{\"1\":{\"400\":1}}],[\"associations\",{\"1\":{\"365\":1}}],[\"as\",{\"1\":{\"261\":3,\"382\":2}}],[\"abi\",{\"1\":{\"461\":5}}],[\"abbx\",{\"1\":{\"400\":1}}],[\"above\",{\"1\":{\"258\":1}}],[\"abort\",{\"1\":{\"83\":1}}],[\"absoluteuri\",{\"1\":{\"402\":1}}],[\"absolutepath\",{\"1\":{\"384\":1}}],[\"abs\",{\"1\":{\"234\":1}}],[\"abc这样的属性和值\",{\"1\":{\"408\":1}}],[\"abc\",{\"1\":{\"162\":1,\"408\":3}}],[\"ab2str\",{\"1\":{\"13\":1}}],[\"am提供了一个方法executeactionget\",{\"1\":{\"398\":1}}],[\"am代码\",{\"1\":{\"391\":1}}],[\"am\",{\"1\":{\"74\":1}}],[\"amend\",{\"1\":{\"74\":4}}],[\"amountdue\",{\"1\":{\"22\":1}}],[\"amountdueview\",{\"1\":{\"22\":1}}],[\"album\",{\"1\":{\"625\":1}}],[\"already\",{\"1\":{\"612\":2}}],[\"alt\",{\"1\":{\"420\":2}}],[\"al等\",{\"1\":{\"394\":1}}],[\"also\",{\"1\":{\"376\":1}}],[\"alipaytext\",{\"1\":{\"442\":1}}],[\"alipay\",{\"1\":{\"442\":1}}],[\"align\",{\"1\":{\"357\":1}}],[\"aliases\",{\"1\":{\"294\":1}}],[\"alias配置一样\",{\"1\":{\"137\":1}}],[\"alias\",{\"1\":{\"68\":2,\"288\":2,\"360\":2,\"365\":2,\"392\":1}}],[\"alert\",{\"1\":{\"346\":1,\"636\":4}}],[\"alwaysstrict\",{\"1\":{\"137\":1}}],[\"all01438×666\",{\"1\":{\"468\":1}}],[\"allows\",{\"1\":{\"491\":1}}],[\"allowjs\",{\"1\":{\"137\":1}}],[\"allowunusedlabels\",{\"1\":{\"137\":1}}],[\"allowunreachablecode\",{\"1\":{\"137\":1}}],[\"allsettled\",{\"1\":{\"43\":1,\"46\":1,\"47\":1}}],[\"all\",{\"1\":{\"41\":1,\"46\":1,\"47\":1,\"86\":1,\"234\":2,\"238\":3,\"356\":1,\"398\":2,\"442\":1,\"453\":1}}],[\"adapter的代码位于resources\",{\"1\":{\"639\":1}}],[\"adapters的代码位于resources\",{\"1\":{\"641\":1}}],[\"adapters\",{\"0\":{\"640\":1,\"641\":1},\"1\":{\"628\":2,\"640\":1,\"641\":1}}],[\"adapter\",{\"0\":{\"639\":1},\"1\":{\"628\":3,\"639\":3}}],[\"adb\",{\"1\":{\"461\":2}}],[\"ad\",{\"1\":{\"404\":3}}],[\"adtojson\",{\"1\":{\"398\":3,\"399\":3,\"400\":1}}],[\"adjustment\",{\"1\":{\"378\":2}}],[\"adobe科学家thomas\",{\"1\":{\"390\":1}}],[\"adobe大佬将这套机制进行了封装\",{\"1\":{\"390\":1}}],[\"adobe一如既往的尿性\",{\"1\":{\"346\":1}}],[\"adobeprerelease\",{\"1\":{\"346\":1}}],[\"adobe\",{\"1\":{\"346\":1,\"352\":1,\"353\":3,\"354\":2,\"355\":2,\"356\":2,\"357\":1,\"358\":1,\"360\":3,\"361\":1,\"373\":1,\"376\":1,\"400\":3,\"412\":1}}],[\"admin中定义的module\",{\"1\":{\"282\":2}}],[\"admin中\",{\"1\":{\"282\":1}}],[\"admin中还实现了另外几个admin\",{\"1\":{\"272\":1}}],[\"adminclient会维护到master的连接\",{\"1\":{\"273\":1}}],[\"adminclient分别扮演我们上面提到的master\",{\"1\":{\"273\":1}}],[\"adminuser\",{\"1\":{\"233\":1,\"276\":1}}],[\"admin\",{\"0\":{\"254\":1,\"255\":1},\"1\":{\"190\":3,\"272\":2,\"282\":1}}],[\"administrator\",{\"1\":{\"92\":1}}],[\"advanced\",{\"1\":{\"58\":1}}],[\"added\",{\"1\":{\"491\":1}}],[\"addeventlistener\",{\"1\":{\"27\":2,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"357\":1}}],[\"adding\",{\"1\":{\"491\":1}}],[\"addtoselectioncontinuous\",{\"1\":{\"410\":1}}],[\"add命令现在已经过时了\",{\"1\":{\"282\":1}}],[\"addservers方法\",{\"1\":{\"280\":1}}],[\"add也需要身份验证以及指定master服务器的地址\",{\"1\":{\"233\":1}}],[\"add等也同样需要指定master服务器的ip和port\",{\"1\":{\"233\":1}}],[\"add>\",{\"1\":{\"116\":1}}],[\"addresult\",{\"1\":{\"116\":1}}],[\"address\",{\"1\":{\"108\":1}}],[\"adduser\",{\"1\":{\"102\":1}}],[\"add\",{\"0\":{\"73\":1},\"1\":{\"29\":2,\"33\":2,\"70\":1,\"72\":2,\"73\":3,\"74\":1,\"79\":1,\"80\":3,\"116\":1,\"189\":1,\"232\":1,\"233\":5,\"238\":2,\"333\":2,\"345\":1,\"378\":1,\"379\":1,\"612\":1}}],[\"arles\",{\"1\":{\"523\":1}}],[\"armeabi\",{\"1\":{\"461\":1}}],[\"armeabiv\",{\"1\":{\"461\":1}}],[\"arm64\",{\"1\":{\"461\":1}}],[\"arm\",{\"1\":{\"461\":3}}],[\"ar\",{\"1\":{\"394\":1,\"399\":2}}],[\"artlayer\",{\"1\":{\"378\":4}}],[\"artlayers\",{\"1\":{\"378\":3,\"379\":1,\"395\":1}}],[\"article\",{\"1\":{\"54\":1,\"159\":1,\"290\":1,\"504\":1}}],[\"arguments\",{\"1\":{\"370\":1}}],[\"args参数是用来指定新增服务器的参数的\",{\"1\":{\"233\":1}}],[\"args>\",{\"1\":{\"233\":1}}],[\"args\",{\"1\":{\"203\":1,\"206\":1,\"233\":1,\"236\":2,\"261\":3}}],[\"archives\",{\"1\":{\"412\":1}}],[\"archive\",{\"1\":{\"298\":1,\"636\":2}}],[\"arch\",{\"1\":{\"298\":1}}],[\"area\",{\"1\":{\"261\":2,\"271\":2}}],[\"are\",{\"1\":{\"114\":1}}],[\"arr8\",{\"1\":{\"11\":5}}],[\"arr32\",{\"1\":{\"11\":2}}],[\"arr\",{\"1\":{\"10\":5}}],[\"arrayindex\",{\"1\":{\"32\":5}}],[\"arrayvalue\",{\"1\":{\"30\":2}}],[\"arrayresponse\",{\"1\":{\"25\":2}}],[\"arrays\",{\"1\":{\"10\":3}}],[\"arraylikeobject\",{\"1\":{\"9\":1}}],[\"array\",{\"1\":{\"8\":1,\"9\":2,\"13\":1,\"25\":1,\"30\":3,\"31\":2,\"376\":1,\"485\":2}}],[\"arraybuffer\",{\"0\":{\"0\":1,\"5\":1,\"6\":1,\"7\":1,\"13\":1},\"1\":{\"0\":1,\"3\":1,\"4\":10,\"5\":2,\"6\":7,\"7\":5,\"8\":3,\"9\":8,\"11\":4,\"13\":6,\"15\":2,\"16\":2,\"22\":10,\"23\":1,\"24\":2,\"25\":3,\"27\":3,\"28\":3,\"29\":5}}],[\"answer\",{\"1\":{\"505\":1,\"608\":1}}],[\"ansicolor\",{\"1\":{\"180\":1}}],[\"ancre\",{\"1\":{\"455\":1}}],[\"anchor\",{\"1\":{\"442\":2}}],[\"anchors\",{\"1\":{\"442\":1}}],[\"animate\",{\"1\":{\"360\":1}}],[\"animal\",{\"1\":{\"111\":1}}],[\"an\",{\"1\":{\"261\":1,\"292\":1,\"376\":1,\"379\":1,\"392\":1}}],[\"anaconda\",{\"1\":{\"103\":1}}],[\"any\",{\"1\":{\"44\":2,\"46\":1,\"47\":1,\"137\":1,\"223\":2,\"392\":5,\"407\":4,\"636\":1}}],[\"android设置48\",{\"1\":{\"502\":1}}],[\"android大部分96\",{\"1\":{\"501\":1}}],[\"android为8px\",{\"1\":{\"498\":1}}],[\"android跟ios有差异\",{\"1\":{\"497\":1}}],[\"android\",{\"0\":{\"616\":1},\"1\":{\"460\":1,\"461\":9,\"495\":1,\"498\":1,\"501\":3}}],[\"and\",{\"1\":{\"32\":1,\"33\":3,\"180\":1,\"247\":2,\"260\":1,\"353\":1,\"376\":3,\"382\":3}}],[\"attribute\",{\"1\":{\"620\":1,\"621\":1}}],[\"attach\",{\"1\":{\"368\":1,\"370\":9,\"373\":1}}],[\"atsl\",{\"1\":{\"400\":1}}],[\"atom\",{\"1\":{\"130\":1}}],[\"atomic\",{\"1\":{\"33\":1}}],[\"atomics\",{\"1\":{\"29\":5,\"30\":10,\"31\":6,\"32\":18,\"33\":10,\"34\":5}}],[\"at\",{\"1\":{\"30\":1,\"31\":2,\"454\":1}}],[\"ajax\",{\"0\":{\"25\":1},\"1\":{\"25\":1}}],[\"apt\",{\"1\":{\"190\":1}}],[\"appmsgalbum\",{\"1\":{\"625\":1}}],[\"appendchild\",{\"1\":{\"491\":1}}],[\"appdesc\",{\"1\":{\"409\":2}}],[\"appdescriptor\",{\"1\":{\"400\":2}}],[\"appdata\",{\"1\":{\"294\":1,\"354\":1,\"355\":1}}],[\"app在整个pinus应用中\",{\"1\":{\"262\":1}}],[\"app在加载的时候才会创建相应的组件\",{\"1\":{\"262\":1}}],[\"app进入到inited状态\",{\"1\":{\"262\":1}}],[\"app会使用apputil提供的defaultconfiguration来完成自己的初始化配置\",{\"1\":{\"262\":1}}],[\"apputil的defaultconfiguration会调用app的一些初始化方法\",{\"1\":{\"262\":1}}],[\"apputil\",{\"1\":{\"236\":1}}],[\"app\",{\"0\":{\"257\":1},\"1\":{\"190\":2,\"195\":1,\"197\":2,\"209\":1,\"234\":6,\"236\":3,\"237\":3,\"238\":3,\"252\":1,\"257\":12,\"258\":2,\"259\":1,\"260\":1,\"261\":37,\"262\":16,\"267\":13,\"268\":1,\"269\":1,\"270\":1,\"271\":26,\"272\":7,\"346\":1,\"358\":1,\"377\":2,\"378\":1,\"389\":1,\"400\":1,\"461\":2,\"464\":1,\"465\":2}}],[\"apps\",{\"1\":{\"159\":1}}],[\"applications\",{\"1\":{\"352\":1,\"376\":1,\"400\":1}}],[\"application的初始化\",{\"0\":{\"262\":1}}],[\"application\",{\"1\":{\"161\":2,\"353\":1,\"354\":1,\"355\":1,\"360\":1,\"398\":1,\"400\":6,\"402\":2,\"409\":1,\"461\":1,\"491\":1}}],[\"appletouchmore\",{\"1\":{\"442\":1}}],[\"appletouch\",{\"1\":{\"442\":1}}],[\"apple\",{\"1\":{\"109\":2,\"110\":2,\"118\":2,\"119\":2,\"120\":2,\"442\":3}}],[\"apply\",{\"1\":{\"13\":1,\"82\":2}}],[\"api要丰富强大的多\",{\"1\":{\"406\":1}}],[\"api性能更优\",{\"1\":{\"405\":1}}],[\"api的库\",{\"1\":{\"395\":1}}],[\"api的接口不足\",{\"1\":{\"395\":1}}],[\"api高的多\",{\"1\":{\"395\":1}}],[\"api需求满足度40\",{\"1\":{\"391\":1}}],[\"api中都找不到相关的信息\",{\"1\":{\"389\":1}}],[\"api来完成操作\",{\"1\":{\"395\":1}}],[\"api来完成\",{\"1\":{\"389\":1}}],[\"api来调用宿主核心功能的接口\",{\"1\":{\"389\":1}}],[\"api\",{\"0\":{\"28\":1,\"29\":1},\"1\":{\"3\":3,\"24\":1,\"28\":1,\"29\":2,\"101\":2,\"319\":1,\"357\":1,\"358\":6,\"374\":1,\"395\":4,\"405\":1,\"639\":1}}],[\"a\",{\"1\":{\"9\":1,\"15\":3,\"17\":3,\"18\":7,\"19\":5,\"65\":8,\"73\":2,\"79\":2,\"102\":1,\"116\":5,\"121\":1,\"130\":1,\"234\":1,\"261\":2,\"288\":2,\"292\":2,\"306\":1,\"308\":2,\"372\":5,\"382\":6,\"392\":16,\"480\":1,\"491\":1,\"628\":1,\"636\":1}}],[\"dd\",{\"1\":{\"454\":1}}],[\"dcmn\",{\"1\":{\"399\":4}}],[\"dss\",{\"1\":{\"149\":1}}],[\"dsa\",{\"0\":{\"149\":1}}],[\"dt\",{\"1\":{\"130\":1}}],[\"dt~module\",{\"1\":{\"130\":1}}],[\"duwokzsiryjw8hhrsy04ja\",{\"1\":{\"461\":1}}],[\"duo\",{\"1\":{\"130\":1}}],[\"dunder\",{\"1\":{\"50\":1}}],[\"dijkstra\",{\"1\":{\"480\":1}}],[\"diamond\",{\"1\":{\"474\":1}}],[\"dialogmodes\",{\"1\":{\"389\":1,\"392\":3,\"393\":2,\"394\":2,\"395\":1,\"398\":1,\"404\":1,\"408\":2,\"409\":1,\"410\":1}}],[\"div>\",{\"1\":{\"357\":1}}],[\"dictionary组件主要负责生成handler的字典\",{\"1\":{\"285\":1}}],[\"dictionary\",{\"1\":{\"223\":1,\"285\":1}}],[\"dict\",{\"1\":{\"223\":2}}],[\"discover\",{\"1\":{\"366\":1}}],[\"disconnect事件\",{\"1\":{\"279\":1}}],[\"disconnect等事件\",{\"1\":{\"194\":1}}],[\"display\",{\"1\":{\"357\":1,\"491\":1}}],[\"dispatchinfolist>\",{\"1\":{\"356\":1}}],[\"dispatchinfo>\",{\"1\":{\"356\":1}}],[\"dispatch\",{\"1\":{\"218\":1,\"234\":3,\"261\":1,\"271\":1}}],[\"dispatcher\",{\"1\":{\"218\":1,\"234\":3,\"261\":1,\"271\":1}}],[\"disableconsoleoutput\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"disabled来进行开启关闭以及检查\",{\"1\":{\"261\":1}}],[\"disabled\",{\"1\":{\"261\":1,\"267\":1}}],[\"disable\",{\"1\":{\"261\":2,\"267\":1,\"360\":1}}],[\"dist\",{\"1\":{\"137\":1,\"170\":7,\"171\":1,\"288\":1,\"298\":1,\"342\":2,\"344\":1}}],[\"digest\",{\"1\":{\"163\":1}}],[\"direcotry\",{\"1\":{\"233\":1}}],[\"directories\",{\"1\":{\"636\":1}}],[\"directory>\",{\"1\":{\"233\":2}}],[\"directory\",{\"1\":{\"209\":1,\"233\":1}}],[\"directory指定当前的game\",{\"1\":{\"209\":1}}],[\"direction\",{\"1\":{\"357\":1}}],[\"direct会立即将用户的响应发送给用户\",{\"1\":{\"195\":1}}],[\"directly\",{\"1\":{\"130\":1}}],[\"dir>\",{\"1\":{\"233\":1}}],[\"dirname\",{\"1\":{\"170\":4,\"171\":4,\"185\":2,\"233\":1,\"271\":1}}],[\"dir\",{\"1\":{\"95\":2}}],[\"dir=\",{\"1\":{\"95\":1}}],[\"different\",{\"1\":{\"382\":1}}],[\"diff\",{\"0\":{\"85\":1},\"1\":{\"85\":6}}],[\"drawcall1052×582\",{\"1\":{\"467\":1}}],[\"draw\",{\"1\":{\"466\":1,\"467\":4,\"469\":1,\"472\":1,\"489\":1}}],[\"drwv\",{\"1\":{\"360\":1}}],[\"dreamweaver\",{\"1\":{\"360\":1}}],[\"dr\",{\"1\":{\"87\":1}}],[\"drop\",{\"1\":{\"82\":1}}],[\"d\",{\"1\":{\"87\":1,\"131\":1,\"190\":1,\"233\":5,\"612\":1}}],[\"df\",{\"1\":{\"62\":1,\"78\":1}}],[\"darkrollover\",{\"1\":{\"356\":1}}],[\"darknormal\",{\"1\":{\"356\":1}}],[\"daemon\",{\"1\":{\"186\":2,\"233\":1}}],[\"date\",{\"1\":{\"56\":2,\"272\":1}}],[\"database\",{\"1\":{\"261\":1,\"267\":1}}],[\"datav\",{\"1\":{\"29\":17}}],[\"dataview\",{\"0\":{\"23\":1,\"24\":1},\"1\":{\"0\":1,\"3\":2,\"4\":7,\"7\":1,\"8\":1,\"9\":1,\"11\":1,\"22\":10,\"23\":2,\"24\":2,\"25\":3,\"29\":2}}],[\"data\",{\"1\":{\"26\":1,\"27\":3,\"29\":5,\"30\":1,\"31\":1,\"32\":1,\"170\":2,\"171\":1,\"223\":3,\"376\":1,\"577\":1}}],[\"day\",{\"1\":{\"56\":1}}],[\"declare\",{\"1\":{\"392\":1,\"398\":1,\"407\":1}}],[\"declarationdir\",{\"1\":{\"137\":1}}],[\"declaration\",{\"1\":{\"137\":1}}],[\"del\",{\"1\":{\"334\":1}}],[\"delete\",{\"1\":{\"87\":1,\"102\":1,\"161\":1}}],[\"deadcodeinjection为false\",{\"1\":{\"307\":1}}],[\"deadcodeinjectionthreshold\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1}}],[\"deadcodeinjection\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"deactivate\",{\"1\":{\"103\":1}}],[\"deubgger\",{\"1\":{\"220\":1}}],[\"designer\",{\"1\":{\"454\":1}}],[\"descobject\",{\"1\":{\"402\":2}}],[\"descflags\",{\"1\":{\"402\":2}}],[\"desc\",{\"1\":{\"398\":9,\"402\":2,\"404\":2}}],[\"desc2\",{\"1\":{\"394\":5,\"395\":4,\"400\":2,\"408\":7}}],[\"desc32\",{\"1\":{\"394\":4}}],[\"desc31\",{\"1\":{\"394\":8}}],[\"desc1设置属性值的方法有很多putunitdouble\",{\"1\":{\"394\":1}}],[\"desc1是一个完整的动作描述\",{\"1\":{\"394\":1}}],[\"desc1\",{\"1\":{\"393\":6,\"394\":10,\"395\":8,\"398\":5,\"400\":3,\"408\":9,\"409\":4,\"410\":6}}],[\"descvaluetype\",{\"1\":{\"392\":1,\"398\":8}}],[\"desc7\",{\"1\":{\"392\":18}}],[\"descriptorinfo\",{\"1\":{\"402\":1}}],[\"descriptor\",{\"0\":{\"402\":1},\"1\":{\"389\":2,\"392\":4,\"394\":1,\"402\":3}}],[\"descriptor这样的类的接口说明\",{\"1\":{\"389\":1}}],[\"description\",{\"1\":{\"58\":1,\"162\":1,\"180\":1,\"442\":1,\"454\":1}}],[\"desc4\",{\"1\":{\"389\":5}}],[\"desktop\",{\"1\":{\"365\":1,\"382\":3,\"384\":1,\"385\":1,\"392\":1,\"402\":1}}],[\"destroyclickedelement\",{\"1\":{\"491\":1}}],[\"destoryts962×246\",{\"1\":{\"487\":1}}],[\"dest\",{\"1\":{\"169\":1,\"170\":7,\"171\":1,\"319\":1}}],[\"des加密算法是对密钥进行保密\",{\"1\":{\"144\":1}}],[\"des\",{\"0\":{\"144\":1}}],[\"demo\",{\"1\":{\"137\":2,\"346\":3,\"385\":2,\"401\":2,\"465\":1,\"612\":1}}],[\"defines\",{\"1\":{\"376\":1}}],[\"defined\",{\"1\":{\"292\":1}}],[\"definition\",{\"1\":{\"223\":1,\"234\":1}}],[\"definitelytyped\",{\"1\":{\"124\":1,\"130\":1}}],[\"defaults\",{\"1\":{\"360\":3}}],[\"defaultconfiguration\",{\"1\":{\"271\":1}}],[\"default\",{\"1\":{\"11\":1,\"288\":1,\"294\":1,\"398\":1,\"637\":1}}],[\"develop\",{\"1\":{\"504\":1,\"628\":1}}],[\"developers\",{\"1\":{\"504\":1}}],[\"developer\",{\"1\":{\"454\":1,\"461\":1}}],[\"development|production\",{\"1\":{\"261\":4,\"271\":2}}],[\"development\",{\"1\":{\"186\":1,\"233\":1,\"234\":1,\"236\":2,\"258\":1,\"259\":2,\"260\":2,\"261\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"346\":1}}],[\"devtools\",{\"1\":{\"341\":1,\"343\":1,\"345\":1,\"366\":1,\"367\":4,\"501\":1}}],[\"dev\",{\"1\":{\"124\":1,\"168\":1,\"236\":2,\"338\":1,\"400\":4,\"633\":2}}],[\"deps\",{\"1\":{\"636\":3}}],[\"dependencies\",{\"1\":{\"102\":1,\"130\":3}}],[\"depth\",{\"1\":{\"95\":1}}],[\"debugging\",{\"1\":{\"382\":1}}],[\"debugger\",{\"1\":{\"346\":6,\"368\":1,\"370\":1,\"373\":2,\"382\":1}}],[\"debugprotectioninterval\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"debugprotection\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"debug=5858\",{\"1\":{\"261\":1}}],[\"debug=5858参数\",{\"1\":{\"203\":1}}],[\"debug=\",{\"1\":{\"233\":1,\"360\":2}}],[\"debug=32312\",{\"1\":{\"206\":1}}],[\"debug\",{\"0\":{\"359\":1,\"360\":1,\"361\":1,\"364\":1,\"365\":1,\"368\":1,\"369\":1},\"1\":{\"65\":4,\"209\":2,\"261\":1,\"344\":1,\"346\":2,\"350\":2,\"356\":1,\"359\":2,\"360\":1,\"361\":2,\"362\":1,\"364\":1,\"365\":11,\"366\":4,\"367\":1,\"369\":4,\"370\":18,\"372\":5,\"373\":1,\"374\":3,\"382\":1}}],[\"details\",{\"1\":{\"54\":1,\"159\":1,\"290\":1}}],[\"download\",{\"1\":{\"491\":2,\"636\":2}}],[\"downloadlink\",{\"1\":{\"491\":9}}],[\"download1145×513\",{\"1\":{\"487\":1}}],[\"douban\",{\"1\":{\"442\":1,\"453\":2}}],[\"doubletype\",{\"1\":{\"398\":1}}],[\"double\",{\"1\":{\"3\":1,\"50\":1,\"392\":1}}],[\"donate\",{\"1\":{\"442\":3}}],[\"dontrecord\",{\"1\":{\"389\":1,\"392\":4}}],[\"does\",{\"1\":{\"392\":1}}],[\"docdescriptor\",{\"1\":{\"399\":6}}],[\"doc\",{\"0\":{\"654\":1},\"1\":{\"377\":2,\"378\":16,\"504\":1}}],[\"docs\",{\"1\":{\"370\":1}}],[\"doctype\",{\"1\":{\"357\":1}}],[\"documentid\",{\"1\":{\"392\":3}}],[\"documents\",{\"1\":{\"291\":1,\"346\":1,\"358\":1}}],[\"document\",{\"1\":{\"26\":1,\"29\":2,\"357\":2,\"392\":2,\"399\":3,\"404\":1,\"491\":2}}],[\"dosomeconfiguration\",{\"1\":{\"258\":2}}],[\"do\",{\"1\":{\"234\":1,\"258\":1,\"259\":1,\"260\":1,\"292\":1}}],[\"dom和am是可以结合使用的\",{\"1\":{\"395\":1}}],[\"dom提供的api太少太少了\",{\"1\":{\"389\":1}}],[\"dom提供的api太少了\",{\"1\":{\"387\":1}}],[\"dom编程\",{\"1\":{\"389\":1}}],[\"dom\",{\"0\":{\"395\":1},\"1\":{\"137\":1,\"358\":1,\"365\":1,\"367\":1,\"377\":2,\"389\":2,\"400\":2,\"491\":2,\"639\":1}}],[\"dog\",{\"1\":{\"111\":1}}],[\"dollarphpajax\",{\"1\":{\"102\":1}}],[\"dv\",{\"1\":{\"22\":1,\"23\":6,\"24\":3}}],[\"48\",{\"0\":{\"553\":1}}],[\"47\",{\"0\":{\"552\":1}}],[\"45\",{\"0\":{\"550\":1}}],[\"44\",{\"0\":{\"549\":1}}],[\"443\",{\"1\":{\"479\":1}}],[\"43\",{\"0\":{\"548\":1}}],[\"41\",{\"0\":{\"546\":1}}],[\"4小时通关\",{\"1\":{\"530\":1}}],[\"49\",{\"0\":{\"554\":1},\"1\":{\"525\":1,\"559\":1}}],[\"4px\",{\"1\":{\"498\":1}}],[\"4acf\",{\"1\":{\"465\":1}}],[\"4个字节长度\",{\"1\":{\"393\":1}}],[\"404\",{\"1\":{\"642\":1}}],[\"40\",{\"0\":{\"545\":1}}],[\"40种不同属性\",{\"1\":{\"514\":1}}],[\"4000\",{\"1\":{\"382\":1}}],[\"40px\",{\"1\":{\"357\":1}}],[\"4052\",{\"1\":{\"234\":2}}],[\"4051\",{\"1\":{\"234\":2}}],[\"4050\",{\"1\":{\"233\":1,\"234\":2}}],[\"4位来确定\",{\"1\":{\"228\":1}}],[\"46\",{\"0\":{\"551\":1},\"1\":{\"29\":1}}],[\"429\",{\"1\":{\"477\":1}}],[\"424\",{\"1\":{\"474\":1}}],[\"427b8bb066e6\",{\"1\":{\"456\":1}}],[\"42\",{\"0\":{\"547\":1},\"1\":{\"29\":5,\"30\":4}}],[\"4\",{\"0\":{\"53\":1,\"239\":1,\"333\":1,\"385\":1,\"404\":1,\"452\":1,\"509\":1,\"660\":1},\"1\":{\"3\":3,\"8\":3,\"9\":6,\"10\":3,\"11\":7,\"12\":3,\"13\":1,\"14\":2,\"16\":1,\"22\":3,\"23\":3,\"24\":4,\"25\":2,\"27\":2,\"159\":1,\"163\":1,\"292\":1,\"308\":1,\"311\":1,\"360\":5,\"378\":7,\"402\":1,\"460\":2,\"461\":2,\"465\":1,\"472\":1,\"482\":1,\"501\":2}}],[\"sn=f888c19ddaa276d7073f923b171d1a72\",{\"1\":{\"626\":1}}],[\"svg+xml\",{\"1\":{\"577\":1}}],[\"ssl\",{\"1\":{\"636\":4}}],[\"ssrshaderfx\",{\"1\":{\"625\":1}}],[\"ss\",{\"1\":{\"454\":1}}],[\"ssh\",{\"0\":{\"69\":1},\"1\":{\"69\":6,\"94\":2}}],[\"smallspr1540×861\",{\"1\":{\"477\":1}}],[\"small\",{\"1\":{\"442\":2,\"444\":2}}],[\"sdk\",{\"1\":{\"390\":2,\"461\":4,\"614\":1}}],[\"space\",{\"1\":{\"633\":1}}],[\"span\",{\"1\":{\"357\":2}}],[\"span><\",{\"1\":{\"357\":1}}],[\"sprite\",{\"1\":{\"477\":1}}],[\"splitter\",{\"1\":{\"442\":1,\"452\":1}}],[\"specification\",{\"1\":{\"376\":2}}],[\"speech\",{\"1\":{\"356\":1,\"357\":1}}],[\"spm=1001\",{\"1\":{\"293\":1}}],[\"scene=21\",{\"1\":{\"626\":1}}],[\"scene=173\",{\"1\":{\"625\":1}}],[\"screenheight\",{\"1\":{\"501\":1}}],[\"script大神xbytor编写的xtools库的一部分\",{\"1\":{\"401\":1}}],[\"scriptlistener插件输出的代码\",{\"1\":{\"395\":1}}],[\"scriptlistener\",{\"0\":{\"391\":1},\"1\":{\"391\":2}}],[\"script推出\",{\"1\":{\"390\":1}}],[\"scripts\",{\"1\":{\"382\":1}}],[\"scriptpath\",{\"1\":{\"358\":1}}],[\"scriptpath>\",{\"1\":{\"356\":1,\"357\":1}}],[\"script\",{\"0\":{\"643\":1},\"1\":{\"358\":1,\"370\":1,\"395\":3}}],[\"script>\",{\"1\":{\"357\":1}}],[\"scriptinglistener\",{\"1\":{\"391\":1}}],[\"scriptinglistenerjs\",{\"1\":{\"365\":1,\"391\":2}}],[\"scripting\",{\"1\":{\"346\":1,\"365\":1,\"387\":1}}],[\"scale1348×734\",{\"1\":{\"477\":1}}],[\"scalevague1840×668\",{\"1\":{\"470\":1,\"482\":1}}],[\"scale=1\",{\"1\":{\"357\":1}}],[\"schema\",{\"1\":{\"356\":2}}],[\"schedule提供的\",{\"1\":{\"262\":1}}],[\"scheduler\",{\"1\":{\"195\":1}}],[\"schniz\",{\"1\":{\"294\":1}}],[\"scoop\",{\"1\":{\"165\":1}}],[\"s模式的程序的时候是需要一些方法来跟踪网页请求的\",{\"1\":{\"157\":1}}],[\"skillbtn\",{\"1\":{\"121\":2}}],[\"skipfiles\",{\"1\":{\"344\":1}}],[\"skip\",{\"1\":{\"83\":1}}],[\"sz\",{\"1\":{\"97\":1}}],[\"swagger\",{\"1\":{\"338\":2,\"339\":1}}],[\"sword2\",{\"1\":{\"95\":1}}],[\"switch\",{\"1\":{\"11\":1,\"398\":1}}],[\"src=\",{\"1\":{\"420\":1}}],[\"src\",{\"1\":{\"95\":1,\"137\":4,\"169\":1,\"170\":7,\"171\":1,\"319\":2,\"341\":3,\"344\":1}}],[\"sym=\",{\"1\":{\"401\":14}}],[\"symname=\",{\"1\":{\"401\":14}}],[\"symbol\",{\"1\":{\"11\":2}}],[\"sync组件主要负责启动数据同步模块并对外提供数据同步功能\",{\"1\":{\"271\":1,\"285\":1}}],[\"sync\",{\"1\":{\"271\":1,\"285\":2}}],[\"sync和connection\",{\"1\":{\"271\":1}}],[\"sys\",{\"1\":{\"223\":5,\"491\":1}}],[\"sysstat\",{\"1\":{\"190\":1}}],[\"systeminfo\",{\"1\":{\"500\":2,\"501\":10}}],[\"systemid\",{\"1\":{\"356\":1}}],[\"system32\",{\"1\":{\"292\":1}}],[\"systemmonitor\",{\"1\":{\"190\":1,\"261\":2,\"272\":1,\"282\":1}}],[\"system系统级\",{\"1\":{\"92\":1}}],[\"system\",{\"1\":{\"91\":1,\"261\":1}}],[\"safari\",{\"1\":{\"638\":1}}],[\"sample\",{\"1\":{\"393\":2}}],[\"same\",{\"1\":{\"56\":1}}],[\"say\",{\"1\":{\"382\":1}}],[\"sapcode\",{\"1\":{\"360\":1}}],[\"saveforbrowser\",{\"1\":{\"491\":1}}],[\"savetofile\",{\"1\":{\"402\":1}}],[\"saved\",{\"1\":{\"382\":1}}],[\"save\",{\"1\":{\"82\":1,\"124\":2,\"129\":1,\"130\":3,\"168\":1,\"327\":1,\"338\":1}}],[\"sab\",{\"1\":{\"29\":4}}],[\"sleep\",{\"1\":{\"382\":1}}],[\"sl\",{\"1\":{\"331\":1}}],[\"slow\",{\"1\":{\"42\":3}}],[\"slice\",{\"0\":{\"6\":1,\"20\":1},\"1\":{\"6\":5,\"9\":1,\"10\":1,\"20\":4}}],[\"summary\",{\"1\":{\"436\":2,\"441\":1,\"442\":1}}],[\"sudo\",{\"1\":{\"365\":1}}],[\"supports\",{\"1\":{\"376\":1}}],[\"support\",{\"1\":{\"353\":1,\"354\":1,\"355\":1}}],[\"super\",{\"1\":{\"54\":1}}],[\"success\",{\"1\":{\"39\":2,\"44\":2}}],[\"sub\",{\"1\":{\"33\":2}}],[\"subarray\",{\"0\":{\"19\":1},\"1\":{\"19\":4}}],[\"s\",{\"1\":{\"36\":1,\"95\":1,\"382\":2,\"442\":1,\"461\":1,\"523\":1,\"616\":1,\"626\":2,\"627\":1}}],[\"simulator\",{\"1\":{\"638\":3}}],[\"simplified\",{\"1\":{\"180\":1}}],[\"sidebar\",{\"1\":{\"442\":1}}],[\"since\",{\"1\":{\"353\":1}}],[\"signature\",{\"1\":{\"454\":1}}],[\"signed\",{\"1\":{\"3\":1}}],[\"sigs\",{\"1\":{\"319\":1}}],[\"sigfile\",{\"1\":{\"319\":1}}],[\"sioconnector和hybridconnector\",{\"1\":{\"221\":1}}],[\"silent\",{\"1\":{\"95\":1}}],[\"size=8192\",{\"1\":{\"633\":1}}],[\"size>\",{\"1\":{\"356\":1}}],[\"size\",{\"1\":{\"30\":2,\"34\":2,\"58\":1,\"442\":1}}],[\"shell\",{\"1\":{\"461\":1}}],[\"shw\",{\"1\":{\"393\":2}}],[\"shadowmatic\",{\"0\":{\"538\":1}}],[\"shader编程系列\",{\"1\":{\"625\":1}}],[\"shader顶点数据来源\",{\"0\":{\"620\":1}}],[\"shader实现\",{\"1\":{\"619\":1}}],[\"shader描述\",{\"1\":{\"619\":1}}],[\"shader模板\",{\"0\":{\"618\":1}}],[\"shader\",{\"0\":{\"470\":1,\"657\":1},\"1\":{\"467\":1,\"625\":6}}],[\"sharp\",{\"1\":{\"488\":1}}],[\"sharing\",{\"1\":{\"442\":3,\"453\":4}}],[\"share\",{\"1\":{\"382\":1,\"474\":1}}],[\"shared\",{\"1\":{\"130\":4}}],[\"sharedarray\",{\"1\":{\"29\":2,\"30\":6,\"31\":3,\"32\":10,\"33\":15,\"34\":2}}],[\"sharedarraybuffer\",{\"1\":{\"29\":8,\"30\":1,\"34\":2}}],[\"sharedbuffer\",{\"1\":{\"29\":5,\"30\":5}}],[\"sha\",{\"0\":{\"153\":1}}],[\"sha5\",{\"1\":{\"83\":2}}],[\"sha2\",{\"1\":{\"83\":1}}],[\"sha1\",{\"1\":{\"83\":5}}],[\"sha>\",{\"1\":{\"80\":3,\"81\":1}}],[\"sha都是hash1\",{\"1\":{\"74\":1}}],[\"sha都是hash2\",{\"1\":{\"74\":1}}],[\"sha为hash2\",{\"1\":{\"74\":2}}],[\"sha为hash1\",{\"1\":{\"74\":2}}],[\"sh\",{\"1\":{\"65\":2,\"95\":2,\"185\":2}}],[\"showlevel\",{\"1\":{\"442\":1}}],[\"show\",{\"1\":{\"393\":1}}],[\"show等等命令\",{\"1\":{\"393\":1}}],[\"should\",{\"1\":{\"9\":1}}],[\"shortcut\",{\"1\":{\"442\":1}}],[\"short\",{\"1\":{\"3\":2}}],[\"stumbleupon\",{\"1\":{\"442\":1}}],[\"studio\",{\"1\":{\"346\":1,\"460\":1,\"461\":4}}],[\"study\",{\"1\":{\"209\":1,\"213\":1}}],[\"stcp\",{\"1\":{\"365\":1}}],[\"step\",{\"1\":{\"343\":1}}],[\"stepout等必须功能外\",{\"1\":{\"215\":1}}],[\"stepinto\",{\"1\":{\"215\":1}}],[\"steps>执行shell\",{\"1\":{\"180\":1}}],[\"stoponentry\",{\"1\":{\"346\":1}}],[\"stop一般都是系统的某个组件接受到停止服务器请求时进行的异步回调\",{\"1\":{\"262\":1}}],[\"stop关闭服务器\",{\"1\":{\"262\":1}}],[\"stop调用\",{\"1\":{\"262\":1}}],[\"stop掉自己加载的组件完成关闭\",{\"1\":{\"262\":1}}],[\"stop则会如上面图中那样\",{\"1\":{\"262\":1}}],[\"stop进行关闭\",{\"1\":{\"262\":1}}],[\"stop方法\",{\"1\":{\"262\":1}}],[\"stop等调用\",{\"1\":{\"253\":1}}],[\"stop用来停止当前应用\",{\"1\":{\"233\":1}}],[\"stop\",{\"1\":{\"188\":2,\"232\":1,\"233\":3,\"262\":2,\"284\":1}}],[\"storedvalue\",{\"1\":{\"31\":2}}],[\"store\",{\"1\":{\"30\":8,\"31\":3,\"32\":3,\"88\":1}}],[\"stack\",{\"1\":{\"382\":2}}],[\"standalone=\",{\"1\":{\"356\":1}}],[\"standard\",{\"1\":{\"130\":1,\"376\":1}}],[\"static\",{\"1\":{\"420\":3}}],[\"statements\",{\"1\":{\"376\":1}}],[\"state>\",{\"1\":{\"247\":1}}],[\"state\",{\"1\":{\"247\":3}}],[\"statusbarheight\",{\"1\":{\"500\":1,\"501\":4}}],[\"statusbarheight设置高度\",{\"1\":{\"498\":1}}],[\"statusplugin\",{\"1\":{\"261\":2}}],[\"status\",{\"1\":{\"43\":3,\"84\":2,\"261\":2}}],[\"stash\",{\"0\":{\"82\":1},\"1\":{\"82\":15}}],[\"staged\",{\"1\":{\"79\":2,\"85\":1}}],[\"star\",{\"1\":{\"442\":1}}],[\"star数超过5000\",{\"1\":{\"58\":1}}],[\"stars\",{\"1\":{\"58\":1}}],[\"start才会启动所有的应用服务器\",{\"1\":{\"274\":1}}],[\"starter\",{\"1\":{\"274\":1}}],[\"starter在启动这些服务器的时候将会分析服务器是在本地启动还是远程启动\",{\"1\":{\"262\":1}}],[\"start是当admin\",{\"1\":{\"272\":1}}],[\"start一般都是在app\",{\"1\":{\"262\":1}}],[\"start启动服务器\",{\"1\":{\"262\":1}}],[\"start启动了master服务器\",{\"1\":{\"262\":1}}],[\"start调用\",{\"1\":{\"262\":1}}],[\"start调用之前调用registeradmin\",{\"1\":{\"262\":1}}],[\"start调用时\",{\"1\":{\"262\":1}}],[\"start调用进程会创建子进程\",{\"1\":{\"262\":1}}],[\"start就以没有过多参数的方式启动了app\",{\"1\":{\"262\":1}}],[\"start的进程直接创建的那个子进程\",{\"1\":{\"262\":1}}],[\"start时\",{\"1\":{\"203\":1}}],[\"start=0\",{\"1\":{\"10\":2}}],[\"start\",{\"1\":{\"9\":1,\"10\":1,\"29\":2,\"186\":1,\"232\":1,\"233\":4,\"236\":2,\"238\":4,\"255\":1,\"257\":2,\"262\":5,\"267\":1,\"271\":2,\"272\":1,\"273\":1,\"274\":1,\"284\":2,\"405\":1}}],[\"styles\",{\"1\":{\"442\":2}}],[\"stylesheet\",{\"1\":{\"357\":1}}],[\"style\",{\"1\":{\"25\":1,\"357\":2,\"400\":2,\"409\":8,\"454\":1,\"491\":1}}],[\"stream<\",{\"1\":{\"356\":1,\"357\":1}}],[\"stress\",{\"1\":{\"233\":1}}],[\"strongloop\",{\"1\":{\"331\":1}}],[\"strategy=recursive\",{\"1\":{\"291\":1,\"292\":1}}],[\"strategy\",{\"1\":{\"180\":1}}],[\"strict\",{\"1\":{\"137\":1,\"358\":1}}],[\"stringify\",{\"1\":{\"402\":1}}],[\"stringid\",{\"0\":{\"393\":1},\"1\":{\"398\":11}}],[\"stringidtotypeid的执行结果是一串数值\",{\"1\":{\"393\":1}}],[\"stringidtotypeid\",{\"1\":{\"389\":5,\"392\":15,\"393\":7,\"394\":50,\"395\":21,\"398\":12,\"399\":9,\"400\":11,\"402\":1,\"404\":3,\"408\":18,\"409\":19,\"410\":8}}],[\"string=\",{\"1\":{\"401\":2}}],[\"stringtype\",{\"1\":{\"398\":1}}],[\"stringarraythreshold\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"stringarrayencoding\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"stringarray\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"string\",{\"1\":{\"13\":2,\"105\":4,\"106\":4,\"107\":4,\"108\":4,\"112\":4,\"113\":2,\"114\":2,\"115\":2,\"116\":2,\"117\":2,\"291\":1,\"382\":5,\"392\":8,\"398\":2,\"407\":2}}],[\"structure\",{\"1\":{\"442\":1}}],[\"struct\",{\"1\":{\"22\":1}}],[\"strlen\",{\"1\":{\"13\":2}}],[\"str\",{\"1\":{\"13\":4}}],[\"str2ab\",{\"1\":{\"13\":1}}],[\"so\",{\"1\":{\"161\":1,\"292\":1,\"293\":2,\"382\":1}}],[\"sources\",{\"1\":{\"343\":1}}],[\"source=hootsuite\",{\"1\":{\"159\":1}}],[\"sourcemaps\",{\"1\":{\"344\":1}}],[\"sourcemap\",{\"0\":{\"372\":1},\"1\":{\"137\":1,\"341\":1,\"372\":1}}],[\"source\",{\"1\":{\"130\":1,\"341\":2,\"345\":2,\"442\":6}}],[\"sourcetree中打开编辑\",{\"1\":{\"62\":1}}],[\"software\",{\"1\":{\"361\":1}}],[\"soft\",{\"1\":{\"80\":1}}],[\"socket>\",{\"1\":{\"247\":1}}],[\"socket\",{\"1\":{\"27\":6,\"221\":1,\"233\":1,\"239\":2,\"247\":3}}],[\"sort1814×852\",{\"1\":{\"485\":1}}],[\"sort\",{\"1\":{\"10\":1,\"84\":1,\"485\":2}}],[\"someunknownobject\",{\"1\":{\"398\":1}}],[\"someurl\",{\"1\":{\"25\":1}}],[\"something\",{\"1\":{\"234\":1}}],[\"somestruct\",{\"1\":{\"22\":1}}],[\"some\",{\"1\":{\"10\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1}}],[\"seed\",{\"1\":{\"613\":3}}],[\"seasons\",{\"1\":{\"523\":1}}],[\"search\",{\"1\":{\"58\":1,\"103\":2,\"127\":1,\"128\":1,\"293\":1,\"447\":2,\"451\":2}}],[\"searchelement\",{\"1\":{\"10\":2}}],[\"several\",{\"1\":{\"376\":1}}],[\"sed\",{\"1\":{\"293\":1}}],[\"selectionmodifiertype\",{\"1\":{\"410\":1}}],[\"selectionmodifier\",{\"1\":{\"410\":1}}],[\"select\",{\"1\":{\"234\":1,\"389\":1,\"398\":1,\"410\":1,\"442\":1}}],[\"selfdefending\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"self\",{\"1\":{\"30\":1,\"31\":1,\"32\":1}}],[\"secretkey\",{\"1\":{\"612\":1}}],[\"second\",{\"1\":{\"223\":1}}],[\"sectioned\",{\"1\":{\"180\":1}}],[\"serve\",{\"1\":{\"438\":2}}],[\"server中的app\",{\"1\":{\"267\":1}}],[\"server目录和web\",{\"1\":{\"267\":1}}],[\"server目录下执行pinus\",{\"1\":{\"262\":1}}],[\"server目录下\",{\"1\":{\"257\":2,\"267\":1}}],[\"server启动命令行大概如下面的样子\",{\"1\":{\"262\":1}}],[\"server下的app\",{\"1\":{\"257\":2}}],[\"server下使用\",{\"1\":{\"233\":1}}],[\"server上\",{\"1\":{\"234\":1}}],[\"server会发起filter\",{\"1\":{\"230\":1}}],[\"server2\",{\"1\":{\"230\":2}}],[\"servers\",{\"0\":{\"265\":1,\"266\":1},\"1\":{\"203\":1,\"205\":1,\"214\":1,\"218\":1,\"233\":1,\"234\":2,\"238\":3,\"261\":2,\"271\":1}}],[\"server组件主要负责启动所有服务器的用户请求处理服务\",{\"1\":{\"271\":1,\"285\":1}}],[\"server组件\",{\"1\":{\"192\":1}}],[\"servertype等参数\",{\"1\":{\"262\":1}}],[\"servertype=chat\",{\"1\":{\"262\":1}}],[\"servertype=connector\",{\"1\":{\"233\":2}}],[\"servertype=\",{\"1\":{\"189\":1}}],[\"servertype\",{\"0\":{\"265\":1},\"1\":{\"187\":1,\"189\":2,\"246\":1,\"257\":2,\"262\":2,\"267\":2}}],[\"serverid\",{\"1\":{\"187\":1,\"188\":1,\"272\":4}}],[\"server服务器\",{\"1\":{\"186\":1}}],[\"server\",{\"0\":{\"238\":1},\"1\":{\"171\":2,\"190\":1,\"192\":1,\"203\":1,\"205\":1,\"206\":2,\"209\":1,\"210\":2,\"218\":1,\"233\":4,\"234\":16,\"238\":1,\"247\":2,\"257\":2,\"260\":1,\"261\":8,\"262\":2,\"266\":2,\"267\":4,\"271\":4,\"285\":1}}],[\"service\",{\"1\":{\"261\":4}}],[\"serialfilter\",{\"1\":{\"261\":1,\"271\":1}}],[\"serial中使用了一个taskmanager\",{\"1\":{\"198\":1}}],[\"serial\",{\"0\":{\"198\":1},\"1\":{\"261\":2,\"271\":2}}],[\"session组件主要负责启动sessionservice服务\",{\"1\":{\"285\":1}}],[\"session组件是sessionservice的包装组件\",{\"1\":{\"192\":1}}],[\"session指的是一个客户端连接的抽象\",{\"1\":{\"247\":1}}],[\"sessionservice维护所有的原始的session信息\",{\"1\":{\"247\":1}}],[\"sessionservice和backendsessionservice\",{\"1\":{\"247\":1}}],[\"sessionservice\",{\"0\":{\"247\":1}}],[\"session可以看作与客户端连接一一对应\",{\"1\":{\"230\":1}}],[\"session是经过beforefilter链处理后的session\",{\"1\":{\"197\":1}}],[\"session表示当前请求的session\",{\"1\":{\"197\":1}}],[\"session\",{\"0\":{\"247\":1},\"1\":{\"197\":4,\"234\":3,\"238\":2,\"239\":4,\"251\":1,\"252\":1,\"261\":2,\"271\":2,\"285\":1}}],[\"session中会维护与客户端用来数据通信的socket\",{\"1\":{\"195\":1}}],[\"session由cosession包装的sessionservice维护\",{\"1\":{\"194\":1}}],[\"send则为这个handler中的一个handle方法\",{\"1\":{\"246\":1}}],[\"send调用不会直接将要发送的消息通过socket直接发送给客户端\",{\"1\":{\"195\":1}}],[\"send\",{\"1\":{\"25\":1,\"27\":2,\"246\":1}}],[\"set操作\",{\"1\":{\"397\":1}}],[\"setenv\",{\"1\":{\"382\":1}}],[\"setenv等\",{\"1\":{\"262\":1}}],[\"set调用等等\",{\"1\":{\"262\":1}}],[\"set设置一个上下文变量的值\",{\"1\":{\"262\":1}}],[\"set给pinus的组件配置相应的选项\",{\"1\":{\"261\":1}}],[\"setupenv\",{\"1\":{\"236\":1}}],[\"setuint32\",{\"1\":{\"24\":1}}],[\"setuint16\",{\"1\":{\"24\":1}}],[\"setuint8\",{\"1\":{\"24\":1}}],[\"setting\",{\"1\":{\"461\":1}}],[\"settings维护一个key\",{\"1\":{\"247\":1}}],[\"settings\",{\"1\":{\"247\":2,\"356\":2,\"365\":1,\"400\":1}}],[\"settimeout\",{\"1\":{\"41\":1,\"42\":2,\"44\":1,\"382\":1}}],[\"setter\",{\"1\":{\"180\":1}}],[\"setprototypeof\",{\"1\":{\"54\":3}}],[\"setfloat64\",{\"1\":{\"24\":1}}],[\"setfloat32\",{\"1\":{\"24\":2}}],[\"setint32\",{\"1\":{\"24\":3}}],[\"setint16\",{\"1\":{\"24\":2}}],[\"setint8\",{\"1\":{\"24\":1}}],[\"set\",{\"0\":{\"18\":1},\"1\":{\"10\":1,\"18\":4,\"24\":1,\"72\":1,\"75\":1,\"77\":1,\"102\":1,\"195\":1,\"197\":1,\"236\":1,\"252\":1,\"257\":1,\"261\":6,\"267\":2,\"271\":2,\"272\":1,\"292\":1,\"382\":2,\"408\":4,\"409\":3}}],[\"separator\",{\"1\":{\"10\":1}}],[\"27\",{\"0\":{\"532\":1}}],[\"2作所有游戏人物都为纯黑色暗影\",{\"1\":{\"594\":1}}],[\"2作对剧情的重视也弥补的1作的缺陷\",{\"1\":{\"553\":1}}],[\"2作中\",{\"1\":{\"539\":1,\"584\":1}}],[\"2作相较1作拥有更精致的画面与更丰富的关卡\",{\"1\":{\"536\":1}}],[\"2作延续了1作的设计和基本操作\",{\"1\":{\"521\":1}}],[\"2作的画面比1作更精致\",{\"1\":{\"509\":1}}],[\"2作的声势明显小了些\",{\"1\":{\"507\":1}}],[\"2的整次幂\",{\"1\":{\"479\":1}}],[\"2更改gradle版本\",{\"1\":{\"461\":1}}],[\"29\",{\"0\":{\"534\":1},\"1\":{\"360\":1}}],[\"2>\",{\"1\":{\"159\":1}}],[\"2`\",{\"1\":{\"31\":1}}],[\"283\",{\"1\":{\"477\":1,\"479\":1}}],[\"28\",{\"0\":{\"533\":1},\"1\":{\"29\":1}}],[\"2d\",{\"1\":{\"26\":1}}],[\"2个字节\",{\"1\":{\"23\":1}}],[\"264\",{\"1\":{\"410\":1}}],[\"262\",{\"1\":{\"376\":2}}],[\"26\",{\"0\":{\"531\":1},\"1\":{\"13\":1,\"29\":1}}],[\"24去购买\",{\"1\":{\"519\":1}}],[\"243\",{\"1\":{\"465\":1}}],[\"249\",{\"1\":{\"410\":1}}],[\"248\",{\"1\":{\"410\":1}}],[\"246\",{\"1\":{\"410\":1}}],[\"240\",{\"1\":{\"70\":1,\"470\":1,\"482\":1}}],[\"24\",{\"0\":{\"529\":1},\"1\":{\"13\":1,\"22\":3,\"360\":1}}],[\"234\",{\"1\":{\"470\":1,\"484\":1}}],[\"2333\",{\"1\":{\"438\":1}}],[\"23\",{\"0\":{\"528\":1},\"1\":{\"13\":1,\"22\":1,\"360\":2,\"523\":1}}],[\"220\",{\"1\":{\"401\":1}}],[\"221\",{\"1\":{\"401\":1}}],[\"224\",{\"1\":{\"392\":3}}],[\"22\",{\"0\":{\"527\":1},\"1\":{\"13\":1,\"29\":1,\"360\":4,\"370\":1,\"399\":1}}],[\"211\",{\"1\":{\"482\":1}}],[\"2101\",{\"1\":{\"293\":1}}],[\"21\",{\"0\":{\"526\":1},\"1\":{\"13\":1,\"360\":4}}],[\"25984324\",{\"1\":{\"505\":1,\"608\":1}}],[\"250\",{\"1\":{\"22\":1,\"482\":1}}],[\"252\",{\"1\":{\"22\":1}}],[\"254\",{\"1\":{\"22\":1}}],[\"256\",{\"1\":{\"14\":3,\"24\":2,\"146\":1}}],[\"25\",{\"0\":{\"530\":1},\"1\":{\"13\":1,\"24\":2,\"360\":2,\"399\":1}}],[\"255\",{\"1\":{\"11\":1,\"14\":5,\"26\":5}}],[\"258\",{\"1\":{\"11\":1}}],[\"2048\",{\"1\":{\"606\":1}}],[\"201\",{\"1\":{\"474\":1}}],[\"2011年以后的生产的大部分\",{\"1\":{\"461\":1}}],[\"2015\",{\"1\":{\"387\":1}}],[\"2019\",{\"1\":{\"360\":1}}],[\"200x262\",{\"1\":{\"444\":1}}],[\"2001\",{\"1\":{\"356\":1}}],[\"200代表成功\",{\"1\":{\"223\":1}}],[\"200\",{\"1\":{\"218\":1,\"223\":1,\"395\":1}}],[\"202\",{\"1\":{\"477\":1}}],[\"2020\",{\"1\":{\"360\":2}}],[\"20201126165038828\",{\"1\":{\"611\":1}}],[\"20201126165025869\",{\"1\":{\"611\":1}}],[\"20201126165012713\",{\"1\":{\"611\":1}}],[\"20201126164830037\",{\"1\":{\"611\":1}}],[\"20201126164647675\",{\"1\":{\"610\":1}}],[\"20201124163445654\",{\"1\":{\"179\":1}}],[\"20201121174027323\",{\"1\":{\"87\":1}}],[\"20201108200919194\",{\"1\":{\"139\":1}}],[\"20201115220419827\",{\"1\":{\"67\":1}}],[\"2022\",{\"1\":{\"352\":1}}],[\"2021\",{\"1\":{\"400\":3}}],[\"20211118193833224\",{\"1\":{\"174\":1}}],[\"20210301120545729\",{\"1\":{\"123\":1}}],[\"20210301120506715\",{\"1\":{\"123\":1}}],[\"20210615155654671\",{\"1\":{\"60\":1}}],[\"20210615155635061\",{\"1\":{\"60\":1}}],[\"20210615155535040\",{\"1\":{\"60\":1}}],[\"20250419193034142\",{\"1\":{\"164\":1}}],[\"20250419193055943\",{\"1\":{\"164\":1}}],[\"20250430154850256\",{\"1\":{\"141\":1}}],[\"20\",{\"0\":{\"525\":1},\"1\":{\"9\":2,\"13\":1,\"22\":2,\"195\":1,\"288\":1,\"360\":4,\"395\":1,\"464\":1,\"501\":1}}],[\"2\",{\"0\":{\"51\":1,\"237\":1,\"265\":1,\"311\":1,\"331\":1,\"347\":1,\"379\":1,\"383\":1,\"394\":1,\"399\":1,\"402\":1,\"409\":1,\"450\":1,\"507\":1,\"531\":1,\"532\":1,\"536\":1,\"537\":1,\"539\":1,\"545\":1,\"553\":1,\"578\":1,\"584\":1,\"660\":1},\"1\":{\"3\":2,\"4\":4,\"8\":2,\"9\":19,\"10\":5,\"11\":9,\"12\":2,\"13\":2,\"14\":3,\"16\":5,\"18\":2,\"19\":5,\"20\":3,\"21\":4,\"22\":6,\"23\":2,\"24\":4,\"27\":1,\"29\":1,\"31\":3,\"69\":1,\"82\":2,\"102\":4,\"122\":1,\"124\":1,\"158\":1,\"159\":3,\"161\":1,\"163\":3,\"233\":1,\"234\":4,\"291\":1,\"292\":1,\"344\":1,\"346\":1,\"360\":2,\"369\":3,\"370\":2,\"372\":2,\"378\":8,\"382\":1,\"401\":3,\"412\":1,\"426\":1,\"442\":1,\"460\":1,\"461\":1,\"465\":1,\"474\":2,\"499\":1,\"500\":1,\"509\":1,\"578\":1,\"606\":2,\"636\":3}}],[\"ua\",{\"1\":{\"357\":1}}],[\"u\",{\"1\":{\"233\":4}}],[\"uglifyjs是个包含js解释器\",{\"1\":{\"299\":1}}],[\"uglifyjs\",{\"0\":{\"299\":1},\"1\":{\"301\":1,\"302\":1}}],[\"uglify\",{\"1\":{\"171\":1,\"300\":1}}],[\"utcoffset\",{\"1\":{\"454\":1}}],[\"util\",{\"1\":{\"234\":1,\"236\":1,\"271\":1}}],[\"utm\",{\"1\":{\"159\":3}}],[\"utf8\",{\"1\":{\"577\":1}}],[\"utf\",{\"1\":{\"13\":1,\"356\":1,\"357\":1}}],[\"ubuntu\",{\"1\":{\"159\":1}}],[\"ubuntu16\",{\"1\":{\"159\":1}}],[\"ubuntu安装postman\",{\"1\":{\"159\":1}}],[\"us\",{\"1\":{\"382\":1}}],[\"usually\",{\"1\":{\"130\":1}}],[\"useful\",{\"1\":{\"382\":1}}],[\"used\",{\"1\":{\"376\":1,\"382\":1}}],[\"use\",{\"1\":{\"95\":1,\"137\":1,\"261\":7,\"288\":2,\"291\":1,\"292\":1,\"293\":1,\"297\":2,\"332\":1,\"358\":1}}],[\"userprofile\",{\"1\":{\"291\":3,\"292\":2,\"293\":1,\"294\":1}}],[\"users\",{\"1\":{\"95\":2,\"354\":1,\"355\":1,\"392\":1}}],[\"user\",{\"1\":{\"58\":1,\"68\":2,\"92\":1,\"93\":2,\"94\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"223\":3,\"361\":1,\"442\":1}}],[\"username\",{\"1\":{\"22\":1,\"93\":1,\"233\":4}}],[\"usernameview\",{\"1\":{\"22\":1}}],[\"uptime\",{\"1\":{\"187\":1}}],[\"uppercase<fruit>\",{\"1\":{\"118\":1}}],[\"uppercase\",{\"0\":{\"118\":1}}],[\"update\",{\"1\":{\"102\":2,\"103\":1,\"638\":1}}],[\"upstream\",{\"1\":{\"75\":1,\"77\":1}}],[\"urlerror\",{\"1\":{\"636\":2}}],[\"url为源的路径\",{\"1\":{\"333\":1}}],[\"url模块\",{\"0\":{\"101\":1}}],[\"url>\",{\"1\":{\"71\":3,\"72\":4}}],[\"url\",{\"1\":{\"28\":1,\"72\":1,\"101\":3,\"180\":2,\"298\":3,\"333\":1,\"442\":1,\"491\":1,\"612\":1}}],[\"u8\",{\"1\":{\"26\":2}}],[\"uishader1360×758\",{\"1\":{\"472\":1}}],[\"ui>\",{\"1\":{\"356\":1}}],[\"ui\",{\"0\":{\"472\":1},\"1\":{\"338\":2,\"356\":1,\"472\":2,\"629\":1}}],[\"ui生成的api文档\",{\"1\":{\"337\":1}}],[\"uihtm\",{\"1\":{\"298\":1}}],[\"uidefaulthighlightcolor\",{\"1\":{\"400\":1}}],[\"uid都是确定的\",{\"1\":{\"247\":1}}],[\"uid是这个session所绑定的用户id\",{\"1\":{\"247\":1}}],[\"uid>\",{\"1\":{\"247\":2}}],[\"uid\",{\"1\":{\"218\":1,\"234\":1,\"247\":2}}],[\"ui16\",{\"1\":{\"22\":2}}],[\"ui8\",{\"1\":{\"10\":2,\"20\":3}}],[\"uints\",{\"1\":{\"25\":1}}],[\"uint32array\",{\"1\":{\"8\":1,\"11\":1,\"12\":1,\"22\":1,\"25\":1}}],[\"uint32\",{\"1\":{\"3\":1}}],[\"uint16view\",{\"1\":{\"11\":5}}],[\"uint16array\",{\"1\":{\"8\":1,\"11\":1,\"12\":1,\"13\":3,\"18\":2,\"19\":1,\"22\":4}}],[\"uint16\",{\"1\":{\"3\":1}}],[\"uint8clampedarray\",{\"1\":{\"8\":1,\"12\":1,\"14\":3,\"26\":5}}],[\"uint8c\",{\"1\":{\"3\":2,\"14\":6}}],[\"uint8\",{\"1\":{\"3\":2,\"14\":8}}],[\"uint8array\",{\"1\":{\"2\":1,\"4\":6,\"8\":2,\"9\":4,\"10\":5,\"11\":2,\"12\":1,\"14\":1,\"15\":1,\"16\":1,\"18\":2,\"20\":2,\"21\":3,\"22\":2,\"26\":2,\"27\":1,\"29\":1}}],[\"untitled\",{\"1\":{\"392\":1,\"401\":1}}],[\"until\",{\"1\":{\"27\":1}}],[\"uniform\",{\"1\":{\"620\":1,\"621\":1}}],[\"unitid\",{\"1\":{\"392\":1,\"407\":1}}],[\"unitdouble\",{\"1\":{\"392\":2}}],[\"unit\",{\"1\":{\"392\":1}}],[\"unitvalue\",{\"1\":{\"380\":2}}],[\"units\",{\"1\":{\"380\":3,\"467\":1}}],[\"unicodeescapesequence\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"uninstall\",{\"1\":{\"102\":1,\"288\":1,\"297\":2}}],[\"unbind调用\",{\"1\":{\"247\":1}}],[\"unbind\",{\"1\":{\"230\":1}}],[\"uncapitalize<a>\",{\"1\":{\"121\":1}}],[\"uncapitalize\",{\"0\":{\"121\":1}}],[\"uncaught\",{\"1\":{\"9\":1}}],[\"unpublish\",{\"1\":{\"102\":1}}],[\"underscore\",{\"1\":{\"50\":1}}],[\"underflow\",{\"1\":{\"14\":1}}],[\"undefined\",{\"1\":{\"24\":1,\"113\":2}}],[\"unknown\",{\"1\":{\"11\":1}}],[\"unsigned\",{\"1\":{\"3\":4,\"22\":1}}],[\"1作中\",{\"1\":{\"584\":1}}],[\"1作纯靠创意取胜\",{\"1\":{\"553\":1}}],[\"1和2\",{\"1\":{\"509\":1}}],[\"1构建\",{\"1\":{\"461\":1}}],[\"1中也可以将charidtotype替换掉\",{\"1\":{\"393\":1}}],[\"1d\",{\"1\":{\"293\":1}}],[\"1的权限可以执行任何操作\",{\"1\":{\"282\":1}}],[\"1个byte\",{\"1\":{\"222\":1}}],[\"1地址的调试端口的\",{\"1\":{\"220\":1}}],[\"1以外的ip吧\",{\"1\":{\"220\":1}}],[\"1全部替换成我本机192\",{\"1\":{\"219\":1}}],[\"1换成你自己电脑的可被网络上其他成员访问到的地址\",{\"1\":{\"217\":1}}],[\"1是本机ip地址\",{\"1\":{\"217\":1}}],[\"1服务器\",{\"1\":{\"206\":1}}],[\"1>\",{\"1\":{\"159\":1}}],[\"1kb\",{\"1\":{\"29\":2}}],[\"193\",{\"1\":{\"236\":1}}],[\"192\",{\"1\":{\"146\":1,\"217\":1}}],[\"191\",{\"1\":{\"29\":3,\"30\":1}}],[\"19\",{\"0\":{\"524\":1},\"1\":{\"13\":1,\"22\":1,\"360\":3,\"494\":1}}],[\"185\",{\"1\":{\"488\":1}}],[\"184\",{\"1\":{\"479\":1}}],[\"1800x2360\",{\"1\":{\"444\":1}}],[\"180x180\",{\"1\":{\"442\":1}}],[\"18\",{\"0\":{\"523\":1},\"1\":{\"13\":1,\"29\":1,\"360\":2,\"512\":1}}],[\"17\",{\"0\":{\"522\":1},\"1\":{\"13\":1,\"95\":1,\"360\":3}}],[\"157\",{\"1\":{\"469\":1}}],[\"152\",{\"1\":{\"394\":3}}],[\"159\",{\"1\":{\"70\":1}}],[\"151\",{\"1\":{\"21\":2}}],[\"15\",{\"0\":{\"520\":1},\"1\":{\"10\":1,\"11\":1,\"13\":1,\"27\":1,\"360\":3,\"488\":1,\"632\":1,\"636\":1,\"638\":1}}],[\"144\",{\"1\":{\"488\":1}}],[\"148\",{\"1\":{\"471\":1}}],[\"14\",{\"0\":{\"519\":1},\"1\":{\"10\":1,\"11\":1,\"13\":1,\"27\":1,\"29\":1,\"297\":3,\"360\":5}}],[\"135\",{\"1\":{\"485\":1}}],[\"135912916\",{\"1\":{\"290\":1}}],[\"139\",{\"1\":{\"394\":3,\"471\":1,\"479\":1}}],[\"1332768288\",{\"1\":{\"393\":4}}],[\"13\",{\"0\":{\"518\":1},\"1\":{\"10\":1,\"11\":1,\"13\":1,\"27\":1,\"360\":3}}],[\"118989\",{\"1\":{\"625\":1}}],[\"119\",{\"1\":{\"518\":1}}],[\"114\",{\"1\":{\"475\":1}}],[\"117\",{\"1\":{\"398\":1}}],[\"115\",{\"1\":{\"70\":1}}],[\"112\",{\"1\":{\"29\":6}}],[\"11111111\",{\"1\":{\"14\":2}}],[\"11111110\",{\"1\":{\"14\":1}}],[\"11\",{\"0\":{\"516\":1},\"1\":{\"10\":1,\"11\":1,\"13\":1,\"27\":1,\"360\":20,\"361\":1}}],[\"103617\",{\"1\":{\"625\":1}}],[\"103\",{\"0\":{\"608\":1}}],[\"102\",{\"0\":{\"607\":1}}],[\"1024\",{\"1\":{\"13\":1,\"29\":1}}],[\"101\",{\"0\":{\"606\":1}}],[\"1010\",{\"0\":{\"568\":1}}],[\"10多种角色与游戏中随机武器和雕像也大大增加游戏耐玩性\",{\"1\":{\"550\":1}}],[\"10+1+8\",{\"1\":{\"506\":1}}],[\"10s\",{\"1\":{\"367\":1}}],[\"10714662\",{\"1\":{\"34\":1}}],[\"10000\",{\"1\":{\"402\":1}}],[\"100000\",{\"1\":{\"29\":4,\"402\":1}}],[\"100000000\",{\"1\":{\"14\":1}}],[\"100\",{\"0\":{\"310\":1,\"605\":1},\"1\":{\"32\":1,\"41\":1,\"42\":1,\"44\":1}}],[\"10\",{\"0\":{\"515\":1},\"1\":{\"8\":4,\"9\":2,\"10\":1,\"11\":1,\"13\":1,\"18\":1,\"26\":1,\"27\":1,\"29\":3,\"30\":4,\"31\":1,\"288\":1,\"360\":19,\"380\":1,\"382\":1,\"461\":1,\"488\":1,\"501\":2}}],[\"120x120\",{\"1\":{\"442\":1}}],[\"123\",{\"1\":{\"161\":1,\"467\":1}}],[\"123456\",{\"1\":{\"29\":3,\"30\":2,\"32\":3}}],[\"12345678\",{\"1\":{\"11\":1}}],[\"121\",{\"1\":{\"50\":1}}],[\"125\",{\"1\":{\"22\":2}}],[\"126\",{\"1\":{\"22\":2}}],[\"127\",{\"1\":{\"14\":4,\"22\":2,\"27\":1,\"213\":1,\"215\":1,\"217\":1,\"218\":1,\"233\":1,\"234\":14,\"261\":3,\"266\":4,\"267\":2,\"519\":1}}],[\"129\",{\"1\":{\"14\":3,\"467\":1}}],[\"128变长编码方式\",{\"1\":{\"226\":1}}],[\"128\",{\"1\":{\"14\":7}}],[\"12\",{\"0\":{\"517\":1},\"1\":{\"4\":1,\"10\":1,\"11\":2,\"13\":1,\"14\":3,\"27\":1,\"161\":1,\"360\":4,\"382\":1}}],[\"1\",{\"0\":{\"50\":1,\"124\":1,\"176\":1,\"236\":1,\"264\":1,\"310\":1,\"330\":1,\"378\":1,\"382\":1,\"393\":1,\"398\":1,\"401\":1,\"408\":1,\"449\":1,\"506\":1},\"1\":{\"3\":3,\"4\":3,\"8\":3,\"9\":15,\"10\":5,\"11\":6,\"12\":3,\"13\":1,\"14\":17,\"20\":3,\"21\":4,\"22\":7,\"23\":4,\"24\":2,\"27\":2,\"29\":2,\"31\":2,\"32\":2,\"41\":2,\"43\":2,\"62\":1,\"82\":2,\"95\":1,\"102\":2,\"122\":1,\"158\":1,\"159\":4,\"161\":1,\"162\":1,\"163\":4,\"173\":2,\"206\":1,\"209\":1,\"213\":1,\"215\":1,\"217\":4,\"218\":3,\"219\":1,\"220\":1,\"223\":3,\"233\":8,\"234\":20,\"261\":3,\"262\":3,\"266\":6,\"267\":2,\"291\":1,\"292\":1,\"307\":3,\"310\":3,\"353\":1,\"356\":3,\"360\":9,\"361\":1,\"369\":1,\"372\":2,\"378\":12,\"382\":1,\"385\":1,\"392\":1,\"393\":1,\"395\":1,\"401\":4,\"418\":3,\"426\":1,\"460\":1,\"461\":1,\"464\":1,\"465\":1,\"469\":1,\"474\":1,\"509\":1,\"606\":2}}],[\"167\",{\"1\":{\"474\":1}}],[\"169\",{\"1\":{\"454\":1}}],[\"168\",{\"1\":{\"217\":2,\"218\":1,\"219\":1,\"488\":1}}],[\"1604\",{\"1\":{\"159\":1}}],[\"163\",{\"1\":{\"29\":2,\"30\":3,\"32\":4}}],[\"16\",{\"0\":{\"521\":1},\"1\":{\"2\":1,\"3\":3,\"8\":2,\"9\":3,\"10\":1,\"11\":5,\"13\":2,\"17\":1,\"19\":1,\"22\":3,\"23\":2,\"24\":2,\"288\":4,\"356\":4,\"360\":6,\"602\":1}}],[\"cytus2\",{\"0\":{\"519\":1}}],[\"cytus\",{\"0\":{\"518\":1},\"1\":{\"518\":1}}],[\"cygpath\",{\"1\":{\"293\":1}}],[\"c++\",{\"1\":{\"390\":2}}],[\"ciao\",{\"1\":{\"382\":1}}],[\"ccimage的关系\",{\"1\":{\"493\":1}}],[\"cctexture\",{\"1\":{\"493\":1}}],[\"ccsprite\",{\"1\":{\"493\":1}}],[\"ccscene与ccnode的区别\",{\"1\":{\"493\":1}}],[\"cc2021\",{\"1\":{\"360\":1}}],[\"cc2020\",{\"1\":{\"360\":1}}],[\"cc2019\",{\"1\":{\"360\":1}}],[\"cc2018\",{\"1\":{\"360\":1}}],[\"cc2017\",{\"1\":{\"360\":1}}],[\"cc2016\",{\"1\":{\"360\":1}}],[\"cc2015之后的版本\",{\"1\":{\"404\":1}}],[\"cc2015\",{\"1\":{\"360\":1}}],[\"cc\",{\"1\":{\"360\":2,\"377\":3,\"380\":1,\"387\":3,\"487\":1,\"491\":1}}],[\"cc18868876837\",{\"1\":{\"54\":1}}],[\"center\",{\"1\":{\"357\":1}}],[\"cefcommandline>\",{\"1\":{\"356\":1,\"357\":1}}],[\"cep版本\",{\"1\":{\"360\":1}}],[\"cep11\",{\"1\":{\"360\":1}}],[\"cep9\",{\"1\":{\"356\":1}}],[\"cep\",{\"0\":{\"359\":1,\"360\":1,\"361\":1,\"373\":1,\"652\":1},\"1\":{\"346\":2,\"349\":1,\"350\":1,\"351\":2,\"352\":2,\"353\":4,\"354\":2,\"355\":3,\"356\":9,\"357\":1,\"358\":5,\"359\":3,\"360\":52,\"361\":2,\"362\":5,\"364\":1,\"365\":4,\"367\":3,\"368\":1,\"370\":5,\"372\":1,\"373\":4,\"374\":5,\"405\":1,\"412\":1}}],[\"cmd\",{\"0\":{\"292\":1},\"1\":{\"292\":5}}],[\"cube\",{\"1\":{\"523\":10}}],[\"culling\",{\"1\":{\"474\":1}}],[\"cutterman\",{\"1\":{\"403\":1,\"405\":1,\"412\":1}}],[\"customproperties\",{\"1\":{\"612\":1}}],[\"customprofile\",{\"1\":{\"612\":1}}],[\"customplayerstatus\",{\"1\":{\"612\":1}}],[\"custom1358×758\",{\"1\":{\"477\":1}}],[\"custom\",{\"1\":{\"356\":1,\"477\":1}}],[\"customized\",{\"1\":{\"223\":2}}],[\"currenthistorystate\",{\"1\":{\"401\":2}}],[\"currenttooloptions相当于只是一个只读的快捷方式\",{\"1\":{\"409\":1}}],[\"currenttooloptions\",{\"1\":{\"400\":2,\"409\":6}}],[\"currentlayer\",{\"1\":{\"358\":3}}],[\"currentlayername\",{\"1\":{\"357\":2}}],[\"current\",{\"1\":{\"288\":1,\"361\":1,\"382\":3,\"409\":2}}],[\"croft\",{\"0\":{\"541\":1}}],[\"cron等目录\",{\"0\":{\"265\":1}}],[\"crons\",{\"1\":{\"238\":2}}],[\"crnh\",{\"1\":{\"401\":2}}],[\"crypto\",{\"1\":{\"315\":1}}],[\"crc32\",{\"1\":{\"234\":1}}],[\"crc\",{\"1\":{\"234\":1}}],[\"creatorhttps\",{\"1\":{\"625\":1}}],[\"creator的深层解读\",{\"0\":{\"493\":1}}],[\"creator\",{\"0\":{\"616\":1},\"1\":{\"460\":1,\"461\":4,\"465\":1,\"474\":1,\"488\":1,\"625\":3,\"628\":3,\"630\":1,\"636\":3}}],[\"createroom\",{\"1\":{\"612\":1}}],[\"createroompara\",{\"1\":{\"612\":3}}],[\"createobjecturl\",{\"1\":{\"491\":2}}],[\"createelement\",{\"1\":{\"491\":1}}],[\"createapp调用开始\",{\"1\":{\"262\":1}}],[\"createapp\",{\"1\":{\"257\":1,\"267\":1,\"271\":1}}],[\"create\",{\"1\":{\"54\":1,\"103\":1,\"292\":1,\"612\":1}}],[\"credential\",{\"1\":{\"88\":1}}],[\"ctrl\",{\"1\":{\"220\":1}}],[\"ctx\",{\"1\":{\"26\":2}}],[\"cb会将resp发送给客户端\",{\"1\":{\"197\":1}}],[\"cb的签名为cb\",{\"1\":{\"197\":1}}],[\"cb\",{\"1\":{\"197\":1,\"234\":3,\"255\":4,\"272\":3,\"273\":1,\"357\":2}}],[\"csxs\",{\"1\":{\"350\":1,\"356\":7,\"360\":11,\"361\":1}}],[\"css中的z\",{\"1\":{\"378\":1}}],[\"css\",{\"1\":{\"171\":1,\"357\":2,\"442\":1}}],[\"css等文件的合并\",{\"1\":{\"167\":1}}],[\"csdn\",{\"1\":{\"54\":1,\"159\":1,\"290\":1,\"293\":1}}],[\"cvzf\",{\"1\":{\"97\":1}}],[\"cnt\",{\"1\":{\"401\":2}}],[\"cnmp\",{\"1\":{\"327\":1}}],[\"cnpmjs\",{\"1\":{\"331\":1}}],[\"cnpm\",{\"1\":{\"125\":1,\"331\":1}}],[\"cn\",{\"1\":{\"95\":1,\"333\":1,\"403\":1,\"405\":1,\"412\":1,\"461\":1}}],[\"cnblogs\",{\"1\":{\"34\":1}}],[\"clustercount=3\",{\"1\":{\"233\":1}}],[\"close\",{\"1\":{\"194\":1,\"238\":1,\"385\":1}}],[\"clone\",{\"1\":{\"71\":3,\"190\":1}}],[\"clicked\",{\"1\":{\"491\":2}}],[\"click1910×1066\",{\"1\":{\"484\":1}}],[\"click\",{\"1\":{\"357\":1,\"491\":1}}],[\"cli的相关文档\",{\"1\":{\"282\":1}}],[\"cli以及pinus\",{\"1\":{\"282\":1}}],[\"cli以及admin\",{\"1\":{\"273\":1}}],[\"cli使用的module定义在pinus\",{\"1\":{\"282\":1}}],[\"cli就是这样的一个客户端\",{\"1\":{\"254\":1}}],[\"cli\",{\"1\":{\"182\":1,\"282\":1,\"298\":1,\"434\":1}}],[\"client可以向master发送request\",{\"1\":{\"278\":1}}],[\"client在连接到master上后\",{\"1\":{\"278\":1}}],[\"client需要在master开始监听端口后\",{\"1\":{\"276\":1}}],[\"client会连接注册到master上\",{\"1\":{\"276\":1}}],[\"client的连接注册\",{\"0\":{\"276\":1}}],[\"client的请求\",{\"1\":{\"254\":1}}],[\"client连接到master上后\",{\"1\":{\"273\":1}}],[\"client是第三方监视的客户端\",{\"1\":{\"272\":1}}],[\"clienthost\",{\"1\":{\"266\":2}}],[\"clienthandler是当有第三方监控客户端给master发请求时\",{\"1\":{\"272\":1}}],[\"clienthandler是master收到client的请求或通知时回调的\",{\"1\":{\"272\":1}}],[\"clienthandler\",{\"1\":{\"255\":1,\"272\":2,\"273\":1}}],[\"client独立运行自己的进程\",{\"1\":{\"254\":1}}],[\"clientport等参数\",{\"1\":{\"262\":1}}],[\"clientport=9000\",{\"1\":{\"233\":1}}],[\"clientport=9000++\",{\"1\":{\"233\":1}}],[\"clientport\",{\"1\":{\"218\":1,\"233\":1,\"234\":8,\"261\":1,\"266\":2}}],[\"clientstart\",{\"1\":{\"121\":2}}],[\"client\",{\"0\":{\"254\":1},\"1\":{\"95\":1,\"254\":1,\"271\":1,\"272\":1,\"273\":1}}],[\"clear1077×592\",{\"1\":{\"479\":1}}],[\"clear\",{\"1\":{\"82\":1,\"97\":1,\"392\":2}}],[\"cleanup\",{\"1\":{\"487\":1}}],[\"clean\",{\"1\":{\"62\":1,\"78\":1,\"288\":1}}],[\"classtype\",{\"1\":{\"398\":1}}],[\"classid\",{\"1\":{\"392\":1,\"407\":1}}],[\"class文件\",{\"1\":{\"65\":1}}],[\"classes\",{\"1\":{\"65\":1}}],[\"class的文件\",{\"1\":{\"65\":1}}],[\"class\",{\"1\":{\"65\":2,\"115\":1,\"117\":1,\"372\":2,\"392\":3,\"407\":1,\"612\":2}}],[\"cdn\",{\"1\":{\"468\":1,\"488\":1}}],[\"cd到对应目录\",{\"1\":{\"436\":1}}],[\"cd\",{\"1\":{\"62\":1,\"95\":1,\"185\":1,\"190\":1,\"291\":1,\"292\":1,\"355\":1,\"632\":1,\"636\":1}}],[\"chksm=bda2c4148ad54d028dde5cc8bf0fdec6576a2be4413fb7e526d842882216b6dfec05ba0880dc\",{\"1\":{\"626\":1}}],[\"chromium\",{\"1\":{\"357\":1,\"365\":1}}],[\"chrome\",{\"0\":{\"366\":1},\"1\":{\"343\":2,\"350\":1,\"356\":1,\"366\":5,\"367\":3,\"370\":1,\"400\":4,\"491\":1}}],[\"chrome浏览器postman\",{\"1\":{\"159\":1}}],[\"chrome插件整理的\",{\"1\":{\"158\":1}}],[\"chrome应用程序等\",{\"1\":{\"158\":1}}],[\"chapter\",{\"1\":{\"449\":1}}],[\"chapters\",{\"1\":{\"442\":1}}],[\"changeflag1358×760\",{\"1\":{\"471\":1}}],[\"change\",{\"1\":{\"382\":1}}],[\"channel组件主要负责启动channelservice服务\",{\"1\":{\"285\":1}}],[\"channelservice等等\",{\"1\":{\"261\":1}}],[\"channelservice还提供了broadcast方法\",{\"1\":{\"230\":1}}],[\"channelservice还提供了pushmessagebyuids方法\",{\"1\":{\"230\":1}}],[\"channel可以看作是一个玩家id的容器\",{\"1\":{\"248\":1}}],[\"channel\",{\"0\":{\"248\":1},\"1\":{\"285\":2}}],[\"channel插件\",{\"1\":{\"230\":1}}],[\"channel是后端服务器本地的\",{\"1\":{\"230\":1}}],[\"channel中维护着一组uid\",{\"1\":{\"230\":1}}],[\"chat中使用\",{\"0\":{\"272\":1}}],[\"chatofpinus\",{\"1\":{\"271\":1}}],[\"chat就是服务器类型\",{\"1\":{\"246\":1}}],[\"chathandler是chat服务器中定义的一个handler\",{\"1\":{\"246\":1}}],[\"chathandler\",{\"1\":{\"246\":1}}],[\"chatservers\",{\"1\":{\"234\":4,\"261\":3,\"271\":3}}],[\"chatroute\",{\"1\":{\"234\":2}}],[\"chat服务器\",{\"0\":{\"212\":1}}],[\"chat\",{\"1\":{\"202\":1,\"215\":2,\"234\":12,\"246\":1,\"260\":2,\"261\":8,\"270\":1,\"271\":7}}],[\"char对应的是一个c层的一个字符\",{\"1\":{\"393\":1}}],[\"charidtotypeid输出的数值就是该map的索引\",{\"1\":{\"393\":1}}],[\"charidtotypeid\",{\"1\":{\"393\":6,\"394\":1,\"399\":14,\"400\":6,\"402\":2,\"404\":5,\"408\":3,\"409\":2}}],[\"charid\",{\"0\":{\"393\":1}}],[\"charset=\",{\"1\":{\"357\":1}}],[\"charcodeat\",{\"1\":{\"13\":1}}],[\"char\",{\"1\":{\"3\":3,\"22\":1}}],[\"chinese\",{\"1\":{\"180\":1}}],[\"children\",{\"1\":{\"385\":1}}],[\"child\",{\"1\":{\"54\":12}}],[\"choice\",{\"1\":{\"180\":1}}],[\"choco\",{\"1\":{\"165\":1}}],[\"cherry\",{\"0\":{\"83\":1},\"1\":{\"83\":8}}],[\"checkout\",{\"0\":{\"77\":1},\"1\":{\"62\":1,\"68\":2,\"77\":6,\"78\":1,\"87\":3,\"234\":1,\"272\":1}}],[\"cpu\",{\"1\":{\"29\":1,\"461\":5,\"470\":1}}],[\"cocos2d\",{\"0\":{\"634\":1,\"635\":1},\"1\":{\"628\":2,\"634\":1,\"635\":1,\"636\":9,\"637\":1}}],[\"cocos技术派\",{\"1\":{\"626\":1}}],[\"cocoscreator\",{\"0\":{\"618\":1}}],[\"cocos\",{\"1\":{\"460\":1,\"461\":1,\"464\":1,\"465\":1,\"468\":1,\"473\":1,\"474\":2,\"478\":1,\"488\":2,\"612\":1,\"625\":7,\"628\":3,\"636\":2,\"638\":1}}],[\"cochannel包装的channelservice中维护了channel的信息\",{\"1\":{\"230\":1}}],[\"cover\",{\"1\":{\"444\":4}}],[\"cover自动生成\",{\"1\":{\"444\":1}}],[\"cobackendsession会向对应的前端服务器发起rpc调用\",{\"1\":{\"230\":1}}],[\"cobackendsession包装的backendsessionservice就是用来创建并管理后端的backendsession\",{\"1\":{\"230\":1}}],[\"cobackendsession组件和cochannel组件一般是用在后端服务器中的\",{\"1\":{\"230\":1}}],[\"copushscheduler会通过cosession获得到客户端连接的socket\",{\"1\":{\"230\":1}}],[\"copushscheduler可以实现具体的发送策略\",{\"1\":{\"195\":1}}],[\"copyrightcolor\",{\"1\":{\"454\":1}}],[\"copyright\",{\"1\":{\"454\":4}}],[\"copyright下的index\",{\"1\":{\"454\":1}}],[\"copy2\",{\"1\":{\"302\":1}}],[\"copy\",{\"1\":{\"170\":6,\"302\":1}}],[\"copywithin\",{\"1\":{\"10\":1}}],[\"coffee\",{\"1\":{\"167\":1}}],[\"collection\",{\"1\":{\"382\":1}}],[\"collections集合\",{\"1\":{\"162\":1}}],[\"collections\",{\"0\":{\"162\":1},\"1\":{\"162\":1}}],[\"color\",{\"1\":{\"357\":2,\"392\":3,\"410\":1,\"470\":3,\"474\":1}}],[\"color=1\",{\"1\":{\"95\":1,\"180\":1}}],[\"column\",{\"1\":{\"357\":1}}],[\"coreybutler\",{\"1\":{\"296\":1}}],[\"core\",{\"1\":{\"124\":1}}],[\"code=\",{\"1\":{\"356\":1}}],[\"code\",{\"1\":{\"103\":10,\"218\":1,\"223\":3,\"346\":1,\"370\":1,\"382\":2,\"393\":1,\"395\":3,\"450\":1,\"612\":7}}],[\"co\",{\"1\":{\"68\":2}}],[\"compound\",{\"1\":{\"370\":1}}],[\"compounds\",{\"1\":{\"370\":1}}],[\"component和普通的应用服务器加载的monitor\",{\"1\":{\"272\":1}}],[\"component是pinus的组件\",{\"1\":{\"271\":1}}],[\"component\",{\"0\":{\"253\":1},\"1\":{\"261\":1,\"272\":1}}],[\"compatible\",{\"1\":{\"357\":1}}],[\"compact\",{\"1\":{\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"compareexchange\",{\"1\":{\"34\":2}}],[\"comparefn\",{\"1\":{\"10\":1}}],[\"compileroptions\",{\"1\":{\"137\":1,\"341\":1}}],[\"community\",{\"1\":{\"504\":1}}],[\"command\",{\"1\":{\"394\":1}}],[\"commit2\",{\"1\":{\"74\":2}}],[\"commit1\",{\"1\":{\"74\":3}}],[\"commit\",{\"0\":{\"74\":1,\"81\":1,\"83\":1},\"1\":{\"74\":23,\"80\":11,\"81\":6,\"83\":13}}],[\"commonjs\",{\"1\":{\"137\":1}}],[\"common\",{\"1\":{\"65\":1,\"130\":1,\"353\":2}}],[\"com\",{\"1\":{\"34\":1,\"36\":1,\"58\":1,\"65\":1,\"68\":1,\"69\":1,\"76\":1,\"93\":1,\"101\":1,\"159\":2,\"190\":1,\"288\":1,\"294\":1,\"296\":1,\"298\":2,\"313\":1,\"320\":1,\"324\":1,\"331\":2,\"346\":1,\"356\":2,\"360\":3,\"362\":1,\"370\":1,\"395\":1,\"403\":1,\"405\":1,\"412\":1,\"418\":2,\"420\":3,\"442\":2,\"456\":1,\"461\":1,\"504\":1,\"505\":1,\"608\":1,\"612\":1,\"616\":1,\"623\":1,\"625\":2,\"626\":2,\"627\":1,\"636\":2}}],[\"count=3\",{\"1\":{\"625\":1}}],[\"count=\",{\"1\":{\"401\":2}}],[\"count\",{\"1\":{\"32\":2,\"392\":1,\"398\":7,\"399\":1,\"401\":2,\"442\":1}}],[\"convert两个方法来做单位的转换\",{\"1\":{\"380\":1}}],[\"conventions\",{\"1\":{\"376\":1}}],[\"controlcolordefault\",{\"1\":{\"400\":1}}],[\"controlcolor\",{\"1\":{\"400\":1}}],[\"controlflowflattening配合\",{\"1\":{\"307\":1}}],[\"controlflowflattening为false\",{\"1\":{\"307\":1}}],[\"controlflowflatteningthreshold\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1}}],[\"controlflowflattening\",{\"1\":{\"307\":1,\"308\":1,\"310\":1,\"311\":1,\"312\":1}}],[\"contain\",{\"1\":{\"392\":1}}],[\"contained\",{\"1\":{\"392\":1}}],[\"container\",{\"1\":{\"357\":2}}],[\"context\",{\"1\":{\"382\":1}}],[\"content=\",{\"1\":{\"357\":2}}],[\"content\",{\"1\":{\"228\":1,\"385\":2}}],[\"continue\",{\"1\":{\"83\":1}}],[\"connection\",{\"1\":{\"271\":1,\"285\":1}}],[\"connections\",{\"1\":{\"261\":1}}],[\"connection组件主要负责启动用户连接信息的统计服务\",{\"1\":{\"271\":1,\"285\":1}}],[\"connection组件是connectionservice的包装组件\",{\"1\":{\"192\":1}}],[\"connection组件\",{\"1\":{\"192\":1}}],[\"connectorconfig\",{\"1\":{\"261\":2}}],[\"connector服务器可以向master报告登录到其服务器上的用户信息\",{\"1\":{\"272\":1}}],[\"connector服务器会同时拥有clientport和port\",{\"1\":{\"242\":1}}],[\"connector服务器同样会扮演一个中间角色\",{\"1\":{\"242\":1}}],[\"connector服务器接收客户端的连接请求\",{\"1\":{\"242\":1}}],[\"connector服务器\",{\"0\":{\"242\":1}}],[\"connector\",{\"1\":{\"233\":3,\"234\":10,\"261\":3,\"264\":1,\"266\":4,\"271\":3,\"285\":1}}],[\"connectors来自配置文件\",{\"1\":{\"218\":1}}],[\"connectors\",{\"1\":{\"218\":1,\"234\":4,\"261\":1}}],[\"connector监听的socket上会激发disconnect事件\",{\"1\":{\"197\":1}}],[\"connector组件主要负责启动前端服务器的session服务和接收用户请求\",{\"1\":{\"271\":1,\"285\":1}}],[\"connector组件会开启监听接口\",{\"1\":{\"192\":1}}],[\"connector组件\",{\"1\":{\"192\":1}}],[\"connect\",{\"1\":{\"171\":5}}],[\"conda\",{\"1\":{\"103\":11}}],[\"condition\",{\"1\":{\"32\":1}}],[\"configpara\",{\"1\":{\"612\":1}}],[\"configlogger\",{\"1\":{\"262\":1}}],[\"config目录下\",{\"1\":{\"261\":1}}],[\"config目录下配置masterha\",{\"1\":{\"233\":1}}],[\"configuration\",{\"1\":{\"257\":1,\"258\":1,\"259\":1,\"260\":1}}],[\"configurations对话框\",{\"1\":{\"208\":1}}],[\"configurations\",{\"1\":{\"208\":1,\"344\":1,\"346\":1,\"370\":3}}],[\"configured\",{\"1\":{\"370\":1}}],[\"configures\",{\"1\":{\"271\":4}}],[\"configure`\",{\"1\":{\"258\":1}}],[\"configure配置参数如下\",{\"1\":{\"257\":1,\"267\":1}}],[\"configure\",{\"1\":{\"234\":1,\"257\":3,\"258\":2,\"259\":1,\"260\":1,\"261\":5,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":4,\"366\":1}}],[\"config\",{\"1\":{\"65\":2,\"68\":4,\"88\":1,\"91\":3,\"93\":2,\"102\":3,\"203\":1,\"205\":1,\"218\":1,\"233\":1,\"261\":2,\"271\":2,\"308\":1,\"612\":2,\"638\":1}}],[\"concatenate\",{\"1\":{\"10\":2}}],[\"concat\",{\"1\":{\"10\":1,\"171\":1}}],[\"consolas\",{\"1\":{\"409\":2}}],[\"console组件主要为pinus命令行工具服务\",{\"1\":{\"282\":1}}],[\"consoleservice则是具体的加载注册module的masterconsoleservice\",{\"1\":{\"274\":1}}],[\"consoleservicee\",{\"1\":{\"274\":1}}],[\"console就提供了start方法\",{\"1\":{\"262\":1}}],[\"console\",{\"1\":{\"4\":3,\"5\":1,\"6\":1,\"10\":1,\"11\":2,\"29\":6,\"30\":3,\"31\":2,\"32\":3,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"114\":1,\"170\":1,\"238\":1,\"272\":2,\"273\":1,\"343\":1,\"372\":4,\"398\":1,\"491\":1,\"501\":2,\"636\":5,\"638\":1}}],[\"constants\",{\"1\":{\"236\":4}}],[\"constructorparameters<typeof\",{\"1\":{\"115\":1}}],[\"constructorparameters\",{\"0\":{\"115\":1}}],[\"constructor===该函数本身\",{\"1\":{\"53\":1}}],[\"constructor\",{\"1\":{\"53\":1,\"54\":2,\"115\":2,\"117\":1}}],[\"constructor属性的含义就是指向该对象的构造函数\",{\"1\":{\"54\":1}}],[\"constructor属性也是对象才拥有的\",{\"1\":{\"53\":1}}],[\"constructor属性\",{\"0\":{\"53\":1}}],[\"const\",{\"1\":{\"4\":7,\"5\":1,\"6\":2,\"7\":2,\"9\":16,\"11\":8,\"13\":5,\"14\":2,\"15\":2,\"16\":4,\"17\":1,\"18\":4,\"19\":2,\"22\":7,\"23\":6,\"24\":2,\"25\":3,\"26\":4,\"27\":2,\"29\":23,\"30\":7,\"31\":3,\"32\":6,\"41\":2,\"42\":2,\"43\":2,\"44\":2,\"56\":1,\"101\":1,\"169\":1,\"171\":1,\"239\":2,\"357\":2,\"372\":2,\"376\":1,\"612\":4,\"613\":1}}],[\"cave\",{\"1\":{\"523\":1}}],[\"camera\",{\"1\":{\"408\":1}}],[\"campaign=\",{\"1\":{\"159\":1}}],[\"cache871×423\",{\"1\":{\"487\":1}}],[\"cachemsg\",{\"1\":{\"271\":1}}],[\"cached\",{\"1\":{\"85\":1}}],[\"can\",{\"1\":{\"234\":1,\"261\":1,\"271\":1,\"382\":2,\"491\":1}}],[\"canvas\",{\"0\":{\"26\":1},\"1\":{\"3\":1,\"26\":6,\"29\":2}}],[\"cargo\",{\"1\":{\"165\":2}}],[\"capitalize<fruit>\",{\"1\":{\"120\":1}}],[\"capitalize\",{\"0\":{\"120\":1}}],[\"cat\",{\"1\":{\"65\":2,\"69\":1,\"111\":3,\"131\":1}}],[\"catch\",{\"1\":{\"40\":1,\"45\":3,\"501\":1}}],[\"case\",{\"1\":{\"11\":2,\"398\":8,\"523\":1}}],[\"callback\",{\"1\":{\"261\":3,\"271\":3,\"358\":1}}],[\"callbackfn\",{\"1\":{\"10\":7}}],[\"call\",{\"1\":{\"9\":1,\"13\":1,\"292\":1,\"466\":1,\"467\":4,\"469\":1,\"472\":1,\"489\":1,\"636\":2}}],[\"c\",{\"1\":{\"3\":1,\"22\":1,\"65\":3,\"69\":1,\"92\":1,\"301\":1,\"302\":1,\"353\":2,\"354\":1,\"355\":1,\"372\":5,\"636\":2}}],[\"对新手玩家非常友好\",{\"1\":{\"600\":1}}],[\"对新手解谜玩家很友好\",{\"1\":{\"532\":1}}],[\"对耐性\",{\"1\":{\"539\":1}}],[\"对了\",{\"1\":{\"524\":1,\"561\":1,\"604\":1}}],[\"对游戏性能也不会有太大的影响\",{\"1\":{\"480\":1}}],[\"对不同类型\",{\"1\":{\"477\":1}}],[\"对引擎进行定制\",{\"1\":{\"473\":1}}],[\"对它一探究竟\",{\"1\":{\"398\":1}}],[\"对layer的常用操作\",{\"1\":{\"395\":1}}],[\"对某个图层进行变换\",{\"1\":{\"395\":1}}],[\"对某个目标对象\",{\"1\":{\"394\":1}}],[\"对ps比较熟悉的小伙伴应该都了解这个东西\",{\"1\":{\"390\":1}}],[\"对png\",{\"1\":{\"317\":1}}],[\"对当前打开的文件进行\",{\"1\":{\"370\":1}}],[\"对整个应用其关键性的调用为app的start调用和app\",{\"1\":{\"262\":1}}],[\"对框架进行不同的配置\",{\"1\":{\"261\":1}}],[\"对backendsessionservice的每一次方法调用实际上都会生成一个远程调用\",{\"1\":{\"247\":1}}],[\"对backendsession所做的任何更改不会影响原始的前端服务器中的session\",{\"1\":{\"230\":1}}],[\"对客户端来说\",{\"1\":{\"246\":1}}],[\"对客户端请求的处理是pinus较为复杂的部分\",{\"1\":{\"230\":1}}],[\"对服务器的监控和管理有三个主体\",{\"1\":{\"272\":1}}],[\"对服务器的扩充非常简单\",{\"1\":{\"234\":1}}],[\"对服务端来说\",{\"1\":{\"246\":1}}],[\"对其的直接修改不会直接反映到原始的前端服务器的session上\",{\"1\":{\"230\":1}}],[\"对以前版本之前的代码不产生任何影响\",{\"1\":{\"221\":1}}],[\"对话框\",{\"0\":{\"208\":1}}],[\"对用户的请求进行处理\",{\"1\":{\"195\":1}}],[\"对一块数据用三个不同的密钥进行三次加密\",{\"1\":{\"145\":1}}],[\"对称加密\",{\"0\":{\"143\":1}}],[\"对于收集癖来说这里简直是天堂\",{\"1\":{\"601\":1}}],[\"对于上班族或学生党来说\",{\"1\":{\"597\":1}}],[\"对于3作而言\",{\"1\":{\"594\":1}}],[\"对于1作而2作\",{\"1\":{\"584\":1}}],[\"对于此种情况完美可以模拟一个胶囊位置出来\",{\"1\":{\"501\":1}}],[\"对于这一类我们用了\",{\"1\":{\"487\":1}}],[\"对于这些应用服务器的管理以及监控就显得尤为重要\",{\"1\":{\"272\":1}}],[\"对于将ps的数据dump出来这个事情\",{\"1\":{\"400\":1}}],[\"对于photoshop来说\",{\"1\":{\"400\":1}}],[\"对于ps这个宿主而言\",{\"1\":{\"400\":1}}],[\"对于pinus来说\",{\"1\":{\"262\":1}}],[\"对于属性\",{\"1\":{\"379\":1}}],[\"对于前端开发着而言\",{\"1\":{\"377\":1}}],[\"对于前端服务器\",{\"1\":{\"261\":2}}],[\"对于前端服务器维护的session信息\",{\"1\":{\"230\":1}}],[\"对于前端服务器来说\",{\"1\":{\"192\":1,\"261\":1}}],[\"对于时不时要测试jsx脚本的我\",{\"1\":{\"348\":1}}],[\"对于其它服务器默认加载proxy\",{\"1\":{\"285\":1}}],[\"对于配置了type和interval的module\",{\"1\":{\"277\":1}}],[\"对于后面的一些行为实际上是可以没有先后顺序的\",{\"1\":{\"273\":1}}],[\"对于后端服务器来说\",{\"1\":{\"261\":1}}],[\"对于后端服务器来说必须的\",{\"1\":{\"261\":1}}],[\"对于后端服务器的具体处理\",{\"1\":{\"197\":1}}],[\"对于不同用途的module\",{\"1\":{\"273\":1}}],[\"对于client端\",{\"1\":{\"273\":1}}],[\"对于chat例子中来说\",{\"1\":{\"262\":1}}],[\"对于monitor端\",{\"1\":{\"273\":1,\"278\":1}}],[\"对于master服务器\",{\"1\":{\"285\":1}}],[\"对于master服务器来会加载master组件\",{\"1\":{\"262\":1}}],[\"对于master服务器来说\",{\"1\":{\"262\":2}}],[\"对于master来说\",{\"1\":{\"273\":1}}],[\"对于master端\",{\"1\":{\"273\":1}}],[\"对于应用服务器来说\",{\"1\":{\"262\":3}}],[\"对于get调用\",{\"1\":{\"261\":1}}],[\"对于gate服务器来说\",{\"1\":{\"234\":1}}],[\"对于set来说\",{\"1\":{\"261\":1}}],[\"对于server组件来说\",{\"1\":{\"192\":1}}],[\"对于backendsession中字段的修改也不会反映到原始的session中\",{\"1\":{\"247\":1}}],[\"对于beforefilter来说\",{\"1\":{\"197\":1}}],[\"对于我们日常想要的操作\",{\"1\":{\"397\":1}}],[\"对于我们这个应用来说\",{\"1\":{\"234\":1}}],[\"对于我们的聊天例子来说\",{\"1\":{\"234\":1}}],[\"对于env的使用\",{\"1\":{\"233\":1}}],[\"对于客户端请求的响应\",{\"1\":{\"226\":1}}],[\"对于超时\",{\"1\":{\"221\":1}}],[\"对于请求响应链中的before\",{\"1\":{\"201\":1}}],[\"对于afterfilter来说\",{\"1\":{\"197\":1}}],[\"对于用户注销的请求\",{\"1\":{\"196\":1}}],[\"对于rpc以及后端服务器以来的backendsession以及channel\",{\"1\":{\"192\":1}}],[\"对于56位长度的密钥来说\",{\"1\":{\"144\":1}}],[\"对于浩如烟海的第三方模块\",{\"1\":{\"124\":1}}],[\"对于内建模块\",{\"1\":{\"124\":1}}],[\"对于那些写入两个或两个以上字节的方法\",{\"1\":{\"24\":1}}],[\"对比工作区和暂存区的代码差异\",{\"1\":{\"85\":1}}],[\"对比工作区和本地仓库间的代码差异\",{\"1\":{\"85\":1}}],[\"对比差异\",{\"0\":{\"85\":1}}],[\"对应\",{\"1\":{\"360\":1,\"581\":1,\"628\":1}}],[\"对应module的clienthandler将会被回调\",{\"1\":{\"278\":1}}],[\"对应不同消息头\",{\"1\":{\"228\":1}}],[\"对应同一个\",{\"1\":{\"15\":1}}],[\"对应的平台名称\",{\"1\":{\"488\":1}}],[\"对应的文件名\",{\"1\":{\"442\":1}}],[\"对应的值是targetenum\",{\"1\":{\"394\":1}}],[\"对应的代码提交\",{\"1\":{\"370\":1}}],[\"对应的是\",{\"1\":{\"367\":1}}],[\"对应的路径默认就是\",{\"1\":{\"352\":1}}],[\"对应的module的masterhandler将会被回调\",{\"1\":{\"278\":1}}],[\"对应的响应会通过rpc调用的回调\",{\"1\":{\"230\":1}}],[\"对应的正值是\",{\"1\":{\"14\":1}}],[\"对应的底层内存是不一样的\",{\"1\":{\"9\":1}}],[\"对应的\",{\"1\":{\"3\":1}}],[\"对\",{\"1\":{\"10\":1,\"292\":1,\"308\":1,\"368\":1,\"478\":1}}],[\"对底层内存的赋值同时完成\",{\"1\":{\"4\":1}}],[\"对象类型\",{\"1\":{\"394\":1}}],[\"对象方法\",{\"1\":{\"51\":1}}],[\"对象以保留调用栈\",{\"1\":{\"40\":1}}],[\"对象时\",{\"1\":{\"39\":2}}],[\"对象是否可以处理某个\",{\"1\":{\"34\":1}}],[\"对象还有以下方法\",{\"1\":{\"34\":1}}],[\"对象提供了一些运算方法\",{\"1\":{\"33\":1}}],[\"对象提供了\",{\"1\":{\"32\":1}}],[\"对象提供多种方法\",{\"1\":{\"29\":1}}],[\"对象就是为了解决这个问题而提出\",{\"1\":{\"29\":1}}],[\"对象和它的视图对象\",{\"1\":{\"24\":1}}],[\"对象作为参数\",{\"1\":{\"22\":1}}],[\"对象作为内存区域\",{\"1\":{\"8\":1}}],[\"对象现在分成\",{\"1\":{\"11\":1}}],[\"对象之上\",{\"1\":{\"9\":1}}],[\"对象之中\",{\"1\":{\"8\":1}}],[\"对象不提供任何直接读写内存的方法\",{\"1\":{\"6\":1}}],[\"对象的各种\",{\"1\":{\"22\":1}}],[\"对象的复合视图以外\",{\"1\":{\"22\":1}}],[\"对象的哪一个成员开始复制\",{\"1\":{\"18\":1}}],[\"对象的哪个字节开始\",{\"1\":{\"16\":1,\"22\":1}}],[\"对象的结尾\",{\"1\":{\"6\":1}}],[\"对象的前\",{\"1\":{\"6\":1,\"23\":1}}],[\"对象拷贝过去\",{\"1\":{\"6\":1}}],[\"对象实例作为参数\",{\"1\":{\"4\":1}}],[\"对象代表储存二进制数据的一段内存\",{\"1\":{\"4\":1}}],[\"对象代表原始的二进制数据\",{\"1\":{\"3\":1}}],[\"对象\",{\"1\":{\"0\":1,\"4\":1,\"6\":2,\"9\":4,\"11\":2,\"13\":2,\"15\":2,\"18\":1,\"22\":2,\"28\":1,\"29\":4,\"39\":2,\"40\":1,\"394\":1,\"487\":1}}],[\"数值越大压缩越久\",{\"1\":{\"488\":1}}],[\"数值型\",{\"1\":{\"394\":1}}],[\"数字签名标准\",{\"1\":{\"149\":1}}],[\"数字签名算法\",{\"1\":{\"149\":1}}],[\"数据定义\",{\"0\":{\"623\":1}}],[\"数据去除掉\",{\"1\":{\"470\":2}}],[\"数据包的body是由上层传下来的任意二进制数据\",{\"1\":{\"225\":1}}],[\"数据包用来在客户端和服务器之间传输数据所用\",{\"1\":{\"225\":1}}],[\"数据包\",{\"1\":{\"222\":1}}],[\"数据加密标准\",{\"1\":{\"144\":1}}],[\"数据源\",{\"1\":{\"130\":1}}],[\"数据\",{\"0\":{\"225\":1},\"1\":{\"22\":1}}],[\"数据类型\",{\"1\":{\"3\":1}}],[\"数组排序是大家容易忽略的一个优化模块\",{\"1\":{\"485\":1}}],[\"数组排序\",{\"0\":{\"485\":1}}],[\"数组里头的元素是actionreference对象\",{\"1\":{\"399\":1}}],[\"数组多两个成员\",{\"1\":{\"18\":1}}],[\"数组比\",{\"1\":{\"18\":1}}],[\"数组含有多少个成员\",{\"1\":{\"17\":1}}],[\"数组从底层\",{\"1\":{\"16\":1}}],[\"数组占据的内存长度\",{\"1\":{\"16\":1}}],[\"数组将无法正确解析\",{\"1\":{\"11\":1}}],[\"数组内部也采用小端字节序读写数据\",{\"1\":{\"11\":1}}],[\"数组与普通数组一样\",{\"1\":{\"10\":1}}],[\"数组没有\",{\"1\":{\"10\":1}}],[\"数组完全适用\",{\"1\":{\"10\":1}}],[\"数组方法\",{\"0\":{\"10\":1},\"1\":{\"51\":1}}],[\"数组也可以转换回普通数组\",{\"1\":{\"9\":1}}],[\"数组提供\",{\"1\":{\"9\":1}}],[\"数组只是一层视图\",{\"1\":{\"8\":1}}],[\"数组\",{\"1\":{\"8\":1,\"9\":2,\"10\":1,\"18\":2,\"21\":1,\"22\":1,\"26\":2,\"41\":1}}],[\"数组成员的默认值为\",{\"1\":{\"8\":1}}],[\"数组的所有构造函数\",{\"1\":{\"21\":1}}],[\"数组的所有成员\",{\"1\":{\"8\":1}}],[\"数组的一部分\",{\"1\":{\"19\":1}}],[\"数组的内容到\",{\"1\":{\"18\":1}}],[\"数组的\",{\"1\":{\"18\":1}}],[\"数组的溢出处理规则\",{\"1\":{\"14\":1}}],[\"数组的最大优点就是可以直接操作内存\",{\"1\":{\"11\":1}}],[\"数组的构造函数\",{\"1\":{\"9\":1}}],[\"数组的成员是连续的\",{\"1\":{\"8\":1}}],[\"数组的差异主要在以下方面\",{\"1\":{\"8\":1}}],[\"数组视图等等\",{\"1\":{\"2\":1}}],[\"数组视图\",{\"1\":{\"2\":2}}],[\"种类丰富的角色\",{\"1\":{\"533\":1}}],[\"种类型\",{\"1\":{\"8\":1}}],[\"种类型的视图\",{\"1\":{\"2\":1}}],[\"种固定的解读格式\",{\"1\":{\"9\":1}}],[\"种构造函数\",{\"1\":{\"9\":1}}],[\"种\",{\"1\":{\"3\":2}}],[\"第6代的\",{\"1\":{\"461\":1}}],[\"第5代\",{\"1\":{\"461\":1}}],[\"第8代64位\",{\"1\":{\"461\":1}}],[\"第7代及以上的\",{\"1\":{\"461\":1}}],[\"第三个是回调函数\",{\"1\":{\"273\":1}}],[\"第三个参数是一个上下文变量\",{\"1\":{\"234\":1}}],[\"第三个参数\",{\"1\":{\"9\":1}}],[\"第三方的client会连接到master上\",{\"1\":{\"273\":1}}],[\"第39行\",{\"1\":{\"218\":1}}],[\"第30行\",{\"1\":{\"214\":1}}],[\"第四个是一个获得到后端服务器id后的回调函数\",{\"1\":{\"234\":1}}],[\"第四个字节开始是\",{\"1\":{\"3\":1}}],[\"第四条是说视图是一种操作的封装\",{\"1\":{\"8\":1}}],[\"第一张图打马赛克防止透露答案\",{\"1\":{\"572\":1}}],[\"第一次玩这个游戏\",{\"1\":{\"554\":1}}],[\"第一次接触这个游戏\",{\"1\":{\"539\":1}}],[\"第一款呢有特别不稳定\",{\"1\":{\"348\":1}}],[\"第一个必须是字符串来指定moduleid\",{\"1\":{\"272\":1}}],[\"第一个是专门用作路由计算的参数\",{\"1\":{\"234\":1}}],[\"第一个参数指出调用的agent\",{\"1\":{\"273\":1}}],[\"第一个参数是字节序号\",{\"1\":{\"24\":1}}],[\"第一个参数\",{\"1\":{\"9\":1,\"170\":1}}],[\"第一个参数表示拷贝开始的字节序号\",{\"1\":{\"6\":1}}],[\"第一步\",{\"1\":{\"162\":1}}],[\"第一步是先分配一段新内存\",{\"1\":{\"6\":1}}],[\"第一\",{\"1\":{\"51\":1}}],[\"第二款我的mac用不了\",{\"1\":{\"348\":1}}],[\"第二步\",{\"1\":{\"162\":1}}],[\"第二步是将原来那个\",{\"1\":{\"6\":1}}],[\"第二版\",{\"1\":{\"25\":1}}],[\"第二个参数是request\",{\"1\":{\"273\":1}}],[\"第二个参数是结束的成员序号\",{\"1\":{\"19\":1}}],[\"第二个参数msg描述了当前rpc调用的所有信息\",{\"1\":{\"234\":1}}],[\"第二个参数为写入的数据\",{\"1\":{\"24\":1}}],[\"第二个参数\",{\"1\":{\"9\":1,\"170\":1}}],[\"第二个参数表示拷贝截止的字节序号\",{\"1\":{\"6\":1}}],[\"第二\",{\"1\":{\"3\":1,\"52\":1}}],[\"位运算\",{\"1\":{\"479\":1}}],[\"位置的赋值\",{\"1\":{\"30\":1}}],[\"位置索引和值\",{\"1\":{\"30\":1}}],[\"位\",{\"1\":{\"14\":1}}],[\"位视图\",{\"1\":{\"14\":1}}],[\"位视图只能容纳一个\",{\"1\":{\"14\":1}}],[\"位的值\",{\"1\":{\"14\":2}}],[\"位的二进制值\",{\"1\":{\"14\":1}}],[\"位无符号整数数组视图的一个实例\",{\"1\":{\"20\":1}}],[\"位无符号整数的\",{\"1\":{\"9\":1}}],[\"位无符号整数\",{\"1\":{\"8\":4,\"9\":2,\"22\":1,\"24\":3}}],[\"位有符号整数\",{\"1\":{\"8\":3}}],[\"位二进制数据\",{\"1\":{\"4\":1}}],[\"位不带符号的整数\",{\"1\":{\"3\":1}}],[\"位不带符号整数\",{\"1\":{\"3\":3,\"4\":1}}],[\"位带符号整数\",{\"1\":{\"3\":3,\"4\":1}}],[\"位浮点数\",{\"1\":{\"2\":1,\"3\":3,\"8\":2,\"22\":1,\"23\":2,\"24\":2}}],[\"位整数和两个十六位整数\",{\"1\":{\"23\":1}}],[\"位整数数组\",{\"1\":{\"22\":1}}],[\"位整数解释\",{\"1\":{\"14\":1}}],[\"位整数占据的内存空间\",{\"1\":{\"29\":1}}],[\"位整数占据\",{\"1\":{\"11\":2}}],[\"位整数的视图\",{\"1\":{\"11\":2}}],[\"位整数需要两个字节\",{\"1\":{\"9\":1}}],[\"位整数每个成员占\",{\"1\":{\"9\":1}}],[\"位整数视图\",{\"1\":{\"4\":1,\"9\":1,\"14\":1,\"29\":1}}],[\"位整数格式\",{\"1\":{\"4\":1}}],[\"位整数\",{\"1\":{\"2\":2,\"3\":2,\"9\":2,\"14\":1,\"22\":1,\"23\":6,\"24\":3,\"25\":1,\"26\":1}}],[\"87889\",{\"1\":{\"625\":1}}],[\"87\",{\"0\":{\"592\":1}}],[\"86\",{\"0\":{\"591\":1}}],[\"83\",{\"0\":{\"588\":1}}],[\"838\",{\"1\":{\"464\":1}}],[\"82\",{\"0\":{\"587\":1}}],[\"81\",{\"0\":{\"586\":1}}],[\"81211729\",{\"1\":{\"54\":1}}],[\"80去购买\",{\"1\":{\"602\":1}}],[\"80\",{\"0\":{\"585\":1}}],[\"8081\",{\"1\":{\"27\":1}}],[\"89\",{\"0\":{\"594\":1},\"1\":{\"507\":1}}],[\"85\",{\"0\":{\"590\":1},\"1\":{\"472\":1}}],[\"84\",{\"0\":{\"589\":1},\"1\":{\"471\":1}}],[\"88\",{\"0\":{\"593\":1},\"1\":{\"501\":1,\"595\":1}}],[\"8859\",{\"1\":{\"401\":1}}],[\"8888\",{\"1\":{\"171\":1}}],[\"8li是windows上用的\",{\"1\":{\"391\":1}}],[\"8编码的json字符串\",{\"1\":{\"223\":1}}],[\"8个0\",{\"1\":{\"9\":1}}],[\"8\",{\"0\":{\"513\":1},\"1\":{\"2\":1,\"3\":6,\"4\":4,\"7\":1,\"8\":4,\"9\":14,\"10\":1,\"11\":2,\"12\":1,\"13\":1,\"14\":7,\"16\":2,\"17\":2,\"18\":3,\"19\":1,\"20\":1,\"21\":2,\"22\":2,\"23\":5,\"24\":5,\"26\":1,\"27\":1,\"29\":1,\"103\":2,\"209\":1,\"288\":5,\"356\":1,\"357\":1,\"360\":4,\"378\":4,\"454\":1,\"467\":1,\"501\":2}}],[\"99677\",{\"1\":{\"625\":1}}],[\"99\",{\"0\":{\"604\":1}}],[\"9999\",{\"1\":{\"365\":3,\"366\":2}}],[\"98\",{\"0\":{\"603\":1}}],[\"97\",{\"0\":{\"602\":1}}],[\"95\",{\"0\":{\"600\":1}}],[\"94\",{\"0\":{\"599\":1}}],[\"94ba\",{\"1\":{\"465\":1}}],[\"93515\",{\"1\":{\"625\":1}}],[\"93\",{\"0\":{\"598\":1}}],[\"92\",{\"0\":{\"597\":1}}],[\"9229\",{\"1\":{\"343\":1}}],[\"91\",{\"0\":{\"596\":1}}],[\"96\",{\"0\":{\"601\":1},\"1\":{\"501\":2}}],[\"90\",{\"0\":{\"595\":1},\"1\":{\"467\":1,\"474\":1}}],[\"9\",{\"0\":{\"514\":1},\"1\":{\"2\":1,\"3\":1,\"8\":2,\"9\":2,\"10\":1,\"11\":1,\"13\":1,\"14\":2,\"27\":1,\"356\":1,\"360\":29,\"478\":1,\"488\":1}}],[\"视图关闭时\",{\"1\":{\"487\":1}}],[\"视图数据的位置\",{\"1\":{\"32\":2}}],[\"视图数组\",{\"1\":{\"32\":1}}],[\"视图数组的赋值操作与普通数组的操作毫无两样\",{\"1\":{\"9\":1}}],[\"视图数组操作的对象不能小于本身最小长度\",{\"1\":{\"9\":1}}],[\"视图提供\",{\"1\":{\"24\":1}}],[\"视图提供更多操作选项\",{\"1\":{\"22\":1}}],[\"视图本身也是构造函数\",{\"1\":{\"22\":1}}],[\"视图进行操作\",{\"1\":{\"22\":1}}],[\"视图对象\",{\"1\":{\"15\":1}}],[\"视图对象和\",{\"1\":{\"15\":1}}],[\"视图对应的底层\",{\"1\":{\"9\":1}}],[\"视图会重新开辟内存\",{\"1\":{\"9\":1}}],[\"视图构造函数的参数就是成员的个数\",{\"1\":{\"9\":1}}],[\"视图还可以不通过\",{\"1\":{\"9\":1}}],[\"视图只提供\",{\"1\":{\"9\":1}}],[\"视图包含的数据个数\",{\"1\":{\"9\":1}}],[\"视图开始的字节序号\",{\"1\":{\"9\":1}}],[\"视图一共包括\",{\"1\":{\"8\":1}}],[\"视图的设计目的\",{\"1\":{\"22\":1}}],[\"视图的溢出规则\",{\"1\":{\"14\":1}}],[\"视图的解释规则是无符号的\",{\"1\":{\"14\":1}}],[\"视图的\",{\"1\":{\"4\":1}}],[\"视图的构造函数可以接受三个参数\",{\"1\":{\"9\":1}}],[\"视图的构造函数\",{\"1\":{\"4\":1}}],[\"视图的一个区别是\",{\"1\":{\"4\":1}}],[\"视图的创建\",{\"1\":{\"4\":1}}],[\"视图的作用是以指定格式解读二进制数据\",{\"1\":{\"4\":1}}],[\"视图支持除\",{\"1\":{\"3\":1}}],[\"视图支持的数据类型一共有\",{\"1\":{\"3\":1}}],[\"视图用来读写复杂类型的二进制数据\",{\"1\":{\"3\":1}}],[\"视图用来读写简单类型的二进制数据\",{\"1\":{\"3\":1}}],[\"视图\",{\"1\":{\"1\":2,\"4\":3,\"8\":4,\"9\":1,\"14\":1,\"22\":1,\"29\":1}}],[\"视图是\",{\"1\":{\"0\":1}}],[\"视图和\",{\"1\":{\"0\":1,\"4\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
