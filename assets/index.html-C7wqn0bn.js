import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-DJCjgs7r.js";const l={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>pinus是网易推出的一个基于Node.js的分布式水平扩展游戏服务器轻量级强大框架</p><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dirName</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dirName</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装依赖包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm-install.sh</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 	# linux 环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm-install.bat</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		# windows 环境</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目"><span>启动项目</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动game-server服务器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [development | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">production]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [--daemon] 	</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开发环境则选择development参数（默认值，可不填），如果是产品环境则必须选择production参数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 项目默认是前台运行，若想后台运行项目，请选择参数&quot;--daemon&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务器状态查看" tabindex="-1"><a class="header-anchor" href="#服务器状态查看"><span>服务器状态查看</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 服务器状态可以查看6种状态信息：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * serverId：服务器的serverId，同config配置表中的id。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * serverType：服务器的serverType，同config配置表中的type。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * pid：服务器对应的进程pid。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * headUsed：该服务器已经使用的堆大小（单位：兆）。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * uptime：该服务器启动时长（单位：分钟）。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关闭项目" tabindex="-1"><a class="header-anchor" href="#关闭项目"><span>关闭项目</span></a></h2><p><strong>方式1：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [serverId]		</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 优雅地关闭各个服务器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>具有以下特点：</p><ul><li>前端服务器首先断开连接，阻止新玩家进入游戏，用户体验好。</li><li>各服务器按顺序关闭自身的功能，保证游戏逻辑正常。</li><li>玩家状态等信息及时写入数据库，保证数据的完整性。</li></ul><p><code>pinus stop id</code> 会关闭特定服务器，该命令需在项目根目录下进行。由于关闭特定服务器会导致服务器状态信息等丢失，所以建议首先做好该服务器状态信息的维护和备份等工作。</p><p><strong>方式2：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [--force]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该方式直接kill掉项目进程，比较粗暴，安全性低，开发环境下可以使用，产品环境慎用。如果还有残留进程杀不干净可使用--force参数。</p><h2 id="动态添加服务器" tabindex="-1"><a class="header-anchor" href="#动态添加服务器"><span>动态添加服务器</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pinus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host=[host]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> port=[port]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> id=[id]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> serverType=[serverType]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加的参数必须包括服务器ip地址(host),服务器端口号(port)，服务器标识(id)，服务器类型(serverType)。</p><ul><li><p><strong>目前只支持后端服务器的动态添加</strong></p></li><li><p><strong>该命令需在项目的根目录下使用</strong></p></li></ul><h2 id="安装管理控制台" tabindex="-1"><a class="header-anchor" href="#安装管理控制台"><span>安装管理控制台</span></a></h2><blockquote><p>git clone <a href="https://github.com/node-pinus/pinus-admin-web.git" target="_blank" rel="noopener noreferrer">https://github.com/node-pinus/pinus-admin-web.git</a></p></blockquote><blockquote><p>cd pinus-admin-web</p></blockquote><blockquote><p>npm install -d</p></blockquote><blockquote><p>node app</p></blockquote><p>如果你的linux系统未安装sysstat， 先执行以下命令</p><blockquote><p>apt-get install sysstat</p></blockquote><p>浏览器中访问： <a href="http://localhost:7001" target="_blank" rel="noopener noreferrer">http://localhost:7001</a>， 就可以打开管理控制台界面。<br> 如果端口有冲突，请在config/admin.json修改端口，访问的浏览器必须支持websocket，推荐使用chrome。系统默认是将监控禁掉了，如果需要开启可以在game-server/app.js配置app.enable(&#39;systemMonitor&#39;)，具体可以参考lordofpinus源码。</p><h2 id="production环境背景知识" tabindex="-1"><a class="header-anchor" href="#production环境背景知识"><span>production环境背景知识</span></a></h2><p>production环境下，如果游戏服务器各进程运行在多服务器上，则各服务器需支持ssh agent forward， 并且项目在所有服务器里的目录是一致的。</p>`,31)]))}const p=s(l,[["render",t]]),k=JSON.parse('{"path":"/Book/NodeJS/Pinus/","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":2,"title":"启动项目","slug":"启动项目","link":"#启动项目","children":[]},{"level":2,"title":"服务器状态查看","slug":"服务器状态查看","link":"#服务器状态查看","children":[]},{"level":2,"title":"关闭项目","slug":"关闭项目","link":"#关闭项目","children":[]},{"level":2,"title":"动态添加服务器","slug":"动态添加服务器","link":"#动态添加服务器","children":[]},{"level":2,"title":"安装管理控制台","slug":"安装管理控制台","link":"#安装管理控制台","children":[]},{"level":2,"title":"production环境背景知识","slug":"production环境背景知识","link":"#production环境背景知识","children":[]}],"git":{"createdTime":1733216180000,"updatedTime":1733216180000,"contributors":[{"name":"lmb0989","email":"1150274785@qq.com","commits":1}]},"readingTime":{"minutes":4.83,"words":724},"filePathRelative":"Book/NodeJS/Pinus/index.md","localizedDate":"2024年12月3日","excerpt":"<h2>简介</h2>\\n<p>pinus是网易推出的一个基于Node.js的分布式水平扩展游戏服务器轻量级强大框架</p>\\n<h2>使用方法</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 初始化</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">mkdir</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> dirName</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">cd</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> dirName</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">pinus</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> init.</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 安装依赖包</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sh</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> npm-install.sh</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"> \\t# linux 环境</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">npm-install.bat</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">\\t\\t# windows 环境</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{p as comp,k as data};
