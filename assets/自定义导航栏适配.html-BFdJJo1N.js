import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as e}from"./app-DJCjgs7r.js";const l={};function p(t,n){return e(),a("div",null,n[0]||(n[0]=[i(`<h1 id="微信小程序自定义导航栏组件-完美适配所有手机-可自定义实现任何你想要的功能" tabindex="-1"><a class="header-anchor" href="#微信小程序自定义导航栏组件-完美适配所有手机-可自定义实现任何你想要的功能"><span>微信小程序自定义导航栏组件(完美适配所有手机),可自定义实现任何你想要的功能</span></a></h1><p><a href="https://developers.weixin.qq.com/community/personal/oCJUsw8d6FWnJXsPfEF4js58_r0E" target="_blank" rel="noopener noreferrer">志军</a><em>2019-08-19</em></p><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>在做小程序时，关于默认导航栏，我们遇到了以下的问题：</p><ul><li>Android、IOS手机对于页面title的展示不一致，安卓title的显示不居中</li><li>页面的title只支持纯文本级别的样式控制，不能够做更丰富的title效果</li><li>左上角的事件无法监听、定制</li><li>路由导航单一，只能够返回上一页，深层级页面的返回不够友好</li></ul><h2 id="探索" tabindex="-1"><a class="header-anchor" href="#探索"><span>探索</span></a></h2><p>小程序自定义导航栏已开放许久<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html" target="_blank" rel="noopener noreferrer">&gt;&gt;了解一下</a>，相信不少小伙伴已使用过这个功能，同时不少小伙伴也会发现一些坑：</p><ul><li>机型多如牛毛：自定义导航栏高度在不同机型始终无法达到视觉上的统一</li><li>调皮的胶囊按钮：导航栏元素（文字，图标等）怎么也对不齐那该死的胶囊按钮</li><li>各种尺寸的全面屏，奇怪的刘海屏，简直要抓狂</li></ul><h2 id="一探究竟" tabindex="-1"><a class="header-anchor" href="#一探究竟"><span>一探究竟</span></a></h2><p>为了搞明白原理，我先去翻了官方文档，<a href="https://developers.weixin.qq.com/miniprogram/design/" target="_blank" rel="noopener noreferrer">&gt;&gt;飞机</a>，点过去是不是很惊喜，很意外，通篇大文尽然只有最下方的一张图片与这个问题有关，并且啥也看不清，汗汗汗…</p><p>我特意找了一张图片来</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/TR2hibzE8oqo23Xia52kicUOf1HG5G1J7ibEqpJibrRkScm6QDOdTojHSdCKWkzpzdmJestia8nE8Diadw6N7Zu3ibdibuQ/0?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>分析上图，我得到如下信息：</p><ul><li>Android跟iOS有差异，表现在顶部到胶囊按钮之间的距离差了6pt</li><li>胶囊按钮高度为32pt， iOS和Android一致</li></ul><h2 id="动手分析" tabindex="-1"><a class="header-anchor" href="#动手分析"><span>动手分析</span></a></h2><p>我们写一个状态栏，通过wx.getSystemInfoSync().statusBarHeight设置高度</p><p><strong>Android：</strong></p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/TR2hibzE8oqo23Xia52kicUOf1HG5G1J7ibEdHZTictTSZDoX3oT0j0FgKVQnxzyianlPK3q8JHnZqBMHoicMa2QeXPAw/0?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>iOS:</strong></p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/TR2hibzE8oqo23Xia52kicUOf1HG5G1J7ibEic1mUiabicOQrArS9wXWW8mo7oqF948IZcr78UyYPb6icuw8YD9Kc7UKaw/0?wx_fmt=png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>可以看出，iOS胶囊按钮与状态栏之间距离为：4px， Android为8px，是不是所有手机都是这种情况呢？<br> 答案是:苹果手机确实都是4px,安卓大部分都是7和8 也会有其他的情况(可以自己打印getSystemInfo验证)如何快速便捷算出这个高度,请接着往下看</p></blockquote><h3 id="如何计算" tabindex="-1"><a class="header-anchor" href="#如何计算"><span>如何计算</span></a></h3><p>导航栏分为状态栏和标题栏,只要能算出每台手机的导航栏高度问题就迎刃而解</p><ul><li>导航栏高度 = 胶囊按钮高度 + 状态栏到胶囊按钮间距 * 2 + 状态栏高度</li></ul><blockquote><p>注：由于胶囊按钮是原生组件，为表现一致，其单位在各种手机中都为px，所以我们自定义导航栏的单位都必需是px（切记不能用rpx），才能完美适配。</p></blockquote><h2 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题"><span>解决问题</span></a></h2><p>现在我们明白了原理，可以利用胶囊按钮的位置信息和statusBarHeight高度动态计算导航栏的高度，贴一个实现此功能最重要的方法</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>let systemInfo = wx.getSystemInfoSync();</span></span>
<span class="line"><span>let rect = wx.getMenuButtonBoundingClientRect ? wx.getMenuButtonBoundingClientRect() : null; //胶囊按钮位置信息</span></span>
<span class="line"><span>    wx.getMenuButtonBoundingClientRect();</span></span>
<span class="line"><span>    let navBarHeight = (function() { //导航栏高度</span></span>
<span class="line"><span>            let gap = rect.top - systemInfo.statusBarHeight; //动态计算每台手机状态栏到胶囊按钮间距</span></span>
<span class="line"><span>            return 2 * gap + rect.height;</span></span>
<span class="line"><span>          })();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>gap信息就是不同的手机其状态栏到胶囊按钮间距，具体更多代码实现和使用demo请移步下方代码仓库，代码中还会有输入框文字跳动解决办法,安卓手机输入框文字飞出解决办法,左侧按钮边框太粗解决办法等等</p><h2 id="胶囊信息报错和获取不到" tabindex="-1"><a class="header-anchor" href="#胶囊信息报错和获取不到"><span>胶囊信息报错和获取不到</span></a></h2><p>问题就在于 getMenuButtonBoundingClientRect 这个方法，在某些机子和环境下会报错或者获取不到，对于此种情况完美可以模拟一个胶囊位置出来</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>try {</span></span>
<span class="line"><span>  rect = Taro.getMenuButtonBoundingClientRect ? Taro.getMenuButtonBoundingClientRect() : null;</span></span>
<span class="line"><span>  if (rect === null) {</span></span>
<span class="line"><span>    throw &#39;getMenuButtonBoundingClientRect error&#39;;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  //取值为0的情况</span></span>
<span class="line"><span>  if (!rect.width) {</span></span>
<span class="line"><span>    throw &#39;getMenuButtonBoundingClientRect error&#39;;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>} catch (error) {</span></span>
<span class="line"><span>  let gap = &#39;&#39;; //胶囊按钮上下间距 使导航内容居中</span></span>
<span class="line"><span>  let width = 96; //胶囊的宽度，android大部分96，ios为88</span></span>
<span class="line"><span>  if (systemInfo.platform === &#39;android&#39;) {</span></span>
<span class="line"><span>    gap = 8;</span></span>
<span class="line"><span>    width = 96;</span></span>
<span class="line"><span>  } else if (systemInfo.platform === &#39;devtools&#39;) {</span></span>
<span class="line"><span>    if (ios) {</span></span>
<span class="line"><span>      gap = 5.5; //开发工具中ios手机</span></span>
<span class="line"><span>    } else {</span></span>
<span class="line"><span>      gap = 7.5; //开发工具中android和其他手机</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  } else {</span></span>
<span class="line"><span>    gap = 4;</span></span>
<span class="line"><span>    width = 88;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  if (!systemInfo.statusBarHeight) {</span></span>
<span class="line"><span>    //开启wifi的情况下修复statusBarHeight值获取不到</span></span>
<span class="line"><span>    systemInfo.statusBarHeight = systemInfo.screenHeight - systemInfo.windowHeight - 20;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  rect = {</span></span>
<span class="line"><span>    //获取不到胶囊信息就自定义重置一个</span></span>
<span class="line"><span>    bottom: systemInfo.statusBarHeight + gap + 32,</span></span>
<span class="line"><span>    height: 32,</span></span>
<span class="line"><span>    left: systemInfo.windowWidth - width - 10,</span></span>
<span class="line"><span>    right: systemInfo.windowWidth - 10,</span></span>
<span class="line"><span>    top: systemInfo.statusBarHeight + gap,</span></span>
<span class="line"><span>    width: width</span></span>
<span class="line"><span>  };</span></span>
<span class="line"><span>  console.log(&#39;error&#39;, error);</span></span>
<span class="line"><span>  console.log(&#39;rect&#39;, rect);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>以上代码主要是借鉴了拼多多的默认值写法，android 机子中 gap 值大部分为 8，ios 都为 4，开发工具中 ios 为 5.5，android 为 7.5，这样处理之后自己模拟一个胶囊按钮的位置，这样在获取不到胶囊信息的情况下，可保证绝大多数机子完美显示导航头</strong></p><h2 id="吐槽" tabindex="-1"><a class="header-anchor" href="#吐槽"><span>吐槽</span></a></h2><p>这么重要的问题，官方尽然没有提供解决方案…竟然提供了一张看不清的图片???</p><blockquote><p>网上有很多ios设置44，android设置48，还有根据不同的手机型号设置不同高度，通过长时间的开发和尝试，本人发现以上方案并不完美,并且bug很多</p></blockquote><h2 id="代码库" tabindex="-1"><a class="header-anchor" href="#代码库"><span>代码库</span></a></h2><ul><li>Taro组件<a href="https://github.com/lingxiaoyi/Taro-navigation-bar" target="_blank" rel="noopener noreferrer">gitHub地址</a>详细用法请参考README</li><li>原生组件npm构建版本<a href="https://github.com/lingxiaoyi/miniprograms-navigation-bar" target="_blank" rel="noopener noreferrer">gitHub地址</a>详细用法请参考README</li><li>原生组件简易版<a href="https://github.com/lingxiaoyi/navigation-bar" target="_blank" rel="noopener noreferrer">gitHub地址</a>详细用法请参考README</li><li>由于本人精力有限，目前只计划发布维护好这2种组件，其他组件请自行修改代码，有问题请联系</li></ul><h2 id="备注" tabindex="-1"><a class="header-anchor" href="#备注"><span>备注</span></a></h2><ul><li>上方2种组件在最下方30多款手机测试情况表现良好</li><li>iPhone手机打电话和开热点导致导航栏样式错乱，问题已经解决啦，请去demo里测试，这里特别感谢moments网友提出的问题</li><li>本文章并无任何商业性质，如有侵权请联系本人修改或删除</li><li>文章少量部分内容是本人查询搜集而来</li><li>如有问题可以下方留言讨论，微信zhijunxh</li></ul><blockquote><p><strong>参考</strong></p><p><a href="https://developers.weixin.qq.com/community/develop/article/doc/00068aec7941f8f57509794be54413" target="_blank" rel="noopener noreferrer">https://developers.weixin.qq.com/community/develop/article/doc/00068aec7941f8f57509794be54413</a></p></blockquote>`,41)]))}const c=s(l,[["render",p]]),o=JSON.parse('{"path":"/Book/%E6%B8%B8%E6%88%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F%E9%80%82%E9%85%8D.html","title":"微信小程序自定义导航栏组件(完美适配所有手机),可自定义实现任何你想要的功能","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"探索","slug":"探索","link":"#探索","children":[]},{"level":2,"title":"一探究竟","slug":"一探究竟","link":"#一探究竟","children":[]},{"level":2,"title":"动手分析","slug":"动手分析","link":"#动手分析","children":[{"level":3,"title":"如何计算","slug":"如何计算","link":"#如何计算","children":[]}]},{"level":2,"title":"解决问题","slug":"解决问题","link":"#解决问题","children":[]},{"level":2,"title":"胶囊信息报错和获取不到","slug":"胶囊信息报错和获取不到","link":"#胶囊信息报错和获取不到","children":[]},{"level":2,"title":"吐槽","slug":"吐槽","link":"#吐槽","children":[]},{"level":2,"title":"代码库","slug":"代码库","link":"#代码库","children":[]},{"level":2,"title":"备注","slug":"备注","link":"#备注","children":[]}],"git":{"createdTime":1733216180000,"updatedTime":1733216180000,"contributors":[{"name":"lmb0989","email":"1150274785@qq.com","commits":1}]},"readingTime":{"minutes":10.11,"words":1516},"filePathRelative":"Book/游戏/微信小游戏/自定义导航栏适配.md","localizedDate":"2024年12月3日","excerpt":"\\n<p><a href=\\"https://developers.weixin.qq.com/community/personal/oCJUsw8d6FWnJXsPfEF4js58_r0E\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">志军</a><em>2019-08-19</em></p>\\n<h2>背景</h2>\\n<p>在做小程序时，关于默认导航栏，我们遇到了以下的问题：</p>\\n<ul>\\n<li>Android、IOS手机对于页面title的展示不一致，安卓title的显示不居中</li>\\n<li>页面的title只支持纯文本级别的样式控制，不能够做更丰富的title效果</li>\\n<li>左上角的事件无法监听、定制</li>\\n<li>路由导航单一，只能够返回上一页，深层级页面的返回不够友好</li>\\n</ul>"}');export{c as comp,o as data};
